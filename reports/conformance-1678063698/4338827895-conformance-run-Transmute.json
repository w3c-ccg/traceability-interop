{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f0ac1399-6291-42df-b22d-3a232c107d5e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f3c26f41-b8d3-4bd0-9aec-0d2f3fc2c5aa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48e54314-94c8-4bdc-9431-79fc4f650763",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4babebfb-d0e3-41cd-b19d-5be15732dec8"
                }
              }
            ]
          },
          {
            "id": "b494068b-60db-4122-ac0c-7701f166a786",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7138e806-3283-40b5-9b7e-34b99bf09c1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6aaf7ef5-6119-4520-a542-9272d9d13a69"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6e3f3088-742d-4470-a797-fc4f85ab937f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6e706d99-4f3b-4f9a-aad4-67b5f4499584",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0bcbf467-7520-43cc-8f4f-23b58bcc4b2a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8507f8b-02f4-4889-b91a-f564d3954af9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f3c5c80-aaba-4a83-a088-7dd83c5912ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03fa3b77-8d2a-4ab1-879b-7ec16f9f1991",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac8e2420-b9a2-456b-b291-64cdb6baa706"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "247bbc22-542c-49de-a3c1-62acd4d0f51c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5179966-26c5-4041-83e4-af2d3134495f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "722c6a7f-0ec0-46bc-8fce-9e2f7ecbb5fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "91914c22-f42d-48fe-bf18-e85dfec56196"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf7bae2-a126-4ea2-b0be-b74fd550d0b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adc791de-f2c8-42de-b2cf-c5939f7b7660"
            }
          }
        ]
      },
      {
        "id": "149bd1c3-f393-4a66-9608-4163e72ebfde",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6029d05c-a18f-4906-823a-2c49d1e364dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28ab54fc-6346-468f-9a39-6d3ea5006942",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9aab7b5-0a0f-401c-be53-3071ebede724",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae5fa7d-6bdb-4707-8f72-0c4009f5854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f8e1705-8183-43c7-9c08-decaf938a0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9e12cb-241c-46cb-b9c2-a090e3bb9aef",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac4a839-3faa-4230-8b5b-0425c2283dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44774c0d-64ca-4ee7-807c-f56d4f88b6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2f5d8-4e15-4984-b51e-13a97c001235",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd051f62-938e-4972-a09e-6b164e7f1510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b90d48cb-5cf3-4d9b-8c51-feb2e9033f6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1727a44-d16f-4267-b0c3-e5dce51d3123",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe20858f-0075-4033-9c55-16c5d5eafbc6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f1f42c-5dbb-416e-bac4-4c3b42f3b945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd452b03-5e79-4784-88a2-9bf0b799e694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8792f44-1645-40d4-b1aa-c34d55a860c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464e6b22-77c4-4ad9-a282-cfbb9cec5743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d74d82-7b8a-4361-8b25-b72ee5e18aba",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ca0c78-f035-4b0c-b7a3-39f1c806996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4b610c3-0f0e-4752-a174-b347b78ff621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7b3467-a767-41c4-8977-72ba747c9716",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c40cb2bf-8e35-4173-a2ec-cc5c4158af52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fc1b5690-9c75-41eb-8196-d10270c7d93c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ecf549bf-1edc-4292-9497-42cf180e1eec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "774e6d15-7dde-4a7b-80a5-029b1537c1f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "01177670-c226-4715-be38-41acac1f1995"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "670ebe9b-cf10-4a3f-808d-6181c4beda24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cbc957f4-c5d1-4e1c-9021-6eb526b3da48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96c76e5f-3ed3-4891-b848-dd1ce6b4a7b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74fb9b4d-fd22-42f5-9593-7ba48a8b2fe4"
            }
          }
        ]
      },
      {
        "id": "8ae97e74-5353-4445-afc9-842fb7c7070b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "15a22957-6295-49bf-b64b-46f474a9412c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "673d4dd8-0abe-40b7-8b55-f02f6d577217",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dc0a8ec0-57f7-4fea-8f51-fa971055bd1b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd60c2ef-8b08-4122-965c-f6e3ebdb5d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5b3e89-e513-414b-94d6-11feed2d90f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae43743c-6a40-4be5-a672-fae5c559f51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99cd2fa2-e19c-4b8e-84f5-fb33b00b7388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9555216f-4fbf-4352-b855-d3802c9728cc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9bedff-70d2-4d8f-ab69-fd35fa57f2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97609929-e839-4876-88f1-d4dc133becd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd459d4d-7a76-4cef-9c73-eae916319d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f5ff12d-f9d3-43d5-b488-5a35b4272347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3377b9-1a63-4043-ba32-ac0972c6c592",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95be0026-60b3-4521-bb2a-a4b0c49c119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0b700b-cc20-456f-8ae5-2062a9144f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb59470-dea9-417a-9f03-6e2823045b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a220e20-840c-45f5-83d4-7c4dce08855a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149c1219-7cfd-4fd8-88c4-4ee69e934748",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3528df62-cd23-46a8-9cac-c15f5c663cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412cfa07-7892-40fa-b75f-1c4708c42a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e451fef-53b4-4c8a-ba96-8e2cb63950aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f7059f-f40e-4517-925e-f3cd297caac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f99313-0150-483c-b49c-cd64f9be2af8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f187a5f8-36b9-426f-858c-65f5855ba8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c6594e-3f73-4174-8b63-5a8bbaefb488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925366f9-e2ed-499c-918d-f357eaffbbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30ab48c7-152c-4840-9b88-a50734b9c993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2972a7cb-568e-45e2-98ce-6a1a5ede70cf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c27787-190a-43a7-82fe-c9b40600e447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e3ac64-1612-44b2-9900-cc34224f058d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc1eec-6240-419b-8e31-34a200dcf70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b974f2-2fc7-40df-a397-0e67458de668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024036d1-cbf1-48d1-8e78-12201711b6a6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc29eba-0ccc-4d11-af18-280b4656973f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd59d36-0691-4ca1-9d43-64bf7c72b7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd848771-bd3a-4ee3-8e84-44dafc868f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c67853b9-947a-4d42-97f1-6a7062248d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3791cdf8-97be-4bb9-9f5f-99b72dbfead4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49414d7-ee10-4d28-8c32-5a932bfee25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afd3853-79cc-4d98-aa70-dc02a90785f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ad08e7-9e1c-4882-8bfd-0640252b54e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4a2ef13-3a7d-45fe-b040-65010892fc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d08555-2d3f-4b78-8486-67dd1f7d4061",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d658d96-0560-42b7-bb74-574952dfcb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e64305-974f-42e3-8608-0393861788f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52a6dfc-5356-4c7e-ba8c-755e39adf6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92b382b7-9bd1-4769-8bcf-4b506bdc4c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b73e3f-461d-447d-a2af-2df840a57d52",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f7ebee-fc48-4c82-805b-55040c88de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9af3094-c8d7-4fba-a154-33967d6e2f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9558d8f-42b6-4f07-ae23-3ddda71e3ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f67f3d3-381b-40b3-a684-25c03d0bfa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61fb6cd-5068-4257-a8a4-dede0a1fef5c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae44c2be-9dff-47ad-9c81-6b904680cea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05db49c-f832-46cc-90af-548a99698308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472a1772-176b-4c8d-8a92-4294592efd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220a5468-adcf-401f-a292-43d97247e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bd25fe-fa58-4129-be65-917afb0f1a03",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1221e2f-ce73-48a7-b9dc-b46316e734ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7219fd1c-5b7a-4df4-8e9d-677828ddceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5f4040-213a-4aa5-a40e-d4cc52e65684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01ae0a8-4cf1-4edd-8be7-b4a52330fdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4f2492-ae4f-4b25-ba77-b7a78611cc85",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db27bd-a872-4834-bac1-2381d5adf846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47763045-89be-4ae3-ab9f-936a2276037e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1d7490-af3a-4b76-b9a7-9e0af0f8dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "207a7c06-45cc-42da-9cc1-2857cae1a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9b7f1b-3bf8-4ee2-b41e-746d59a844c4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7537be-683d-47be-9ac2-655c7f04c386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eadb4d-2d5a-46c9-9ceb-5e7eb4f7665d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c4fec0-5950-44b5-9f62-eeb71093a4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf5b7f90-5927-4c6d-827a-28a1dc8e9700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c45ad3-c8c2-475a-b151-5bfc9e00f3db",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c5f064-d353-4b27-b3ec-20be88fd8e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3816c1ac-5631-4b0f-840f-aa5c0fec454b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952cb030-d2ea-4511-b8b8-553ae65061af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "272a6b89-e7db-4bf8-b9b6-708eef4e9594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604e93f2-4b7f-4153-b5b5-b20f3cac95f9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9436f0d4-67eb-4fd9-bfeb-d8939c4506e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e887c719-7d8d-4d14-a445-e032219f54c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8aaccc-5666-4d2b-b547-a66bd8d331dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887ed7f9-1b86-4879-91de-4b9f4cf47981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab9598f-0750-4489-8253-cddb5ade20b3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9d5b00-2bb1-4b48-b902-96bb1238c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70f97d1-1e4b-4083-8907-109df21c36b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191285ac-57c8-4ed6-9426-abe92cd31a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86705a23-1a0d-4c53-ab2d-f55cd7367557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cca5d08-401e-4f92-aca2-6e3357be3e6c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386d766f-63fe-4c65-a7dd-516a13e13ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4a16dd-1951-4f70-a5d9-39b90d108ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1514d19e-acd2-408f-b75d-fa424141f4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "257e5bb2-ddff-401e-a3ee-da492ae5bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11459a22-1cfe-4d0c-98e2-7e4ab4c4fe9d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661432ef-eb40-4321-ba6b-819e18096255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dc8f12-4a56-42fd-b46d-6f7312153792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e788b-084b-4d5f-9ebe-eec35657d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1c81c9-f437-4817-9dd4-5a68721fc4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645fa96c-d685-4b8f-929e-6c6a020d9220",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0936e204-bd2d-4414-9ef7-07516b522006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5a6a6b-e5ef-4485-a626-230b3830c4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c883a9-796d-4800-a077-57bca60ee60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c84b8ba4-7d6d-4a8b-b8a9-ebd430300004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3500747-8322-4b8a-8ee5-bbad16125fe4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486b063a-30dc-4d11-87a0-47bb912d0236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a22b9a3-caf3-4b74-90a9-cffd1dcb07d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e17fc3d-91fa-4b6b-9057-36faa0260b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71836eaa-2b40-43d9-9235-ac687ab08d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a57bf6d-8b02-471b-9d15-541890a71a93",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dde5b1c-254a-436b-98a1-2bcdc8fa3d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2bdcf0-5c5f-4528-8fd7-0f7d87db53d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb34e40f-eff3-48fa-a806-30c753f5cb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f80a144-505c-4e4d-8c53-a390b6d5096f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befb3243-4fd6-4c3b-8bda-589351dde90d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f885eb2-7162-4e19-bc3d-948531e1bd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0eca381-7966-46c4-9d0b-eb30d21e1fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23ecc3d-c1e8-49bd-97d1-cd5d0590eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd49ae1-e818-48c5-ac08-144266107662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68fc39f-31d9-4d7b-826e-29c5bd00156a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31603ecd-125e-492f-9037-b28966fb77ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444e7ce0-6494-4c9c-9d77-afd54a982123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d6ee1d-7084-42de-90d2-624f428d03fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2e90bc-5f4d-4d24-86e4-262a10caefee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6747868f-e236-492b-96ba-515c3090a6f8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cd97d4-dd1d-4439-9e99-8f30f12d6e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4064e9-7228-4431-9e10-03975676afbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffcd3cc-3677-42ac-874e-bb4a58835ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9698c222-c4e8-418f-887c-5a156293d8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da87875-e411-4e35-b6b4-49dee860e987",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c30f94-5e9c-40d3-911d-6ecf2d68dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252926f9-abbf-47aa-9f05-d6495a5f0c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a80755-b9ff-4c46-91d7-98561bb9c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1beeb6cb-8a1c-4dfe-9ff2-98b2e69b94c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14167533-0e05-48d0-9622-121d4d569b14",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27360f53-3e79-432a-824a-2dbb26c9727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9c90ba-be6e-4ba5-963d-3bdbc1c3d785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2567d198-4f78-4134-879d-a6e5e95a2f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "800e6c24-ab45-423a-9b63-ded23ebd4317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61926187-39da-4e90-8521-833e07b7c189",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43080e6c-9171-4624-8af3-873d28c2f35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d298c573-685f-4869-bdd3-3723ae28d672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168d34a1-e683-4403-9ed5-03af493a79ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5555d57c-a151-43a7-a39c-c2fc1b7bc304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6964a6a-ab89-4f9b-94c5-a3a3ee975bfd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0253e761-6b22-4efd-bbe4-f4a196e19b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99e8c14-5424-41b2-87d2-e425bda72cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06351eb-34f0-481b-a7ae-53b8a0db4165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d62c723-f856-4836-bc08-7a91c4ce7b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3e30fe-dde0-40c8-ab85-d91729ae9ec6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b03b8a-ddd1-469c-a14c-c85c596230b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43da9906-f576-4ae6-9f36-6aa888bdf886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d41157d-104e-49fd-a1f9-7fee91b5b7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0311c89a-e259-4071-b44e-ddd8e9258d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2831c420-d51f-44bb-be30-e9e581ee7871",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04816d01-ba91-4fbc-808a-3bcbaa3d09f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b42e47-0ed6-42fd-bf88-a383990d7457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae202488-40a7-4f1d-8740-cf1e1ea97584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2517be57-da9b-4f68-990e-6d744435cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741a3e25-309f-4b16-a4e6-825a5f88436a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164ad1be-7af4-429a-8071-537149680140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e13de6f-d9bd-4622-b166-ef0df40a3d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c87b744-da67-4bb1-b072-9455cd86386c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90cb44e0-3e28-496b-ba3d-b169ae2f596a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebe08b5-eaa6-4417-9b5b-a1bc658ab323",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce89cddf-3262-409d-88e1-f80fecd6d99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb7c66f-927d-44ed-bcc7-52e62962120f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e68b84-ef1b-424f-8649-1889fe60f359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c664bb1-6b22-4c95-ae67-fab519b197d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3a8fde-a54d-4d05-926f-f77b910bce07",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fbde62-74b1-4abf-9e95-464436526828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de40bcf-12ac-40ab-92f9-b1087eeb39b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168575c6-c0d8-4e90-a508-806246cedc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da15a63-b24a-497e-bc15-102e11c99c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dd482e-f429-44ea-b154-f52f23a594a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0b44f-b6c3-4deb-b6be-b7520722d3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723e8846-84f2-4e40-a8a7-7a8880cadb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348f633a-05db-4bc5-8baa-1fe130ed8bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "001507b6-5ca4-477d-8c64-e9a946ea65b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654abe59-643c-4046-8e52-75473dee794b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4868ca0-9e68-4f96-8935-32fa7ef0c229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fa55c12-83d8-4c8b-96c7-54d4d76842d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71f07c3-e0a1-49dd-9108-aae7a6f10b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d06cb5eb-b2b2-4606-b6de-1ecc9b16240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ad3a1-6716-404f-a2f3-e0dc856d7f96",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3b4711-2d4f-4675-ac28-42ae93887a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdb4d19-4f63-49e5-a403-e1a38b96bb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7ac62b-a51e-408a-9ba1-19d6fd0486d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd8a038-bd07-4a79-b76f-1b7ab488ebab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb9db38-ae8b-4138-84ec-efeec05acb94",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758b4f5-8a2e-4209-9cce-b1d894613f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e486928d-4177-415a-b880-1c88adadf8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ec5cef-ef9e-40ec-9e65-4c4b1d576699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d37c258-8e08-4764-a6c0-c759f3612a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c507b434-6b88-491e-9dd1-9e58a5525d2d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cce27cd-f286-4ba4-bf4e-07e332c8be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0021650f-c8b5-4e2b-bb29-deae5c170069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f23c4f-6cf1-4b4e-a653-c45982bc9884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e078d745-b67e-465b-b10d-dcc70b29c490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037045b8-fbb8-42e6-b3d7-557636184f34",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bae484-6abc-4f81-87d4-37ee4e77adf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2566b45-8c31-4683-af3b-dfc7f40fdf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a77d120-b47b-4a7e-b226-98972254cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5a0bcf-2473-44b7-8793-7e6da5fa1350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca307991-3fd7-4d7d-832e-83deac377e9e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbb311d-7ec5-4f95-8e88-9b19275ac5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84fcbaa-5c92-45a4-b65b-6136de299bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb355a32-11c1-4b92-a8b2-e3a4b2c9ba80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd99b23b-e9f7-47ad-9527-5e055d87aad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31175ee1-d362-4461-bf78-0b5d1b463de8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ba6a71-49f8-4afb-977d-9ff6710956a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d110c52-1e49-43bf-8abb-8f146235343a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32301847-757d-46e5-851e-c9d41e0b936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08a1e405-a4cf-4ed8-b113-277e784fd874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b9f122-273f-42bf-80a0-a765cd03ca43",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd2888-848b-4211-a5a1-6d3f09cd31c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38092e96-beb2-4d52-a5af-9419f68c9693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26c5d3c-204f-449f-bc19-347e96eb9a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d65ba938-b9b5-41d8-9bf0-f814e4509956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2366f129-d9d1-433a-b0be-d179ae123671",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0765be7-cd86-4611-bb95-ef6cf4a1f138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5def7be7-3f92-4a86-b05b-f7085b78d259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf3bc90-4d79-495a-a7d4-b511e8709871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed93f28-f320-4596-8515-486a06cdea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f45b77-a04f-4907-9715-d147f04e09d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b294aeda-8845-4820-ba12-5602b696044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae56df07-dbfa-4b3b-b964-ac066ecaf60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f47788-e992-4275-b7c3-5a85c4fffc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf1195f-008b-4cae-858d-6c3cba95e03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579266d6-51f9-4bb6-95f4-7991fba1aa36",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d79c722-b326-4138-b49d-0c92ce7ab931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c642114b-bdf1-41a6-8807-986280e70f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f78a14-9f7c-4504-8639-da84be4b29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7626a2-d399-40b8-863a-8b90aa66fd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9e2393-0723-4350-ba7a-289ca73c5a1e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52911cf1-04f8-49f2-b0fd-598ce5f0a673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf683cf-ca38-4aa3-8752-c37d14ebdede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9969ca31-b173-4241-a3ef-eaf420938f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc40af4-db70-441a-99ad-0e7b5b01448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7c5f3f-15c2-42ef-9d0c-a8df1a4f1289",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8e0509-aa36-4513-a502-e3d7436b5c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25f1f10-b7fc-449e-a9b0-6d97e72304ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ec0620-e7c0-4bac-a20b-180d4477a5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4d86ae-1326-4338-bea5-962dd3065136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91673316-3420-487b-9ed9-c47a3f719865",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83908c7-abf0-4313-aae4-543d0f4cb8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2253fc57-9e88-49ee-a96d-4a2e5022b7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d73df7-a500-4bd3-bda1-d9c25c5b7d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a205e4f-0429-4718-a98b-7028f6f605bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a4d47c-41b0-4c7e-af54-6c2f28eedeb2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4318cb6-e811-4212-9369-828407a233f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28251e5-d634-4e6d-a101-f8f83a852a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be937593-b939-4310-9c51-d5de5d8836c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "362c04b2-d100-4fff-9c60-7b6fd991056b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9123f5f-68ae-4508-a23d-31753638c0be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae353f7-72c2-4fd6-ae97-4810de32ea95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7ef1c8-1fd4-481e-9c19-0963493f9284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d379d2-3d57-4e65-bdb2-411e6d7de0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8c11a1-2259-470b-999c-33851c406973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acd3e62-cd9f-4de6-87e2-f744f2e1ab8d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b98c59-19e0-4c03-a346-671de2d9d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede34ef6-829d-438d-a766-f51e0f2087ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b84a5b-e0a9-401b-bf3d-024f9f7c889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b860a75d-6c8b-4ff3-8e44-9b0dc3281894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02c25da-8f94-4669-96d4-ce50258c75df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5c75a3-049b-4ab0-94f3-e38c5cce4ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574b06f0-db1a-4419-b270-feda4b45076c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb81b56-ae02-4913-b59d-8fecd8380e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "370dc07e-6eae-4481-a0cd-00bc4cc05158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61308b31-a34d-4334-a714-32e34b89f139",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664bb169-8b26-45fe-a2af-0f9d3e91c556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7df0b96-4f71-46d6-b2dc-204f6e8ef1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f317cd-fe03-4093-acac-daa884d45f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b166687-b206-481e-9464-bbc3b936821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caffe493-505c-46d2-90f1-d6a2d20070e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cb2226-0da9-4849-8c31-b8d6d816a6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977fe82d-821c-4547-9445-b8a1962e55e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f995cf90-71f7-4ffb-b147-226a6fa9fe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d349f00-9004-4788-9c5d-df925e1335bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169111e5-4e5f-4974-8293-6787d49ebe52",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c79b33-2731-47fc-850f-d2e7c5b22491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fbec8a-4e9d-4ded-82b0-2246077a3ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d55914c-4cae-4674-a245-d572c39621bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f58c3d09-df22-4b4c-ac24-7a23c52c3f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce20dd8-8556-4878-bffc-43d9b29bba0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881e2feb-5a5d-410f-b31e-e977408e96fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965752bf-ed51-4871-abb9-e72a83ed5539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc70018-b96c-4811-a966-66e1aebb9545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c922066-15fb-4862-aab5-40fb56e86910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a9883f-e9d4-4bb1-a38b-6ff3222f5cf8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c7079f-d78c-4159-af4b-1662ae43b598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2f823e-5daf-41e2-99d9-ff56b39f1f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227afebe-b65b-4368-8f19-4cdad66966dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29475cc-4c8f-45fa-a088-b82dbf603a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89a1e80-92d8-4f2c-b634-666ce7e344dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4f97f1-2b20-4f6d-8e34-6d0662061989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cd5a2b-63a7-44da-b460-f4511c18962c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3e0ccd-0143-4bc4-a2a1-0fa785eaeb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dee0c1-aca4-4ba3-ab2c-71eaa0b9907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f931ebda-f7ca-48fd-9f68-3f51637e2c86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fdbcff-b757-4e9c-8ea7-e3c4dc3da9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5668ca40-5dca-4b1f-af65-c579dc73f153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d379fba4-3a58-4359-9fbb-630a1c87450e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "551de00d-6e3d-4fe5-b606-1635c9aa0108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774f3bfc-5b29-4b1b-8d31-3d5f1e45204e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c0d84c-ca33-414d-8566-dec3566412f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fbc509-1194-4cda-a52c-c04f474e39b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec96d341-741f-4f85-9b36-a488f6615a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44ffb41f-a6af-40bc-9b7e-818a4a0bff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aae52a-4b93-4f35-a63d-7c186786e32a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741cfda2-5005-43bf-a6c9-2f21065d563f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d44760-1e12-4f79-b0ed-46586dbaffc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b1b7b2-b91a-4da6-9d51-c766950ca886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c895fd50-5e5b-440d-8224-3375b653c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7876e242-c35f-4733-bfa3-0729fd01e665",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3142c94-e8fd-47e6-8fff-d9fec7b8702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf61713-ed6d-41f0-bba6-e357d40e7940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0e7255-3813-4ea4-bb3a-9471dd6bdbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "334e72e6-0583-4c61-8664-5331dac7f2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaa7631-b26a-41e4-905e-17728d7f11c5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b9a1e9-11f0-4a20-a45e-011c0453c6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bb1288-b67b-4ce6-9217-a39991f2cecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5562b9c-9982-4912-ad65-b6cf613127a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74ee7cf-e6b3-4a3f-a6f6-737cd934ccb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dc9079-95f7-482a-a4a7-98aa2847f739",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0805e21-0e84-49ef-b698-6d9e7db9c562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f739fe7d-159f-44bc-abe6-e3754104a886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cba10a-403c-420f-a5ec-3d8e8f1ece58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63953831-8367-423e-86f9-6f77ea1bf127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2d89ad-79ef-44c8-9d42-9a708d0c093c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8035c88e-5c55-4d48-a863-a61a613bd0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0a0520-b39f-4ce9-b25e-8e1a2aa3ffa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72033f5-e3de-44f4-b4b2-f2e8108b370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50448d8a-2815-4a60-a5f0-238b10a5bb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f103a1-4906-456a-9221-8146f6fa6671",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e5a2b9-9141-48d4-94a1-a8449809cdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd1eef5-1f41-4a05-bd7c-7e6551740ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50abb85a-178e-4c38-85ac-53ada90a48e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b380749b-361c-4d01-a886-9ab9edd2048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b08710-0465-4be0-a7d1-e3e008f634c8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b6e853-619f-49ac-b6df-20678287d657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d235c6cc-aea6-440a-918c-c3945bc10d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1072d2-f95b-4c05-bd3f-276ec0e2103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5017b0-72a0-4cd7-869f-3edaf7f161b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eda9d50-ddfc-4b4b-8ba5-bc43649bf1e1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870ecf08-165c-4fa5-83f5-c4e1fdf85d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d30e55d-d5e1-44ca-ad93-c92f54c27cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b9ef89-6553-4a92-a6b3-9ecd75631110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea9fdcc-bfde-48e3-8b26-33df3df9f905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13d1e79-ff86-4ef2-8d74-409bbac080bd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f76cb0b-1b8f-492e-abaf-b7e75453b825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90c1457-c7ea-4fb7-ad16-a3641b951805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a1bc98-13f0-41b2-9e30-0d6eca6de8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b7af4a-ba7a-4c54-94f7-2307191000e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d027a71b-68a3-46ad-a6a8-7518e8ec507b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1d53a8-be13-4b4c-b7dd-fdcd70093104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad95fe3e-5d09-4b5f-bddb-7ed0670131b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc637c0-e1e3-413b-854c-e4ef792cfa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d745e57d-3579-417d-bb55-007d692227eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70148767-aa56-4ce0-959b-e08cf1d65edb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b8ca7-41f9-4778-9565-a92c76ef05b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7629d1-d582-4ee9-a11c-f1bf75b70a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c36354-48f3-480e-9b43-bb17e7e368b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41cdfe86-46b7-4f6f-b1c9-a9e0456d63fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5611784-6ebc-4dff-a041-898a69107f7d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a4531c-0b77-4fab-ac91-dca56e7cb11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b51b14-c570-455a-b66a-c1c5e72d96ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a5b01f-86a6-4510-a6ba-20801224d33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6151dcde-933c-49e8-be5a-ed3ad066e630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6224f08-a34c-401e-9ee6-fe1c76c21e63",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676620a1-d063-4a9a-80c5-bf4e24b5f373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a80cc98-e25d-4767-9277-bef5d185782e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e040a65-63a7-45cb-86e5-54b3d04d3ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53d0e93c-e773-4fc2-adbe-fc2359a6604c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1091ca38-7708-4ee7-b09e-793aaba4065d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f3c29e-9f22-468f-9a78-98224c937f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc1ab9c-558f-4575-945e-062892dc0fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02767afc-ca6c-440e-bf14-dcb12c77a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6959de-2bd8-4af8-8356-0b75d45d891c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f682add6-fcd2-46d7-b9a1-a117a5dd0e2a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d5d142-b042-46cc-9a03-fde3bd7203b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f460bd17-7176-432f-ae2d-efdafc17e5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d901991-9bb1-4468-9471-555a48ed30cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2d0181-891b-4dcf-96de-3399205fd763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a84efd-854e-4909-8e41-7f0b9fa32eb7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce46ede5-1063-4e09-8efd-da498b9b00c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003c9358-e581-4d3d-8d6d-4c939990d1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a92d015-5eae-4c39-a3ec-0e2c07bcbd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9c03d8-a417-4724-8f26-a8e1cb3d36d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb87dbc5-f80b-4bc6-bb0d-1d1fb3757c5c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016075ec-0861-4ec5-90cf-1ece9420b631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cf4654-b0a9-440f-81f2-380c394a557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daa0ae1-095f-4bcc-bdb5-3f4c2ff77b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f00bad-fb0d-4b86-81fd-6172a26731d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c6668c-fb7f-4834-8d20-c7ee27377a69",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa123253-8bc1-4bb0-8754-a7546e9e6d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe234d4-bfed-45c2-97a9-c25f2565d27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308ea08a-cfcf-4ce4-856f-838e60063f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba626c3-3eb4-40b3-8ed0-f37b12d41554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ecdc25-38c7-4e77-b8ba-4d985df5cc9d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2e1f8d-72a6-4897-b411-dfb804bc860d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748f8616-73ce-45b5-a89c-a5219cff4e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160f75da-0ca3-4ee3-a76d-302950006006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82e19f6b-682c-4691-8219-1377bb912549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae910f6a-6d43-40b3-8563-61f6d19fdc0d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beb6b70-ed77-4eee-bc7e-60ea6f00d49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a74efd-2585-48b3-9737-f58417086163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45601ce5-d821-4603-b3fd-4efa38d04dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "355e2cd7-b695-45a7-882c-3f3907b858af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff5f07c-cf03-48c3-8d4c-8be962715eb1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3c92c0-13a7-49ce-9e74-09382700446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2be71d1-c3d7-4d3d-b303-556aac517f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32055d1e-67f9-406c-92df-89deaf57eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e506cf77-fd38-451f-986a-16ee3da14cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6122308-306d-4883-b004-49a9026fd8da",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce07806-8d69-4545-bc14-c8f6b85cedd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eef2fa5-5b76-46b7-8cc0-db51356d498a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea6e8c6-1866-4016-bc9c-a9f7d1ec98bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfd9241-733e-4973-9276-38b02ed548a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e699f888-c433-49b0-b33d-3f6379d22f2d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da06aa14-bd26-4bd9-9ae0-1dbae37bd035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76ca9c4-f497-4256-9a3f-5504f21e6d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3041fa88-738a-4ba0-8025-6a69e95e77ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c864cf0-cb0e-4550-8eaf-9730e22da5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b17f4be-b7a7-4356-a589-8947fee7a403",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be7f7ef-1da6-4789-994f-85e6bbebe4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214ae260-de63-4610-b767-d623f79a9beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77482f71-f47c-4b3d-acb7-d62f9b374886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79c7c193-ebe7-4400-ae4a-782bff75588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42193e22-5f4e-4086-9498-d321c3936a10",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6578c039-832f-48fd-972a-88715c4ef1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b546cbd-ee9f-4701-88ba-4bc36c769987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c058bd-d94c-4c44-b365-e277d2453076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3710a589-fad3-4666-ad5f-5485c2e425a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1c6943-f6c0-465c-875e-586c4ae87d88",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0b40a6-786f-41bb-9da6-7aa0cb59f87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8863ff11-69e1-423e-99a6-442df1660de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3570c55c-d7d0-45e0-b4f6-726f85abfad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "642d85cf-5dcf-4ff5-afa9-5f0945ec715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f9fcde-c2eb-4419-a11c-ac14355e6254",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca006ab6-cc48-4608-8675-99193e08eab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc358065-7650-4834-8844-0d5430e8ebab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b859a8-cbec-4a7c-a73b-28bc7a7bff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b05d7dcb-01f9-4eb3-a911-33251b56f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f4f045-db19-4553-ab95-5787a6e756ff",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ac22ec-ceef-4c76-b182-8eef0250d72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bf28f9-6818-4f9b-8d2d-b7a0a224d9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdd1fb3-1532-4a00-8b2d-77387afd96c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0271f58b-e82a-4762-9bf8-58ba32c07cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ee0d38-6a10-4515-a1c2-fd6610d50748",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a61225-0c18-4b90-a850-caaadee6d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3b17f4-235f-4e7d-b45c-c25a3ca14b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a1f046-83e6-4acd-8d37-f02530cbf5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d75dfd4-dcee-4ea3-a333-7d6227fbed0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb023a-a3c2-43cc-b86e-d3e650fd145c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67e390e-5d8f-4dde-a531-68e1718b20fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574dbaf2-3a6c-42de-83ba-627c229b2b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78be5900-d789-4e58-ab01-aac0c87a6a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c21f2ae1-9440-4810-a0e2-f2f3c9dedf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecaf5dd-7134-46b7-a295-07a857864c19",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5f3541-2dac-478c-a35c-5098c3594ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78e8d738-9709-4389-806b-7102307db9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e6bee3-58e4-4c6d-90fc-87b899f374e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b71010-2ab7-41b0-830e-c87a6704b690"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c250db2e-55ed-40a3-8ea0-57297037760f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb097152-5343-49fe-878c-9bab6d4eca4e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e1c3f1-7626-4458-86aa-b9245a7bc776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2773ab0-3a3b-4d2a-bc97-aaa06699cc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4df178-e671-4bae-8611-4c081dfe2b17",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a4cd9e8-cbfb-4dd0-bc40-855aa0253e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d020d49-cb47-441c-9f3a-c8e07b882abc",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4d0e05-cfd6-495e-8418-71278602dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1d22347-136e-44ac-8e6d-216281440792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61378b05-c4a7-4686-a829-d223abbcc725",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21bff100-030b-40fa-b1c0-f0a817ea06bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5e95e00-4977-4157-934c-11f6fa056cb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80458ebe-a84e-4fe0-8471-84e7d3b0d97b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44e82e8d-5ecb-47a8-a310-72ace8535bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f5aa8cf-5795-4a7c-acb7-1b1a5de8e23a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a012aa9-7a31-43b2-b817-7716fe0e846b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e55331df-4f69-46d0-adaa-895a7697ad26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0213118-150f-4e01-978d-54cbf4870c9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c189842-e729-4ed0-b7e6-8ce0666c00cf"
                }
              }
            ]
          },
          {
            "id": "b9d0fe92-9493-4580-80ce-24a14adc314d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5f32a38-999d-4580-b7d6-cc561bc68bbe",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27b5e3ee-ee6f-4e38-bc49-30247c9fc76e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38ca092c-e0a6-472d-80ae-ea54ff22220a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e098d5de-cf41-46aa-8f61-ef5d58b76e9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db966247-eb19-4136-a95a-23767c38a97b"
                    }
                  }
                ]
              },
              {
                "id": "5832a027-ffaf-4c46-9eb1-64c6e30d166a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ac67bab-43a3-4c4b-954d-1affdcd3238b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab095ed4-4ff0-4ab7-8bde-7dda18be5e44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cc25b86-1f59-4d98-be18-4c30de34b180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7edcea4-d244-4e6a-a7a9-ae71e8dcb684"
                    }
                  }
                ]
              },
              {
                "id": "4f101fce-5ebc-45b5-a752-b01186d8233d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4b79739-d5a5-4f51-84a7-400396ee1e61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f08faaea-83c8-449f-ac86-491daa90443f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5e80dea-28ab-4c7a-b882-ff1b9ad3d018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "247026cc-fbda-4921-bf9f-4c7bd2431d81"
                    }
                  }
                ]
              },
              {
                "id": "4aa5ae52-a3ed-4a3e-bed0-cac8d5bba6c4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b93ae17a-8e5b-4815-a5fb-6b5258640f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "117af913-c177-4675-9a08-614d3f151466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58847574-fefe-4d63-9a48-91454e43b913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c8077e4e-d55a-4f3e-bcf4-35ae53cc8b7c"
                    }
                  }
                ]
              },
              {
                "id": "147bd0a6-1e35-4c79-94d8-69d2f4dfa157",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea1f4f7b-0c6f-4911-9d59-1d9f1bb8df6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f73329fe-baad-42cd-b259-88a76773f1a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d524cc02-25ab-4686-a6eb-59329d045fda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f8900ee-f7f9-4868-8768-3f82e67efc8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dadadcc-0b8b-4527-9823-f2a6354dd9fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32ce4206-320b-4e16-853c-ea5036534cc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d751d664-ee32-4f95-a98b-a803222b93c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2581868c-bc75-4bea-9c78-a513fc68dc8a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d03ca118-ae5a-40a0-90a5-dc71d212751e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8df595b1-7eb9-4bac-b50f-09ca815a0037"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3548724-cab1-4bd3-a2e0-5d8f68760321",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3106ec4d-ef73-409c-b7d0-912ad743d763"
            }
          }
        ]
      },
      {
        "id": "b0ba946f-298d-4544-b54f-1a6d23ce6c2f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0b0b5f0a-f6bf-4cf8-bfb6-254f5089e798",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e1eda70-4720-4e62-a909-8f22a9a667aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "467b3203-4866-4fc9-8dc4-285aa008736e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c26d53e-6758-4fa2-9bc2-f4658cb9430c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff158b2-0ffe-4bae-a1b2-1f995dded389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da713aac-473e-4971-a367-bce31bece714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1c8878-8412-4667-a608-c9dd30a7f393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5733785-0dae-4351-8cf8-790ac0170d80",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9817ae8e-aeb0-4295-aaee-c97ab4612c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ebacdd-4334-4641-8ac0-363bd07d132c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079ad75c-cdc3-4419-a7e1-0700afbee225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b82fe764-0269-48f6-be35-acbb6ca3e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf208e6-1ff2-4166-b38a-cd43cadc91fd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982ba3d5-d6e7-4742-934d-a73548256f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f03237-4fad-4c69-b2f1-30569074f614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e2647-afe8-4d11-aa91-6aac189961e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c117fb2-db66-4d46-828e-d514aa24ca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaab7aa-81bf-4f4f-931b-d1b84f2e8be8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdd26ba-9015-4db7-8601-685b6125cae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1efeff9-308f-4d3a-b7fd-47436327e6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7fb18a-50f0-4cdd-995d-609cc45f6150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "472558f5-60e5-42dc-9f26-a39736608a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c33c98-d9ed-40b1-be8e-290e1d44c389",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb03d9-51a8-4395-ad88-4aab47432cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92a4bc2-acc3-4998-b9a9-6cbf5471ff32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60f6463-bea6-4593-bdd0-8e1a183265d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f853567-0bf4-4b34-aad2-0058fd728262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79987690-5d5f-41da-bb9f-b69aad295133",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95150a0f-3f82-45d9-8645-7a78ea62e860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8344cf1b-85bd-4bcd-ab15-1e8c845817dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7edd4dd-558f-4807-967b-f23a2ccc3bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d2e862-2c27-4553-b3bf-b72d60b1a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f814875-4463-483f-b812-79b3a57db1a1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0c7173-5471-4b19-9b7e-73ee2adda97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ed5dc9-47a0-4c33-be44-0d1f22c84295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f94c3d-4d21-4b68-af70-1a492350067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee01605-4029-43bd-8710-d8c17beb79a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e817353-cfc6-4a59-b9f0-bda43de7c736",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f44b23-f6dc-4529-8654-ad57b79cda0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d547a7d0-5c36-4900-911b-47a640bdef8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f36aad5-c65a-46a9-8719-1f22c83aacfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9bea62-e98f-4e4a-baca-1092c656c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3864887c-212a-4ea7-84aa-103fcd9c8134",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545922b5-9edb-45c6-a580-b8b277330e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee10d3ef-d67f-40d1-83d8-d3f0711ca0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c55bf4-116a-407b-911a-1f4b3cb00efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd92197-c188-4a9b-9870-25256cdb0f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51b1f5c-424d-4d53-a28a-c5f49f8f78a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca2f8b8-8048-41e1-a14a-f66ee382fc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea92cb8-5b6c-48af-a72a-833122fd205c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb00f265-4ca2-4920-898f-8161a54c8f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f73b256-e7ad-4e28-915b-0407b3627efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6716c1b4-3733-458a-8c83-e79b810e3f89",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755f3fb4-ebe8-4a7a-bb21-36aef54de2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5035bf-5a63-4915-becf-1513c1407168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befc1fbd-9234-4121-84ca-5195b04ebd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d935e420-3436-48b3-abad-d6fa33c97451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb52a76-39c4-46a5-8257-03ee42646445",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd7b942-66fa-4ffd-92fd-d0e32393a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cf12e0-6c8f-4a98-89be-0b2254945869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4229b629-7c08-4464-84a8-ba2a29c28b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5a19e1-50b4-4103-bea4-03970deb2db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974063a8-db8c-4c63-bf67-d866bca7779a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3f5db4-2441-475c-b864-a309f048f4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee50042-4f54-4cf3-b124-df389f99fbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72819832-c4bd-4b66-9000-79a6fc16c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5c464a-fb41-4c6c-b924-730f17627e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d7232-37db-4adb-8c87-0d817e3446e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862552a8-2e70-4ba8-99aa-cb2d09bf937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdb3811-a668-4b2a-853a-05004a073d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a17405-65b1-431b-9146-2043a0b03e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "298d0815-3dbe-415a-805d-e3fb3ad73a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e26b5-ec94-42fe-9b81-539fc3107081",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3687fa1c-2f61-420f-9901-7ad2e801a7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12842d10-2eef-40ac-9154-06fed3e4d100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f875a60e-81e7-4a35-b06f-02b54db0f5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54c5cf5-6951-47e1-a8c0-9882107130ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34d6ea2-070f-4594-83de-5dea53e2c5d2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e96fef-8dbb-434a-9f2d-e7c7ed42b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d258f5c-4670-4a9c-964c-65fc67957b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d6963f-3fcf-4e41-8ec2-75a34a7e4b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74e9f22-83d2-45dc-a60a-a452b09a936c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d42a88e-7c28-4ac8-8b09-89b210cd74a1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954ede72-a442-4d91-8df6-955fe5ad3ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e9cde2-ea83-4261-aed4-b994852ccb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f184633-208c-4afa-98c8-f65fac373d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4ab333-cd83-4700-8450-9353428ecc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747b1749-31bb-4e1b-a5e6-444c4a3cdabe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bc4291-bbe7-4574-96e5-ea5709fd03c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428d8859-0933-4890-b769-396cc3e5f269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d5e70-ca96-4980-96fb-3b7d621f0e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c7f3f0-5fe8-4df0-af2d-72b40ae04377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c661d0-d0c3-44f0-9d64-999f2e76441e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b6ace6-b565-4e7f-ac6a-fc053eedf906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a81b6f-3995-4a2a-809a-c81c98407b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bba63a-8edd-42f0-8437-f9b3568d2a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f9bed0-451c-454b-a6ba-496e68d42c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6688665-2a52-4d52-a588-705f6798bb9b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23871f46-798a-48b4-b290-494d0566aaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afef3b5a-0f42-4d9d-b717-75abb664af2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5c4dae-5430-4730-80af-a4e8dc221d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1f570e-82ac-40e5-9dca-cd4be67398a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60554ef-2778-4301-a182-43ac077328ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0ef6dc-9df9-423a-af90-6a00ac65f8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c7f3e4-5ab7-4748-aa03-39d6ee933364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d600d468-b837-464f-926c-9b34e14b874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "475a8c63-a946-48cc-afa3-50b8427e081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c2811f-f54d-4471-b08c-ef58eda2c3f5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489afe21-9b57-4150-b61d-784bef85264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c11f292-3532-4569-8ffe-5e58d026f6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bde5a7b-5141-4016-b124-2204446efc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dfd0d0-75a5-4c66-a8ac-9dbea3cd2203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f598bff-04b3-4fd4-be0e-736c2a2e27b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728fa2eb-5b08-4501-8198-c080f38b8a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c819900d-07da-44f8-9933-3ee539510b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2532510-dc8e-4621-b155-e5344c38eb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1d92d3-f22c-41c6-b746-ca1bfc126a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddffcb6-ceb0-443d-9cfc-004ce85fba08",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3ec2ad-ad62-43a9-a3bb-537daa55520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7cf9d8-fda7-4281-82c8-371e259e1f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fdf69d-66e9-4ce2-94dc-3c201d7410e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46bfcdc-f2cb-48c3-914f-91731c2ed1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889e749e-65e0-4d4b-ba18-32c3e9455cb6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadad836-c962-450f-aa1b-67b78a842fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a06f4f-0aff-4a57-8ec5-e19c6bda1663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f98e0f-53fa-4e9c-a39f-c8467c1df27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc855f7b-b1e6-47ad-976a-4fc993a59c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c8628f-85ad-4b1a-ae5e-2d21e2b64fa6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a9c63f-747d-4613-8c20-e4c90fe922a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874fe5ca-7af8-46ff-9cff-4c4cb4d6cd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8c55a1-f282-4e38-aa2d-d9a80bdcf615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "991b72af-7cb5-49d2-b125-0eb99b1a4aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ad8ff-54f0-4001-a49e-de634fb654e6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cde731a-ef83-43cd-bf76-7b7472e43b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07cfbab-b57c-4175-8568-e4a2ecc0a91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bbe631-875a-4275-a4e7-7d2fbd0dbf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2e7bf6-8012-4e58-a3dc-364a263bb8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7a5aa0-1ada-454f-b305-7463f2f9d945",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec858f6c-b2be-4e6a-b357-dfe80155580f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e743f0-c409-46db-855b-72defc886add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0babe011-e92c-4f9b-ba5d-276b43ec90a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63574eb-50c4-491c-894f-2f736c97a02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e8c1f5-27b5-4c5f-99c8-73896090db2f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a143ae11-8237-472a-9b40-54a609eb3c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fce9d17-b2ad-4d3d-9a64-b227989d9d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109a08a8-c11d-4aca-93d0-e82fb45c1ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c04cb5-d587-495a-a021-d8f2985841f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1b57cd-cb31-4f02-88fa-0136de0fb81a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7629210f-91eb-4c0e-bba0-92f3be4558ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb3e1ef-5119-4291-93d0-f7ca1f8ad6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92f033c-7534-475f-bc9d-1526087d0cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1828a804-c813-44a5-a261-7249f76977b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3875b49-80a1-47b1-bd99-0348efbf3d20",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a53338-6af3-4bb5-be55-b26f82368417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000db0ad-e6de-4b4b-aaab-014e39cb9ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff74a81-2baf-4778-9f1a-b5f45644c261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85b3a6b-3a72-4142-972a-ce8fa3c8124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ef02d6-7be9-41e9-8ef5-6ed1093a7e81",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f427e6e-9ded-4dc5-9cf7-17153443f9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d07974c-74f6-4d78-9272-919cf5b0ed47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530a4cef-f154-4558-8a91-60d8a4d249be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d61d9a1-4057-481f-a820-a672c988f581"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc2a039a-bdd4-4789-9c2c-1bbb635d9db8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8222d2cb-b3f2-4967-981a-f80d04158119",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beab6da-dca6-4d03-85d2-d494947cd8cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06ee94dd-c6c9-4732-8dcf-c78793a49a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d8025-1e8d-463d-9f3d-63fdb53b2820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54ff0b08-8577-405c-af56-5b5593579c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7d16ed-174e-41ed-8429-ccccdd81ade8",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1106b6b7-70ce-48ef-a433-1b2974c41b1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "62fc8aba-8b1d-4dc6-9da0-30607287e6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5006767f-5681-40d3-96c4-bd33a38f4947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1593f876-3c08-40f0-97e6-d38b0000b175"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fffe22eb-6851-4850-bc45-d7ad1c5cc798",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e176b2b1-f560-4095-870f-3c22d5c37cda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d9e0d0b-8dba-48be-99b1-0a297557cf4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bd88053-c645-4a04-a3e2-aa4d4e99b7fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f694595-469f-43ad-8d79-035518575056",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df0343a3-3cd6-4b45-b3fb-09a7d2dec343"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd0d9d5c-566d-4f34-b7a5-5566989b1c17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c15d4d3c-fc68-46ab-81db-5da4374df5fd"
            }
          }
        ]
      },
      {
        "id": "a843e156-7dc2-4cc2-87d6-9feab4e2d653",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f3c7004d-8a39-4d66-a4bf-99b1e6c2831d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4573988e-4153-467f-902d-60b4fa8eedb7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be10933b-5af2-437d-bc55-b4b75d2633cd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673d3899-f14e-4688-935f-28c825868699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeee6b7-e039-4258-9df8-1e5934342fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec78672-f3c1-47f5-aeef-01c7a974fc5b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625fc01e-e654-4dbc-aa03-7df9513084c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8ce56d-b922-44f3-8d3d-b277c3267182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8e8d95-d6e6-43c9-8f64-4e16d08b221e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691a74cc-e4c9-4b6d-be1b-6d4feec947b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3863ddf1-b83f-4d1d-b845-78dd2fef5432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d77ad00-4f5f-4ad4-9e32-96940c33e184",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bd222e-439b-4fa6-b8a2-06e5455d590e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e9a120-7902-4fa0-8dcd-5a11e8b1474e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ccd66-9ac0-4a91-a1a7-abd3d0e66af6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673b058b-217a-417b-8479-b67f8e6da94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b96ccc-ba86-463c-a0e0-3410c76009ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8cf0f5-6b98-4d84-a835-03e53f3a5523",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9861df5d-6f6f-4f7d-b278-5c5e0812a764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c23a78-4a1e-4526-9d22-1058660efe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af04bb1b-75b0-4b0a-8714-07addbd3f825",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f4f0a3-5a59-407d-8f70-ba9ec6bd51fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ca420a-f208-450a-bc8e-f0ede4ed6405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a898731-93a6-4dbc-93c8-54bf258e2320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5030188-3a3a-486d-b9e0-abc29a3115ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2c94ad-b3d4-4791-9452-095ee824954f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e068dfd8-6a36-418d-bbd9-b60264d6adbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3bae8e-284c-4177-91cd-5617e2347fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12ed359-10b6-4272-bf76-e685075ffcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45dfef0-0c30-4157-8ff5-24a617c5530a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7c2aef-09a0-46eb-9ffa-9bad8cbd7c4f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdbbc70-a3f2-4732-9203-e67bd6e26980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f15aa11-4c7f-44ca-a73f-1ca696cec707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b976ff87-5d35-49fe-bc24-047e5d876430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a20484-c6c5-4a46-960c-45a6158e834c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90abae-56b8-4198-9ac0-4263bfb3c1e7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca02318-98ca-409e-a1ac-1bdf38ac62e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365fbb74-1498-46d7-a999-5667071d3a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655d288a-6d34-451e-80d9-bc067e6b1092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b2269e-92f3-4c1c-a1a5-8cb607d5a9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad78772-0f72-43bb-9eae-03db0ac67a23",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d192b0d-edb9-48f9-9c54-a4f02f22f331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f7a275-885d-46e8-b685-9be609b34458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00088468-d008-4a7e-b6c3-1a6a4b7208b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65120876-afc4-4269-8957-0d4497a01bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00174bbb-816b-49f4-8fd0-063dda155eca",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0dc598-8c3f-4679-aec7-b5aaebac0429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3452965b-4e02-42af-8224-e6f69f259ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00b7aca-c381-4aa9-9206-5ee0c53d94dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0286e354-4311-41bd-8119-840295986192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603fe5f4-913f-4622-9e2a-75e611d8794e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0ca00e-bec9-41ac-ad33-ee9c7eceecf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448bd2ba-8805-4bc0-8ed5-24bcfaf43687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6687d29f-5cea-4de3-bb39-e58cca7838f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39132398-ad6e-48c9-8780-ba9bf4c4ba19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ff64d3-3b85-423d-99a7-2aaffbe464f6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a6e41a-fd90-4eec-bd2a-0cb6f30c2ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ea22c8-742b-4baa-b485-b3de5a506371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33669c0e-0cee-4d3a-93c0-26da291f06ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6698724-3ee3-474f-8ce8-ce11c674fa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0c3e6d-39be-49e9-85e1-fb39a01eec2a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9c4f48-e54d-48f9-a6df-0a2d9d1cd055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf4979d-8fce-4583-bbd4-ed1ed35853c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4097061b-6e4d-4b64-a5ee-d85c68a8f90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc40611b-86bf-4010-8362-8e52d30fb3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490d43f4-83ff-4004-806c-67b9a30944d9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b666609-e246-45eb-9e85-7345207701d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f747bab1-a19a-4f9b-9977-f814ae7048a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700d22ef-b14a-46a9-932a-69c1f82e7155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5f7440-b52d-45f3-b81e-01b3842dc40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b6f7f2-b776-44fa-9777-9ebe5e785956",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb76d39b-0280-4ebb-bda2-4cb94c7935a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778173af-8be6-46f8-87d1-5a1b96afe876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c8b6ce-b1c5-4587-b891-c6792459f4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4d6d2e-7ca6-4021-aa88-40cbfc0ccf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49949352-3926-41ce-adc7-543dc8db4d0c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa16930-a3b9-4160-ac57-2506161c7ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f1ac77-c630-4b2e-85c4-13015cff3304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ca319d-009d-4b35-bdb7-41f454f7cc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9992fbe3-4119-41c1-8792-584038e03635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c225c4e5-886e-4b4d-b7b0-2406140faa9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6f1cbf-eff1-4a34-a147-65a3cb74b612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d69d1df-5bd8-4425-90ee-27e68c497b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae268cf-4c92-48f3-8e49-2522d4ec9aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488d0679-582c-4e00-99b6-f128bf919f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90538eb-4e76-4166-bf36-c914b8882e49",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c07d80-75f3-477e-9911-fb400a71dd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc0e995-4aea-427a-87e7-8511cec40d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd28a8cd-5848-43ba-8f99-6e83379b039c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e923dd-ba40-4fc8-90b1-899760d9adca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ff2609-349c-471a-acca-0bed15124f4a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec5e82a-68ed-4c4b-b8b0-74b42d6a64f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72c5872-795b-41e9-9a80-adc47f4823d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d12b1-c127-4c28-8ada-d4b68d388374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e63bf29-11f0-4995-a547-e14f659ae8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1085de-f1b1-4709-8325-bde28de1659b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558e4fd5-086e-4523-8128-70dc4ae8dd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2710e63b-03f9-4b23-976f-8e59359997b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cd23b0-e9cf-4295-8973-9421f250bffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1baa667-9a7a-486c-ab83-a282bb239380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ff27be-21ab-4e0b-b818-3729ce52634e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bf7f2b-24a1-48af-9467-ffc53e4b5cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f871b9b-0a2a-4d60-a9bd-2c040cbeb492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144aa346-494d-4040-8f4c-9957e78eaf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1444009c-6aff-4767-9bd6-a0cec7a165e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15370942-e4de-4f02-a761-e266930cd504",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55425ab9-cc52-44ac-9444-db6027e3de6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "437af557-4f1a-4ac8-92c5-b5a80ed77923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d139c94-8494-4eac-9531-c30a81c98ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6604d2e0-8c50-4fe1-ac47-dcfe3340b9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e6beaf-682f-4b86-9c12-1302b217890b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa85834-c83f-487d-88b9-23a0b2b271bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b499e2-b85a-4a88-8bf7-21c33ef46a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaa8aa7-1203-4262-9f38-81dde0c4d2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c979ab-a49c-40e5-8c61-faad0320f2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a8ae4b-38b5-4dab-afd8-4aaa7e6754d5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4563d-f1ed-4744-8749-a33b4b61fede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b149bb06-fcb1-4e0d-b2b9-0ad0593f9e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51b05c-552c-4ea4-be85-e125d16aa3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafb3a89-e6ee-47bc-a593-65c7e6faabac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b360869a-249d-4d0e-8762-c4986f4a8152",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79421236-1a83-41e7-ab77-f5efe7487820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5d09ad-f6df-4588-b7e6-babb16aa4529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f036ee3-49b6-49de-91f0-0dbb74a98b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f904023b-6e52-4318-b7a6-b9f5cfb6851e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdfb8da-b46c-46f0-886a-f0f32b119ef5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796998d5-7549-489a-a66c-c26cd78105ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f281d84-b32d-4241-adb7-5f9117bf24c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75991ac-fa6e-4519-bfd3-8b84b7b1f12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831faef8-4beb-46e2-b7c2-f76a4b95110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80790f7-270c-48b2-8a34-ccba21d64131",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05974964-2237-4bc8-a2f5-f9797355b52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2976c54-4fa1-4ef1-a111-73904a416b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1ad082-3f98-453f-81a4-d7445ffb977a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5dcbfb-adad-41a6-95ad-5eb8f762b347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fd4570-0fcb-4ca8-beb8-87eafeebd93e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc03331-a1cb-4f20-83e0-a6a7e221d929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "875df85e-0e6a-4b00-821a-2d5660837e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d34ee80-e707-46c9-bb22-a5f1e7f8818d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289b4db3-86c8-4b6c-9d2d-a3e01b2c598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838c5dd8-75e6-4887-b1d6-f1f735c1d98c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb2ef5d-2749-43c0-b990-b56c80030554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d1f1f1-4f77-4f83-9d53-ec740672b83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98b8d1f-ee43-453a-8349-db10028d4672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb462d4-d0ec-4e5a-b44e-eab07d58aab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422c5cdc-507e-46ee-801a-a0962a5d2e73",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a876eeb4-037f-4e7e-97dd-560ad32b65be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857ca0be-3c71-4a10-8202-ee32fa77449d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a630984-2fb5-4a93-8bd0-a536a1b66696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7737dd65-1a08-4862-825a-612213a28613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe47945-d720-49f9-873a-895094ad7736",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10148012-72e1-4e30-816a-67c0a5dd10d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1485f8f6-72f8-43b6-a177-425d6a88d0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7411c4d8-06cf-40ec-94af-f5da750a6de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca9c497-e687-406b-add2-d7b43556c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44a8da4-8f3f-4569-9ba8-a13ab430b000",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5585985c-3c51-41a1-b7f5-478edfae56bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6e32d1-7171-4fa3-854d-1fa2df2044fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72599b3d-cea4-4da2-a24a-855b98e1e54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c3f1d3-426f-457e-b420-608d350f67aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d2fc18-a8d4-4b2d-aa45-d70f2ed0afc3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a111d70f-f77b-4b04-b7ea-04d4f9d1f485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad30f34-9b99-430b-b6c2-ff0d788f2268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f036fe29-725d-4faa-9266-fa5f0f923e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a36a4bc-b7a8-41b4-bbca-bac2d704b012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed265df-21c2-445b-8d52-be20378957c6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61748b5a-b3fd-4115-8a6c-704ccca868e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9032d3-0395-4c47-8354-6f4d4a3917a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53afe905-ea13-48cb-a542-667f185522d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77a16fd-675d-43f7-a0ef-1f941465bc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8d0096-a4a7-499d-92c4-70c8d475cca5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e745d76-ef3b-443c-a407-5136761bbf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4265a769-91de-497e-a503-afc23c6570ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cddcdf-15b8-488f-817a-e1dae30a2c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22a9f2c-6b5c-442d-bb42-28f2ca28c4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f51bde-13e7-4da9-b30a-fc17ff6c5a84",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8a4057-4654-4b2d-8122-a7233f04c984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df4fba7-e22c-484e-9064-c0599b3d7ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e1fb2f-d568-4e2a-893f-e4b64a716137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec1449e-238f-4f53-ad1e-f61eb1781d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af1fc9f-af76-47b4-b2ef-32d53684c744",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02666340-0659-4ea0-addf-42de74b57a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888ef05d-3d5e-402b-b985-9fc4f512eb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b46bc5-b245-481d-8e37-323743f62579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8f0a54-cbbc-4e57-ba67-704d98795eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cca8f55-f379-4234-aa1d-55f4dca8b6b5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27eee96-2a74-4bed-8dd0-e61b8ac0dfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ce3262-dfcb-4b2c-aa4a-59f5e5c473bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa37b2f-415e-4513-a5e3-f84b515b3262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f28d39e-1ae6-48b0-a73e-4d1d4294bcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedceb93-1faa-4709-80c4-7dddcc1d5bc3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e12fe-b204-4476-a994-3efccf5ed330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8ff0ec-e109-4565-af76-0c21053a6aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906f91a0-c94b-49de-847b-368b03e3740b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2358f52-73ae-4c37-9741-6be2cfa2551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9b52cb-1b32-419c-bdae-dad38726c5f5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5695e8-014f-4b7a-ac81-6d2141a048c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a6d1ff-70c7-4a6a-85de-9de13c989496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d7adef-ea6a-439a-a8de-288d42f4ab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277a27c3-0588-4810-905a-4fca3427a175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90760be7-2049-4de6-bdea-916ed56d281e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fadef9-359c-4527-9b99-b79d2ae97f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a57adc-c4d2-46bc-bf8b-a11cb70c040d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85799df7-95f7-419b-acbc-bbe313086fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd1c7dd-3105-4f6d-8ae2-d3e9787d6c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b5b333-831a-4974-ba0c-0daebd56bd4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd98eb8e-78a1-4175-99c9-93223a5d550d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eae0b0-60ad-41ef-9939-c6c057c01491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516c0bdf-35e0-49cb-beaa-0bbaf0e83706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5110427d-a2c7-45f5-9253-dfe2d222a14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be1d6a7-2df3-410c-aeb3-7b5f7e3e5e06",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2654872e-0419-4f75-af24-ee087706f59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79f8f31-965e-4490-b6b9-72c02b445812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721563e8-0911-4488-84d1-4c74ce8333c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d6b95e-45bc-49d5-8e69-69e8850dbc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c130dff-fb3f-410f-8481-0a7d530ca4ba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab1da2d-f416-43f8-981c-8804f9b50c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dceeca81-0a6d-45cc-b9b5-68f42b58de87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e3758c-71b7-4e85-a211-b40e56ed1a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ff16e9-246d-4884-b713-dcb85337fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4172fdfc-b415-4309-8799-91d792b31d8f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872dba32-00ee-46b3-81b0-32e519e9c503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2512b0e4-0be3-4f03-ba7e-4bc952ea63c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143b8957-20c9-4ae2-b86e-3724185b1475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442c7944-d024-4562-8452-085777677c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566ba63d-e0cf-484a-9c33-3b4632950616",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4a931-bd4c-463e-b74a-c3dc307c892b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd60a152-d6ce-434a-b5c6-d5bcde2a2ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ada587f-7852-4c71-bc88-3c0d96347712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e5919f-0d9e-4987-a3b8-27c9f8a38ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe218817-e09c-4acc-b3b1-169d43006f4b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382dc06-de03-48f9-9a45-e582fc837c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae50c2e7-4e2d-4889-a4b1-78721f71fa4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031976f5-ac76-4e15-83bc-32eca5cf4787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d64eaf-b4c8-411c-9851-dc39a1b3b69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cf10d0-c303-422d-8dab-148bd18d931e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6087580d-54c2-4f75-b1db-8a6bcc075592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea1b9ce-f147-4a95-918b-597a5ccaf7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcef632-c1c3-493f-b202-13816c435c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180166e0-ae95-4436-b5a4-8db0e8bd6637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e501434-405a-4297-8a0b-73e8496cc050",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eec78d9-1c7a-4cf6-b8df-2a01ffeec34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57626beb-c7da-48d1-a118-c88d1bac006a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db50084b-46be-41c3-b82f-0ea64ba439de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969a9063-964a-4635-a7f9-a4b63f2b8665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afb3460-70a9-46ce-b08d-5012941d8171",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64f2f0f-3c60-4f44-b38c-2470ad3bf849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1132d4-78e5-48f9-be67-0ea0a2f82ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fd0cff-26e7-48e7-a043-beaf360c9838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f6b32a-e2e4-4203-b86e-9122db5277ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f059fe49-4d43-41bd-b8fd-fd72b9421412",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e995243c-f134-413d-9a80-373bae0b7b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30afc72e-7103-426c-8100-fe3939944348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6edace-bbc7-42cc-a916-600d82477751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1790ef1-54ac-493c-be07-bfe1bad63736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c925a26c-093b-400b-b650-54f3d70a0a84",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5296424e-0e1d-486b-a83c-2011e50fbfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444eb4d1-9014-4099-9c24-c06a7024ecd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca014d4a-d0cf-408e-8e27-77f50f695c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228efb74-8776-4a24-8d3a-a1ebf0179857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ca1880-7c88-49b1-a68f-58ff57f5771d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c52ed4-317b-43fa-b6a3-f5082bdbac9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d847580-4e15-4a39-ae28-cd7ffc3b21c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798e963c-9081-4f4b-9783-595cbd60e7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c67e88-1f27-4818-a6d0-2c686552d92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381a123a-2c32-444f-bcb6-4ea77450bed3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd50c7a-c10d-4aad-907b-637c5075d41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c594b3b8-165b-4e77-b67f-40dc40073453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2548e3-aeb9-4609-bc14-0824498088c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e160a57c-34ff-4724-b538-203d569b02f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc2f5a2-1711-4bb2-a33a-c13391d402b2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064a9226-fc93-464a-9800-53d8175efe6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e042f6c-4078-4629-9a31-fcf3f60ba76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7a9f04-7582-480e-b260-472644096fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d34e511-44b8-49be-8195-3d5b86fb1908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a3e7a0-4bbf-4739-8847-63680a20eb59",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59308154-93c6-4671-aa22-65dc7b160a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca6caed-85f9-4902-a634-c5fef2f41b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6a6361-3544-4e43-8686-cbecd6e0d448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f917ad10-f58c-4647-9e9a-09c5bdf2499d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a5eb04-9935-4ed8-9177-a9b26c71cfce",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92516a0f-2af4-4113-bdde-3535110e3d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f3ea1d-5cf8-454a-951a-02ea20aa3161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2806790a-61b6-4040-a08f-b18bc7c4292c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328a36c6-8bba-4fd0-ad59-68e25b6be038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86da355d-3a80-4595-bae6-1c12e963801c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64bfa98-27ba-4452-b60e-542ff17be2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14887249-97ae-47c7-943b-8bad4fed4180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d86704-fec5-40a8-9c1b-16bf3c00f68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d126ff-6e58-4417-9b51-46b9f78114ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95ca4c1-8b94-4edf-b20d-6b9f95bba4ce",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456fc5b9-c78f-47ed-90b5-43f4edb5cddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441057af-1909-4bbc-b719-bdedcec92c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe2d6cb-8e74-4ba9-9b8b-58f5b68ac591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56818579-8a7a-4e1c-8c78-958deedb4d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9b1c6c-b7cc-4650-a92d-f07a114e142f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef34a05a-697a-429a-b4fc-91e36807307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abc8f34-0374-4784-b438-3039a3e60f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc11a14c-f458-4636-a698-47e50e760a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c223318f-7aae-42aa-8693-a4dc402f5c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fdd3e6-f2d0-4695-bfc1-d5423a5995da",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d74782b-fb90-41fb-ac84-253acef9947b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe80eea2-41f5-4562-8f7e-f45613b84497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23dd379-6898-409a-b0ea-f1330a86bde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb22f9-7fa5-42c2-8dae-68a902ee77b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac005fb6-ff1e-45a9-9f15-b41c3d7cd33b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6936e91b-6405-443f-b97c-3d3a9bd50bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cab9f61-9c62-41f9-acd7-cbc18faef9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cef333-e958-4085-968b-eb117f3df6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6ae402-0e89-437f-a3bb-2a8ac3e06901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858edec8-0e22-4bba-925e-edd6f21de0bd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96322a1c-ee44-420c-af01-49cd849a809b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c82a27-ae2a-4bd9-835c-caa4b6bb0312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c6d428-4466-455f-a45a-23a361bd2a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5e9282-b909-47ed-b170-f41921c30661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af38eca-f323-4637-a49f-e93af4f7eb41",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d75c53-cb4d-4a78-98a1-37ec65dd9e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92dfb9a7-e80a-4bd0-b870-36297727016a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b471bfbb-4cb1-401c-964a-03f012726038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744d1a08-6404-4cfd-8ada-25f0423033ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b90222-5625-45cf-8fd0-b7fbe0123b77",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b70353-e68c-47c6-bdc3-cd6818907507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6770c268-8d1b-4904-91d6-49989fa8ca8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824e8182-28fb-4f84-b7db-a831cb2ac471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c74c11-bd28-414a-9dee-568326bedd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523c40d7-7450-4b3e-8e5d-f32b32ab9816",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76945c42-5c1f-4891-b909-fd43133bb79f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6289c19-2877-45d0-a8b5-da5fdf0b7e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c133124a-02c9-4ff8-b278-105243b3a43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141a060c-d1f3-4932-ae3f-8a4ba6675d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db459178-11df-4866-be54-003fee3e31f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223a0586-415a-49a9-a956-2dcf120928e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34468431-c891-41ec-ba27-62acd665b677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f7bd5-1cce-41e9-8b35-3cad9081e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632f4939-1fc3-431e-8c6b-4d1840a4eba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b49d6d-6922-4727-ba30-68741f7f4d02",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38c894b-b2ed-43c0-94d3-9a12a6aeac0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc53f87-5f2f-4db4-9ec2-46bc6d518b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824c3c51-e540-4833-8818-24cdb602c96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826cbfb0-b1b9-4c63-b8c3-22397734aa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad7ebbd-69b9-4483-a48e-81e2c42138ee",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce2c7b-eeec-4a1a-bd5e-f68147a9c232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af85225a-a5a8-4303-8739-f0e7dd6a4100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11520571-49ba-4edf-a1e2-43db94bef8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fccaf3-57bc-4f95-9def-fe76396c6e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7697050e-eadd-40ae-811d-37d9f66f8c4e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad8394-d72b-4905-8b53-c107d197d2d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c94cd3f5-8bb9-4a3c-bc4e-bea406849f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af42bf1-ccd3-4a46-adb0-09453b8e5373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c496bb-acf5-4977-a360-afe028476525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcc57c5-de84-4818-8c9b-97d5e9c1a0d9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8288d0fc-73a0-4d6e-a7a5-620757e09c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30957cd3-4fa3-4a4a-a09c-35f1603a0166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f509ea-f09b-468f-bfab-2f7566b4caad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab05623-68ec-4b82-8da5-0485222c6c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e903a31-1b81-4864-900c-da27fe0de285",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd8498-d9a5-4111-a3fb-14cce35ced71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344acdf4-4fc5-415d-a1e6-c6bdbac194d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b69f555-5c79-467a-9784-81bb63340b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f0120e-7101-435e-a256-8636fbda4337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e304a73-1fe3-4a21-89b5-434bef579d73",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc975161-4612-4c12-86b1-9e6207f5b63d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdf3ac5-7daf-4da5-8278-e29b2c4cee08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5972f697-bc3f-4928-9134-0728dfeee879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1f9cc2-851c-44f5-af23-b3860fd27da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d93040-9362-4fd4-8cc3-e4f08299c13e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480c5fbc-d8a0-489e-b4a7-c3421545260f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa022058-9d76-4320-ba83-5bd138ab5eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a209ee-7414-4e27-ab95-63fb701dceb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a5f9af-f388-49a0-af81-19eb10a678ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3489a1-f38f-4e32-96c9-6e1c5c98730e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83861324-8f20-475b-a9c0-d52e65269e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3f378a-c1e0-407e-af88-2973024eff6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06401ed1-5a7f-4e18-a7fd-968704c54cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4efa36-2dea-4693-883c-29b30547786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1744d996-7612-4b51-b5eb-351ddd5a059e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c2959a-2bc2-44de-8fff-7716641dd8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29758e5-bc10-42ff-b30f-74368f8ce658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ac9908-bcb8-4b4f-b971-0bebd794ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb23221-4508-4e1f-8964-91744163bfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6ab1dd-2e35-4fdf-8338-8487875cbd64",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ab72d9-cf39-49bd-8018-a9bea97018dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559ab446-08b4-450c-a268-0e10c3b0a1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fc4713-0309-4ffb-8b23-c18b4b0819e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f7a846-bec2-466a-9ed6-dc49191822e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284a0042-7ef2-4958-84d6-1173e81e3c9a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448d0a1d-20fc-49b6-a48d-a2a429345086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22adb7b-670d-4675-a467-b2268d7f10f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456da807-9b55-406e-8fb4-abcd235bce8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea839648-1c38-48ae-b8c3-8a3aaaa5c61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0924bc37-9207-4620-b914-a7916d789b50",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b36d1f-48b2-4b81-b83e-b9b39d20aee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d905371-f37c-4550-9e8d-1439efb5db3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c6f317-a1af-4e8e-a7ed-d30b4b1a3604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c1b9ee-611c-4389-8b3e-b8d065a227b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1003d65-af2d-4c0e-8ad4-b9a035225da3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69d21d5-b5fe-4b5a-a2e2-04fbbe96fce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27888eac-c54c-49d4-a70a-a53c0395c5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b5519b-a599-4ba6-a819-eb3718a85b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2398d27e-f491-42b5-8a69-36ee48926fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efd8eda-8f80-4f00-9b4a-f763dff58def",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf69dae-1e11-46f6-9ed1-edae84f3d706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a374945-b265-4704-ae33-8de6a1a3e92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabffab0-f370-49b1-8a73-702a0bf2f4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d431a9-3e33-418f-adc0-c8513e7464e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de819b7-43be-47cc-b096-c54fb1f828c8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2048c7-2b90-4609-8a8a-02ac299bfa32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afafdfb9-060b-4f7c-ac37-2148594c50c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afe0c4b-4d37-4dbf-8777-ce984c960f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65decea7-f888-4278-a85b-31961c5719ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803dfda6-a1db-422b-aa73-67c4eec5eb13",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216ad5f5-322e-451b-b8db-f70e57af49e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6090058-11ee-4c8e-806e-56af07351a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921c9da8-1992-412a-837a-129eedf5843d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4527b4-49a7-41d4-8325-c2c5509f6266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c331ccae-bf6c-4347-b8c3-d6ad325348da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f620295-aea4-4711-b4c2-1d3e4f1cb1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19351275-1730-4557-a16a-032e30f73179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb84ed-de95-48f3-bda5-724a727c8487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65e1dd6-a2c7-46ae-91d0-9e536436443e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd3767a-8134-4348-a03d-38db23f9fc16",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba672972-2f41-412c-b8eb-127071e75d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757c3dec-5ac1-49c8-9d9e-f19f868533fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6e3991-eaac-4e2d-b44b-8dbec84f61be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c18b77-3688-4df0-aa53-161bec7fc07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5ad159-6177-4fbe-b82c-524e18bb8b75",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd68d023-acfb-45c7-896d-db64d9472711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272b885c-9518-4dc8-ba1f-b879c1d47687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ff06a8-b594-418f-88d8-d0d1ca341712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2706f90-6c56-4002-ab8b-2f1fcc3a0b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8d558a-f131-47e5-9d46-6d06befd8c74",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5865a87-5119-4939-ae22-0d0be4ac76b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1eecd4-f117-44e1-8618-28bd1415ed80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6955be34-263d-4855-af49-011466df9e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df12c288-1694-436e-a04f-35fd38a93935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5791c4e8-8f65-4e87-94b1-2b0887d990cf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b94639c-2f7d-4e3d-b49d-ff42685dfc6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27bd9fc-89b7-4dd5-b8cd-3183d7872ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c87a444-3cf4-4f95-9049-88b0313f99ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cffa31-931e-4f18-ad79-a1702fd347f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b54eada-a5df-48e5-b469-2c3c9a25b160",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed29194-c4be-42dd-b7f1-19cd2669ba8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3e1f40-8294-48fb-99bc-35e2641029ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03056113-5aef-460a-a67e-2dbd73d9a653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d13416-1f45-408c-b687-59d6c09b0db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070a3d68-7515-4a4c-bd31-bca8a93ebc9e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b2085d-e859-45ef-b490-9d5aee162890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6644bbfb-81ad-4d9a-b87f-2561f1eb7086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6ac67b-1668-43d8-b280-6d31c3639459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d792ce-1fed-45fa-8160-adab9ba016f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6b12af-7291-4925-8d4a-f3d11380e9b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aec1c4-67ee-479e-9a9b-064c681a3552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4f78e0-a120-4a8c-a716-935bd6773064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843dcb4d-2b32-4296-b2af-c1c302f2055c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173f1936-2aa3-4843-9c46-9bcc17dd11e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a390d537-61ce-4fe7-b939-33760be979a0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17879a29-77be-4544-af7f-07a8cd53aed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5728de0-c3cb-41a2-b921-de731136b122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb30451-bbef-4f7f-8121-58f615abfd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d445a17c-8d2e-46d0-8920-503c3d3b65ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5ac119-0510-45cc-af5e-0debaf38d758",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea676bf-7eb4-4d5e-92a2-7bd9a929f218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5c6c9b-06c4-4f44-bf44-629d048e0343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cc3482-3fda-4fcd-a1a2-0fbf39959abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edea0ef-d9c0-4128-abd2-31dc6d8eca69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e738f2-0755-4d80-9e97-6e26e78c94cf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2599073-e465-42bc-920a-61e1862872b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915f0bac-8eef-4225-80c8-72c6ddddb40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f5497-8917-427a-b388-0569ec1930dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5807970-07cb-4036-9580-829b6656f9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fe0c10-d437-48fa-add0-bb39d037750a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37255cd0-636d-4209-839d-c03d22f4d93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec857a3e-6b7a-437d-b003-8cefe89489e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f33c96-9679-45e4-9c14-9bab874e5c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b62353-6fe6-4255-8cbf-0807988ed3bf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c782112-b234-4abb-b7e3-6841992f42d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b771d0d4-bde8-4abc-aa78-bcf6b5b6344a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a5cdc5-7f4f-4e70-875c-5f51ef13bd85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0140d99-8389-4dd5-bbb7-815e97778fb4"
                    }
                  }
                ]
              },
              {
                "id": "b23bc7ce-0386-46bd-8224-614400630506",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e0d1bdd-fad6-44a2-a37d-a629e5b9d72f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e905e0af-8467-433c-9055-e8a55f8cb3c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a07a6a3b-9904-421a-951f-f4aa7ad6fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cf5a87-78f1-4ca0-9276-d1a1a64d5c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "319c4e10-4288-46ba-a75e-3f155c9a16bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b8577a-a68d-4167-b8da-13c52b32e6a5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5133c5-64d0-4c6d-b302-0c8c3ddf42cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "779a7ea6-6744-4757-88a2-65c6112eeb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f71b36-be48-48c5-9ace-d62763076285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e94f5ffb-d4a9-4800-a33a-418fd5e701c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9036df5-d0de-4db5-ab52-675064a95d15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e99be97-1fab-4f76-8ec8-ceef6d92a1c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85854be2-edc6-43ea-b96a-77d19aa140b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "328f1927-0950-4f6c-9947-d3d2a17f120b"
                    }
                  }
                ]
              },
              {
                "id": "a4b7e21a-de99-42f0-bbbb-ed830c044f40",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9a976440-83ed-44aa-834b-0f4e0661462e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1819c00-47d6-4765-bcdd-f9f72c35c316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0d7f7fac-af71-4f9e-8645-679807ddc7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be0e581-2bf3-4fa8-b111-a164d7b70e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70bca19-3838-475c-9bfc-31da50fc849d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45becdd5-db97-437a-8e37-793094636702",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c32c7378-4491-458f-bf22-cb27ece62ad8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14a0cc94-efd5-4628-9898-a27c6532f938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "534f1db4-70cc-4b0e-8d4f-f3d8e172ce5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9338b3-487d-4bd8-bad1-6307e5bd0c77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f25f393c-d613-4e2b-8c55-af414d28e981"
                    }
                  }
                ]
              },
              {
                "id": "54def354-9577-4252-a033-1bc51e652b08",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0e5218f-a740-495e-874b-cc55ce966555",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2cdbf606-d51d-43d3-92d1-ee85e4d1aa69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf885509-14aa-47f3-860f-d0a285bab0cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e8c4b7b-a952-4324-a1ec-5364cc4a6b23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c213d5-4375-4c39-8a5a-d5f50ed9abe1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b4598e45-9810-4be2-85ee-759ba8c460b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f87077a-a39d-4629-a82d-65551662ab93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "641c9f82-6996-426e-be24-c48f10bb9a34"
            }
          }
        ]
      },
      {
        "id": "702a0475-b79c-4c96-b2b0-770ec409a61a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "842bcec7-7207-4b15-98b6-e95f96fff922",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f8b3acc-f72e-4ead-b5d5-21b21c9ac4bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c57dc84-6d36-4115-ae16-38aa1c4b77d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e9609de-16fa-4752-860b-8c51538d63b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe37acc4-36e3-4f88-873c-3ff0638fbe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "913e9fbe-7703-4a69-b872-86a11ff1c6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb7f6bc-3a48-4ea4-b8ca-9f3728301c6e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326ed76a-e08d-4fa7-bbdb-a018e1e4020f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "79503f4c-e681-4e67-9394-fd9075438fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1040d96a-eaa5-46ee-91d8-bcbfc274cbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bbb7a83-1adc-444d-912f-65134563d7a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "964d8b62-2d9b-4528-ae46-03a900515a9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c7c3687-bdd4-468d-961d-2456e3e6dde1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5492be5e-2ca5-4fa8-94aa-94f45f62adee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0709316-090f-4327-9b13-b419ee3a2f1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7546f24-8649-4885-a273-404c326f0163",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e5b7339b-7c79-4139-8ff5-042e84d25a3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbbc5708-ddaa-45b8-9687-f808788ba805",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e729828c-dab0-4ced-9d4f-5b1a6675f6b6"
            }
          }
        ]
      },
      {
        "id": "4bc1d37c-523c-4792-88ef-ad7993c87b70",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4602dca4-1ec8-4e3c-9c43-72cd6ee0bde9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "758a7bdc-214b-45c3-a701-87d2d3387581",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fad6c1c-65f0-4df6-a3bb-9a4e8bc4ade9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a0f83b-6431-434b-ab45-c46e89a4c17c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1d3446-6938-4cee-a6f9-fe360fb3717c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315cafff-27a8-4e93-8073-ddb592c546b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9e25ebb-b567-446f-9ed7-18680c0cb9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537b9979-47fb-4287-bd9d-814057ec06a5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45a9eb8-bbcb-49f4-ad1c-cdc3151f3326",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "088d6538-838c-425b-895a-ebfcd70b5a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b1cb34-c904-4068-90b8-255a2ab8393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52ad7298-61f1-4738-8d2b-365b5f409090"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33ed374d-5ff4-41e6-9f22-53e21e1c9f12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5a39085-dfc8-490b-9c4f-7803a6016e51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74047d1d-1600-4f08-8811-e897168bd70d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a6b9c60-951c-48b8-b699-e1733ce1504e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "371a3824-7717-4803-ae01-24af79204dda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2ab709c-8f69-48b4-b93b-3196ac0dbcf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1aab1c89-b471-4fc4-96d6-5b4ab2a16cdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d09927c-b934-4e08-a7c2-ec18f9510240"
            }
          }
        ]
      },
      {
        "id": "6d75cb9d-b3c8-402e-9f60-de7a3a492a72",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "899d572c-49d9-4efe-bde9-30bb9cc0da83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cc5172f-9889-4a9c-b423-87046a9b294f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67f77d92-22ca-4a95-a84b-1169d41d89fd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f1f145-ac6d-4897-b1e9-f444dd1db3fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53e7e82b-95eb-4854-ae7d-3366d2047669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb8dbf3-ce1c-4a33-a2b3-b718d2210644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f332dab1-62bb-42c5-8ea7-67dea76957e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f81273-74e8-499a-8ab0-50a8333f875b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044d93dd-8042-4694-9d39-aead8a2eb295",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0772058d-d270-4b96-8ee2-8a10e59c623c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e018d7-b995-4996-98be-4ee6ef764b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc4a6b8-4e15-4a97-a128-f8b57a156004"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74267f88-e62f-444d-8846-319cae8ec730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c0eed0b-a49d-42f9-9086-1096e2c5d16d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "012b67cc-c629-4d05-9098-45732fba1c59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce718ba7-8ea4-463c-8b32-d47d994e4277"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef89dab-54dd-4672-b529-75d02f7aa7b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfc10446-62f5-4992-8f37-f2b8a293a535"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e046a30-dc67-4038-ac76-b3eb68c8d11f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e710c3ad-f26c-43af-b845-cdb450c62287"
            }
          }
        ]
      },
      {
        "id": "317591e2-af14-452e-ba86-97ad647296fc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c76b5e54-4509-4905-a487-0fb919cf1dc9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9364874d-bfa2-4120-aaee-a477d5bdd1e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d632808d-5da9-4591-9ab6-9cba52f14658",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "665af392-94dc-4d3e-9816-c3e092e6ccaf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2057479b-2614-492e-b365-b9be914b8d4c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 652.3359073359071,
      "responseMin": 20,
      "responseMax": 5075,
      "responseSd": 641.9098066765869,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678063316894,
      "completed": 1678063496413
    },
    "executions": [
      {
        "id": "f3c26f41-b8d3-4bd0-9aec-0d2f3fc2c5aa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b381af32-bf16-49f0-ab0c-e09d56c55c06",
          "httpRequestId": "77afdd9e-eac1-47ae-9c82-a2ed3f6f0523"
        },
        "item": {
          "id": "f3c26f41-b8d3-4bd0-9aec-0d2f3fc2c5aa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fb769d79-9351-45aa-bfea-e417944f7384",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "b494068b-60db-4122-ac0c-7701f166a786",
        "cursor": {
          "ref": "4878b32d-7033-4c54-b665-27b33dd309c6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d5519652-49ba-4926-984f-4f8cc13a1da7"
        },
        "item": {
          "id": "b494068b-60db-4122-ac0c-7701f166a786",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e42b549f-d60b-42fc-b611-ff3ed346cf3d",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "0bcbf467-7520-43cc-8f4f-23b58bcc4b2a",
        "cursor": {
          "ref": "c5884518-0e46-4782-bcae-e5dd2edf8959",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7380d174-4132-4914-b417-6e06973abcdf"
        },
        "item": {
          "id": "0bcbf467-7520-43cc-8f4f-23b58bcc4b2a",
          "name": "did_json"
        },
        "response": {
          "id": "69eecfd3-00de-4721-b372-606abad8df6f",
          "status": "OK",
          "code": 200,
          "responseTime": 1232,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aab7b5-0a0f-401c-be53-3071ebede724",
        "cursor": {
          "ref": "96d88ee6-c234-45df-9f08-bc01cf019fd4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5a9f8339-aeb6-4ede-a924-d19717a4c996"
        },
        "item": {
          "id": "a9aab7b5-0a0f-401c-be53-3071ebede724",
          "name": "did:invalid"
        },
        "response": {
          "id": "642d7caf-e3e3-469c-9c33-becef90cc5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aab7b5-0a0f-401c-be53-3071ebede724",
        "cursor": {
          "ref": "96d88ee6-c234-45df-9f08-bc01cf019fd4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5a9f8339-aeb6-4ede-a924-d19717a4c996"
        },
        "item": {
          "id": "a9aab7b5-0a0f-401c-be53-3071ebede724",
          "name": "did:invalid"
        },
        "response": {
          "id": "642d7caf-e3e3-469c-9c33-becef90cc5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9e12cb-241c-46cb-b9c2-a090e3bb9aef",
        "cursor": {
          "ref": "b01501e7-5abf-4a8b-9220-79380010b23b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "63c1fd79-6474-427b-bd14-dd2da23c5af8"
        },
        "item": {
          "id": "be9e12cb-241c-46cb-b9c2-a090e3bb9aef",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9e89f9ad-a3b2-44e8-a1ff-ed0ca8b81be5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 626,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2f5d8-4e15-4984-b51e-13a97c001235",
        "cursor": {
          "ref": "a69f2715-72d8-41e8-b503-203c7d84e010",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f7addc70-85b3-41dc-b130-912488929db8"
        },
        "item": {
          "id": "b1e2f5d8-4e15-4984-b51e-13a97c001235",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1ea9bd05-e325-435e-a741-3f8bc79369c3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 987,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe20858f-0075-4033-9c55-16c5d5eafbc6",
        "cursor": {
          "ref": "0cc1682e-e5dc-4870-bbe4-d8783dca6ea8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "24ea77fc-d703-4746-9eb9-0675c3e1ba9a"
        },
        "item": {
          "id": "fe20858f-0075-4033-9c55-16c5d5eafbc6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a55fb4a-d896-4ec7-9877-701fa9a02d15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d74d82-7b8a-4361-8b25-b72ee5e18aba",
        "cursor": {
          "ref": "a1a7de43-5d5d-4b2b-97f1-34390fd909a6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "19b4dac5-0659-4780-b2bd-9f27f9d30dc3"
        },
        "item": {
          "id": "47d74d82-7b8a-4361-8b25-b72ee5e18aba",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cad00355-34ba-400a-ad2b-1a2d7bc68741",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d74d82-7b8a-4361-8b25-b72ee5e18aba",
        "cursor": {
          "ref": "a1a7de43-5d5d-4b2b-97f1-34390fd909a6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "19b4dac5-0659-4780-b2bd-9f27f9d30dc3"
        },
        "item": {
          "id": "47d74d82-7b8a-4361-8b25-b72ee5e18aba",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cad00355-34ba-400a-ad2b-1a2d7bc68741",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf549bf-1edc-4292-9497-42cf180e1eec",
        "cursor": {
          "ref": "cbc9dce5-2014-4254-8ce3-68b71e6168de",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cd72a5a0-1d1b-41b5-92c5-655913b197bf"
        },
        "item": {
          "id": "ecf549bf-1edc-4292-9497-42cf180e1eec",
          "name": "identifiers"
        },
        "response": {
          "id": "8a433214-3b55-4395-b4be-c6aeec4e5f17",
          "status": "OK",
          "code": 200,
          "responseTime": 974,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0a8ec0-57f7-4fea-8f51-fa971055bd1b",
        "cursor": {
          "ref": "e3ac391d-4ca6-4960-a56b-dce2481c7116",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80885f66-9306-437f-ba5e-898c4a202277"
        },
        "item": {
          "id": "dc0a8ec0-57f7-4fea-8f51-fa971055bd1b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d78502bb-46b3-43dd-8027-4954ed6b36b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0a8ec0-57f7-4fea-8f51-fa971055bd1b",
        "cursor": {
          "ref": "e3ac391d-4ca6-4960-a56b-dce2481c7116",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80885f66-9306-437f-ba5e-898c4a202277"
        },
        "item": {
          "id": "dc0a8ec0-57f7-4fea-8f51-fa971055bd1b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d78502bb-46b3-43dd-8027-4954ed6b36b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9555216f-4fbf-4352-b855-d3802c9728cc",
        "cursor": {
          "ref": "84be6f07-8893-4477-aa52-54b807e9a59f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d97ae432-5f49-4e4e-855e-289d32bbde12"
        },
        "item": {
          "id": "9555216f-4fbf-4352-b855-d3802c9728cc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aea0cac6-0c1c-489e-9485-59ff37c64d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3377b9-1a63-4043-ba32-ac0972c6c592",
        "cursor": {
          "ref": "e166a93f-443e-41df-8bde-ceeb4d0a8416",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0bd822bf-e0cd-4d54-b1ec-c5b3db599b77"
        },
        "item": {
          "id": "ab3377b9-1a63-4043-ba32-ac0972c6c592",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e10f9e46-46b8-44c5-8a18-41086b399f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149c1219-7cfd-4fd8-88c4-4ee69e934748",
        "cursor": {
          "ref": "8402307a-bf26-428e-8521-231c9c79c8b7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4dfc0d92-09fd-41ff-a7be-e4ee39ae2c8a"
        },
        "item": {
          "id": "149c1219-7cfd-4fd8-88c4-4ee69e934748",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "824cbc7c-b3a7-4d77-92fe-e7187b03557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f99313-0150-483c-b49c-cd64f9be2af8",
        "cursor": {
          "ref": "f44ea92a-3e70-4bf4-9715-fd2fe67e996f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2a17e99a-4c95-4e0c-bf9d-ab08f1f8d8c0"
        },
        "item": {
          "id": "99f99313-0150-483c-b49c-cd64f9be2af8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "02217fdf-ff4c-469d-ace7-b47221a68e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1084,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2972a7cb-568e-45e2-98ce-6a1a5ede70cf",
        "cursor": {
          "ref": "5842fdea-4906-45d7-b68d-6f297f9a67eb",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "28ffd00d-5102-4a6c-9bd9-6e55bffef544"
        },
        "item": {
          "id": "2972a7cb-568e-45e2-98ce-6a1a5ede70cf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c45c6e59-dc75-4e20-a90f-b65da20d61d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024036d1-cbf1-48d1-8e78-12201711b6a6",
        "cursor": {
          "ref": "7651093f-6a8d-4482-9e52-678dd3c16b8a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c5118ed5-1054-4d7a-8638-bd46a4452294"
        },
        "item": {
          "id": "024036d1-cbf1-48d1-8e78-12201711b6a6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "94a1e75f-988c-4b7d-af76-6bb8a1ef4fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3791cdf8-97be-4bb9-9f5f-99b72dbfead4",
        "cursor": {
          "ref": "0f80dffd-7974-46af-a52f-0cd9ed0bea6e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "616ec703-1657-44e0-8d51-cc70aedfab1c"
        },
        "item": {
          "id": "3791cdf8-97be-4bb9-9f5f-99b72dbfead4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3cdf9402-fcc3-4f20-9789-cb393481958b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d08555-2d3f-4b78-8486-67dd1f7d4061",
        "cursor": {
          "ref": "fb07de4e-a9f6-46f7-a7c6-9f151988e0f3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8bdceca2-fd32-4e56-844a-4ef0307c8add"
        },
        "item": {
          "id": "f3d08555-2d3f-4b78-8486-67dd1f7d4061",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "71cf2077-e61f-449e-a576-d80e00c6df7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b73e3f-461d-447d-a2af-2df840a57d52",
        "cursor": {
          "ref": "2b7e314b-3556-47a0-8f57-f7bd455e2f3e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1160a55a-f971-485d-b70b-0afadce8be07"
        },
        "item": {
          "id": "28b73e3f-461d-447d-a2af-2df840a57d52",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0cd37cac-1e7f-48a4-8488-ae07922fd4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61fb6cd-5068-4257-a8a4-dede0a1fef5c",
        "cursor": {
          "ref": "24b3ef86-32e2-4f06-8cd9-010567dc5ffb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "60ead0fc-1cd8-4335-975d-b0d6be0da61d"
        },
        "item": {
          "id": "c61fb6cd-5068-4257-a8a4-dede0a1fef5c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "97db126b-802c-41e9-8d08-12f13ac23020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bd25fe-fa58-4129-be65-917afb0f1a03",
        "cursor": {
          "ref": "2fbe5eab-60df-4201-bf89-d8ba2944f9c4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8cc99f68-b84d-4fec-938e-33acfaae92fd"
        },
        "item": {
          "id": "c5bd25fe-fa58-4129-be65-917afb0f1a03",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e9501a0e-71dd-43aa-a188-be24c6357176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4f2492-ae4f-4b25-ba77-b7a78611cc85",
        "cursor": {
          "ref": "07786fbc-0bdd-47e6-afd1-979f41790c5f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c49ca2ba-8fd6-4206-ab1d-1a220aca08fe"
        },
        "item": {
          "id": "cf4f2492-ae4f-4b25-ba77-b7a78611cc85",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d7a6244e-1e11-43ef-ab9e-c6555b6b98b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9b7f1b-3bf8-4ee2-b41e-746d59a844c4",
        "cursor": {
          "ref": "7ff17fbf-6018-4e9b-a1d6-fd02f42b60de",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0304a5e-c86e-4894-952f-14c75c6130c7"
        },
        "item": {
          "id": "8b9b7f1b-3bf8-4ee2-b41e-746d59a844c4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1f7cabab-5664-405a-96c4-4c8dba6dfc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c45ad3-c8c2-475a-b151-5bfc9e00f3db",
        "cursor": {
          "ref": "861b50ba-4366-4271-a913-d9f7b585b177",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "26948eec-fa32-418a-abfd-54f7f4689d91"
        },
        "item": {
          "id": "f0c45ad3-c8c2-475a-b151-5bfc9e00f3db",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cc5a95ba-b49d-4701-b209-807bf1fc4a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604e93f2-4b7f-4153-b5b5-b20f3cac95f9",
        "cursor": {
          "ref": "1ca0b246-deb1-457d-87fe-0343aee2d65a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "19fdbc4f-a186-467f-8b2d-76d4671ead8a"
        },
        "item": {
          "id": "604e93f2-4b7f-4153-b5b5-b20f3cac95f9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5cb4b377-02b6-4f0b-b4b3-726d0e96bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab9598f-0750-4489-8253-cddb5ade20b3",
        "cursor": {
          "ref": "b4c3d951-6285-4b71-9dfb-cd1ab07c3a02",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3c8e9fb7-785d-4037-8dcf-7ca59f77b0ab"
        },
        "item": {
          "id": "0ab9598f-0750-4489-8253-cddb5ade20b3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "398b8f61-e856-4ec8-ac35-1e08f3688b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cca5d08-401e-4f92-aca2-6e3357be3e6c",
        "cursor": {
          "ref": "5de959f9-8e74-4d48-ae31-69ea653705bf",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "95c89569-66b8-4be6-8694-69e0540aa9fb"
        },
        "item": {
          "id": "0cca5d08-401e-4f92-aca2-6e3357be3e6c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8ff90e7c-f07a-4cad-aa71-afc39747c70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11459a22-1cfe-4d0c-98e2-7e4ab4c4fe9d",
        "cursor": {
          "ref": "5d0b1143-03e4-4d18-a454-65c8c38e702c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7e570e41-261a-4185-a525-96433e6929ab"
        },
        "item": {
          "id": "11459a22-1cfe-4d0c-98e2-7e4ab4c4fe9d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fd4c968b-d6f1-4231-b6a2-7411b8f0e4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645fa96c-d685-4b8f-929e-6c6a020d9220",
        "cursor": {
          "ref": "12d3b833-960d-4c7e-be28-2917e5afe563",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "29137e21-c77d-40c3-b4ac-d6a6ee212196"
        },
        "item": {
          "id": "645fa96c-d685-4b8f-929e-6c6a020d9220",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a2a04f2-35cc-4692-8acb-0eba1aade9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3500747-8322-4b8a-8ee5-bbad16125fe4",
        "cursor": {
          "ref": "5598f04a-683b-4080-8acd-c1f958fa603d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1f5b89f8-b5c7-4708-af8a-241afa8225b9"
        },
        "item": {
          "id": "b3500747-8322-4b8a-8ee5-bbad16125fe4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6c6a12dd-85d8-4467-8f8b-c51122485d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a57bf6d-8b02-471b-9d15-541890a71a93",
        "cursor": {
          "ref": "0dfcf08b-3492-4114-8e76-81d62e36d0bc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0e5f7db4-9dd0-4ee6-a374-c41bdb9d89c8"
        },
        "item": {
          "id": "7a57bf6d-8b02-471b-9d15-541890a71a93",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "13b1fa0a-8e9f-4eaa-a8b7-2089cc77c3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befb3243-4fd6-4c3b-8bda-589351dde90d",
        "cursor": {
          "ref": "b4439c7b-ccd9-4c6e-b4ec-b308a9d4c6ad",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "079d0f23-8e2e-4359-9539-3b939960ac2f"
        },
        "item": {
          "id": "befb3243-4fd6-4c3b-8bda-589351dde90d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "57227ff0-425f-4e36-a052-3e5c4d3620a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68fc39f-31d9-4d7b-826e-29c5bd00156a",
        "cursor": {
          "ref": "c10a74f2-638f-4337-ac57-b672195e283d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "59364676-1f4b-478a-863d-171389ed8ce8"
        },
        "item": {
          "id": "d68fc39f-31d9-4d7b-826e-29c5bd00156a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "448e5ccf-2cf7-4129-a77c-9fa3678a7030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6747868f-e236-492b-96ba-515c3090a6f8",
        "cursor": {
          "ref": "eb498170-4797-4a6c-acdb-5d85fa617b10",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "46fe8ed2-3e24-4b40-ac1a-e2ce6ed0a7cf"
        },
        "item": {
          "id": "6747868f-e236-492b-96ba-515c3090a6f8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6b37aa41-053c-457d-ab8b-2e550067cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da87875-e411-4e35-b6b4-49dee860e987",
        "cursor": {
          "ref": "89bacca0-6561-4f2f-915f-317a5b522f9d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "901d6402-3d6e-49af-9b14-0899247b3f11"
        },
        "item": {
          "id": "4da87875-e411-4e35-b6b4-49dee860e987",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d1cea7b-b944-4fcc-945e-8f56b914f9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14167533-0e05-48d0-9622-121d4d569b14",
        "cursor": {
          "ref": "780b7691-344e-401f-aefb-56df67722f82",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a2e8490a-70f7-4ab8-ab19-ec8f5df854ba"
        },
        "item": {
          "id": "14167533-0e05-48d0-9622-121d4d569b14",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d543eb60-c16f-4013-b728-fe2e5f51849f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61926187-39da-4e90-8521-833e07b7c189",
        "cursor": {
          "ref": "4ac8d8f0-7e32-4e21-b3ad-eb2ba9e669ee",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "599d73f1-8eab-43d0-8378-018aee97d0bf"
        },
        "item": {
          "id": "61926187-39da-4e90-8521-833e07b7c189",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "657210a7-da5f-4a32-b70a-f93ffb00402f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6964a6a-ab89-4f9b-94c5-a3a3ee975bfd",
        "cursor": {
          "ref": "660ebec7-d328-455b-8200-41b5ba50bc7f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ee5531a5-f51e-45d5-a2ff-3ffc2be8ef57"
        },
        "item": {
          "id": "d6964a6a-ab89-4f9b-94c5-a3a3ee975bfd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9f3782e8-9a9d-4a3f-9bbd-6bf4f5149db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3e30fe-dde0-40c8-ab85-d91729ae9ec6",
        "cursor": {
          "ref": "e8fafaa0-604c-42be-b9df-2e61d0dc77e5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5b2c1138-e0e0-4831-962e-13451afd5b8e"
        },
        "item": {
          "id": "6d3e30fe-dde0-40c8-ab85-d91729ae9ec6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2025b35a-e290-4b94-85ac-b0bd3bcabe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2831c420-d51f-44bb-be30-e9e581ee7871",
        "cursor": {
          "ref": "82f80543-0564-42ab-975f-d53a878b8e19",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "af142930-6845-4159-97f8-48affc7b7627"
        },
        "item": {
          "id": "2831c420-d51f-44bb-be30-e9e581ee7871",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "805cc2bf-79bc-4fbc-9518-3861f6a72e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741a3e25-309f-4b16-a4e6-825a5f88436a",
        "cursor": {
          "ref": "0c63fca7-e25f-4c72-ae9f-d5608be6d5ba",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "403b9eba-1e0e-4408-8505-41638313306f"
        },
        "item": {
          "id": "741a3e25-309f-4b16-a4e6-825a5f88436a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9caa07d2-1e0b-4b42-9a33-03b3f9949078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebe08b5-eaa6-4417-9b5b-a1bc658ab323",
        "cursor": {
          "ref": "7e0e1531-d92b-4803-81de-9cb96653210f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "46fbac5d-26ac-4d77-a530-9c426b941698"
        },
        "item": {
          "id": "aebe08b5-eaa6-4417-9b5b-a1bc658ab323",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "84dcd4ac-6aec-457e-8b19-caf58eac6343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3a8fde-a54d-4d05-926f-f77b910bce07",
        "cursor": {
          "ref": "fbcdfbca-c344-49a9-ba0a-d755249e44f2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9b1fda1-45d0-4112-b2f6-c3ff1d65820c"
        },
        "item": {
          "id": "5a3a8fde-a54d-4d05-926f-f77b910bce07",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a882b27d-4832-42e4-af02-79cd3ef198a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dd482e-f429-44ea-b154-f52f23a594a0",
        "cursor": {
          "ref": "68d3244e-90d2-4035-9626-6fbf71322148",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f055de57-14fc-4e8a-a7d2-605895c30d10"
        },
        "item": {
          "id": "42dd482e-f429-44ea-b154-f52f23a594a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ae37ad34-31bf-44ca-9832-17b39132a2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654abe59-643c-4046-8e52-75473dee794b",
        "cursor": {
          "ref": "897cf421-c5f8-4349-ad10-4dfe4d0c5b9a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4d109cd6-de91-47a3-8ad3-05b4581c298f"
        },
        "item": {
          "id": "654abe59-643c-4046-8e52-75473dee794b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9cfcd0e4-7188-477f-90f0-091f749be17b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 685,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ad3a1-6716-404f-a2f3-e0dc856d7f96",
        "cursor": {
          "ref": "d1cfe682-cd6a-4cd9-b8e3-9b7ac5f333c6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8bd96942-829a-4ff7-9875-375550cc9fdd"
        },
        "item": {
          "id": "ac6ad3a1-6716-404f-a2f3-e0dc856d7f96",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "720911e4-3d43-42bd-95d8-2d7339332b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb9db38-ae8b-4138-84ec-efeec05acb94",
        "cursor": {
          "ref": "5a4c3ebb-0bca-4602-9d75-fa5f9f0a9f45",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a912e2b8-fd96-43ab-ad5f-3e13a5331f66"
        },
        "item": {
          "id": "ecb9db38-ae8b-4138-84ec-efeec05acb94",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fdac58d4-de45-4de9-9d95-8ef76b1dfc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c507b434-6b88-491e-9dd1-9e58a5525d2d",
        "cursor": {
          "ref": "dbcd04bc-4daa-4d54-a589-a1d35cded3d6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "720c9725-522c-43fb-abb8-e3b63015fa8b"
        },
        "item": {
          "id": "c507b434-6b88-491e-9dd1-9e58a5525d2d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2f896cae-59f1-4bed-bf08-8a45223c11b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037045b8-fbb8-42e6-b3d7-557636184f34",
        "cursor": {
          "ref": "6e485104-b43e-4aa0-a880-f27fe30c216e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "51e1c303-9a82-497b-b70f-475a9e146202"
        },
        "item": {
          "id": "037045b8-fbb8-42e6-b3d7-557636184f34",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "99ffa853-b296-4ee7-8699-0eb06808c80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca307991-3fd7-4d7d-832e-83deac377e9e",
        "cursor": {
          "ref": "fb41fa9e-cc3f-45bb-b360-6017c698474a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a48e31df-ac2e-4ff1-8b78-6690ea96d6dc"
        },
        "item": {
          "id": "ca307991-3fd7-4d7d-832e-83deac377e9e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "22234ae3-ac32-4295-90c5-0e055efba58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31175ee1-d362-4461-bf78-0b5d1b463de8",
        "cursor": {
          "ref": "78abba2c-8732-4bf4-be26-fc5c758e4f07",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8bbb667d-84b3-43d2-b3d0-22b434b12fb6"
        },
        "item": {
          "id": "31175ee1-d362-4461-bf78-0b5d1b463de8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "93883751-9460-47f6-9c28-ed1796fcd482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b9f122-273f-42bf-80a0-a765cd03ca43",
        "cursor": {
          "ref": "999b9d9d-6437-4482-bdf3-6e5b20aa4375",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "35c3f3e2-9e05-4c03-84d0-d5b8565e6ea6"
        },
        "item": {
          "id": "06b9f122-273f-42bf-80a0-a765cd03ca43",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8b5ab89d-6e6d-4681-91ba-8bc7ec11fb42",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 751,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2366f129-d9d1-433a-b0be-d179ae123671",
        "cursor": {
          "ref": "81481027-f47f-4a0b-8faa-f174c6b8a90d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fde7f68c-8f0f-4901-9fd8-3bbd4d9b7fac"
        },
        "item": {
          "id": "2366f129-d9d1-433a-b0be-d179ae123671",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f6bcac4e-a1ee-4c99-aa92-7aef2e25a4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f45b77-a04f-4907-9715-d147f04e09d5",
        "cursor": {
          "ref": "b6ffce2b-0a31-409c-9270-fabc194f9c41",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "08d38f10-9196-45c8-9184-903510f1a8a4"
        },
        "item": {
          "id": "25f45b77-a04f-4907-9715-d147f04e09d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "afbdc681-8090-4d5b-a5ac-659f16dda7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579266d6-51f9-4bb6-95f4-7991fba1aa36",
        "cursor": {
          "ref": "b532a277-ea89-49a9-b30e-29c39ed569ea",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "994f0c3e-3327-4d58-b587-8c8f6c614ed6"
        },
        "item": {
          "id": "579266d6-51f9-4bb6-95f4-7991fba1aa36",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7246e9c4-b11c-4900-b328-61dc43d61936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9e2393-0723-4350-ba7a-289ca73c5a1e",
        "cursor": {
          "ref": "04900750-e917-4d44-9f3a-59551c519819",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d1ad5b12-182c-41cb-8c63-eeaeeaa19754"
        },
        "item": {
          "id": "db9e2393-0723-4350-ba7a-289ca73c5a1e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "de8589de-615e-441f-9195-fa396f3387fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7c5f3f-15c2-42ef-9d0c-a8df1a4f1289",
        "cursor": {
          "ref": "2e9f3f8c-f622-4359-ab6f-30ecb7ed7a3b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aab14f4f-d3bc-4b73-9dbe-7766aa16cb3a"
        },
        "item": {
          "id": "8d7c5f3f-15c2-42ef-9d0c-a8df1a4f1289",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4d52ec8a-d9bf-4f70-a0de-11cbfa2b34d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91673316-3420-487b-9ed9-c47a3f719865",
        "cursor": {
          "ref": "88ff8ad5-94ff-40f4-9869-8566cae374f1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ffb42ebd-1b30-4d69-9654-6156c27d3f34"
        },
        "item": {
          "id": "91673316-3420-487b-9ed9-c47a3f719865",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20a48960-94af-4a66-abe2-7d3117bf2e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a4d47c-41b0-4c7e-af54-6c2f28eedeb2",
        "cursor": {
          "ref": "8e7c0056-e265-455a-b449-a031f55bc892",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "91cec772-3eda-41b5-a508-25dffdfee661"
        },
        "item": {
          "id": "84a4d47c-41b0-4c7e-af54-6c2f28eedeb2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d8c52c8-ef89-47c0-a57f-0bc0e6408f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9123f5f-68ae-4508-a23d-31753638c0be",
        "cursor": {
          "ref": "928bc6a4-68a1-48e3-8937-3a0932c95316",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "98c0f564-165a-4726-8d85-a8a39b7edb80"
        },
        "item": {
          "id": "c9123f5f-68ae-4508-a23d-31753638c0be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "93659c00-f6d2-4e49-b302-f743bd27e2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd3e62-cd9f-4de6-87e2-f744f2e1ab8d",
        "cursor": {
          "ref": "bff0bdbc-8ba1-4f93-b773-9d40ab611ce8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d6e10d52-e974-4769-abf6-315bd0a9bb56"
        },
        "item": {
          "id": "7acd3e62-cd9f-4de6-87e2-f744f2e1ab8d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d2389ac-4e6d-4952-b3f5-02606f4375ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c25da-8f94-4669-96d4-ce50258c75df",
        "cursor": {
          "ref": "d3daf2ae-b459-4c36-8664-0454e76eb234",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4bc29922-39ad-4856-a7bc-016bd3f0c901"
        },
        "item": {
          "id": "e02c25da-8f94-4669-96d4-ce50258c75df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4cd5fd8a-92bd-4503-ab63-66bfd3a2d584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61308b31-a34d-4334-a714-32e34b89f139",
        "cursor": {
          "ref": "04c691f6-9e91-41a2-aaef-c123a7e0cdad",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fd3bdc25-0081-466f-9713-1e3f37d98f76"
        },
        "item": {
          "id": "61308b31-a34d-4334-a714-32e34b89f139",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6ee1b498-f6f2-4df1-bb7c-f6bbec5a78b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caffe493-505c-46d2-90f1-d6a2d20070e4",
        "cursor": {
          "ref": "6590f8c7-ff7b-4f40-b0ea-f84d0fa45d66",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fd3addd7-54b4-4df9-9092-72e4ce1e765c"
        },
        "item": {
          "id": "caffe493-505c-46d2-90f1-d6a2d20070e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2bbd00ca-b433-49ee-9a12-8a0718fe1f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169111e5-4e5f-4974-8293-6787d49ebe52",
        "cursor": {
          "ref": "65538cc0-e398-4098-8ebc-82882f20001d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "71d08ef2-bc9a-469b-8e05-79d952fee526"
        },
        "item": {
          "id": "169111e5-4e5f-4974-8293-6787d49ebe52",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "beacd977-49fe-4d97-a35a-e99cc9801311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce20dd8-8556-4878-bffc-43d9b29bba0b",
        "cursor": {
          "ref": "88abad66-f586-4fb1-ae2e-0fbc1a1cd494",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7953d934-a76e-4e79-b68c-7a35577e4b75"
        },
        "item": {
          "id": "0ce20dd8-8556-4878-bffc-43d9b29bba0b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f73c0545-e3b8-4ee5-bfda-e0f19c35ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9883f-e9d4-4bb1-a38b-6ff3222f5cf8",
        "cursor": {
          "ref": "2678dbf9-25fa-4d67-9088-71f5cfe96556",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e0dcb82-759b-4799-95fe-202b4f5a91e3"
        },
        "item": {
          "id": "43a9883f-e9d4-4bb1-a38b-6ff3222f5cf8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "55935f47-a716-4fcb-a4ea-d76fa7bbd32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89a1e80-92d8-4f2c-b634-666ce7e344dc",
        "cursor": {
          "ref": "229e5b23-fa0e-4033-8e2f-b76b82f0dafa",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d5ce64ae-ae31-487b-985c-b1efe85a970b"
        },
        "item": {
          "id": "c89a1e80-92d8-4f2c-b634-666ce7e344dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "abc6a13c-a2b0-423a-87e9-ce9c97af19a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f931ebda-f7ca-48fd-9f68-3f51637e2c86",
        "cursor": {
          "ref": "fababa28-3829-44eb-a78d-2860187b3552",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2f004ff7-972a-4e89-ba26-e3d80e0a9f70"
        },
        "item": {
          "id": "f931ebda-f7ca-48fd-9f68-3f51637e2c86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2fd54d32-7dd9-4201-bd47-a70376bfdaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774f3bfc-5b29-4b1b-8d31-3d5f1e45204e",
        "cursor": {
          "ref": "12a25b09-23e9-4c6e-8c91-0682a56465bf",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5fdab62a-84ba-4399-9b5a-e17dae18d63b"
        },
        "item": {
          "id": "774f3bfc-5b29-4b1b-8d31-3d5f1e45204e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "abbfb413-b505-4f90-ad7e-14551910e0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aae52a-4b93-4f35-a63d-7c186786e32a",
        "cursor": {
          "ref": "627a45f7-3395-4f7d-aa40-0f74c92c1558",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0ca69715-1796-40ba-8780-2929fb1be045"
        },
        "item": {
          "id": "74aae52a-4b93-4f35-a63d-7c186786e32a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "26b5e20a-7ef8-433e-a6e2-879da304482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7876e242-c35f-4733-bfa3-0729fd01e665",
        "cursor": {
          "ref": "6fcf4f52-21c1-42b4-a79e-4081ae69ce26",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "afc1b8f5-9925-4ecf-a1d8-378497ab8337"
        },
        "item": {
          "id": "7876e242-c35f-4733-bfa3-0729fd01e665",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "391eb96b-21d6-4a3d-b164-2337f7d442f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaa7631-b26a-41e4-905e-17728d7f11c5",
        "cursor": {
          "ref": "0fabbfd7-026e-418f-bdd4-b9836551fc8b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "13fcdb3c-3330-4042-84b1-f5c1976c55c5"
        },
        "item": {
          "id": "afaa7631-b26a-41e4-905e-17728d7f11c5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "67180d57-0ca4-41ed-82f0-f6947ba81626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dc9079-95f7-482a-a4a7-98aa2847f739",
        "cursor": {
          "ref": "b76e0d42-2f0e-431f-b89e-e46e5bb40518",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "41d2c6a2-713a-4692-97d9-693a3176846a"
        },
        "item": {
          "id": "87dc9079-95f7-482a-a4a7-98aa2847f739",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7dafe793-a53c-4d9f-8e31-947ca8ae7f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2d89ad-79ef-44c8-9d42-9a708d0c093c",
        "cursor": {
          "ref": "72aac02f-5608-4674-8775-e2f78df5bfca",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9a785021-0dbb-43de-9ea3-c95fee62c3c7"
        },
        "item": {
          "id": "ee2d89ad-79ef-44c8-9d42-9a708d0c093c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b4d38ea3-e01d-41fb-89e7-41b4082a13a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f103a1-4906-456a-9221-8146f6fa6671",
        "cursor": {
          "ref": "37f6441f-860b-4e8a-9d39-b1b0f8dd69a9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "edc1da1c-2871-424b-ad1f-b749004ef062"
        },
        "item": {
          "id": "80f103a1-4906-456a-9221-8146f6fa6671",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6260f670-c103-4d0c-a9f0-478fe4f8bcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b08710-0465-4be0-a7d1-e3e008f634c8",
        "cursor": {
          "ref": "3c6c5e16-d8f5-464c-adb8-bfb96d41ea49",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "671c1815-f707-4fb0-a3cb-9792849eaf7c"
        },
        "item": {
          "id": "e7b08710-0465-4be0-a7d1-e3e008f634c8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0d90fb22-2049-4201-ba81-a2ba6e730bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eda9d50-ddfc-4b4b-8ba5-bc43649bf1e1",
        "cursor": {
          "ref": "af7fbcc1-c19b-4d46-8059-d7ee39f7b33d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6a1ad9c3-c10a-474c-85be-c3f8db0785cc"
        },
        "item": {
          "id": "7eda9d50-ddfc-4b4b-8ba5-bc43649bf1e1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6b289566-86a2-47d8-a75d-160aa98e535b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13d1e79-ff86-4ef2-8d74-409bbac080bd",
        "cursor": {
          "ref": "7d8d3b9e-b51e-4bfa-9360-b074ff354b15",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6e13324b-cb3f-401c-9254-4d1dd4f9feff"
        },
        "item": {
          "id": "a13d1e79-ff86-4ef2-8d74-409bbac080bd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e5d33bce-0db8-4b7c-a4c4-1985f89812bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d027a71b-68a3-46ad-a6a8-7518e8ec507b",
        "cursor": {
          "ref": "45ff8e7a-7814-4690-8560-24ae20d371f8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5bf87b9a-1ef2-456e-a112-0ba64aa7be26"
        },
        "item": {
          "id": "d027a71b-68a3-46ad-a6a8-7518e8ec507b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "82c81ab2-f0de-4ef4-a017-4eaa978a62b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70148767-aa56-4ce0-959b-e08cf1d65edb",
        "cursor": {
          "ref": "74b627a0-b55d-4998-bea5-56ae56e1c82f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a93a9870-f8ea-463f-bbef-b68e0f6fa037"
        },
        "item": {
          "id": "70148767-aa56-4ce0-959b-e08cf1d65edb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a7eccf50-e160-4718-a15e-a81a6a5b015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1077,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5611784-6ebc-4dff-a041-898a69107f7d",
        "cursor": {
          "ref": "60a52c29-7594-4922-b7ed-5802cb335874",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1629b353-6986-4188-b3dc-e7b9bcb0bb78"
        },
        "item": {
          "id": "c5611784-6ebc-4dff-a041-898a69107f7d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b6d4baf5-9ec3-47a6-913f-4bcd41c8594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1159,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6224f08-a34c-401e-9ee6-fe1c76c21e63",
        "cursor": {
          "ref": "52f64204-6525-4d1e-8053-ff811162656d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e1573736-85ad-41d0-be3a-414692c51594"
        },
        "item": {
          "id": "e6224f08-a34c-401e-9ee6-fe1c76c21e63",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "df726197-903e-475b-b32f-c7bfbed1e991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1091ca38-7708-4ee7-b09e-793aaba4065d",
        "cursor": {
          "ref": "110b600a-dbf8-4cbe-8e68-32c6d1ab98a4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "906cea7e-40c2-4044-b0d7-31a92fcfdac6"
        },
        "item": {
          "id": "1091ca38-7708-4ee7-b09e-793aaba4065d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3ad4ebf0-15c6-46fd-a97a-8288bd1fefca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1230,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f682add6-fcd2-46d7-b9a1-a117a5dd0e2a",
        "cursor": {
          "ref": "fd7fc8d5-0c9b-49f5-b170-e720651411a4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d6096fc5-002c-4d29-809e-27e1ff5cfc50"
        },
        "item": {
          "id": "f682add6-fcd2-46d7-b9a1-a117a5dd0e2a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d533826f-6d2e-4cba-bc2f-e46d13f6d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a84efd-854e-4909-8e41-7f0b9fa32eb7",
        "cursor": {
          "ref": "6b8c84f3-ee17-48d4-b9a3-c0f37cf14643",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "105c0312-4aed-406e-bc56-d88d58c51578"
        },
        "item": {
          "id": "82a84efd-854e-4909-8e41-7f0b9fa32eb7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "98d2b17e-4809-4190-80e8-13e7c6bd132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1503,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb87dbc5-f80b-4bc6-bb0d-1d1fb3757c5c",
        "cursor": {
          "ref": "910a4a15-c087-425d-8bc4-24b959096da2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b27db566-5c93-4828-b58b-7e3557e88eee"
        },
        "item": {
          "id": "bb87dbc5-f80b-4bc6-bb0d-1d1fb3757c5c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b54ab7a0-0d20-40d9-b3d0-5604b1480769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1286,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c6668c-fb7f-4834-8d20-c7ee27377a69",
        "cursor": {
          "ref": "deff898e-9a9a-4426-a3ad-99a7a613f745",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9ece5974-5296-4851-ac2e-b0f2a7cb9800"
        },
        "item": {
          "id": "c6c6668c-fb7f-4834-8d20-c7ee27377a69",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ac0fdac7-bacb-4b3a-af3a-e56ff3c689ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1558,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ecdc25-38c7-4e77-b8ba-4d985df5cc9d",
        "cursor": {
          "ref": "bddbe901-4795-4eec-879b-3cd5b438263b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "985eee8b-b27c-4c41-83e9-405b3cd496d6"
        },
        "item": {
          "id": "24ecdc25-38c7-4e77-b8ba-4d985df5cc9d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "39d4a4ec-1650-4faf-837e-f1bf5b781756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1014,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae910f6a-6d43-40b3-8563-61f6d19fdc0d",
        "cursor": {
          "ref": "00967044-f7e3-4d64-8a4c-d04dafaea860",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f822bb3f-3740-4740-8878-c27ddd875a4d"
        },
        "item": {
          "id": "ae910f6a-6d43-40b3-8563-61f6d19fdc0d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b150aa54-e02f-45a9-81c1-80f1a81717ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1978,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff5f07c-cf03-48c3-8d4c-8be962715eb1",
        "cursor": {
          "ref": "4d374d11-db28-42d2-822b-dfed5dd2b7b9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0903362e-2f1f-4bd5-a4e0-9358642b5e8e"
        },
        "item": {
          "id": "2ff5f07c-cf03-48c3-8d4c-8be962715eb1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "292838d9-4332-44e2-a685-25c2a590514c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6122308-306d-4883-b004-49a9026fd8da",
        "cursor": {
          "ref": "8abb138e-cfe7-4298-b36b-e9fd27c758ab",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f8747bf2-3ee7-4e23-9d34-80332e00f249"
        },
        "item": {
          "id": "f6122308-306d-4883-b004-49a9026fd8da",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c28806f4-e98c-4f6a-9f4b-f6f3f404c9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1456,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e699f888-c433-49b0-b33d-3f6379d22f2d",
        "cursor": {
          "ref": "91cbe195-d90e-416d-bd9b-5e964ffb3d5d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "213dfeea-7a7e-4c75-92b0-0fef337588c5"
        },
        "item": {
          "id": "e699f888-c433-49b0-b33d-3f6379d22f2d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6bf2e939-88a6-466d-9114-b558d2fb6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1399,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b17f4be-b7a7-4356-a589-8947fee7a403",
        "cursor": {
          "ref": "9cb5a9d9-c5de-45e0-996c-34e994375630",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4c44bd7e-a310-4ece-86e7-7ee8f7955187"
        },
        "item": {
          "id": "4b17f4be-b7a7-4356-a589-8947fee7a403",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e022f484-2b70-4678-a54c-1a62c3f5c3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1186,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42193e22-5f4e-4086-9498-d321c3936a10",
        "cursor": {
          "ref": "70416e5d-e1f0-487a-ae8b-3744841be7b1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4b1ecf28-0760-4903-a68f-e470f2f2a174"
        },
        "item": {
          "id": "42193e22-5f4e-4086-9498-d321c3936a10",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e3d5a85d-1ce1-40ee-8695-cb56e9d6918e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1226,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1c6943-f6c0-465c-875e-586c4ae87d88",
        "cursor": {
          "ref": "2a108feb-4bde-4acc-99e0-338116d7d198",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "508ad208-b436-4e2c-a684-c22cd265caee"
        },
        "item": {
          "id": "4b1c6943-f6c0-465c-875e-586c4ae87d88",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "72f22c2f-bd70-4ac9-b832-c7f2e83c9ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f9fcde-c2eb-4419-a11c-ac14355e6254",
        "cursor": {
          "ref": "9d377878-a3b6-4fbf-b799-9536ae87f912",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5bee56e2-70fa-409f-af1d-b1929b3014e9"
        },
        "item": {
          "id": "28f9fcde-c2eb-4419-a11c-ac14355e6254",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1e014a04-f21a-4cae-ad4b-110617d6d817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f4f045-db19-4553-ab95-5787a6e756ff",
        "cursor": {
          "ref": "cfc7accf-2b9b-43e1-9d88-1f4f873eba4d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9c0a3d53-c141-4f68-a382-6e7daf260e0d"
        },
        "item": {
          "id": "a7f4f045-db19-4553-ab95-5787a6e756ff",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0e16d909-1ab0-4ef7-b715-c4709d951264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee0d38-6a10-4515-a1c2-fd6610d50748",
        "cursor": {
          "ref": "b4d427f6-89da-44e6-8049-59a7807ecd86",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c9c94b53-b753-4c8b-8628-576f0390d693"
        },
        "item": {
          "id": "b4ee0d38-6a10-4515-a1c2-fd6610d50748",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "18d612bf-ad4c-4391-b7cb-b209eeaa0612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb023a-a3c2-43cc-b86e-d3e650fd145c",
        "cursor": {
          "ref": "bfc76314-5e66-4544-b1e1-89aa234f22f1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b6a7744a-cc09-4f80-bc51-432e0b437aa6"
        },
        "item": {
          "id": "6adb023a-a3c2-43cc-b86e-d3e650fd145c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5e363644-4a15-49c0-9720-3cf9772709bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecaf5dd-7134-46b7-a295-07a857864c19",
        "cursor": {
          "ref": "e23b4e72-fccd-42f8-9a0d-bfb4020d8693",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fc57f696-69b0-4aae-9fc1-c053c114c2cf"
        },
        "item": {
          "id": "fecaf5dd-7134-46b7-a295-07a857864c19",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8ee9b470-1f48-4e99-89ac-2e9d78d580ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb097152-5343-49fe-878c-9bab6d4eca4e",
        "cursor": {
          "ref": "63151c6b-086a-4310-9e3c-76a77caf2edd",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d0e5e4b2-4b34-43f5-8809-04357adeef8c"
        },
        "item": {
          "id": "cb097152-5343-49fe-878c-9bab6d4eca4e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5287fbc6-b190-41d3-b185-02c088bc3815",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d020d49-cb47-441c-9f3a-c8e07b882abc",
        "cursor": {
          "ref": "57161a0d-d8e8-4d93-a937-5626c5e6bafa",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0f36bce3-c8a3-4b43-8b4b-82af0f31eda3"
        },
        "item": {
          "id": "0d020d49-cb47-441c-9f3a-c8e07b882abc",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3a45d850-b849-4c51-b70b-2bcee210c6a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 627,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f32a38-999d-4580-b7d6-cc561bc68bbe",
        "cursor": {
          "ref": "e2a1b0b3-fe0f-4056-9861-b2f8f14697ea",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a666d6f9-5e7d-43f6-b053-097334f12f15"
        },
        "item": {
          "id": "c5f32a38-999d-4580-b7d6-cc561bc68bbe",
          "name": "credentials_issue"
        },
        "response": {
          "id": "58b2d450-be24-403f-b623-91af5bec781b",
          "status": "Created",
          "code": 201,
          "responseTime": 5075,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5832a027-ffaf-4c46-9eb1-64c6e30d166a",
        "cursor": {
          "ref": "fdf034b1-eb73-4770-ac07-92defa821e63",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "36378742-e011-486b-9646-75a34b305a97"
        },
        "item": {
          "id": "5832a027-ffaf-4c46-9eb1-64c6e30d166a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "133770b8-20e0-45f6-9555-d48faebf678c",
          "status": "Created",
          "code": 201,
          "responseTime": 4584,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f101fce-5ebc-45b5-a752-b01186d8233d",
        "cursor": {
          "ref": "54d82da7-93d6-4f64-84ba-f319268737de",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "759022f5-cacf-4e26-9cbe-0dd947f597ee"
        },
        "item": {
          "id": "4f101fce-5ebc-45b5-a752-b01186d8233d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2ea7a4b9-bea1-4626-9784-bd99421846c4",
          "status": "Created",
          "code": 201,
          "responseTime": 4096,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa5ae52-a3ed-4a3e-bed0-cac8d5bba6c4",
        "cursor": {
          "ref": "33b54f78-f95f-4c91-b4e5-b4706d5a5fd9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c6c39a0e-9b0c-4029-8e55-de6cf88607de"
        },
        "item": {
          "id": "4aa5ae52-a3ed-4a3e-bed0-cac8d5bba6c4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1c89a7ca-5a3e-4da7-a7ff-18e1d4798a80",
          "status": "Created",
          "code": 201,
          "responseTime": 4781,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "147bd0a6-1e35-4c79-94d8-69d2f4dfa157",
        "cursor": {
          "ref": "c8fa3e82-2770-4d26-a4a5-601da7c68ee7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "40740a20-8a14-4d3e-87e1-b6f88e9903a1"
        },
        "item": {
          "id": "147bd0a6-1e35-4c79-94d8-69d2f4dfa157",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "97bcc11c-a274-4711-a084-f9a2901018d8",
          "status": "Created",
          "code": 201,
          "responseTime": 4998,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "467b3203-4866-4fc9-8dc4-285aa008736e",
        "cursor": {
          "ref": "74edcf3a-12b9-4a8c-9c17-7430e88608d2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "605eb1d6-eda9-4a88-9764-2e02037367de"
        },
        "item": {
          "id": "467b3203-4866-4fc9-8dc4-285aa008736e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "438a1b3c-95e4-4552-8bb2-a8c6cd267a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467b3203-4866-4fc9-8dc4-285aa008736e",
        "cursor": {
          "ref": "74edcf3a-12b9-4a8c-9c17-7430e88608d2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "605eb1d6-eda9-4a88-9764-2e02037367de"
        },
        "item": {
          "id": "467b3203-4866-4fc9-8dc4-285aa008736e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "438a1b3c-95e4-4552-8bb2-a8c6cd267a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5733785-0dae-4351-8cf8-790ac0170d80",
        "cursor": {
          "ref": "954d1876-f73a-4e21-97a0-d36e7fd3f751",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "41ec2eed-d6e3-43e8-a63b-ae5dfebb4b49"
        },
        "item": {
          "id": "e5733785-0dae-4351-8cf8-790ac0170d80",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f4f0da56-1a0a-4667-9414-903243e2240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf208e6-1ff2-4166-b38a-cd43cadc91fd",
        "cursor": {
          "ref": "9fc147aa-63be-4bb4-883c-9e9612abfcd4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7b044fdb-8741-4c1e-95c3-e2c5dfedb3ae"
        },
        "item": {
          "id": "edf208e6-1ff2-4166-b38a-cd43cadc91fd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b0319651-894a-459f-bc63-83e9ebdc0a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaab7aa-81bf-4f4f-931b-d1b84f2e8be8",
        "cursor": {
          "ref": "16ff7d3d-4ef7-4a99-af1e-0d12224c621d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b99ab12f-7ac4-47d7-8ffa-5c0edbe6e7dd"
        },
        "item": {
          "id": "5aaab7aa-81bf-4f4f-931b-d1b84f2e8be8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "18b65253-1426-400d-b7c8-8c279bf98f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c33c98-d9ed-40b1-be8e-290e1d44c389",
        "cursor": {
          "ref": "29b83493-0e77-42af-b5ff-143dc8a880f4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4fc4f6d4-9e03-47e0-a59f-ab18ce75d25c"
        },
        "item": {
          "id": "36c33c98-d9ed-40b1-be8e-290e1d44c389",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "331099bf-7b92-4a3a-8f94-a782cf0cd7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79987690-5d5f-41da-bb9f-b69aad295133",
        "cursor": {
          "ref": "fb68cfb9-7b9e-433d-8ecc-d5f730e648bd",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9a0eaffa-e70e-4f7b-bf0a-ebe8df5aaf31"
        },
        "item": {
          "id": "79987690-5d5f-41da-bb9f-b69aad295133",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5409c4a9-c103-4b50-8db6-2efb1a4731b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f814875-4463-483f-b812-79b3a57db1a1",
        "cursor": {
          "ref": "4e0d1a4d-2945-40d5-8df5-cfd765430b62",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d2b33a49-51be-4faf-acd7-3ddcd57a17a7"
        },
        "item": {
          "id": "0f814875-4463-483f-b812-79b3a57db1a1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d6cc0495-39c2-47ad-8848-b8b0fbc5851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e817353-cfc6-4a59-b9f0-bda43de7c736",
        "cursor": {
          "ref": "dbd56e1e-a85f-4f8d-923a-e3808c6bc68d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "78f8d4d2-5b8c-4999-8165-d1d24ce4665f"
        },
        "item": {
          "id": "4e817353-cfc6-4a59-b9f0-bda43de7c736",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bf6b6e96-d364-4807-88f6-81b6361b4cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3864887c-212a-4ea7-84aa-103fcd9c8134",
        "cursor": {
          "ref": "7d181662-d8f0-46e9-9d23-ac6dfcad7ae2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c0939f5c-9387-4bc6-87dd-041f60b79a79"
        },
        "item": {
          "id": "3864887c-212a-4ea7-84aa-103fcd9c8134",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fdfdcbf3-e1e2-431a-854b-432610e8b223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51b1f5c-424d-4d53-a28a-c5f49f8f78a1",
        "cursor": {
          "ref": "ea91fbb8-d9c8-45e6-86f5-405dc8397ea2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ddb5ebb5-f51e-4c0e-b117-d009ccee2661"
        },
        "item": {
          "id": "a51b1f5c-424d-4d53-a28a-c5f49f8f78a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b1b04946-2b25-4ac9-855d-53255c8ee2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6716c1b4-3733-458a-8c83-e79b810e3f89",
        "cursor": {
          "ref": "7f340a53-a50c-4f4d-b3ce-15be70f959f0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06173c39-a406-423c-aad0-dfcc661b2e15"
        },
        "item": {
          "id": "6716c1b4-3733-458a-8c83-e79b810e3f89",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68b477a7-4019-4191-9a95-b1c80d32fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb52a76-39c4-46a5-8257-03ee42646445",
        "cursor": {
          "ref": "6a3e8fde-6891-4213-ae3d-5808798e3416",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4dc54deb-a4b6-4262-9827-0599ad00f458"
        },
        "item": {
          "id": "7eb52a76-39c4-46a5-8257-03ee42646445",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d258e55-1fb8-4638-a4ce-e7cd151a0042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974063a8-db8c-4c63-bf67-d866bca7779a",
        "cursor": {
          "ref": "6753162d-6d03-43d6-bcbb-f2a7bf5f3a37",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6ffd95f0-9cf6-4a80-b8ab-d6b0379384ee"
        },
        "item": {
          "id": "974063a8-db8c-4c63-bf67-d866bca7779a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5bf08edc-aa29-4d6b-8134-6ba69a4d4632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d7232-37db-4adb-8c87-0d817e3446e8",
        "cursor": {
          "ref": "c779a3d5-ce1f-4b55-92a0-547bf1a38d4d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c9fc014f-c946-49de-aca3-fc3f2eea2534"
        },
        "item": {
          "id": "f38d7232-37db-4adb-8c87-0d817e3446e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0b9d2806-9cb6-4aad-a6ef-2f38eaf9c3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e26b5-ec94-42fe-9b81-539fc3107081",
        "cursor": {
          "ref": "7f5c8aa6-7aff-48d8-8588-eaecf5501363",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ec96d682-9bdc-4085-83bb-cb9b4c0f14be"
        },
        "item": {
          "id": "227e26b5-ec94-42fe-9b81-539fc3107081",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6eb34956-299a-4ad2-8b4f-1dbca2ef1896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34d6ea2-070f-4594-83de-5dea53e2c5d2",
        "cursor": {
          "ref": "a0c1edc3-859e-47a1-b085-5d68efb5d0de",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f282acca-0822-471b-9569-2ff1ccae1550"
        },
        "item": {
          "id": "f34d6ea2-070f-4594-83de-5dea53e2c5d2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42bb957c-bbe5-4d4b-a1fb-240b116e9d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d42a88e-7c28-4ac8-8b09-89b210cd74a1",
        "cursor": {
          "ref": "92a88069-3376-4c7d-81b4-43a7949b6c7d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bbd1da9f-02d9-4e86-9842-517503b61124"
        },
        "item": {
          "id": "9d42a88e-7c28-4ac8-8b09-89b210cd74a1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3ab88e1e-146b-4b19-9c70-465fe03bece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747b1749-31bb-4e1b-a5e6-444c4a3cdabe",
        "cursor": {
          "ref": "249bf83a-c279-4c25-b596-fa1b87862c1c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "753d757d-8993-4256-b03e-b0494c002984"
        },
        "item": {
          "id": "747b1749-31bb-4e1b-a5e6-444c4a3cdabe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "02fd02c7-267f-4df5-9a7f-cc49c138873d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c661d0-d0c3-44f0-9d64-999f2e76441e",
        "cursor": {
          "ref": "a3c3da13-7cf8-474d-a54b-aff549f4ae65",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a50ca132-cfd8-4ff3-afd0-b7c397b3eeda"
        },
        "item": {
          "id": "69c661d0-d0c3-44f0-9d64-999f2e76441e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "11e58482-7a3e-4309-a86a-e65d2591bccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6688665-2a52-4d52-a588-705f6798bb9b",
        "cursor": {
          "ref": "a83a88a5-54b8-4400-903b-59af6b339af5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d80126f0-5e01-47ac-a60c-be6b794998ba"
        },
        "item": {
          "id": "d6688665-2a52-4d52-a588-705f6798bb9b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "af300ef9-13e3-4871-a9e0-37738ff412fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60554ef-2778-4301-a182-43ac077328ae",
        "cursor": {
          "ref": "a5436af3-588f-4c6f-bc98-58db3ef25e7c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c374dae7-4344-4c57-b7a5-aed5804285f8"
        },
        "item": {
          "id": "f60554ef-2778-4301-a182-43ac077328ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "151a7b23-c8a3-48fa-9c70-d4c633cdadcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c2811f-f54d-4471-b08c-ef58eda2c3f5",
        "cursor": {
          "ref": "fe211819-954d-4627-b95e-7a5e63f5d7d0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aaf0b718-a2ea-4913-95b0-79b71ec72637"
        },
        "item": {
          "id": "a5c2811f-f54d-4471-b08c-ef58eda2c3f5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff937153-fcbb-4ce1-81cd-e415e4baea03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f598bff-04b3-4fd4-be0e-736c2a2e27b1",
        "cursor": {
          "ref": "5fbb8b0e-be37-404c-bad1-12901624fcb6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e1d96b00-cdc7-4aad-b6b4-25bc4b29a10a"
        },
        "item": {
          "id": "0f598bff-04b3-4fd4-be0e-736c2a2e27b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "acdd1ee7-86b6-467a-a808-e19e36cca5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddffcb6-ceb0-443d-9cfc-004ce85fba08",
        "cursor": {
          "ref": "c41268a9-48f6-4bf2-9fc3-bd2cfc42ed9a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "15b5e152-6f05-4a64-a61a-dc90b0239de2"
        },
        "item": {
          "id": "cddffcb6-ceb0-443d-9cfc-004ce85fba08",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17a651c4-37ac-4741-98fb-5cb8f270a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889e749e-65e0-4d4b-ba18-32c3e9455cb6",
        "cursor": {
          "ref": "44d6e073-1e8e-4050-a7f5-e75ca92936f4",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5efe680-107d-40c7-842c-86fb4bf6150d"
        },
        "item": {
          "id": "889e749e-65e0-4d4b-ba18-32c3e9455cb6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "39c871fa-2afc-44ea-95e9-a3ae5bd1dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c8628f-85ad-4b1a-ae5e-2d21e2b64fa6",
        "cursor": {
          "ref": "7b7d029f-d134-44ec-8ac9-fc460e309c75",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d127fbd5-ef2e-4d09-9d2f-40b0679691c7"
        },
        "item": {
          "id": "18c8628f-85ad-4b1a-ae5e-2d21e2b64fa6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "95633705-38b9-4184-a6aa-46b0eb085474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ad8ff-54f0-4001-a49e-de634fb654e6",
        "cursor": {
          "ref": "f43c196f-01ec-4f7c-b403-35ed801191d3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc7064e3-a652-4926-ae3f-d70f46021f20"
        },
        "item": {
          "id": "dd6ad8ff-54f0-4001-a49e-de634fb654e6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4e11f0bc-7d93-49bb-be48-b36bf998e2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7a5aa0-1ada-454f-b305-7463f2f9d945",
        "cursor": {
          "ref": "f7726380-db8b-4c08-8d63-dec3af1ee8c8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5fd36396-1d10-4d17-8151-af8936079a99"
        },
        "item": {
          "id": "3c7a5aa0-1ada-454f-b305-7463f2f9d945",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0ac62fab-7405-4257-95eb-163a700b142c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e8c1f5-27b5-4c5f-99c8-73896090db2f",
        "cursor": {
          "ref": "7f945c4d-b413-4c4d-abeb-4ec5df56bf90",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f477d98b-3695-40d9-845e-fb16cb7ecae6"
        },
        "item": {
          "id": "67e8c1f5-27b5-4c5f-99c8-73896090db2f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7ae78af2-c82d-4f90-b90b-ce59b031551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1b57cd-cb31-4f02-88fa-0136de0fb81a",
        "cursor": {
          "ref": "2bd37b10-62c9-4303-9516-ef03252a589e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b383d084-5aae-4e31-9e63-b6dafb147049"
        },
        "item": {
          "id": "4e1b57cd-cb31-4f02-88fa-0136de0fb81a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bff9c4b4-db3f-4887-89b8-a1ddf7f05ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3875b49-80a1-47b1-bd99-0348efbf3d20",
        "cursor": {
          "ref": "c084f86f-6783-4adc-93cf-7748481f6817",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2e0a3e7f-f213-47af-83e9-3381d5608f2d"
        },
        "item": {
          "id": "d3875b49-80a1-47b1-bd99-0348efbf3d20",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bf0e31bb-75f5-4696-ac2f-97109244e2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ef02d6-7be9-41e9-8ef5-6ed1093a7e81",
        "cursor": {
          "ref": "5713357a-e465-4954-bd88-0044af3b128a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "34955590-68eb-4415-8be8-5914ec6e8984"
        },
        "item": {
          "id": "64ef02d6-7be9-41e9-8ef5-6ed1093a7e81",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cc04263f-6006-4399-bc79-6b2936af79ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8222d2cb-b3f2-4967-981a-f80d04158119",
        "cursor": {
          "ref": "5002904b-cd5f-4cf6-9187-6d252d9b9950",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "06201a33-a9f2-4c80-a552-39de06668b1e"
        },
        "item": {
          "id": "8222d2cb-b3f2-4967-981a-f80d04158119",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e727b941-61fa-4be2-8dbd-1312b5b74320",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7d16ed-174e-41ed-8429-ccccdd81ade8",
        "cursor": {
          "ref": "4f626896-f07a-4d94-ace8-e69cc9032bef",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f1275822-26d2-4455-881c-e692d6e782ba"
        },
        "item": {
          "id": "ce7d16ed-174e-41ed-8429-ccccdd81ade8",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "02244762-6585-4ae8-86bc-1e973f8d7901",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 590,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be10933b-5af2-437d-bc55-b4b75d2633cd",
        "cursor": {
          "ref": "d6124f73-0518-4f3a-a1b7-0c2aa152ae67",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9ef23ddc-f581-4d02-8845-bc03a837d6f8"
        },
        "item": {
          "id": "be10933b-5af2-437d-bc55-b4b75d2633cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e33e8436-3c71-415c-bf2a-23ca2884ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be10933b-5af2-437d-bc55-b4b75d2633cd",
        "cursor": {
          "ref": "d6124f73-0518-4f3a-a1b7-0c2aa152ae67",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9ef23ddc-f581-4d02-8845-bc03a837d6f8"
        },
        "item": {
          "id": "be10933b-5af2-437d-bc55-b4b75d2633cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e33e8436-3c71-415c-bf2a-23ca2884ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec78672-f3c1-47f5-aeef-01c7a974fc5b",
        "cursor": {
          "ref": "00d52d30-b3f6-4984-aa71-a404eaa2b301",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "542780b1-9497-4aab-bbc9-7e588d3f85be"
        },
        "item": {
          "id": "dec78672-f3c1-47f5-aeef-01c7a974fc5b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "75e06033-b689-41cd-ae65-d4289cec580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8e8d95-d6e6-43c9-8f64-4e16d08b221e",
        "cursor": {
          "ref": "888853b5-c13f-4a9e-aec0-ba4f7b4d3b9f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8fd0783d-24e6-409e-996e-6fd7be9c22db"
        },
        "item": {
          "id": "0f8e8d95-d6e6-43c9-8f64-4e16d08b221e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7421dc2d-cc5a-4e4d-b856-350881e4e54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d77ad00-4f5f-4ad4-9e32-96940c33e184",
        "cursor": {
          "ref": "d7c352a7-f172-4d9b-bd1c-50083423605d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3b1a827a-3ca1-48d8-bca3-106b063e2074"
        },
        "item": {
          "id": "1d77ad00-4f5f-4ad4-9e32-96940c33e184",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "15d58029-638e-433e-ad7b-c106a4c65297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ccd66-9ac0-4a91-a1a7-abd3d0e66af6",
        "cursor": {
          "ref": "49bae5d0-be9b-4350-8a5c-dfa0f477e252",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7a858687-aa3e-46e4-abed-a4d07d52ab17"
        },
        "item": {
          "id": "2c2ccd66-9ac0-4a91-a1a7-abd3d0e66af6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3506150a-3a91-4d6e-8dd1-bfcd55e122a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8cf0f5-6b98-4d84-a835-03e53f3a5523",
        "cursor": {
          "ref": "bbde5297-8ec3-40cd-9f9c-c3b24cc7d6fc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67d39a38-72fe-40eb-8659-3a3107f7b2b8"
        },
        "item": {
          "id": "da8cf0f5-6b98-4d84-a835-03e53f3a5523",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9586ec06-b4fe-44e8-876f-91295bacef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af04bb1b-75b0-4b0a-8714-07addbd3f825",
        "cursor": {
          "ref": "4cdf2bd6-f15f-45dd-b1f1-c335a7ff6efe",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e6363d0b-aefa-44ac-83a8-6f9ea3785dd1"
        },
        "item": {
          "id": "af04bb1b-75b0-4b0a-8714-07addbd3f825",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "129ad804-bc69-42d1-ad55-bfbf1a8945b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2c94ad-b3d4-4791-9452-095ee824954f",
        "cursor": {
          "ref": "ff74c650-1a1a-4623-ab50-2384658ab868",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6f7a4764-282e-45af-9292-12786b74306c"
        },
        "item": {
          "id": "1f2c94ad-b3d4-4791-9452-095ee824954f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "374d0eb7-e084-4bc1-845c-56e15d1991ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7c2aef-09a0-46eb-9ffa-9bad8cbd7c4f",
        "cursor": {
          "ref": "27bdb339-7775-4725-8477-d51e1f829b36",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a3e72121-eee4-4fd9-9e09-def6f98f849c"
        },
        "item": {
          "id": "ac7c2aef-09a0-46eb-9ffa-9bad8cbd7c4f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "586d1205-8eac-4496-82ba-9c2cf6514de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90abae-56b8-4198-9ac0-4263bfb3c1e7",
        "cursor": {
          "ref": "ebd39ea5-8b88-468d-b842-99e28b3f1785",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ff78de1f-09db-403b-8e9b-d87a9a261246"
        },
        "item": {
          "id": "3f90abae-56b8-4198-9ac0-4263bfb3c1e7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e197dc71-72ff-4163-b351-62b900e41e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad78772-0f72-43bb-9eae-03db0ac67a23",
        "cursor": {
          "ref": "af0a1a83-d2ca-460f-91a9-01bde2a4a878",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "eda85901-3664-47a9-8d63-ddea6008c396"
        },
        "item": {
          "id": "1ad78772-0f72-43bb-9eae-03db0ac67a23",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9bd7ce59-9163-4eef-806e-846c940eb69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00174bbb-816b-49f4-8fd0-063dda155eca",
        "cursor": {
          "ref": "354d6ca9-c0fe-4ad4-ac51-a0ebeaa25952",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "81d56046-1f10-44d3-b65d-2305371a1d56"
        },
        "item": {
          "id": "00174bbb-816b-49f4-8fd0-063dda155eca",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f7915743-bc9e-40d8-85dc-47d7e4d69617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603fe5f4-913f-4622-9e2a-75e611d8794e",
        "cursor": {
          "ref": "84e3e3ab-62bb-4d05-aa3c-61ee9c074aea",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "257ecd5e-8e0a-40ae-b6e2-f183e84588fe"
        },
        "item": {
          "id": "603fe5f4-913f-4622-9e2a-75e611d8794e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aa5ae180-456e-4d43-8cad-b410cba83ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ff64d3-3b85-423d-99a7-2aaffbe464f6",
        "cursor": {
          "ref": "d104d80d-9c40-46fc-9c90-45b729608842",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9381c85f-a367-4130-b916-207e003383b8"
        },
        "item": {
          "id": "84ff64d3-3b85-423d-99a7-2aaffbe464f6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9481771b-78eb-48f8-8be3-35454fedfc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1059,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0c3e6d-39be-49e9-85e1-fb39a01eec2a",
        "cursor": {
          "ref": "77a8d370-2b77-4c7e-8f16-77621ca5ee9a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "875bc066-ae6d-4a64-93cd-92f03aa2da38"
        },
        "item": {
          "id": "0f0c3e6d-39be-49e9-85e1-fb39a01eec2a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f1a20e83-7e27-4412-acbf-9a205699eef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1554,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490d43f4-83ff-4004-806c-67b9a30944d9",
        "cursor": {
          "ref": "ebad205f-5fa3-44c5-93ed-47dee1b4884d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "70cc8a60-b800-4feb-a649-59bcbc17229e"
        },
        "item": {
          "id": "490d43f4-83ff-4004-806c-67b9a30944d9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5d44acfd-0cb7-4bd8-845b-43f1459a9e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1185,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b6f7f2-b776-44fa-9777-9ebe5e785956",
        "cursor": {
          "ref": "7c539496-f425-405e-94db-2221654e6812",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c7543edb-a125-4bc3-837f-db330d0ae6fd"
        },
        "item": {
          "id": "22b6f7f2-b776-44fa-9777-9ebe5e785956",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "26f925b0-8974-4a7e-9d71-57704c064611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1124,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49949352-3926-41ce-adc7-543dc8db4d0c",
        "cursor": {
          "ref": "b74150ab-846d-409a-af0c-ab360dbb0e62",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5f779d50-dc81-4357-8c52-1cd438e7ddf6"
        },
        "item": {
          "id": "49949352-3926-41ce-adc7-543dc8db4d0c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0421f17e-8067-41ba-9afb-f858a6c09127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c225c4e5-886e-4b4d-b7b0-2406140faa9e",
        "cursor": {
          "ref": "c2588fcd-a47c-48f7-9587-c0102b9d9c2a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d8de68b2-e016-4755-87ee-4061dd9896b1"
        },
        "item": {
          "id": "c225c4e5-886e-4b4d-b7b0-2406140faa9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1cb64bfd-2a09-4259-a6e7-baff17450258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1063,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90538eb-4e76-4166-bf36-c914b8882e49",
        "cursor": {
          "ref": "f10fb667-c403-46a3-bbd9-a04f5114b08e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cf913c28-9eca-40d3-952a-27dfe69f7c64"
        },
        "item": {
          "id": "b90538eb-4e76-4166-bf36-c914b8882e49",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0007ffe5-f7fd-48a4-9f6f-9068729b73bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ff2609-349c-471a-acca-0bed15124f4a",
        "cursor": {
          "ref": "06309b41-b9b3-4e17-840a-d008bad0b73a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "949c8355-c570-4f18-8ca0-5204235c9c65"
        },
        "item": {
          "id": "78ff2609-349c-471a-acca-0bed15124f4a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e2aba8b5-bc87-49f5-9b3d-e8f2b96ee63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1085de-f1b1-4709-8325-bde28de1659b",
        "cursor": {
          "ref": "741b722b-5dfd-4172-b972-06c50b012489",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5790a148-1f26-4184-9905-d1242f1ec617"
        },
        "item": {
          "id": "4a1085de-f1b1-4709-8325-bde28de1659b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "880a96df-0960-45c9-a459-fb924031601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ff27be-21ab-4e0b-b818-3729ce52634e",
        "cursor": {
          "ref": "e9ceeaaa-7727-4163-805e-6773c1bc84d3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5a80138a-0be0-487c-9807-76c8f822040f"
        },
        "item": {
          "id": "a3ff27be-21ab-4e0b-b818-3729ce52634e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04a0821a-e42d-4c71-a46a-a167e83c1f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15370942-e4de-4f02-a761-e266930cd504",
        "cursor": {
          "ref": "909bcef6-ae55-4a72-bc6d-c0c11af3949f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ce022b8f-1e9e-4d91-a339-256c0ab7d3c1"
        },
        "item": {
          "id": "15370942-e4de-4f02-a761-e266930cd504",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "88d23c50-f950-4ef1-a172-ce7401fa1d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e6beaf-682f-4b86-9c12-1302b217890b",
        "cursor": {
          "ref": "9a55d336-6cfd-44aa-8de1-db349f27f033",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d866c687-84bf-4798-9f07-d883d0c3c5a1"
        },
        "item": {
          "id": "b0e6beaf-682f-4b86-9c12-1302b217890b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "85b8939f-3537-4fd2-b0f9-6d3f64f10495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a8ae4b-38b5-4dab-afd8-4aaa7e6754d5",
        "cursor": {
          "ref": "48f38068-b0ba-44ab-960a-468d5f01c786",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "13ca617b-186d-4af4-93f6-8a4d6ddd8db5"
        },
        "item": {
          "id": "a7a8ae4b-38b5-4dab-afd8-4aaa7e6754d5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "60259080-7097-4746-9d79-a5139ba77070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b360869a-249d-4d0e-8762-c4986f4a8152",
        "cursor": {
          "ref": "a8b089ca-b044-4d6d-8840-24499b2a0cfa",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ece12e08-0c48-4f5f-9676-8f4087ed4894"
        },
        "item": {
          "id": "b360869a-249d-4d0e-8762-c4986f4a8152",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "23e73cbd-4e57-4d4d-bb87-955de780c697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdfb8da-b46c-46f0-886a-f0f32b119ef5",
        "cursor": {
          "ref": "fb502af1-29b1-4034-a249-bc921e5a512e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d0d5989a-1a40-42b4-9173-5517c389ddbf"
        },
        "item": {
          "id": "9bdfb8da-b46c-46f0-886a-f0f32b119ef5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb29d8af-9b92-4dc9-a0fd-9738a954cb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80790f7-270c-48b2-8a34-ccba21d64131",
        "cursor": {
          "ref": "937bfd01-ca83-4540-8a8d-299256b0a454",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "69a13799-a035-4d97-8f3b-1bd119f19a65"
        },
        "item": {
          "id": "f80790f7-270c-48b2-8a34-ccba21d64131",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "04100895-1b46-469f-826d-aef127b540ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fd4570-0fcb-4ca8-beb8-87eafeebd93e",
        "cursor": {
          "ref": "5379a81e-1a1d-4502-9d55-dd036f896536",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "529c9822-f04a-4714-a286-25b592a37e00"
        },
        "item": {
          "id": "a8fd4570-0fcb-4ca8-beb8-87eafeebd93e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d295d725-9c52-4722-b6c5-0c644110dbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838c5dd8-75e6-4887-b1d6-f1f735c1d98c",
        "cursor": {
          "ref": "e41cdb7a-d58d-4641-a67e-f155d8cdfcff",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0f798383-84a5-4692-812c-c90fd6fa9451"
        },
        "item": {
          "id": "838c5dd8-75e6-4887-b1d6-f1f735c1d98c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "be178532-48c7-4e96-b74b-13e6b808ee1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422c5cdc-507e-46ee-801a-a0962a5d2e73",
        "cursor": {
          "ref": "27a86bc2-f11d-4887-82c8-4abb2f8a4cc0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ab7e749-2df0-4347-91a3-b765e8013e43"
        },
        "item": {
          "id": "422c5cdc-507e-46ee-801a-a0962a5d2e73",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "326a17bc-1add-4395-b911-cc93c4ffb653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe47945-d720-49f9-873a-895094ad7736",
        "cursor": {
          "ref": "02570318-91bd-4873-aa2b-0ea3c11d08e1",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3c13e3ed-d6f2-49f2-842d-8be515e01293"
        },
        "item": {
          "id": "bfe47945-d720-49f9-873a-895094ad7736",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "900cb258-6f29-4e83-bec5-f31fb71425c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a8da4-8f3f-4569-9ba8-a13ab430b000",
        "cursor": {
          "ref": "39f0a8dc-f5e4-4e50-8a87-7e09eb55b671",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "92976bef-bb57-48a6-af4c-497dd1cf8cb7"
        },
        "item": {
          "id": "b44a8da4-8f3f-4569-9ba8-a13ab430b000",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ade443af-7180-4164-9dce-2e961fdc4d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d2fc18-a8d4-4b2d-aa45-d70f2ed0afc3",
        "cursor": {
          "ref": "a6e66e98-fc91-4401-b93b-928c25a59208",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b76eaf41-0574-4be2-9e73-af19d6cb19d4"
        },
        "item": {
          "id": "09d2fc18-a8d4-4b2d-aa45-d70f2ed0afc3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d5228ffd-19ad-4fb6-9353-052f69dbe859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed265df-21c2-445b-8d52-be20378957c6",
        "cursor": {
          "ref": "1f585649-0f37-4be0-a69f-ccfe92356d36",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e6a327fc-ff46-4060-a653-0352d1364903"
        },
        "item": {
          "id": "6ed265df-21c2-445b-8d52-be20378957c6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6526892f-6835-45fa-b0dd-61ea302fd5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8d0096-a4a7-499d-92c4-70c8d475cca5",
        "cursor": {
          "ref": "3c2394fc-5a8f-4dda-a1de-c5d44d142a27",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5757dc6e-9f14-4729-965d-2b5b2de04014"
        },
        "item": {
          "id": "6c8d0096-a4a7-499d-92c4-70c8d475cca5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d605f0a8-b078-4f1d-abeb-a5312b1aacf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f51bde-13e7-4da9-b30a-fc17ff6c5a84",
        "cursor": {
          "ref": "ee62ce56-d2f2-4aca-b7d6-f1b23f39a135",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78850097-b890-4ee5-9146-b57713c00d50"
        },
        "item": {
          "id": "55f51bde-13e7-4da9-b30a-fc17ff6c5a84",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5c9ab5cf-0971-4f3f-b9e8-92271ff4d473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af1fc9f-af76-47b4-b2ef-32d53684c744",
        "cursor": {
          "ref": "b0e7e533-a4c5-4ec6-b4f6-290e736cc3b4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b222fa51-9517-4e94-b644-44d47aee2ea1"
        },
        "item": {
          "id": "4af1fc9f-af76-47b4-b2ef-32d53684c744",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "418058be-55ce-46aa-87a5-06695ece4f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cca8f55-f379-4234-aa1d-55f4dca8b6b5",
        "cursor": {
          "ref": "a514974d-46b1-4fa3-9a3b-963744d4ac12",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2d497375-9a6f-4fe2-afb6-1c1b37a07f1d"
        },
        "item": {
          "id": "1cca8f55-f379-4234-aa1d-55f4dca8b6b5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8e929485-1c1b-4762-b3ae-7092d59b9353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedceb93-1faa-4709-80c4-7dddcc1d5bc3",
        "cursor": {
          "ref": "3751bff5-e068-459f-b970-f2db47d19b5a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6458f2a6-ad8f-4b28-85c1-fec4dd4b9ca4"
        },
        "item": {
          "id": "bedceb93-1faa-4709-80c4-7dddcc1d5bc3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9e513e63-097c-4011-a9b0-4f4d04bdc526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9b52cb-1b32-419c-bdae-dad38726c5f5",
        "cursor": {
          "ref": "a596e057-efa2-4f4f-9931-18f3e04acd61",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1c466265-7424-43b0-bad0-39fbef892d44"
        },
        "item": {
          "id": "6d9b52cb-1b32-419c-bdae-dad38726c5f5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1e53ee06-743a-432e-9ad9-e7a240ddca56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90760be7-2049-4de6-bdea-916ed56d281e",
        "cursor": {
          "ref": "3150db37-1e6a-4476-b376-3a7ff760b5c5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7f098bc-482f-4288-b0e1-0e9be64c07e1"
        },
        "item": {
          "id": "90760be7-2049-4de6-bdea-916ed56d281e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "920d2d03-e823-4a4b-8a5a-ffd5513cbc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b5b333-831a-4974-ba0c-0daebd56bd4a",
        "cursor": {
          "ref": "090d8d45-3c73-4951-91dc-8e03394189f8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c7afbf00-d2ff-44d4-a856-d34e37f922a3"
        },
        "item": {
          "id": "97b5b333-831a-4974-ba0c-0daebd56bd4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a696890-415d-4e50-8cc3-67cd1b1d926a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be1d6a7-2df3-410c-aeb3-7b5f7e3e5e06",
        "cursor": {
          "ref": "dbb5052f-f087-4314-8d71-9b2747e0ac86",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "50fe87ad-a124-404e-8eb3-9c8a589bce51"
        },
        "item": {
          "id": "9be1d6a7-2df3-410c-aeb3-7b5f7e3e5e06",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "54f055e4-0f40-4786-b520-2e4499ea2cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c130dff-fb3f-410f-8481-0a7d530ca4ba",
        "cursor": {
          "ref": "25d18194-c81d-4091-9740-d100eed7fdf5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7c4cc544-b453-43ee-b8e7-eece1451864f"
        },
        "item": {
          "id": "1c130dff-fb3f-410f-8481-0a7d530ca4ba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7528bf19-abad-40a4-9b30-4ac1096335a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4172fdfc-b415-4309-8799-91d792b31d8f",
        "cursor": {
          "ref": "e7552d91-ae03-46d7-b770-8580331b4b15",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a2bf1e8e-ea71-4ffa-a547-8034699e23bb"
        },
        "item": {
          "id": "4172fdfc-b415-4309-8799-91d792b31d8f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1ead1f3c-cde2-4bf1-82a3-334c9e18d183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566ba63d-e0cf-484a-9c33-3b4632950616",
        "cursor": {
          "ref": "a827d742-3d9b-49e7-85c2-5006fafdfda4",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "986aca47-4eee-4b9a-acec-91d0583da93e"
        },
        "item": {
          "id": "566ba63d-e0cf-484a-9c33-3b4632950616",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c73b560f-4564-4598-a965-3b41e9d6e30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe218817-e09c-4acc-b3b1-169d43006f4b",
        "cursor": {
          "ref": "467e9d45-32fa-4034-80c5-9b6b359b388e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b6275556-30be-4f88-b6f0-91110d5ab005"
        },
        "item": {
          "id": "fe218817-e09c-4acc-b3b1-169d43006f4b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "abc01628-7935-4deb-b00d-f8db613033d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cf10d0-c303-422d-8dab-148bd18d931e",
        "cursor": {
          "ref": "1e1cc2fc-47bb-4047-97c3-2897b4e08ec4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5914d548-499b-4817-a841-b3f9b71dae60"
        },
        "item": {
          "id": "e1cf10d0-c303-422d-8dab-148bd18d931e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d6cc4650-b684-4c0a-b3c3-4d7d5dd8b8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e501434-405a-4297-8a0b-73e8496cc050",
        "cursor": {
          "ref": "ff55e60c-0dda-422f-b7ca-ea16662ff903",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3120ccba-16d8-463c-9371-61735203b410"
        },
        "item": {
          "id": "9e501434-405a-4297-8a0b-73e8496cc050",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c306e8f9-32f9-400d-87c5-368266baa45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afb3460-70a9-46ce-b08d-5012941d8171",
        "cursor": {
          "ref": "3618174a-aab1-4ac9-95b5-e38026ac8e8e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eaebb3af-ebce-4fd4-a4c2-6c9ff5784073"
        },
        "item": {
          "id": "1afb3460-70a9-46ce-b08d-5012941d8171",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eb690c56-01c9-4649-80a5-1235ad32a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f059fe49-4d43-41bd-b8fd-fd72b9421412",
        "cursor": {
          "ref": "0103104d-eb63-4516-b2e2-a5b4993e7d0c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2f12a63c-a584-406f-b9a0-434e810b7116"
        },
        "item": {
          "id": "f059fe49-4d43-41bd-b8fd-fd72b9421412",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "df5a278c-c5ea-48dc-aec2-27dbcbbcf9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c925a26c-093b-400b-b650-54f3d70a0a84",
        "cursor": {
          "ref": "1b2f948e-6e33-494e-9605-74657df737ba",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "348e0509-9fd6-499e-b0e0-76c46f38550e"
        },
        "item": {
          "id": "c925a26c-093b-400b-b650-54f3d70a0a84",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ee735c7c-f0cc-42a2-8654-6898c16d16a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ca1880-7c88-49b1-a68f-58ff57f5771d",
        "cursor": {
          "ref": "8186e097-60b2-41b6-ab1b-4197e44524d3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eeff3381-7425-4dcc-99b7-bcbb285bb3e1"
        },
        "item": {
          "id": "83ca1880-7c88-49b1-a68f-58ff57f5771d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a6273dcb-74b9-4925-920f-a847511a38df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381a123a-2c32-444f-bcb6-4ea77450bed3",
        "cursor": {
          "ref": "b3e00937-02a0-4fca-a2bf-f69c3d143a93",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "32477f26-f6b9-4cc3-867a-e58d2f4ca532"
        },
        "item": {
          "id": "381a123a-2c32-444f-bcb6-4ea77450bed3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dd53bfc0-2c1f-47cf-ab09-68db284aca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc2f5a2-1711-4bb2-a33a-c13391d402b2",
        "cursor": {
          "ref": "25dd5f58-e563-45eb-a00e-e86d46108a60",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf8987a5-5cd1-4ce4-848a-ec0e8fc30839"
        },
        "item": {
          "id": "dcc2f5a2-1711-4bb2-a33a-c13391d402b2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c8eb2598-aa6e-4216-b43e-a4925c5b1481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a3e7a0-4bbf-4739-8847-63680a20eb59",
        "cursor": {
          "ref": "6abc95be-bd41-4ed3-b0af-9534801f2795",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a53abd57-b664-41f7-a47b-35c325c84eea"
        },
        "item": {
          "id": "c8a3e7a0-4bbf-4739-8847-63680a20eb59",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f1de1aa6-e034-4cf0-b3fd-4213ea3525ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a5eb04-9935-4ed8-9177-a9b26c71cfce",
        "cursor": {
          "ref": "92a61136-1a70-4f39-93ce-beda5f51638c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "014364cd-2a24-424d-b5a1-c5f0e6e415ca"
        },
        "item": {
          "id": "23a5eb04-9935-4ed8-9177-a9b26c71cfce",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "80fb669b-e4ca-4dce-a280-ec6c4f418ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86da355d-3a80-4595-bae6-1c12e963801c",
        "cursor": {
          "ref": "93378373-8027-4b2e-80b6-d91b64171c4d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a5551a2c-d0e2-4425-9e11-9fe460b91cc1"
        },
        "item": {
          "id": "86da355d-3a80-4595-bae6-1c12e963801c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa3f798a-23b9-4d32-9e11-56a9db508a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95ca4c1-8b94-4edf-b20d-6b9f95bba4ce",
        "cursor": {
          "ref": "2169149d-8692-4fde-8db8-f4b6f7d9e897",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bb502d97-6d15-46ea-9a58-5f2b577f8119"
        },
        "item": {
          "id": "f95ca4c1-8b94-4edf-b20d-6b9f95bba4ce",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5304d6e-07cc-4fdc-9edb-4d5555b9659c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9b1c6c-b7cc-4650-a92d-f07a114e142f",
        "cursor": {
          "ref": "392f669e-f4b2-4c5d-92aa-c6e40b6e79ca",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f4d7375f-3439-4bd9-9df7-5cd6623b9f1f"
        },
        "item": {
          "id": "1a9b1c6c-b7cc-4650-a92d-f07a114e142f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9e88a5cf-ec19-421f-8500-75ca8e991f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fdd3e6-f2d0-4695-bfc1-d5423a5995da",
        "cursor": {
          "ref": "8e079f85-beab-4082-90ae-b4e6d0928e48",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "14289a10-7e35-4592-b93e-34e1be83f8ff"
        },
        "item": {
          "id": "59fdd3e6-f2d0-4695-bfc1-d5423a5995da",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a794bcb6-c276-4f58-a5db-f32953624bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac005fb6-ff1e-45a9-9f15-b41c3d7cd33b",
        "cursor": {
          "ref": "1049f124-42b2-4637-b7d5-901371e3a091",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3e15d3e-f995-4498-8de8-bc7fc15716c3"
        },
        "item": {
          "id": "ac005fb6-ff1e-45a9-9f15-b41c3d7cd33b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "54d65b50-5c62-43bb-8f26-51dbed99fd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858edec8-0e22-4bba-925e-edd6f21de0bd",
        "cursor": {
          "ref": "db1a6608-c370-4fd0-880d-ece820293a17",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9620a5f8-cc4a-4152-9242-2a8dc87678d9"
        },
        "item": {
          "id": "858edec8-0e22-4bba-925e-edd6f21de0bd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d9797354-f29d-4e42-a018-a5fc53c9ca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af38eca-f323-4637-a49f-e93af4f7eb41",
        "cursor": {
          "ref": "9537143b-122b-4b12-8d31-5d0be4d233ba",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2c3bda3e-69f3-42db-ba62-06723bf68bb2"
        },
        "item": {
          "id": "1af38eca-f323-4637-a49f-e93af4f7eb41",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cac61334-b5c3-4441-8578-d2b97cbc21fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b90222-5625-45cf-8fd0-b7fbe0123b77",
        "cursor": {
          "ref": "2f3b9866-1092-4e6d-8139-ce1f7663b5a5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1c07bd1a-103b-4761-89b8-c4bc9aa34cd6"
        },
        "item": {
          "id": "36b90222-5625-45cf-8fd0-b7fbe0123b77",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2798861a-5c98-413a-a21f-267c98282414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523c40d7-7450-4b3e-8e5d-f32b32ab9816",
        "cursor": {
          "ref": "41827d7d-0cc1-4d95-b08a-21a20a3ccad1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "93ff340e-71dd-4160-8740-c38a696d6831"
        },
        "item": {
          "id": "523c40d7-7450-4b3e-8e5d-f32b32ab9816",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fda95b3e-cf6a-49ad-8d93-d4d5cb009912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db459178-11df-4866-be54-003fee3e31f0",
        "cursor": {
          "ref": "31314458-9062-4de2-9ffb-a71717b93ec3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5ae5dcca-5f9f-4d95-a032-feadc12f4bf3"
        },
        "item": {
          "id": "db459178-11df-4866-be54-003fee3e31f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca6aab0c-af46-4a9a-9805-5d7d27e60f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b49d6d-6922-4727-ba30-68741f7f4d02",
        "cursor": {
          "ref": "7778cfb5-a30b-4461-8759-c7ca2a0a98a1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ee7602c3-32af-4242-a5ce-92340cfad169"
        },
        "item": {
          "id": "16b49d6d-6922-4727-ba30-68741f7f4d02",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5aeb5bd5-65c6-4c86-b68c-f0c2875164b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad7ebbd-69b9-4483-a48e-81e2c42138ee",
        "cursor": {
          "ref": "40a75b68-d382-4afd-bd1b-056b7d2a4017",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a82e0a96-275e-4045-8665-5c3627afb7c2"
        },
        "item": {
          "id": "4ad7ebbd-69b9-4483-a48e-81e2c42138ee",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f760a2ec-6aa7-4516-b8ff-b8729f77d111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7697050e-eadd-40ae-811d-37d9f66f8c4e",
        "cursor": {
          "ref": "221217e2-afca-4eaf-b232-bb103b006759",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "be1fea5b-c49b-49b1-943c-65b983e9dd49"
        },
        "item": {
          "id": "7697050e-eadd-40ae-811d-37d9f66f8c4e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a223a521-9f47-4afa-949f-a2bd7042c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcc57c5-de84-4818-8c9b-97d5e9c1a0d9",
        "cursor": {
          "ref": "9e0a65ef-66da-4e73-8c73-4f94ae5cedee",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "54cb3f59-22ab-4739-848d-0e1954529d53"
        },
        "item": {
          "id": "dfcc57c5-de84-4818-8c9b-97d5e9c1a0d9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0cef32fd-acc6-490f-91cf-e8e34c93a75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e903a31-1b81-4864-900c-da27fe0de285",
        "cursor": {
          "ref": "492eab95-000a-4d9a-bed6-792ed524cc72",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7ccd64e-732f-45bb-8032-79cabfa46fb0"
        },
        "item": {
          "id": "2e903a31-1b81-4864-900c-da27fe0de285",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ca0ca1ad-8a8c-4452-8aa1-4c214764a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e304a73-1fe3-4a21-89b5-434bef579d73",
        "cursor": {
          "ref": "ef53f702-1e09-4410-82be-3e3b238fbab3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83609ebc-9e9a-4531-9ea8-71d197dfddd5"
        },
        "item": {
          "id": "0e304a73-1fe3-4a21-89b5-434bef579d73",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9f128c35-c759-41b5-b2cb-e5e5311fc34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d93040-9362-4fd4-8cc3-e4f08299c13e",
        "cursor": {
          "ref": "b08d14e9-527b-4f9f-b223-da53e66126ca",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "adae8396-ec9c-4376-bad1-dfbfd170f6a4"
        },
        "item": {
          "id": "11d93040-9362-4fd4-8cc3-e4f08299c13e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2dd0c10e-3e9b-4b8e-9863-67aec2cc3623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3489a1-f38f-4e32-96c9-6e1c5c98730e",
        "cursor": {
          "ref": "0edff16d-920f-4ae3-8fb2-24cb9e619343",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7e9eefc4-8395-4f6a-9109-3b25d1ed2dcc"
        },
        "item": {
          "id": "ac3489a1-f38f-4e32-96c9-6e1c5c98730e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4bbecb4a-5fb7-4add-844a-26a7d8818bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1744d996-7612-4b51-b5eb-351ddd5a059e",
        "cursor": {
          "ref": "b7ec963f-ad21-4824-9bc8-87d89b8a2331",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "01b5df21-0d29-4c31-a0a0-619fd41dcb4b"
        },
        "item": {
          "id": "1744d996-7612-4b51-b5eb-351ddd5a059e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ec9e9e08-e3ab-40c7-9289-2286de8d04ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6ab1dd-2e35-4fdf-8338-8487875cbd64",
        "cursor": {
          "ref": "701f3be1-0b6b-4d73-b268-66d44e7fe5bf",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d040eccf-be8b-4076-827a-02d288fcd321"
        },
        "item": {
          "id": "ba6ab1dd-2e35-4fdf-8338-8487875cbd64",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4ead05af-5a1f-448f-8e36-d8244ea6d417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284a0042-7ef2-4958-84d6-1173e81e3c9a",
        "cursor": {
          "ref": "5a58c275-7e5c-4f6d-b1a2-4689a4af8674",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "26125ad6-4ab4-4c72-aae9-e4a3f281325a"
        },
        "item": {
          "id": "284a0042-7ef2-4958-84d6-1173e81e3c9a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1cc5f638-ce6a-473b-8b74-8d911a85f669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0924bc37-9207-4620-b914-a7916d789b50",
        "cursor": {
          "ref": "b5d77e77-1719-4dbc-90bc-e8f4fc139fff",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6f7fc173-0c99-4d6a-99d0-cb35f6053a38"
        },
        "item": {
          "id": "0924bc37-9207-4620-b914-a7916d789b50",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ca30e7a9-4b87-4692-9de7-b9a5cd131243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1003d65-af2d-4c0e-8ad4-b9a035225da3",
        "cursor": {
          "ref": "48cb7374-c964-4bb2-a170-81abd4d6da35",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fde1d682-77a9-4089-bda7-bffb8db792b9"
        },
        "item": {
          "id": "e1003d65-af2d-4c0e-8ad4-b9a035225da3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1fce4fe4-7b77-4505-a67d-df6535960fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efd8eda-8f80-4f00-9b4a-f763dff58def",
        "cursor": {
          "ref": "31426a93-5dfe-4af0-a140-956d945b1799",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "77bfcdb0-eba5-470b-a887-6f69da721f72"
        },
        "item": {
          "id": "5efd8eda-8f80-4f00-9b4a-f763dff58def",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6448feda-d6b3-41ae-9f09-7416d7f61e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de819b7-43be-47cc-b096-c54fb1f828c8",
        "cursor": {
          "ref": "f49a5e8b-33ff-47de-9820-20dd93f45c70",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a1edae9d-97fb-4e53-a3b8-b68bcd14a246"
        },
        "item": {
          "id": "1de819b7-43be-47cc-b096-c54fb1f828c8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "860ae868-0482-42c7-b821-64a2161adfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803dfda6-a1db-422b-aa73-67c4eec5eb13",
        "cursor": {
          "ref": "eadc46a9-6643-46e8-b3a4-7adbd578ab5b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5863b8b3-7c95-48d8-8ace-0cb20b74410a"
        },
        "item": {
          "id": "803dfda6-a1db-422b-aa73-67c4eec5eb13",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c6ba4390-2106-44c7-9d37-79ee3d75396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c331ccae-bf6c-4347-b8c3-d6ad325348da",
        "cursor": {
          "ref": "500b06bb-e830-4e0c-bc32-9e50182ba06f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1fbefdef-c008-4ca5-bf80-780cbca9de65"
        },
        "item": {
          "id": "c331ccae-bf6c-4347-b8c3-d6ad325348da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d6f020be-ec64-4365-bd3c-ba9ca71740e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd3767a-8134-4348-a03d-38db23f9fc16",
        "cursor": {
          "ref": "ccc2560e-8b78-4442-83c4-86b20ecd5983",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d4fa4ccd-1134-41d9-afd8-b68e232dd649"
        },
        "item": {
          "id": "3cd3767a-8134-4348-a03d-38db23f9fc16",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "888c3c56-2966-4386-b367-57e9a1ea5d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5ad159-6177-4fbe-b82c-524e18bb8b75",
        "cursor": {
          "ref": "e79b3a46-97b8-4a88-b6e8-973d05af7f61",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3afd2924-c94c-4d2d-aca5-18005eaffa27"
        },
        "item": {
          "id": "fe5ad159-6177-4fbe-b82c-524e18bb8b75",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "02062f09-de08-4058-b2d8-8b255d0c0247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8d558a-f131-47e5-9d46-6d06befd8c74",
        "cursor": {
          "ref": "7fb12051-c609-477c-8153-196b1b6087f2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7ba8b710-39e2-42c1-9a27-f9a00c72bcdd"
        },
        "item": {
          "id": "fe8d558a-f131-47e5-9d46-6d06befd8c74",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1a579816-0ce5-40f1-8e0e-04fb4e9ae5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5791c4e8-8f65-4e87-94b1-2b0887d990cf",
        "cursor": {
          "ref": "82ad5716-13dc-48b2-a483-872e1b7e9cca",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "27bce6bb-1fa0-4184-b7b7-cdb68259cbde"
        },
        "item": {
          "id": "5791c4e8-8f65-4e87-94b1-2b0887d990cf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3b0a681e-191d-46c4-b07e-6b9e22cbc056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b54eada-a5df-48e5-b469-2c3c9a25b160",
        "cursor": {
          "ref": "eb31d41f-73d4-4f3f-9e5a-34a3c64e79da",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a744f7b8-5860-4ed9-ad95-65d69d8537e6"
        },
        "item": {
          "id": "9b54eada-a5df-48e5-b469-2c3c9a25b160",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e2e18960-5c1d-4857-8168-4ee2e9de6e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070a3d68-7515-4a4c-bd31-bca8a93ebc9e",
        "cursor": {
          "ref": "f44bc047-c90b-45cc-b9d3-cf0470dcbffc",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "30a3e0eb-c6dd-4f1c-aeb9-cd46589cdf29"
        },
        "item": {
          "id": "070a3d68-7515-4a4c-bd31-bca8a93ebc9e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "78b9abfb-c039-4793-af30-449c113bdde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6b12af-7291-4925-8d4a-f3d11380e9b8",
        "cursor": {
          "ref": "32445a8b-c76f-49e9-9a97-b4a1cf764884",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b014fda7-218d-4723-8e9d-5e23767262ab"
        },
        "item": {
          "id": "ad6b12af-7291-4925-8d4a-f3d11380e9b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e4012c75-1f70-42ca-8f02-84c2dce306f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a390d537-61ce-4fe7-b939-33760be979a0",
        "cursor": {
          "ref": "9b2ee3ad-6ef2-4fdf-8a03-24527a9e85ae",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7813f1bb-7cfb-4a97-b8de-f32b9a94413a"
        },
        "item": {
          "id": "a390d537-61ce-4fe7-b939-33760be979a0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "70515423-a1a0-4728-8846-27d08f8ba560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5ac119-0510-45cc-af5e-0debaf38d758",
        "cursor": {
          "ref": "38a484e6-3ed5-404d-8c47-a05af10723e0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71fc5ca4-b73f-42da-83e7-75bf1bbafc43"
        },
        "item": {
          "id": "dc5ac119-0510-45cc-af5e-0debaf38d758",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e4161e43-675d-4789-b5d9-84e3d4d4b6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e738f2-0755-4d80-9e97-6e26e78c94cf",
        "cursor": {
          "ref": "81704653-ef96-44e9-a8af-abbb9e8280b2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3dc49c1f-cd16-4de9-85cc-bb7f0c93840b"
        },
        "item": {
          "id": "b4e738f2-0755-4d80-9e97-6e26e78c94cf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ec6ddbb8-e617-4e96-99ab-8a01c1da3bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fe0c10-d437-48fa-add0-bb39d037750a",
        "cursor": {
          "ref": "ffa5a4e5-ba5c-42b3-9464-baccb7ea17ba",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2df7dff-10e9-4b6f-a4a2-12f4feeedc84"
        },
        "item": {
          "id": "65fe0c10-d437-48fa-add0-bb39d037750a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d848c232-fb33-47d1-b5a9-729abf2b6400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0d1bdd-fad6-44a2-a37d-a629e5b9d72f",
        "cursor": {
          "ref": "6d9c2da6-dba5-4b08-9b92-fba39ea2e79a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f5abc584-63a2-4871-8f3c-fb9708ecaae8"
        },
        "item": {
          "id": "9e0d1bdd-fad6-44a2-a37d-a629e5b9d72f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3d0fb3ee-6d76-4424-8119-f3fda1895a52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b8577a-a68d-4167-b8da-13c52b32e6a5",
        "cursor": {
          "ref": "1db0588a-6c35-44e4-b606-319bfe52c851",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d3a5dc58-9d49-4fbb-8f94-289f030f6d61"
        },
        "item": {
          "id": "e8b8577a-a68d-4167-b8da-13c52b32e6a5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "efcddb1c-0cd4-44fa-99bc-0db04f50e0b0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 371,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a976440-83ed-44aa-834b-0f4e0661462e",
        "cursor": {
          "ref": "5260f857-c00a-4131-a3ca-b0e7e44d4d5c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "db98e23e-89ac-4e52-be10-2d5592d20325"
        },
        "item": {
          "id": "9a976440-83ed-44aa-834b-0f4e0661462e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bdb7910f-6fee-413e-847f-c1b83baedb6e",
          "status": "OK",
          "code": 200,
          "responseTime": 410,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32c7378-4491-458f-bf22-cb27ece62ad8",
        "cursor": {
          "ref": "c0997247-3118-4369-bd5b-090c65a9877c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "757a60fd-12b8-4151-85e3-fea0d742d174"
        },
        "item": {
          "id": "c32c7378-4491-458f-bf22-cb27ece62ad8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dbb05926-4b2b-42b9-8dc8-27c71e515458",
          "status": "OK",
          "code": 200,
          "responseTime": 2023,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54def354-9577-4252-a033-1bc51e652b08",
        "cursor": {
          "ref": "91ad23a8-3134-4c7a-8f15-9e0c749ce71d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1dbd44a2-50a1-4365-8096-7f054bc7dbb6"
        },
        "item": {
          "id": "54def354-9577-4252-a033-1bc51e652b08",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4d94dd50-b67f-4486-ac55-b1f3e56c436f",
          "status": "OK",
          "code": 200,
          "responseTime": 1975,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
        "cursor": {
          "ref": "ad523d14-ef3f-487d-b462-d1fb424795a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7e5f6014-b739-4425-a3b5-142bd6dd2f3c"
        },
        "item": {
          "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "230ad262-37af-4b44-9458-b685c7b834dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
        "cursor": {
          "ref": "ad523d14-ef3f-487d-b462-d1fb424795a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7e5f6014-b739-4425-a3b5-142bd6dd2f3c"
        },
        "item": {
          "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "230ad262-37af-4b44-9458-b685c7b834dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
        "cursor": {
          "ref": "ad523d14-ef3f-487d-b462-d1fb424795a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7e5f6014-b739-4425-a3b5-142bd6dd2f3c"
        },
        "item": {
          "id": "2cfd69a2-a2e8-4273-8abe-21fcfbd2d988",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "230ad262-37af-4b44-9458-b685c7b834dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb7f6bc-3a48-4ea4-b8ca-9f3728301c6e",
        "cursor": {
          "ref": "4bcfc879-da72-46ee-866b-830cc706776c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f20ea7e2-a4d6-4efe-859f-92393df83e1c"
        },
        "item": {
          "id": "ceb7f6bc-3a48-4ea4-b8ca-9f3728301c6e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3de0ed15-54b5-4acd-9ebd-871cc77479f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 385,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad6c1c-65f0-4df6-a3bb-9a4e8bc4ade9",
        "cursor": {
          "ref": "dc134851-e93a-4dbd-8f79-a0bf68985f4f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7c01eaaf-9fab-4669-9a9a-a03f99a8e66e"
        },
        "item": {
          "id": "4fad6c1c-65f0-4df6-a3bb-9a4e8bc4ade9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efc2df02-f61a-490f-ad82-a5720c2b417a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad6c1c-65f0-4df6-a3bb-9a4e8bc4ade9",
        "cursor": {
          "ref": "dc134851-e93a-4dbd-8f79-a0bf68985f4f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7c01eaaf-9fab-4669-9a9a-a03f99a8e66e"
        },
        "item": {
          "id": "4fad6c1c-65f0-4df6-a3bb-9a4e8bc4ade9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efc2df02-f61a-490f-ad82-a5720c2b417a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537b9979-47fb-4287-bd9d-814057ec06a5",
        "cursor": {
          "ref": "07b966bc-6380-44cf-90d6-b37b733d4bcb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e9d060e2-b55f-4f2c-b881-a592bdd1b2f7"
        },
        "item": {
          "id": "537b9979-47fb-4287-bd9d-814057ec06a5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6544752e-7849-4a51-a4c7-e4f7fde876f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 581,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f77d92-22ca-4a95-a84b-1169d41d89fd",
        "cursor": {
          "ref": "00d4987d-50b5-44c5-b6d5-490485d3326e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d111981-3679-406a-9392-480d485948c1"
        },
        "item": {
          "id": "67f77d92-22ca-4a95-a84b-1169d41d89fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac02eb1c-6969-49c0-870f-4815b733403e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f77d92-22ca-4a95-a84b-1169d41d89fd",
        "cursor": {
          "ref": "00d4987d-50b5-44c5-b6d5-490485d3326e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d111981-3679-406a-9392-480d485948c1"
        },
        "item": {
          "id": "67f77d92-22ca-4a95-a84b-1169d41d89fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac02eb1c-6969-49c0-870f-4815b733403e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f81273-74e8-499a-8ab0-50a8333f875b",
        "cursor": {
          "ref": "cd32bbf8-4ae4-4411-914d-539045bf25a3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6e526714-6487-4c73-a3ae-4cc50f9567ac"
        },
        "item": {
          "id": "a3f81273-74e8-499a-8ab0-50a8333f875b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "eebc8732-8abc-4926-8162-4b585b989906",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}