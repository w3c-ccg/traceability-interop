{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0d627429-4755-479f-92df-ea3265996a7a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "38f73b91-89d0-4250-a0b0-6d1b1cb4b49d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29cf7323-6a09-49a5-a7c9-210e2a38b1b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d413b2f4-7ef4-4c76-bebf-b1bf3cd263de"
                }
              }
            ]
          },
          {
            "id": "817bec67-d01b-4693-ada1-845a34850ee1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d595317-404c-4646-ae33-3681a9393183",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff9a0592-1eae-4605-8e31-14074d62ef1d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5ad2b2d0-8987-470d-862d-cf9911f19d7b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f404b0ce-8180-4c32-b1b2-7a50ae6914e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4daabc1-cd3f-42fc-b3dd-630d726221f1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69d4e877-8ac1-4bf3-9fca-a2da48334474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37c07510-66af-40c0-915f-f9522d614bd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81961b20-d519-461b-8f05-33552118b288",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e71bb4f0-d88c-462b-8db8-c74e621ca8a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fa3a68b-603c-4a66-93f6-c0ba2f2643c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68b9a81d-3c87-4825-810d-a597bd2a1322"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d08be43-2dce-4b17-beaf-b563d313464f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "38636a50-a648-4db5-9c66-05472b68c56c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b1d392f-af95-46b4-8dea-bf8f93acf6c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e8fface-d509-4195-bcfe-32bd1c327c9f"
            }
          }
        ]
      },
      {
        "id": "26df0a0e-4fed-4a22-8b3e-3a279ee014fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a529c85b-9082-421f-a155-e289af5ee001",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aced84bd-e005-4ea7-9b76-895b6e0b1cd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29168288-f5e1-4c62-b2bb-57f50130bd29",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34881921-6195-49fa-819f-f6c46710b964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cbe37f6-39d4-4b42-9b26-938f8dd6be94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bda7510-2bec-4654-817f-cdf0eeb30d93",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5af51ae-421a-4668-b2cd-63c8dacdf32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc5038f1-936f-4ee2-8b54-d9b87b5cdc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feac6298-643e-453f-9859-385d2a3c3e67",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa3d6d-38a5-4ef3-a18f-a294b7a62e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0bc5863-fa74-4032-be59-269087185c03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08a12fa9-8917-423d-a311-7c7f6587ca7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cabb9321-15e6-48c9-8704-e8b0ada63ed5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81d310b-60cf-4775-bfbb-5cc5e798308c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78c5ee8a-3b76-41b3-9a72-f8b954a4de7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61942cdd-5405-4a38-928b-c381b2c63d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a845c15-b63d-4877-9d32-96dd66cf2b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24081343-8077-4628-93ca-100409ef1003",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c8df2e-6feb-4998-8ab3-8cbf26bf8ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e981178-3233-4c94-9299-57874428cef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da588fd-5ea8-4ccd-bf32-ce32912de5ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "05bf554a-b671-4d73-b766-94ea6ffcaa2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98c37710-aac7-4b61-aea0-5b97ac076471",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef002116-ae04-4164-bff0-45c5e02e77f2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb3eaa2-2f3c-4114-b26e-f5763a9a1310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2c719db4-e354-4590-80eb-7953d1233345"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1fd5a0c-5164-4891-91fd-b2a3c2ed61b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "485ada2b-9f18-4fca-8b55-777aecb5a4b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc2e0dc6-7c5f-4b0e-80c1-8cb3b69423fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b793f65-65f4-4780-a3a2-05e7926643e8"
            }
          }
        ]
      },
      {
        "id": "a72ef480-7de8-473d-94c3-ca8f333e2ec0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f02d926e-dc71-4626-bfb2-67669c3bf9cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f44ce9b-bf31-421a-8e7e-9807d49f14f3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "313c1e1e-84b0-480e-b1fb-00dd629918fc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5b452f-a60f-435a-b87b-935c4d5b2b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca98e5c-13be-496c-836f-88b282209652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9224895-2c33-4ae0-86d9-881131c2b65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8f0ad3e-9acc-453a-a176-3cd3f8c6b4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b3f43d-898e-4801-acaf-61d14ae03317",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf09f60a-318e-4808-949e-8677a57f454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01ae7b2-a34b-44f7-bc94-19213a7de814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad49cf88-1f8c-44ab-ba95-59036dcb93df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b428fc2-df7d-4276-bb30-0d3c09ffe373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9bf1d7-d5b3-46a9-a3c1-ff63c8d6cfe1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10227b2d-b48d-414b-8921-7d9c50735a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b280479-b992-4cd3-887f-dd9a81cb0bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb912df-8902-4750-84f8-73e8ecb28eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b908e12b-46b6-46bc-93b8-b5502cadc2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ed22c4-a97c-4432-a263-f5f29f43e746",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52cc957-05ea-4fa7-8929-c9825363b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2cf061-ca64-471a-b207-8c56c09275ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafa6cef-b54d-4648-aa74-307a52052f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b57633b1-75b0-488c-aa4b-ccf955918a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58d5155-1f6e-423b-8d6a-c39525a7ff32",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a9f3d0-ed62-44c5-8691-f0a9eff05b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb337a0-590b-4451-aa2e-7974986c08b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28889ab0-87fa-464a-b1bc-ce6b02e0bc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b11d670a-9882-46a3-b7a2-1e111a3f8631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c6ead5-e598-4b9e-9458-f79c7e6fff85",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a5a79-702f-4094-af54-e033dea58600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1765011d-89be-43bd-9cea-996c53993729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8d8675-7ea4-43da-82e2-6080d1b6f434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36156c42-1dbd-48b1-a5c6-0d54855f0202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ec8c24-608d-4ceb-abaa-29bafb0da1c7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435d1ef7-a133-4ee9-9669-7e2746580825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6585cb-85df-4312-b146-78670d2cc2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0027de4c-e7ec-41d5-a1b3-de0390fe66a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76f6aa85-ae1d-4f78-bbb9-9a5927628ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bacdf9-c406-4f98-98b7-7880a223bd35",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9f4206-8aa0-4ccc-825f-ee14e3fbea86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ca5cec-d1e4-4d0a-b511-3dc53067022f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c2bfb2-8c5d-4cfe-8cf1-a5662a724649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec6668a3-3fc1-43de-aca5-159a6d8254f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c308c3-ed9d-462b-a447-24b9af01d7e6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca228b-18de-4aa8-997d-6adfca51c4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb42a76-6264-480e-9744-cc3359eedf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c3483-690e-4969-ba04-ddbfd9fc4e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8290ba2f-6338-42b4-8e39-7179bbd5fb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad341bbe-2055-4ea1-9915-e09c2583d43d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84272ac7-d31a-4cce-9f76-50cef8335722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b50a727-26ae-4508-a757-64b62454fecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356db34f-63f5-49ec-ac8d-093875fc4a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de3841bf-0d0c-4364-b014-c46b278cb25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51052eb-2e2c-4ea7-b4f7-020b5fc3eb2c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfe3585-7279-4394-a62b-2cab12a31d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e323699-9442-47b3-aa1f-b8064200d910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcb7375-71bf-402a-a9d7-aee0f57651c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbf98573-b513-4068-90fa-1f13780d65c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3802dc-a9e4-4ccf-a145-fb2784806e10",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1061225f-5a5f-487e-8cf7-a13a4383330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c72c5f-8892-4b87-96f0-2e217af7fc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4b94cd-86a7-4462-b6f3-c007a957c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e87364a-08d8-4f4c-b628-1fcdd725a718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4ad366-7196-4a0c-bac8-b8a4c6560b6c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bcb21c-4514-4f9e-9c73-ec87ebdcaac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8a5d14-7b8d-4acc-8485-ad164fa5148d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909bc4b0-a1c4-4c80-ab6b-b9b0b49caf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddb9034b-e771-48b8-8e13-13a0652d4788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0fba99-80ba-4d33-a84f-a9fb53bcf3b9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3735ca30-80be-48ea-ac02-b27d14ec1ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3912b3eb-d833-4061-85e7-93377a43aab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8520bf36-aaff-4ea8-b784-60d8d1599f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b0272a-013e-4878-bc89-23003267dea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb92e108-67c4-472b-89b5-fc5a606a839f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfc5176-12e8-481d-beae-26751bf8dd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2baf65b-234d-478b-8e2c-e30e33c540e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7015304e-b425-4d03-b3bd-42a68f748749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c87767c-96f9-49f0-bb44-01ca615703e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fe48a5-208d-4b4d-8729-3cb8d90baa6a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0694ba0-6285-4a64-9dac-589b6466a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d211d9-053e-4582-9467-5b0856673848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c3be1f-128e-4aa2-8c6f-bec3c0321937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "963c794a-67c7-4253-be31-ddf217209ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2364a500-7be0-4e51-acbc-edaa5bd3ed87",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca475c11-73ba-4700-a4b9-1b7b7ab3cf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0265c42-9af9-4b6f-858a-73de91f058e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e7cc10-2498-4aaf-a2db-d7591cbf5b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c4d756f-a164-40aa-b994-143aad0873dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76902917-1a9e-44c2-8e39-136cf0b94ff7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39e000f-dc3f-4a77-9e29-19257d094cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55afe9d4-dee2-4fc2-a109-8f8fa12f3c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2722a366-c15a-4be4-8426-94c6bc2b063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68585dc-dcfe-4c1a-a47d-f1fced570f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604bebc6-8d42-4b67-906b-eb9351b242df",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99307d5f-7eee-4a91-8158-71ede765c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e431f27b-683f-4470-a08d-ecba4a45e167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92338559-cd90-4ddf-97fe-ec720075b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "760c8477-5c4b-4e15-8753-42f6a238cc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87eed55a-797a-4ce0-a530-7a98c9a3ce5c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85872450-9e4f-412f-8a53-3bbaa97eff6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda01f21-8f58-43da-940d-8d8f89e6a5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4214bce5-5ee3-43ac-9937-8f683fb95e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ce95ff-58b1-4bfc-81d4-4736fd23ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc98f71-83b0-48b4-8663-49b40c330903",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa5f9b3-b06b-4371-94b6-fc15b266aac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f93b41-6f68-4f7a-a5cb-3f5e8760904a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceca00b4-9dd4-44fb-816f-5063df7c60a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b3b8e5-e796-4e34-b467-25a22b15071c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a369fae-cd1a-4058-871f-2e5e5e0a588d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d22123-8856-47be-9a3d-f80c7edf95b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bd0d0a-8275-4222-af01-381e07946326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62278ccd-dfab-4e01-b12a-ce4516f6d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4140c71b-f49b-4f33-b3a6-42da51e3b19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e651061e-f514-441b-bd47-29dd2590586c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3139cc92-cbef-4ad2-8720-5debbf83a8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800b6f40-d8fe-418e-98ff-ff63974f024a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4dd61c-e694-40d2-b709-68ac45ada2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33b229d4-c52a-4c7e-8501-adeba87e958f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d191635a-a50b-42af-b299-2ef2221677da",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba5969-60d3-4a6c-bb9c-96ececd605e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfcb8a7-3dc6-407a-911d-9c643d3bd4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095807d-b100-4957-abee-b95a679ff42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e341dbb3-41b6-4420-9f22-a7464699bdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7aff83-5f73-49f7-b35b-a5b145e3d446",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2746cd-ae0b-4c4c-9f43-6b47f8e077d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefe1e24-c52a-42c3-b2e2-edc2b3306ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4916bd54-78e3-44cd-840f-241a4567f3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d560ad2d-7537-453b-9c2a-435190e8206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aef109b-10d3-4c71-98e9-40e9c073a1ae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d669725-4151-4bb8-bb4e-1109c1ca53e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e21c2-222c-4b4d-a03c-6a5be47fbb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a92ce17-252a-47d0-8687-63543ae62416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ac8b84-7290-4609-bb58-15a2ab4f230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0207b76f-9ae8-46ad-ae13-2fc6752c9058",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043527d0-e634-49bb-891d-6f334ba75ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225ded59-87aa-44d5-8c19-31d2c9c67078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135fb5db-07ea-42ff-83e2-f744ab46108c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0097e75-6ccd-436a-908f-c5b4bdaa3313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2020b7b6-7a1a-4e55-b361-a1bbc877508e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4c80ba-5a73-4117-aa84-ab2c065b40f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caffc013-06e0-4728-b2cc-a9218a7c947f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fde93d9-f7d4-4e1d-bf45-df8d66608105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5102b814-4a21-4e3f-ba05-99d1cfc9bf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0829e9d9-1f82-4fd7-8006-1642d5cfdc9e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c404a-fd99-4e56-a39b-2a8fcd26add5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c902f1f0-98b3-4abf-bebd-f151405df91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8410754b-92cf-4fb7-9c4d-dcc2f31cca7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e3c5b3-0c7b-4a9c-9d1e-e849e0e016f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5558baf8-d799-4d94-8c7f-0187aa3143b1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8772289-5d3d-4344-9f42-96a2de25fc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29554311-51be-44fe-8ca5-d3723b3cd191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ff2bc8-a41d-430c-a482-3b18b5707092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f16d69-5453-49f9-b820-df96daba2230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e4b894-b41c-492e-a445-1768c1016785",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346aa60e-d708-44cf-b19f-62f5eab08a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e40e75b-1b22-42bf-bbb4-9775686de1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddf0da1-5a5d-459c-b4d9-3d993f7b8777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6bb804-3087-4aba-a24c-9505103a45de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8908418-49ef-4fa1-8885-6a2c248d5a84",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a409d7-98ff-4ec9-9014-92c07b131d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aea4842-6e95-4dad-b082-51ecaedc1cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c29eb9-8a42-4aa3-a314-43a6aa04d96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce63455d-a9fd-4e1b-94f4-c33d6e7b0102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734b0200-5bc5-4453-9e29-664cded5a583",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e62fd6-4bd4-4373-b2dd-8e5648916339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9347dd-f6c1-4589-8b29-313d0d487c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff4f0a-2c12-48fe-bd9d-98c5baae6a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "138cb325-0bd5-45ca-9f07-9fee28ea6350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47402e32-e98a-46b8-af8f-59daadb6226a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c1b58-cd8c-40ae-9ce1-e704daaff327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff6c530-eff3-4fca-bdf3-f8fb655180ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03778943-e7f0-4015-9e50-e08757b2199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a79c09e-67e7-4a1b-8a85-2c2ac70e5250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa768afe-dffd-49c7-9864-c0a4cd11bb8f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d4ac07-1ea8-40f2-8a5d-717f2004ff53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64dcf4b-554e-4f3a-984a-9df38e126e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb87faf-1024-4b24-b152-a19bfb837bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd56d01-b160-464d-868b-4230fa355855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1206cdd7-9740-4d8d-b78f-beda2ba21874",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e57fc4-5507-4e49-9b94-12798e4bca9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8de138d0-01f7-491b-a36c-9493ba54327a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b42f898-4436-47dd-ac9f-c6361e251dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3acf41b1-d7a8-424c-bd59-145d34570ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cca740-63a6-4ee5-b313-79721166ce5e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99011d7c-4e18-4319-b29c-92626bff1882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407e5c7c-43e2-481d-9aa2-ca353ebd3eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6ec72c-4e64-4f34-9675-2d179c0b628a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d88db90-329d-4608-a5eb-4c431244d20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0302f07e-0d4f-4368-a512-f55df03c0b89",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48cf384-c1d5-41af-8890-0016635f61ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93ba623-d5af-49c6-b8fb-fa48f450c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7aef5-d122-435a-b76b-24eaa1ed8f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd4e0d0-aeed-49c3-a96b-488671b9653c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0359b7ba-1f91-4842-91f0-54441c418389",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b998436-550e-4490-a4f1-dbcd3d232a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8a2bca-4b25-47b1-87de-50a44e777731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc8a55-b139-43d1-98e8-55892adb99b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6978ac4-bd3d-4da3-aea3-b43a5e600ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dca5cd2-3e8f-4d1f-8792-83cb7b609bee",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ca923-7dd8-4d73-a028-f9048d24be6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5e1d0c-4f92-4892-8a88-1c6f7662f7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312edcbd-0f49-42a2-a4d1-f8837989107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3edbcd98-960f-45ae-9643-8918b2d2d94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae34d041-0086-4adf-87c2-fe2e62ae7f4e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623faa81-48b0-4e78-bf1c-dacaaa557d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7572923f-09af-41e6-a663-3945bb503e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88160096-68a2-4980-a13e-a02474b14704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b7d3db-9c09-49e3-9cd7-6ae885257287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed18e50d-b6ef-4410-854f-f99e2ddc9936",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f497ab-43c5-4a1b-8213-1f890c7dc1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa914a80-d730-4b55-b568-9afce2f74dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b43b5d-bc59-40e1-896a-ae515ffd9dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e99d6b6d-c0c2-4116-9375-39247c39736a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77af233f-bd4d-4ab2-ad71-f21b1b53b294",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3d4f4-e852-4eb7-ad59-ec3b9e6ff2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab85ded-b625-435b-b3a3-ba3c0fdb77c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a17fc9-ac7e-4915-8179-eb5ceb374e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "735c5980-a0b2-48f3-85b2-ed6a985b12e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6576804d-e7ba-4e1f-aa89-5a1a55de098b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cb1d23-b6ee-4723-9ea4-52ed0b5dbe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34108e5e-3428-41ad-aace-f904337ad8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e6a25-0699-4dce-a464-c71ab60bad64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7773e602-a9c2-4b6b-8e77-480278d37662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15174fea-8b07-4015-9afd-4159eb14223d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ce069c-88d4-4567-b32f-8b4b8fc158d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5000108-81be-4193-9d1a-655121c026ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3339011-5850-42a8-9f07-094da509f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca527e87-521f-4d30-ba4b-7a5c4c4e80f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b36a061-d2fd-4438-beef-6ef8055f4824",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a824a4-6a42-4238-be9d-b2bc192cc741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7b5ffb-2282-46b7-930f-ec89916f01ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d5757-4fe2-4559-b757-ab91f94f2e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc34202-e5bc-4628-bfe1-e0b4c15510ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aca9ea-6691-4303-9f0e-8f9dada37ed1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1975a79-d308-4511-aa29-5f650cddf967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e750bf-8834-4167-991b-540e87387a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9611c212-bdce-4737-9421-ebd41530361e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72f62bfe-ef9c-45a6-99d9-6738c833500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35335d2-7b1f-4ba0-bec8-cca8710cf047",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc8990d-4595-4bb6-8432-9d0c2c5ef0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5552b580-6935-4180-ba8b-62475d4272d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352b3357-d615-4e95-b4ca-1c2aa32ce47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f945bc63-b5e5-43ad-8ba7-ba1924cce9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b26dfa-cc93-46de-a96a-0cedefe3cb92",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5392d52-928f-4d48-b7e5-2727f4124ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1725fe86-81f1-4320-a100-036c08d37c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aecc35-7947-4c3b-a07c-79d9cb159f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe3b5ff-2df3-4d1e-b24c-dc837d201be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e9b81f-c0d1-4d3f-9e22-dcb78ae9d24a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d26bbc9-3369-4b0f-8312-f8b44314fac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f99c76-416d-423a-8476-8f253676303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83bc4be-3d1f-4ae4-a2bb-a8ee2dc57b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "316c4413-187b-4a52-9f10-69a3f4eae571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9786f646-8668-4751-93c2-4df91138550a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05376de9-4230-462e-b07a-5e483d1c78e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9f1b55-e4ed-4b5d-8f6e-aba6f1186363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401fe12e-8693-4fe0-8187-b2871f52c920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b815261-777e-4b70-be71-7e882f762c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4145c58e-4705-439f-86af-0eb834d05164",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e79582-1b0f-40eb-a49b-756901e3d773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6c5962-b24b-4308-840d-4e54ff4aec10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d033095a-22b5-4f06-b856-01996f89e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7c2f4d-f8e1-4dbf-b409-ecdc657d5e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d761f936-14fb-49a6-813e-66c438a9db54",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e165ab51-71d0-4a39-9256-3f295b2f2993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d22003e-eb5d-4f46-ad8f-5339ecd03cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5335987d-ff22-4230-8789-7f9331c8bc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4163eb56-75e6-4890-b2db-97f1c2e326a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3230a5d4-3620-45e6-932c-69008831c9aa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a3305d-1ad3-47a5-9af3-0e1b3bb20547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db350c2e-7256-40ae-b449-0d96b0e1c240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087e7024-97dd-496a-b0e0-586e1909d623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96778ba0-299a-4c64-ab29-61e327b102b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04ae116-5849-43de-9a5b-d2643068527e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7141ffc6-f25a-41ab-b3ee-a9ea39808034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bab036-3e08-4ab4-b945-02c7a4199d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ae7068-fb1d-4a87-8dc3-35c2437fcefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec0f0f4-7450-4461-9e3a-6f5e47117004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb763750-acbf-4067-8c2c-7fea7d12c6a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c7267c-d8e2-408d-b893-be9d86cdbb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06e9920-5510-4637-ac4d-5a06e7153ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96f6715-d521-487e-a1c7-f86cf6b89cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0fec298c-580c-4675-83d5-c251319e208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d4ee8f-7da9-41df-b733-d464ef2a73f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d6f832-2d81-46fe-833e-efbd1ff8b66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f9c722-4c27-42a9-bf46-d7d7f8ab19f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd249b66-2ed9-4c8b-a854-e42f956a2bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f67dd4-695c-455e-af03-bf3e410f688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ef925f-5ae8-46f9-9d4f-2d4af5be28d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2295790-058a-412a-a2de-dfe2303e7a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0b9964-14cc-4bbc-8e9d-00258f89513a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6036ad-1614-4240-b922-d9cb3a9763f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "936a3bd1-9b8e-4f74-89e6-4e0a6f9f3c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa3bf4-33e8-4843-803a-3ff14ebb98b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22936017-a48b-4464-a83b-25a0f11bb17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf65f6a-0404-4712-8cbd-bca6f46fbdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704b4a80-76b3-4963-9b80-4b0372abef76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb29235-e5b8-4743-ae24-c4f2a1e74884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbd037d-d501-48c8-88b9-44b455d2bba3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c507d78a-30f0-4dbd-89eb-d336a2e47b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c029ff0c-da44-4dbe-8896-8d6381de0a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef6d240-9121-4f85-88e7-119d7220dc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7178d42d-aa7e-4fe4-ae11-968ef8d96e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61064a-b887-47d9-a956-ab12ef03c215",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d35019-7244-49e9-8c7e-50d2c975b567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a84846d-a72a-4101-984d-d3c21fa0feaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f847b134-118f-4f98-a3e6-9aa5937937b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eceda412-d797-449a-909c-b01e2628da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82251f83-327c-4db8-8c40-ea7be9085146",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb79e8e-d7b0-463c-9c5c-b6165dc4ed92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa88f35-5d0f-4051-9a1a-8cc4ecb6661d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6a1704-76c5-4c5d-825c-a58f2f8d504d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdbccf4-cb84-4dd0-9ebd-f015809838bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf9cc38-6220-4039-8341-211ffc126d64",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69e848a-b89b-4d5c-8c81-1df7b458f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014b4705-0f33-4975-aee3-f05162a33e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4137e362-8d18-4a69-b017-e80423a60e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc44c00c-efef-4882-b850-b02be95523c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6b53ca-09b5-4fca-adb0-25f33fd937c4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e893db1a-3009-42ef-aaf2-6839ee720cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdb31b2-8928-45d8-a245-128a660831db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8177532-d98e-40a2-ba3a-10dfd110dc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c035eb-b929-4bd4-b62d-fcef45113865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030d943f-1548-42e3-a915-e374c3fc582a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d5eca4-4469-4f41-94a7-1258d397d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad57f6f-2e4e-47c2-9eaa-9fadc201d27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01062d31-db64-48f8-a172-e89fda42d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee79e3d-c9a3-431a-b6c9-a3a7fcbc069f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caa34bf-bd37-43ac-a2df-f7ba479160a8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cac2b8-ecff-4558-99fb-897999f25531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3018cb7c-f738-42dd-872d-6104765233a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bee817d-658f-4142-a242-aca7367b830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "387fdbbf-381f-43d8-9eef-bcdd98387bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853f1687-7205-4ecd-99c1-011f240e7c99",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98e06c5-5bff-43aa-9885-346490c7ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05f7c02-f56f-40a6-bd7c-3c709da5a4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08740417-1d96-4312-9452-260803045399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2927b06a-96e2-403b-8299-da0d8c063b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c732823b-80ce-4533-9ae9-583ce8e4095c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4938c2-daa3-41cb-879b-1f474e5f0ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f9d4d0-b8bf-4aae-b091-e09d4f06bec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5cac73-0e4e-446e-b41e-ed1b4a93ada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a03fb29-19a2-45ae-af82-f82961117d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f842009-af32-47f0-a260-3af9f529528c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f404a-715b-4d90-94db-ceeba4ee5e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1726d2-14ec-4327-9e3b-7201367ec8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b4b131-f48f-4389-b03e-a64b679f0243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c1415e-8eeb-4aed-a2cc-2ea3757a6613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a1acec-3866-4eff-b354-631196b1e089",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2c77de-8a93-4d35-860d-c661c2ace706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd03d4a9-3f91-4324-ac1b-2ec0cd7a9925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90822be-6295-4b93-9d2c-3bda13210e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5feb15a7-96a5-4250-84c6-4c822deed1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f661045-45bf-4b39-bdcf-d3fd4ee0daf7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1058253-f7e3-4e77-800b-ac27233b6803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15d7d42-fca6-4042-9d1b-c8cd81630092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb900c2-ea2b-45c0-827c-2fc9efe34e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e0906a-b9aa-4894-8fb5-6ccbf2ed8fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42987f02-94fd-4582-aa7f-d3ec5be74716",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad36b6df-173b-4484-9622-753f5174a94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc041df-2932-4e4d-b137-b95e0c77fdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac13f0a-fd29-46b2-bccf-c36e30f8d683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65922120-d7fc-4537-903a-8a41f8e77c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499f6b9-8d6a-4802-99b4-ac8a8a5d0dfd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e647341-81bc-4c0f-a25c-894f0cb73614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbaac142-c6fb-48da-b77a-e138f9da0378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95994efe-4fdf-4b1c-a871-f67de8d0deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53674c83-b52e-4623-b7c3-a4fed39220e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149a6572-4a92-40ad-9d47-888d34a65a2f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87639982-b018-4b19-8069-aa555f0eaf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f56716-7066-4020-abd3-ebe6c81987fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601f7b97-3573-40ef-9ebd-7fde0ab38388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2d775c-1856-4cfb-94a7-862cd1ffe30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde83b17-9b57-48b2-a614-cee1e0474309",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da261c1a-9493-4235-a210-29a79aa740fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1323a4-2e1f-4403-828b-b52f6f9d100f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80f283d-2ee3-4df2-83cd-3585895b5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54dab127-e125-4a0b-b0d8-d797793f38f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb4f19a-06c5-47fa-bc3b-3a025957bcd4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7026ba22-2c86-49bc-97c9-437e6ea4570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0309ad-3d50-4dbe-ac30-4bc0de27fb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f7f9e8-b164-4c58-88d8-22fe6c7368cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c03bb18-88b1-4f54-ae9b-e0e4fd0c92f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e30c26b-5a13-4f68-bc6d-4cb0c6b0f65c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064c4222-383c-429d-811c-f2c156e302f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a178c6fa-05c6-4c70-960f-49d08f467229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e7ef9b-2b1f-4f2e-9047-3901b890a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b31f19-b2e6-426b-82be-59bf72630ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd24044-7e40-4c01-8d29-d6a47426b8a5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036123e2-44b2-4804-b61a-9019ebee3dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec82ed47-33db-4cc4-a2ab-e34a951a641f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608b2ec6-883c-4697-b4ae-bf8eb211316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14344e6-2860-42b9-b26e-02abadf0a65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd3be2-8e20-4ba4-b9da-4cdf02c8c828",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae2921f-13ec-4e50-857d-9ad7648b8c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cbecdf-c002-4bbb-ae4a-66aa20e7153b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87ef1c5-c734-4098-a674-acd032db48f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7570f086-4b16-4fae-8ae4-cabaa6ffb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cede2b4b-9722-4e9a-815d-1702c966c50e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163e069d-7c63-439a-bcd1-956433a8bff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1e2e72-4f18-40c8-898b-015d38fedb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8754b0e-c49e-48da-8361-475ebacb15c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65f23d96-d018-4091-ba2d-4cf8256909cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9193a181-86ff-4c4c-ad2e-014411c0c314",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1148d410-d8c0-4711-864a-dcf69e478fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1615b9-c0a6-46ad-8678-3969aef976d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006a14f5-5ba6-43f4-9648-bd8259635eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbadaeba-32e4-4826-80a1-280fad2dde5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0b63bf-1a65-4893-ac5e-8c076228d4f3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c42c18-3465-4908-8aad-65e8edea1c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f7c052-00a8-4d8e-9cd9-ba7bb4155131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ffe246-a303-414f-b045-7bb0f6c65fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35012435-5c9b-4d97-8b32-3001ac26223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467fe63a-5638-4d42-8d5c-0cd3d6996295",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566f12ce-9af4-4800-b516-7dcd31dc4609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583f7ccf-5813-4d27-9dbb-d667235f96b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a663c1b6-dee5-4ace-98cd-62ad28921e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b445ba19-6bc5-4dd9-8d08-07462771943e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d071cf72-c512-42e3-ad60-95bddb4f5fcc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454d89a-d8c9-4ddc-8586-a3a6de1d0849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad61a374-aa8e-4a53-ba81-2c2def43615e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4da947-dd4b-42a1-9748-88b0307b6782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c568d0-f68a-4109-affd-4c12b9094ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573e4fce-5f25-49c7-926f-67016a0903d0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b4c82e-b4d2-4316-ac82-2c83e44688c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbfa177-a32a-4569-836c-4631d21f9402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df49db6-2047-4a69-8080-2aded1e58e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f19cb87d-1c1b-48b0-adc5-0c24a7015a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a7538a-69d9-4fc8-86b4-a2fba9517cc4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929220bf-5f37-416d-9e22-9d920e83bc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96621a7d-c8ad-43eb-8cd8-2019a9930cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5dc3e8-e71c-4ebe-bb9e-7920d9f920db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d814fd8-e6e0-4aa6-b0cc-b984f4af75e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4f7518-ea77-42c7-b732-c20c7d81610c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b52e48d-d447-41a6-8078-b89cad1a3215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3efd45-22f9-45d1-9cfb-bd88b2e3519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a618b25b-1a4e-4058-b5ff-0dcafdf9d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca2b8a3-a77c-44c8-a07f-50af8e4d0574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792ee6cd-c961-4801-9f3c-6e533f5ba5ad",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff72683-71b7-4743-a586-058f7a97471f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2138d704-a404-4abe-9941-e340c1010c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e208d49-a0eb-4e99-ae94-73e96b3f7d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47f275ba-237f-405f-b04d-f6f6efdc3a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c750aa-0ee7-4d9d-a4e5-d6dedcc1da1b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf1e3be-7d93-44ce-b99e-57784665757c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6091ca-7de0-4133-bdf4-02f5583b1987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80644482-0ead-4a3d-9574-a2ccc8ecb563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2947eb-95cc-4631-9214-6e4c87a6b947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561fc1a7-c934-401d-b35b-ea7927a0763b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1d7a25-71cb-4528-a390-565f2393aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e81365b-5558-4d2a-bcbf-4cbfa0953d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b95e7e4-3c2b-43c7-9eec-aeece2bcf119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e618f21-219e-423d-8102-b41d6d6a2730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbaf427-596c-498d-b431-e419a750216a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fbc2ae-9ad4-457f-b615-34488ecc975f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97abfb49-35ac-498f-b2ea-99818794469d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edb9c71-29bf-489d-91d4-463f17b04e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ab6ffe-987a-4156-8291-2008dfaf8787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ab8ca8-7917-4cf2-9368-706dc4e72f3b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99741704-51d3-44cc-9907-48d44aad6eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f722e342-a7b1-4ac2-9569-55c40d72f142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375af061-6378-4847-b0f2-b03009f4298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c68bd00-fa4c-4c63-88f8-55ca107b3be0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c44a5cf5-2ea5-40df-a132-a9159a743204",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3780185e-cc6c-4499-a6cb-2df95148591c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece484ea-804f-4c74-a923-df5ca1956da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55d21b46-e259-48fe-99c0-4d4fb689e77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeb164a-bb16-434b-835d-1cdbbb0f7e44",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad47e951-444a-43cd-964b-5518260e6a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edd0436-d2b1-4d10-a73a-42f85a1587f4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af76da38-af8e-4cfb-8195-04b5e017f5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d443655-173d-49f4-b53b-337f61da1698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f093974e-e54c-46d9-b3eb-8b7a9cbd4767",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcf4fdaf-9a38-4903-80ef-4f6c531b482a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d0595d-cb46-40c5-a8cb-869955c8e8eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebf0ee48-2714-4a9d-af92-ce74385598dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22659922-bb8f-4e5b-a255-76dade0ee6ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "446d3f78-4a5a-4af5-8d89-be8ab0b775df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b53b486-d928-472b-9aab-6269ebd119b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6479fcb9-097d-4600-9b5e-bd3f3e3405ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9d7e7ea-26cf-42ec-8248-864274b91d20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06a62a6e-1069-47f5-a2e1-43d3956e5b98"
                }
              }
            ]
          },
          {
            "id": "c6db7571-fc38-4081-87e3-88e965f1c1d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f25e6e4a-cd9a-4a48-9b1f-e575f15315fb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd6791c8-9826-4537-a2a3-32b508d05f08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "116ee476-4660-4bed-8951-7d3989186699"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f0f2a6-4238-460c-b0c3-cccb2baede4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da32e4e5-dda6-41ae-bc8a-d70d803b7365"
                    }
                  }
                ]
              },
              {
                "id": "1e26a4f1-401a-4c35-bcca-cb132d6fadce",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c3adfa-c943-44be-8bfe-914183f6651f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "378bc3be-d0b4-4289-9e6f-f2f46a14c74c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c3b82a3-6f3d-404a-bca1-1b6b0af5cc37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71f5d89e-27b8-4e48-81f5-c81455986976"
                    }
                  }
                ]
              },
              {
                "id": "fcbae16a-7c3f-4843-9b7b-7e573b14c086",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6df5a6-2f7b-430b-970b-67cd153da838",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e3d3033-08c3-465a-b80f-768482914db5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f296f50-5c47-4303-aeaf-1e972381c6f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4e9975d1-1f7d-4fc9-9583-4206132ae2cc"
                    }
                  }
                ]
              },
              {
                "id": "5e4aa578-e150-48c9-b609-0e65b9a5334f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f58e98cf-00f3-4a70-b63d-23921c4b4fa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49fc08cf-2abb-463e-b0af-447c8c3c37f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7ca7cef-5ddf-427b-88f1-0631b3fd300a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f11bbb0e-abd2-4b89-b23d-d55a86d51772"
                    }
                  }
                ]
              },
              {
                "id": "7e743769-743d-4e48-8a77-0c74873be2b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08dde3ff-a465-4704-9fad-4f981c299b0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db4eaef7-5ca8-45a0-9a30-2b5938760dfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26255f66-adc6-46f9-8364-32c06cdc006b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86250839-ba6a-42fb-a4a5-9e1e276db535"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37da45ed-c047-4590-ab12-ec1a84d5b54f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2057a2a-857f-4254-be4f-eab1358247c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "646d927e-7619-48ab-b435-26a1d945c454",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11cbb8c1-5520-400f-ac1c-debdb69436e8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd900dfb-b2e1-4524-b5d7-7cb933196245",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fa48acc8-29c9-4b9f-840e-a0ce86509403"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ec61245-ebb5-4ab6-aea5-695c23239a40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "255dcdfa-1ccc-4f22-8910-eaba916a6d42"
            }
          }
        ]
      },
      {
        "id": "d91deabb-f393-40ac-a31f-0cbca0627491",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5ee6b33a-7674-4203-a8bf-37b1897764e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36fdd7ca-1516-46dc-9ca2-6815dd6c0a13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a79ca79-1f0b-40b6-9c29-5c0f063d9e47",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442fe2d3-a225-42d9-9782-7f81f87911ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a7ca35-edb7-436e-9198-95165fbc7563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fbf363-f71e-46f0-a899-daea309f0200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcbb1ae-0f26-496f-9ffc-65ea4ea2bfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa3b0fb-9b74-4366-9403-d0cda13244d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98100014-f60f-43ea-b598-bc08542316f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a82eacd-5c48-4eb3-8f47-3998c9aa57f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb307a-87ba-4568-9dbd-cf2b2349edca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adcfd0bf-e2db-4a27-8cbd-bcb6c5ace5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a428e-fbde-42dc-a9b4-114a6e9907b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c406ed18-e204-4f1d-808b-1e99e634fda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0866dc59-8613-49d2-b0c6-0cbb90440211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f403d16e-5ce0-4c0e-bf7f-24c8d95c4776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a070762-2e9f-4b0e-a47d-dbee8fc286f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5ab7a9-279b-4f98-a225-49003db9827f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10f0d89-4402-4524-877e-3aadd9392825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b75859f-f86b-43fd-a395-aeacd4fe9b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70afb8f3-bcd9-40ba-b65e-4567add5a159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2a76b4-aacb-4534-9325-f8a5dcd17367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bb4974-1388-4f63-90eb-4eda2476842c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29558ba4-3160-472b-9bca-e24d329c2077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673e63ab-43e2-4b02-a9fb-030382570930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453adab2-f634-4e6a-8642-4fe0cbc293b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44cebfbf-4a08-4726-976e-41f279ecb25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b05e49-54bc-46e5-9092-d19af65b7423",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e455c6e7-956c-4494-9210-c6b8de99ddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad3d771-a961-40ea-902f-03e5480c413b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed38ca2a-98b2-4620-9738-1e2ba89b26e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "074c841b-ac06-4695-a69e-f104e733ae57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de40643-87b6-47f9-996b-19ec4f5e016c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6875c603-50d9-4e0f-a398-d062cc2c3847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476a615e-4e89-4fac-a71b-376224cc22c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3c2374-fddd-4a19-aa32-f90ac17cc390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7b8d43-8acf-43b2-980b-1a56e1d07af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a64a34-5e4d-4386-a8f8-fa94db2b79b5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242634df-b578-4f24-9336-9fb91b7270fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3799e4b9-966e-4966-93c0-dcc8be355232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b81a9a-f72a-40a0-8d7a-1dc668c48eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a9e58c-628e-4d91-a8c3-7f6bcb5d0fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4db251-870f-4564-a024-e5e260241880",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7df6fcf-2e3a-4767-90f6-0a9382d9c0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dc95e6-693a-4573-afcc-a1493f1e0fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e51999-1838-4e79-b6d7-b13da39467de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33f9dca-6bb0-449d-a14a-02a924e46eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e516d19e-f2d7-4cca-9fb6-bcb18fb5f18f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffee036d-511d-4fe7-9b31-9476b853f7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cf835d-7075-487a-9550-2a61367c3ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56912f9-e4d5-46ef-8ebd-1baae50e00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c59b743-9ef3-49e6-a9e3-32b15c4c8aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85fa04c-194b-4101-a4c5-23a5c27ef638",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07a9087-7ff0-4cb5-bd3e-da08c8dfae0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36705a43-a8ca-4c1c-9730-3e8cb730a4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9396c0-fe3d-40a5-b765-219f9e6a0225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "120d50e8-f3e4-455f-89b2-22f9401935ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba87b95-edc6-40e6-b47a-9458832b4ddd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769f62bb-33f3-48ca-bd4d-5cffbc566652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96979451-9988-40f1-b8c2-89fbae1d7bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cf414c-3b08-4a63-b665-774e6e96b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eaa641-5dd8-4fcd-9055-f8f35592366c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120aaac7-b954-4f1e-9078-57a4ee560c15",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7615a8-8275-4c83-a8e2-b3a28485a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b54489-b5da-47af-8b80-446574df4c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f5f713-1c68-4c69-b862-8bd27ced1328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aee0d54-34ec-4fe8-a1bc-b777740e38a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae69abc-dfe7-4b14-860d-04e9a4e8f0a9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c579b1d-585b-4ad3-82cb-cdf6dc73947d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dc1432-d8ad-434b-a507-20e6a7467ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1048ca7-1edc-4221-be0c-aa8ef8ff8fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9720007-356f-47dd-b523-c86ad8259e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce5cc4d-24bd-4327-a1e2-c95df4875e86",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca5ed6a-495e-48a4-bf38-48870d2eae18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b218f53-d30a-4d36-912b-eda9a6d819b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e85913-c2a0-4067-8a40-81aec43b3e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d27f0e-85f3-4a1f-a928-7625178e02c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e94bac-b8b6-447c-8ac3-54127ca6b1fa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745b1263-fff4-421f-959f-d61ad4a76de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d10a4b9-eb3a-4077-931c-3ac175bb70f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a8002d-6049-488d-8257-52ecb80ea87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec133042-43f7-4246-80dd-3060fa0e9a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4c19cd-46d3-4659-a3e5-9b6df96bfc99",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3c438a-ac97-4014-ae6b-e9c8c7e02097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e720e441-1bd2-407c-ace6-8b11e71be028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5273417-ef8d-4c38-93eb-8fa3e72b0746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8198024c-ff7a-454f-8449-98dbf1a5fb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2bd67d-0413-4151-a8e9-1387ac7feffd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5487b9b4-00ad-46da-ad02-4c0534efcffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cdde73-18bc-4c7e-b61b-ba08ae743b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e570a631-3fc5-4950-a9e0-6a1cfd52d3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88155a99-a434-405e-8748-a2b8ddcea6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1d86bd-f3c9-4c87-b8be-559190557747",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99987b5f-496c-4e53-906e-5e77e2e358bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012161c3-0cfe-4889-af18-4bbd30a7f63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6f19b5-d354-4c52-bd9d-f3313eaef7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2a5d0d-82f3-4822-9ae4-cb639623bdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdb55e5-aa62-49ef-a5e1-fa46f1593f40",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff9aa7b-7df7-4c34-829b-b59b3f4a5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4609ba37-1ff0-418a-82aa-42459b1dc540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75a98e5-ad28-4793-a6ec-d266f8c95d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a77fe4c-3ae5-4902-8cac-67a8d7d52547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2748ea91-ee4d-43c4-9350-297b52300856",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6c427a-9b03-41d7-b687-3e4fae127781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60a0d94-0666-48a9-b6d1-fce7f7e8519f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbed428-5487-4f44-b12e-ca8f5910714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ce4676-56df-4982-9722-c212da77ceb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53510917-858f-40c4-af35-3676c600ec8e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568e14d0-9b12-4149-80cd-1a3c9aec7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09a95f1-5249-4b7c-80b8-96e0fb5c7824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b8f6d-e210-415c-a853-f9620f842896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0004e7-e960-4f75-aa33-60055d3afa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973cdd97-ac31-4a77-bd45-4656db09079d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77eda97d-c24f-468e-b913-526c0b278c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144b2cdb-260c-47f1-a7aa-1e958073e14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f049a1-eae5-402e-81fb-316cc9c7a7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79a3f1c-fada-46bb-813d-37922590d0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ad9d4-f84a-4e96-b88e-9c8fba95b1cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c82bde-79ee-4096-9971-4baaa717bf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5697827-c0fb-49e3-95cc-e882dae16604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f30221-e87f-4d37-81d4-f015577e1265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c30a75-b7de-4ed7-a78f-cbf03c61d2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d18e69f-1e3d-40ab-be7d-84ab37935bde",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eeb4ed-e40c-4a40-b5e2-249d62370009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49b124d-373e-4205-af0b-37b870a69f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09e6bf-2483-46c3-9349-d05c3e6a3dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a378ca33-2147-439e-bf5c-5770a09984fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5436cd-4fdb-45c6-a0f8-e56661591afd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0982e4-6a13-4706-9bff-306de6e0e266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af65c02-8c02-4c1d-9b64-c63eaebdf91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4314df5c-2c8b-43e7-a068-d74a8700b8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f784f120-6e7e-4ab7-bea8-ef9933c1dcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f27175-1290-49c6-bdcb-44442cb64be5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f09646e-8825-4fa3-b744-1d61c72c5754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46651814-a871-47d2-8684-2d72c98f7aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4cd2bc-f668-4803-8434-81b30b3b212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75fa4ba4-2ba0-4364-b541-2a971a8747d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31992e2-9acd-4b63-b458-6c7b61bc4b4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2889749-52c6-4236-a14c-6ed819675fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c3f11b-6a0e-4889-bc6e-e3963db191c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ba355-259c-480f-a7b2-65d0098a8301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61fa666e-ecd4-4668-afb9-0489155dca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324ab133-11b7-4489-8cc6-6ebbbed5b8a4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a23fd18-0db5-497b-ac2a-9ab97bcb2934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0effcf5-35a1-413a-b600-1818b5dac18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762fffb1-0f75-4fbd-8b91-1743a2a7706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02f03ec-98e5-4715-8a13-227eeecde838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed83fa7-28b3-436e-9bf2-5961074fedba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157f4f7e-ab4d-47b4-8e3a-626f194ab275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76d8587-eacc-4f6f-a1e9-cb1cdc0eed2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cdefdb-56d7-40c5-8603-2a6855f39b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fced376-afb7-4552-b17d-f1875f076ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd98bf1b-7c50-46d4-9fe6-e4861cd114a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5963fa1-1a96-472d-946f-a40ff2de44b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c44b7ff-cd08-4e0d-af79-f200a8954929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cea432-9aaa-46ca-9e0b-0757fce629fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d59c08-3ebd-4903-86be-316a1ab632f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4bebcf-208a-4daa-a074-095dc0f0d043",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798e79b8-c1d7-40ab-a341-b30fdc224399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0b0fa7-6d69-4fc8-bf79-c9fe1c62c0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fb7ed0-7afb-4486-baf7-b8b8c557bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab66e84-f03c-46c2-a308-232f9c6862ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e854f71-b0ff-444f-ab09-25ee184fbb7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfd1e071-f117-48ee-baf0-b4ffc4d8c059",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770c5eb5-fae2-4a95-808a-0351d818e853",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "077a6543-b803-4552-93b0-a412d18404e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596db193-f791-4f78-87a5-ba81d19dd73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3caff0f-f93c-4989-931b-057e3f9f0f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc928aeb-713c-420f-a661-1e1c0982e9b0",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf96b08-0b6c-49db-a1c1-cf0b7486959e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "854a2eb2-a106-460c-a91c-19ce1a5c14d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4851db9-dff3-431e-b837-411cd7478380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f7bb0ca-c230-4165-8c6b-9fc483778fc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15d97f4a-3c15-415b-8a07-8058a44dcec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6187e501-04b2-4bfd-882d-01cf32b9703d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e430e18-5f98-496e-aa82-3f0a57ef0637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68c7fcc-e2e2-44c7-ad74-ad1871e2b1a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d5c6d28-fea8-4b4b-acfd-cd1dfc65157c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2eb6d7b-fea6-49d2-b78a-8e3943115a7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ddd76c4-0696-43e5-aec0-74f6ceea3945",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa79ff47-947e-44aa-afb1-ff668b14522f"
            }
          }
        ]
      },
      {
        "id": "5f48e210-e523-48dc-ae4e-92cab38e8f43",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "300d4a21-0921-4b4a-88d6-2159177bbbbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6512835e-67b7-4dba-9dc2-ed627d913b8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1a661ad-911e-460b-b240-8bc9052d3f17",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5714c2b7-9842-42ed-87ff-43b78260ba2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0577d90-278d-4867-af08-f10f37ca6a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b708248-11c7-4f4f-bee1-a92937eab9ab",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b55bd-986c-4ec9-823b-ee1a254e6fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac4e8d5-d016-4cc1-bbd5-52a62bf9863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c3b88c-35aa-42c7-a281-0bc06a2360ff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632a4ee5-2f02-4e89-9ecf-dab53fac92eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9367ee0f-a140-4290-bba5-30e119519c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac19a685-ba9b-4ab1-845e-1b2d4a127312",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb26da5-c240-4f0a-809c-499c0eae4eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fcfa51-b790-4be8-83e4-98d415bbb1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a076363-af7b-40f8-b9af-c35606a75163",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad54b713-b0ea-49fe-baa0-d4963d092786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c1fdcb-2080-47fd-a169-ad5da081a3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed5fdde-4640-4dbc-821a-dee216b2f248",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71e56d6-90e4-429f-b40d-83f6c5a0bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a872fa-79da-4f78-9792-2e116f289a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b675c-c802-4497-8268-b25f3ce09448",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dd080b-46fb-4282-8178-b64e3a220df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b050a1e-213d-4443-9166-d725a38a387d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1b51f5-3e45-4905-ae5a-30d24d2da9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3421f8b9-fae2-4c70-94ae-cf9b76f83fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa56e3-9f6d-4a7d-8259-f9fc3de45e4b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea7e480-a2bd-46a1-9c48-29bc667d4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe99d4c6-962c-4583-97f1-547d7b96945f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6b57b3-1709-46a9-8ea2-bfbbfd4a96c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292c0c04-fd5c-4a21-a91a-7fa6984d900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b24298-2a75-46a2-ac70-6ae1e380f12e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1c1da4-526b-45da-a7fd-414d005a86cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d89a23-d750-4e21-80f7-b873553401c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a2d708-bdd2-4335-9b93-6a8f3dec7320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aae8ccb-81fe-48c7-85e7-fb2a6f361dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fffa147-7a89-4ec6-8628-10657c567f4f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5631a1e9-0db0-4904-b3fe-d4d3bc0913fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27902f92-1095-490c-92f8-c9a5ec67db18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326c42b4-51df-4cf5-b610-36404f11297a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9465dec6-40ed-4a75-99ae-436952d266dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b774d-aa11-4da7-a19e-22ce7fbb3019",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61c5f67-ccb4-4c5a-ac66-9171db578fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a851fc76-25b0-4bfa-9bf2-e4b0c46b2402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46753bbb-07ce-4b6b-8e7f-997b78bd9205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb54cdce-812d-4d39-a11f-2b7865fd2f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3da0123-cabf-46f6-a198-ebc0fe3b4607",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7506d1ac-a0b4-49a1-9c37-8bc0cd143d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7b7256-7f27-4361-a860-7797aabfe83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a6d696-255c-491a-b124-9da990f4c959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3521d522-42e9-43da-a307-0986ff662818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a1622-6c3f-47df-80c5-77453c85115e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fdc933-6cf3-4d12-838f-eeabe9ac96ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674a18e9-53ed-4506-876f-bbe6d021b603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e599c372-ee81-4c10-84fe-2284a13663d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d1300c-3225-4602-9cad-6a4751f25e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfc727f-faf3-4978-aa76-9b2701ae8d98",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883973f6-3875-4b13-ba17-9dd0a91a10c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be38732-bda8-4a0a-bacd-d06cce935178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21baac8-5a7f-4aca-80a4-1a54f416621c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b916c19f-acc9-4ec4-a262-76143eaebd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cdbf3b-d637-4385-bd81-c3817123732b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645de9da-ac99-4775-958b-c410e35cea7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4815c4a8-2d6e-44a1-9d6d-6ce6ac773bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d363c9-88c5-4bcd-8430-b4f045d98fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc3cb95-e39f-4bc0-b82c-f1c0d7de5b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610d4029-7ccb-4c88-b3f9-fc7e50c3c479",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d924e6-464f-4291-afd2-70c70001a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1a494e-d48f-445d-a2f3-a43375d5b5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce245e2-8ac4-40f4-953b-727954ee7a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951ff061-b707-4a75-92de-f8b411eca540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dbb04f-c9c1-48be-a3c1-866557014167",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b55aa6-bb60-48ad-8e17-2cc248e9cfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0173c55-0a31-4fd0-8579-66bf76d1cfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c08ffcc-1d5a-4be7-81a0-412dc0cdd420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cf7c84-51ae-4f8d-a1ca-1bab6109e5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f177dde-db62-4c07-b00d-574625c71c65",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fcffb5-b552-486b-9aa0-e04b9e068b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25fca79-0129-4db0-8741-8debb550945e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7926fb3-ad40-4168-9265-cfb4018f18b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996fc216-b17d-4874-bac3-ef2d5860002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea101c7-135c-4fef-b2a0-da8bfbe06493",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b643f426-ca4c-4aee-abae-2a83885745b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8be7c4c-b6c3-43de-a376-cb00590ff2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6267bc-07d6-4b2e-94d1-3da1e29eaa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21784e63-41ff-4520-9466-ee946fa485ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cbdc1b-5804-4b9f-b951-2d1b257d9080",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e3ea34-2be9-4124-9c07-2cb21ecb0670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcddb0d-d34c-47c9-b9b9-6d893298b1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95254cb-d840-46ef-a616-f7b000b549d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc71289-58f2-41a2-8ce1-a22ece67d9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffcd330-a6c5-45eb-b55b-7c158e394e06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9425869-7f8d-4357-8e8e-cf270082bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95225789-d1c3-47e9-a5de-dbf586fb3221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733103ff-d511-4bfd-ac21-138b65e3ea67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784a730b-07e7-4cf0-91c6-6515583c793c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f9161a-ad98-4033-87fa-cee050f2c975",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2299af16-ea81-4307-9781-4e59894e87f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686646b3-15a6-48ae-929f-4659d845990c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711cc735-ce44-4e4f-aee2-46073b8867b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf19df8-e90a-4478-845f-91b022183835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e600a410-ee10-4621-828c-a6b49940527b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ca2c3c-a13a-4427-bcbb-1d5bc5d81be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97765509-2b03-419b-b392-a4b1dc970526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a671f9d1-0082-4f40-8d2a-5e718d47cc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c2bfe5-6b81-4863-ac09-34cf8172af7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357d18e7-29f1-45c8-a11b-20f93faaac30",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00079f04-a3e3-4a53-a712-759f2f8e1b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bbd888-ebba-453d-a132-beea377e279a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92d4619-5ad8-4017-a985-5895af716a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a1e37f-04d5-4214-80fc-0e4b864b119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ee60eb-c5b6-4bc7-bf81-cbf869a448f9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b31e684-38ea-488e-ae95-b99b11620044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664448a6-1e0d-43b9-b238-f0f4eca16280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778870d5-618f-412b-b00e-d38d1a098e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862ad0ad-9ff0-47b2-bf59-578ed7703ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9648c69b-c2a6-4fa7-a657-3876f78efa32",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221d379b-d288-4429-936d-4620a5f20d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf37ff4-1db5-415f-8756-605fa6c9d458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24484e36-53a1-4ebe-9adb-322916a80df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d751b620-9ea6-4201-8c88-98e07e9cda00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc1a8e-cc9e-4b8f-a014-37542b6d7fd3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7744bab1-98e5-43ec-a927-0e8feb998266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137568b4-3fe7-40a6-90d5-c9134c6eea20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f7fd2b-6ff1-41af-9776-c7509580076f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b4c0ea-75bf-48d8-9b68-77ddd619e7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d97cc01-c448-4259-ac60-095e66e519d7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072dd840-05cf-4022-bf4f-f4c3a318f764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51de8909-f70d-409e-9d89-16f6d4cc0622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81a9bb-44f3-48da-8b64-0115d0892b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1e2c9e-d161-44b0-8e53-3d47e9e37f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e7b5ca-48ad-4879-b99d-c9ced897d00c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c49f4e8-9a0f-4a5c-840b-1bde00692b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3774bc7b-990a-4ca6-9370-e55352bab14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109abb91-d3ec-4793-8852-a37203ca8510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cda836b-7174-4810-a65a-11a2bc213fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500678a-d55c-4b07-a8d5-1ca583467b76",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb50212-c883-49ef-b691-3a1538c2fb24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848022c6-9a7f-440e-b754-10a5a3df5ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbbc537-cdec-4876-b174-2757093fedaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8407eb-c744-4704-b434-f877d0fa0853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1d865c-2218-4476-a0b6-cdcc3a04c1cc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d26852d-9a15-4cb4-8410-233287993676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c91f028-f5fe-4ecc-9997-62555e692845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f63fc74-9925-4cb6-84cc-183cdacbbbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76244de1-ac48-45ee-9988-8431863f6213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02164088-de87-4bf5-ab36-6a9954f7bc40",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56461c3-caa2-410e-867f-dcb1583e7dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03538b8a-100f-44b6-8afa-084aa3e63d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b5aab7-4cbf-4fa9-adcf-8edb578979ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488914fb-b130-40ce-a62b-b9f8b7caaea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a4cdbc-617c-442f-8010-b9846d88c8b9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33039225-65d4-4a74-a3dc-c417e22caeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ff8e1b-8a2e-4748-b0c3-0247260eb2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e293166f-632c-492d-9da3-18417a283569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5897a86-6882-4270-9ec1-f9108958890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02e4a99-547f-419d-8b70-92e7db9347ce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07f5a50-669c-4040-a56d-6bdda429ec1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4d2075-8d09-43b3-8cd0-40a2eeca679f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cb2cdf-6b25-45e8-a6f1-12f947271557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2db9396-a94f-4d3c-99ec-d81062aff856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf333b51-4238-44f2-b979-a85798ddb7a3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccb90bf-9c54-432d-bdae-cad806cc95e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d7a496-43ed-4a8e-aad7-60d2c736ee1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c876072e-25ec-403b-bdec-4d2a6f829c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b4a41a-9835-4125-b764-9163363870e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db559e6d-0248-43f3-b6bb-afcb7a9ce317",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a845994d-e28c-4cf6-9622-a6d6a6d28612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23d08ea-0d63-432a-9bbe-3e118be61831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724e7045-96ac-4ef6-8577-803c434e9936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a084b03d-5af8-45e2-abfc-1caaf3e67a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fcf320-da51-4a2d-90e0-fa851c2da8be",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596feb9f-91f0-4cc1-84f1-4edc6318d16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6b80e3-8348-4ada-b73d-ec62acdccebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec9cc1c-bacf-4aa6-b307-4e5f92587213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01241c8c-bc6c-4edb-afef-09abcbe0bd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49c8a72-9d54-4dab-a5ec-3d9aa141e6cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f515dca9-5502-472a-b63d-88a6d6d2efc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295afc1e-f51b-4286-9f25-3c5ce4c6941a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109c3471-5a57-4674-a990-a156f2d37797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7acd515-f13d-4b65-9eca-a94056b13013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3840742b-2dac-4970-a0e8-dc122d0d4f8a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebea36a-e7c2-4b4b-8004-25b51c617004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c067e0a-99dc-48e2-8114-c7431fdb9201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6168a192-2c75-490f-ae1f-8b723caf3e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18072746-6812-4844-827f-67e7b83db362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4b3f1a-efa9-45b4-a661-d7cf6dc02417",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7988ecd8-ffb1-40fa-82ea-592d9e697594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002089c5-994b-4951-aae4-08b2d22b2568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03624104-53b9-4f0c-9958-d96a487f3336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597fb8f5-d509-4da8-ac8c-33e8cd5c0ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6f770e-08e7-40af-b8cf-d5ef2c3b4842",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6704deae-fa67-4a6e-9327-9e1bf11bda2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2339b37a-a728-4390-9296-5f2e0820c71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c33aa-9e78-4336-bc9a-8ad73d38fad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41e10d0-5764-4277-8093-d95657c3c87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21378283-e6cd-4b2b-bd63-259aefa61c34",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a625655e-f732-446e-a457-e779418f800f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbeeaa4-fb30-43ae-bcbc-7d1cfdc7d18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3b1a55-f13a-443c-a647-5ffe3c2eb9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a53fe1-d593-4823-a833-1b68fe04c6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be37a926-e79b-419a-9965-bb5f96bcc269",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5793211f-cac6-4da7-91ce-3cacc77cacba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76ce18a-4088-4963-9b4e-a03cf84ee642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68da327a-c965-43c3-bb64-42f7b4c892b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c815552-91fa-4cb0-a6f6-02c1cf60139f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f0bd2c-495f-4646-a1e7-7e5535a1b21d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8edc82a-8204-4bb8-abbe-69b388ff876e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93471f41-45a3-444f-b290-9f388b12f3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204000e-ff61-46ca-9439-7d85871eb51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064e892e-bddb-4f0f-8781-02f137b174d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a9d748-d11e-466a-8d40-d30bdff4b3e1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c8deb5-3911-4cf4-95bc-10126576c857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7497134-1969-4aaa-baed-d0b840a98e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a61d9d-e82d-48ed-a0cd-6dabe97abb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a377b07-a642-4d5a-8175-475aa4fa504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87367be-602c-4747-b4f0-86e08a97f1c0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c23bfc-7ad3-4d14-8601-bce7607a3548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461b0876-75e7-44d1-95f0-b672b8e7c1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f937664d-a60e-468d-9f8a-1409059e506c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313d8361-8969-438b-81c7-a11fcc873072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ee868b-2d3d-431f-9924-95b3d1108411",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b60c2d-078d-469e-bb8f-b7035716732b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3585aeca-8646-429d-baed-bd3072289961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fd10bd-6349-42dc-97b6-f78d9f7b56b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad9d9d7-18d8-4409-8b1f-2e322423615c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d08d3e3-571d-4add-97bf-e4a30896665c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46328ae-3b29-49ab-912c-686c8f76a39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f076da-cec6-48d3-aeab-892817dcb950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de53da01-7d7b-420a-8471-8014d6102af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba9ae5d-71c7-4550-b0ca-cf4c448aeba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbc8eb9-f57c-454e-a6fe-84feae9e4daf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652727ca-6f57-486a-9ead-5ba1c3c359bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d2a918-f43d-420b-88f4-602a3b2f568e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bc0965-aa8a-4624-9d86-2e701b6cc544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713c3984-debb-4b68-9a02-de1cf433a356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d0daa5-8682-46cb-b4b8-54ed560e03e9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d489ae55-f255-4174-8f01-effa80055192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500b5a17-dc12-4a67-a671-74213d886bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408035cf-9ba3-4c25-a6e2-0167cbdb0804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01bbc12-e4fb-4f85-8508-b606fc17d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113bd4a-e822-43b8-8efa-ca0f9b5a1fab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dca646c-7111-4b1e-b2aa-7ffa07a79288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f713428c-fa8c-4b89-b212-e8ec8fdddbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a074a-d9c7-4dd4-b845-facb4a9f6f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03abf2a9-9a1d-4498-b95b-3d063578a902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ded7278-0453-4fbc-8068-37f34e0a1a7a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3485e6f1-442f-4c54-99e2-c1496cb060f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6743b38d-0e73-4cbe-bf49-50d1016ccef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39550059-cac6-47e9-9f2b-f524eeaa0792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e14c4e-f486-47cf-b62d-e7750e2657c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34daf17b-4ec7-4007-bdc1-fdd21d2b9bf5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5c04fd-2c36-4f34-8979-7639b530ec45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2337a5b-31c7-4fb8-b1ab-83c24cad9869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb150df2-0887-475a-b2ba-23eef6cf2dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8e72b8-f6d4-4e42-b1a5-3ed8d8c71ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843b99d1-1d66-480c-bce0-43f5982f2636",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a65f7c-f3bc-4390-b1d0-a86a0c0cfb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1190d6aa-e3a6-459f-948e-98d62a183496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcce80f-1718-42cd-9771-98e9cbe28303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387b31c2-300f-49bc-ac85-b4c77a254821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe3b3f1-9f72-490e-8f8d-e2764be3af89",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289ee10b-9cc2-4815-9233-77c240c6c88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5277af-c7fa-4831-8c28-0419612c71a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401920f7-4a0c-412d-b17c-694e91c128e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89abfed4-0788-4a39-80fb-15a6918ef99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469d914b-aac7-4a1b-95d1-e875ae241ffa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731281ae-e9d3-4141-b9a6-5b87ff343a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ac3839-703c-4256-9e8e-9a3338536202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0ee596-1d02-4574-a07c-6b6c5a801e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0ad170-2d58-4ea3-92d3-7ce1eba97f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079e2d4c-7386-41d8-8c86-d22ac28b6809",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc59702e-cf6b-4fc4-9ac8-b42d9db74f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3096bf3-98af-4856-9ec9-278721410112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3777ba-c0d5-49dd-98a8-348002751cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f942bda-6a45-4c8c-8e5c-b05e09e0a078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55c6df8-b927-4357-ae5e-82bf3a68d176",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95069f67-1e71-4adb-b265-2d2cbbf2261c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12d906d-c94b-420b-884c-556fb4e4cd25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b21eb15-e5d1-4efc-8291-8cc8e8e4252b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2405b62-d0a6-439c-a196-890cf37c6762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7206bd22-6260-409d-be8f-60dcc4ef8aaf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fd502e-7c63-4ace-8d8d-3fe8828541e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83b39ae-fd42-4fed-b3b4-d41cdadc5c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bd1071-4c9c-4657-9b60-5bd816e294b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a077e9-8807-46e5-a1d8-29512a9ea4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3842d166-a909-4ce9-8a74-defb8333f582",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63c33d4-4774-4593-be30-98a5ba0a15ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04daaeee-b1cd-48c3-8072-f66e65904907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d97778-7115-4150-b745-66d18b284c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5be6b5b-9a51-4bef-b052-7a3036defbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31d9374-f832-458c-9530-f54860052cb2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5776d96-79c4-4e4d-a91f-72580970d17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863f2c7a-422b-4607-b9de-2afa1256f0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f644dfc0-55b7-4747-9b45-813b61238513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1109ff2-a6ea-4494-b19e-978edd1764bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f3d1a1-ebc0-40c0-b641-1544311c540e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaee0399-1513-4c37-b994-91e159efbd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c49c1f-c32e-4fd6-9cb7-cfef87059ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8703ef1-7191-4b79-9402-a7e3e7c99c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af7f483-769d-423c-a406-704ffb9f4748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107642ed-64dd-479b-af9d-6e297b60da35",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791740f0-54a3-40a6-8e53-52edffe0527b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94264702-4d74-4362-8226-2d6aef9f5f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c67de76-be4b-4a8f-a2c3-e82f33721669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa6f45f-1133-4e1f-93e1-e9071b75fc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d7e1cf-d6ae-4f13-b081-63aa18a4a4bd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2c9d01-d169-447e-a3a8-d6d63f34b417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fa7507-63eb-4f66-a4fb-b6a63828f0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2dae82-e230-4699-b12c-ed0939492070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7fb20c-5861-440c-aa28-e6d1e51ec7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c182a68-6ca2-427c-a378-937f25313265",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdac6bc-310b-495c-96a1-ba2375d5f006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71d37a4-1f6c-4d90-9309-a0559067026e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f8821f-7923-42cf-ab0f-51fd4632d6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f32a63-8d6f-4af1-9d80-0bbfd3557d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e79cf50-e118-4ce7-b2e2-f15f919f2f11",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05de99b-249d-490b-923f-2fbd2f0c26c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb61e15a-067c-4c7d-b944-259c5d4e0610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843fb6c0-3b01-4049-b870-c7777b14de59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ef515e-9084-4fbe-8281-e78a19a59b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e20ffe9-a824-434c-8f36-5c0937255e44",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372b37c6-dff3-4780-8250-c43c7488a347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd55e8f-6a2b-44b3-adce-fe108f4e13f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360b3c9b-e6f9-4c18-a8a4-251a897147e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b3df08-1b78-43c0-b536-547b4eba7add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcca5a9e-83e6-44a8-b2b0-3d102b1ee100",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d64846-3b70-4b21-97da-c1d5ddb9680d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea997d97-1914-455d-92d0-5cb73732a1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c4059b-2fcf-445c-894a-f1da6af6f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096a2cb8-3ed0-48c3-8325-dd9cc1600c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0243aaf3-225a-4e2b-bc7a-9120c21740d1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9607edb9-956b-4c87-9c5c-5bee984c8e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd093b10-c5e6-4f77-8f77-ddf6f7049f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b003fc-adb3-4ec9-b264-e9df5fde3995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032a4529-9def-4d44-b829-b58c1eed74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67eb443-705d-4157-aae5-89a32a22fb94",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9d064d-84c2-40e1-82cb-925a01b56098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95acab11-c921-4627-b3df-994df52b1c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67033225-3ceb-4e74-910d-9aa889e6a110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ee72d1-6d36-4e0c-9562-e1a0275fbf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf98067-a123-4799-837a-83299042ea95",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7ff14b-175b-48f1-ade2-616da7536651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267a45db-cb16-4be3-9d20-5f60996771b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d510ddd9-f16c-4e7f-bc5c-d326ad6f7572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee50163-acd7-458d-b23c-cda1351e8aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bfb5d6-e644-4120-97e3-f7c137eaecf2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ebdb23-a9c4-488c-8f4d-d80a138e6d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25101e2f-7d2f-4e7a-8471-9144f8640eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c833ba-90cf-4838-ba72-dd2df3b57c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0941a4-d30a-4eea-8ec3-38e5821529bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27b8521-9c92-4363-8d51-9330897c46ad",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e48059-0fdb-425c-bd30-f5913481fce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf24a1f3-2fb3-42e5-ab7c-6740d5be76b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1d661e-b3d9-4d63-866d-8ec16aecdc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc07b35c-45ed-4548-a0e8-66a37fc93449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a914620-d1b9-40b0-b91e-483d74233077",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd51841-1299-446a-b2e7-2b6d47da87f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bbb36aa-6d75-4b65-9035-f6956a9e53df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0148580-8a58-4d69-976f-ceb62f66e2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af94f73f-f13f-44e8-a256-933f143ab2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a150a3-a31d-4d35-8500-e088380b7e11",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05c7667-6f0f-4e49-9b82-c848eef17880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1651a4b5-d332-46ec-8f64-6b108130592d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36485140-2f7d-4987-850a-995a8f926e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a75a35c-70d9-46ef-891b-b14ca35e57be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d39505-599d-48b5-99ad-1fc64037b12f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974af787-7659-43c6-993c-2fb430289e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d506b3-357e-401d-9ee9-e2de40ed8657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe36f40c-fa40-4121-b657-3419aaae70fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6ea249-5c3e-46fa-8b3f-4f7c4f79bbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6852ceaa-6767-40e3-b70c-ed7572698985",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5085a0ab-c9c0-4c13-b816-694a2d88a994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77de5c2-11b7-41da-b094-f50a08123db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f745f-4fdb-4fd2-9df7-78f6a532a26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4393d1-e0ee-4756-ab33-995365ed4e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baf3a1d-9de8-4c90-9024-48a24abe5c97",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa98e835-ab48-4967-bac2-72242a26cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610448da-f56a-4358-89b8-52c6b6859a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41741dd7-ebb2-4af7-9b98-f9ecf5d8c4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f236d01-8c48-4412-8e4f-8af9bfe547e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bcdb04-a17d-406b-88af-620765b0904a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f428a57b-ec57-40bd-8b7f-17a3438488e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61aa29f0-8da3-48eb-9641-e7c7f3ea2cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d121b88-5f2b-4808-a501-75e2aa11ae09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e438f52-2e21-48b5-a16f-ea4a02492dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7553affa-a0d9-42a8-87d1-3b1e90f8c824",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914d3418-8c18-4504-9d17-de6c549bad12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce47f578-a760-477d-bee5-7b4dfd476c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0016189-1156-4b7c-826e-8f41827dbc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9155cdc6-adcf-4443-a8ec-03962077bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80215b2-dd6b-48cd-ae7b-06aa1aa85fb4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbc6f84-902b-4a51-bd53-69a7a94533a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd05fdb2-3889-402c-8ed4-175cd276dcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcec7de-47b8-46e7-875d-7540ff80e896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7fd7a7-ea25-427b-8fa7-639ba64ca8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e64bc94-2fac-485c-9cdb-78dd6c5f0831",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48216e8e-5fe8-44e5-a42b-ee20eb2a7f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3126ab52-dcd7-406e-810d-fdbc02f2e5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d2ab21-ae1a-4934-b6e8-15f04825bb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5ed011-962d-4121-a98a-deb2ec1f33a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b2994-8cf0-4f2b-a0ce-afd1929b6b2b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a3a90b-02d4-49f8-b652-307d466b219e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e6e0fa-8d97-4a76-b7da-6a7d0c5814e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b156f2-0163-4ed6-8457-d0c4367b41a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae3022c-42c0-4f26-a238-54dff8f6bf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166622a7-5460-4b94-817d-0305856af5a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ff6be3-75b9-4b52-80bb-0a60a9d4f64b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999eee69-335e-4215-b46d-66dc4623a249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c76fc3-023c-4902-ab71-e912ed095bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b518fa-5ca6-4055-9d63-980ee20252a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc58742-c777-4d41-b803-f69529d89a7a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ea7ff4-b8ed-4804-bc97-1c6c63dfc906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bf2a60-1b2b-434b-82f7-13199bda723a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4c19d0-c76e-4305-9b83-5866f57f272d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb90ebc-e82b-4f12-9ac6-252ee8d811ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84915fc-6e11-4d92-8d48-5805dd211181",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea625bc-1582-44f9-8e9c-9598cacf8421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ed8e77-9ca5-4e55-b658-e89e16e298f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec216a8-c8cd-4f07-9bbf-7988b7c20485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91518875-2193-480d-b9bf-7743e00095e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c533ff6-12c9-4bdc-9786-11af2cb216be",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed045c9c-d6a5-49fb-942a-431d36f0d40d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66709b8d-8e41-4398-bd3f-cfb880b7590b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bb0ba7-1541-41b8-8118-e029238712b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0adad4-9412-4bf4-a3bd-447b304479fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8235237-541e-4e9c-b38d-2f1aa71b0247",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44122320-035c-4485-ab00-4960419b810e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037a3b4b-aadd-40d1-b031-8f3d3cffa0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c220c4-6f44-4c3d-a927-46ea1dbde372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5aec35-3fbb-4b8c-a9f6-9f068ba55d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef50a807-39e5-4a38-ab38-37f13068819a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89046f5-25d3-4d67-8af3-fb5d35295dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a40b05-28a7-4010-aab6-b49bdb5f7f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70c608b-6508-4cb3-94a2-9ac03991bd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ccedf2-60c3-4861-840b-355b1f67d821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469ddfb7-ae7e-440c-9cb9-19259fc9fd4c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5974a353-fc94-4fb5-a373-a0bc8329525a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdedcce0-d3ff-42ca-8b51-849becca647c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb5c06f-08e9-4d57-ade4-4ba748d06ba1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be81523-174d-47c0-9ab1-d45cd6bcb1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6315b35-cfee-47dd-ab4f-d391a27467cb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9987220e-0cd6-4190-9c1c-b51699d9509c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68117c5-1368-49e3-b409-2ce7d749f624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca440f2-336e-4246-99c7-e0c0f7a9f5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16773df2-db1b-494c-a680-b9b2511db4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6ee405-9f10-4d3c-9d95-e9ae4c8d2cfe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc83716f-9ffc-4048-a5d2-29eb36bcc8f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e326f43-494d-4e69-a3be-f2b3d964576d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c577378b-84fe-4582-b5ad-83efb93b66d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cca710-8128-4106-bf47-450cad21b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf1b066-4124-4f48-81d7-86ea571138ef",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662a43f8-bfbb-4cc8-b2c4-7273048223f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83921268-8b43-426f-b28d-5bff8ce26771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73f94b8-0195-4582-a092-957c5f54f949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52bf0ed-3ae1-4ce3-88ba-582683995446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb58e4a5-4bf4-4b8a-b76c-e74b298d36a5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e67307-2335-4af0-a370-78ef8850a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3372920-47b0-4b39-b6a5-dd94f9188334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025f2a90-dcba-498a-8fa9-1087482a6afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f39b1e0-ce88-4f0c-8e5a-d8d7cd794c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea32561-7e75-4eb5-97d1-789a94eeae9e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21198d8f-b23e-4be7-be8d-e216defaf283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda9208c-9064-4886-b2cf-002b69687cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7c73d4-f244-41f1-bf5b-9237db827556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5e625f-4576-4935-b644-8a77f3ae9a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be17a108-0146-4e59-b1af-e2cecf40868f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8638c0-516b-4fb9-8620-396e104460c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7686acde-4a5c-4772-a4d9-1122e241bc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b781c9d-ee05-49bf-91b8-d988477cd61d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c24639-4dfd-4d99-b5e6-09c7c2817c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58089937-a7c9-4a47-830d-5e24668ab3a1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad4a576-bf52-4b4b-a327-6dcff6552a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce694b8-a961-435d-a3ad-48b8e541526b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2664b186-8793-493d-8763-18f131c75167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4545ae5-e1eb-455c-83f1-680190acda50"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1571525b-e11f-441f-8d86-7c8de51186f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9873a89-9746-49c8-bef2-2ef459822619"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84c00276-a3bf-412b-b363-29bb60a6157e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3a785dc-9099-4c33-8e7c-9c3ce6d3cfa1"
                    }
                  }
                ]
              },
              {
                "id": "715cabfe-c9e0-472a-87f4-044e9de3d903",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf61694d-9737-4aba-8d37-8d688fd71b3e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220f0dec-1106-4912-9306-8081f630f5c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b249c6f2-ec1a-48ff-9d15-b9098f2a73ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0018080a-8bf7-49c5-84b2-52d11e15ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19a89201-ae45-4c47-a215-6cada195cc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e4b656-09f5-4458-9a81-a9e3a27f48fa",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3fffea-6487-4041-bf6f-e131bc25c573",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9566073a-c80b-431e-b0b3-2975d3229b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010fea0f-a4bd-4583-9f98-0e134ad3f118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a40033f-3a5f-4740-b984-ab3627f83b58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0da624a7-fbec-4ce6-a0f5-247efaba85d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d04cd5de-e5ee-4043-ac9b-1716808537ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63652a4d-fbeb-42d9-a9fc-5d1c57457024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16cf3652-bcb8-4cc0-8a57-dc62203e301e"
                    }
                  }
                ]
              },
              {
                "id": "02f36db3-5ac9-403c-8b04-0a398a26eda8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97bc3b00-d37d-4418-a62b-9013dfffb58a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6cf7a1-aa5a-4dda-97c4-9d1f6c63b29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9f136d59-bd4f-4fe8-a9a7-604933446821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cb5936-23a8-4097-92b6-bdb2a2952378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f074167d-fb1a-45c7-b0f9-f1e5d780236d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49eb3cd6-c25d-4441-87b1-af3a7eca51f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c37748b-d26a-4626-9bed-c7aa90c2a891",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84d3c84d-a095-4636-95ae-b38d5b591aed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82b350a2-89d2-4cff-bef7-00aabaacbcab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e654adbf-7e75-4a3e-a16d-f0e827f55e54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb9cea52-e91e-4cc1-92dd-e3f039727aa2"
                    }
                  }
                ]
              },
              {
                "id": "98e0a2f6-5f26-4efc-b40f-82037d1d3612",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6fbf62-272d-407f-816c-5941036fd6c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "44d912fa-1f70-4a2e-bf5f-5ef3d9f465a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "219a8f23-5dc4-484b-839c-0b90843936e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7a9546a-ab43-428c-9552-992200bc1918"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cdf6f81-b130-4d22-b6c8-c42f4ddc8a4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "547b7572-fb67-4a6c-b797-43193b2a3dfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd8368a7-219a-40ad-9add-ca41a46bc4e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "307e271b-b586-46f2-92e5-1acd439c29db"
            }
          }
        ]
      },
      {
        "id": "650ac934-ccf4-4968-a40f-004ea30284ad",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a574c6aa-5318-4283-b63e-21d277d3b924",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ab3979c-6b2e-42e0-b6bc-3a719122ea94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c38b966-2071-4220-b702-03d9b20e7399",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b32814b-af50-4744-9018-116238f4a034",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8798f709-2dcb-417e-a84a-45e74490190a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a0089b-d9ca-4552-9903-6d364051b6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7b1d023-fd90-4942-a834-383c312f0b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec17ec6-4e69-43ef-bdf0-834c9024849a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a7aa95-b7f1-4e54-b320-e2c3a299ebab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "865e8cab-81cc-46ca-bcc4-64ca4ccb6889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9b7c8d-4add-4614-8c6e-ccfa3f2f15be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48478513-a3d3-4ef7-a754-6f02a8ed67a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a755cf13-466d-45cb-a94d-11ae4d14d91e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75879fdb-90b8-445d-879d-0ccbf8e834ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8807760d-b4e6-4b5d-af39-d3c127cfd57e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4ed7b90-4920-40dc-94c9-fddafa57d9df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6a434b9-f227-4dc3-bade-d3d0d62d7dd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3bf032a4-2723-490b-885a-00d520a2a663"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9263201-90ef-4317-bbf5-68065a9d8bb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6cbebc4-12f1-430d-85e0-4b067c16a70a"
            }
          }
        ]
      },
      {
        "id": "6f36d620-ac82-45bb-822a-f3f3de19f43a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9579381e-172d-41c7-adb2-09b3b564879e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f13736d9-8a42-499a-a9d7-ad5bc34e49d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0821e07f-297d-4cb9-8527-16836611d80b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0b2ad8-cbc6-427d-8eca-c0c29c1358b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5449888-ca37-49c7-a105-391999b92469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71afe0b8-da9b-43a5-bc9f-44e0a5b5f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dee31e3-385d-4331-afdb-e7832c89e173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8193fcd-cf3f-4dd9-bf07-2f75e56d52ad",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66eb5cf5-882c-4686-be78-f41125d7fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ef053c53-a980-498f-9986-970d29dae256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b60415-2aec-4c55-a48d-ebd30c44d393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4504b50b-1d73-45a2-b3b2-986e6095079e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ad4695f-e3ac-45d4-ab3a-b3d1273143f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db5337a-4af4-47ab-bd78-4bb9559f4af4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "224ebb9b-0927-4a5c-94fc-af4f8dca531e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d16332f-5d76-4198-a9eb-7874c58463e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2def9875-79bc-449f-99c4-9cd0963c9170",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb24d1ed-4c78-4a5f-9ef9-a227f14936e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23555005-5fef-4dab-b68f-8a49f1c11c25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f5751db-6ec7-4080-ba51-c663a935654f"
            }
          }
        ]
      },
      {
        "id": "cc64685c-b2ef-49b1-9cf1-e9be1ff2238f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4f05fb42-b989-4e32-89f9-d29fe540326a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5317c5ad-b483-4f63-98db-e6175b897751",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcbbe22a-d75e-4186-9fdb-18d9dc52d418",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc0f8e2-439d-4a1a-a814-04f48f041094",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52734af7-bef2-4c51-b3f7-ebb22a63d58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3023d2c4-877b-41bc-a3c3-6ca4ae82cedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bfed729-0d15-4775-9b1b-6b5e34dae5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f7a22f-be48-4596-a17e-61971c18e54b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbebc64-7e47-4b0d-bf89-dc5a56af5828",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ef953670-24e7-4cda-bcdf-b32ee64a23bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf8f556-bca4-4337-baa8-efaf276943fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dadaea0d-ad91-4e69-8cf0-aa979902d398"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e662c7fe-cfb5-4492-9f36-fff133aab31c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5984822-0f6a-4482-b926-0c8aa3ef0391"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a6b2aa3-f2d3-4f0c-861e-cb4b2c43a034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a01caf8-6fc4-4198-9e2a-16cfd513f682"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a0d8277-553f-40b1-932b-1498fc6566c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "139c5ece-bd8b-4854-923c-236c607dd08c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6c325c4-ceb5-48df-93bc-eb587bbaf480",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3457305e-93b7-40b1-8723-ac648984e08a"
            }
          }
        ]
      },
      {
        "id": "fd968d6c-332e-4e59-a126-515a53ff770f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c3b4510-d8b5-4e7c-ac26-e9305ad59c3c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45e6e7dd-8515-4878-b8c0-9ab4ddf392e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c9a5038c-9b1c-489b-867d-bfd7d33a4bfb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba1b87d7-838b-4286-80aa-0a6f2381bee7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8412f489-ffb9-4954-a4e5-67d8965dca6c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.135135135135135,
      "responseMin": 3,
      "responseMax": 340,
      "responseSd": 40.408926642449515,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678063313713,
      "completed": 1678063327428
    },
    "executions": [
      {
        "id": "38f73b91-89d0-4250-a0b0-6d1b1cb4b49d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ca338fc1-17f0-4ea7-9a1c-59727ca2fd51",
          "httpRequestId": "97916c90-c645-40b1-9a25-bcb51a0de543"
        },
        "item": {
          "id": "38f73b91-89d0-4250-a0b0-6d1b1cb4b49d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "55946363-2224-438f-82de-9dde3c58169a",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "817bec67-d01b-4693-ada1-845a34850ee1",
        "cursor": {
          "ref": "66dfd83d-6461-4ad4-8a06-b62c62242bae",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "be1906bd-14da-4206-82e9-2c7ec61c4561"
        },
        "item": {
          "id": "817bec67-d01b-4693-ada1-845a34850ee1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "11a526a1-c496-40dd-bef4-933ec5a47ffb",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "c4daabc1-cd3f-42fc-b3dd-630d726221f1",
        "cursor": {
          "ref": "95d7d9ed-af35-42f8-a086-a58dd2fea396",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9c144c8e-4b6c-42a9-9f4e-9636b227c83c"
        },
        "item": {
          "id": "c4daabc1-cd3f-42fc-b3dd-630d726221f1",
          "name": "did_json"
        },
        "response": {
          "id": "de77fdb3-f6b3-411b-8461-3ad0cea95d66",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29168288-f5e1-4c62-b2bb-57f50130bd29",
        "cursor": {
          "ref": "5f3c8ad8-bb60-4390-94e0-44dd0e7722ca",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "576fcb68-16e0-4f23-b3e4-e9a8053ef10e"
        },
        "item": {
          "id": "29168288-f5e1-4c62-b2bb-57f50130bd29",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a764570-9347-4cf7-9c92-2b7c511ac750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29168288-f5e1-4c62-b2bb-57f50130bd29",
        "cursor": {
          "ref": "5f3c8ad8-bb60-4390-94e0-44dd0e7722ca",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "576fcb68-16e0-4f23-b3e4-e9a8053ef10e"
        },
        "item": {
          "id": "29168288-f5e1-4c62-b2bb-57f50130bd29",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a764570-9347-4cf7-9c92-2b7c511ac750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bda7510-2bec-4654-817f-cdf0eeb30d93",
        "cursor": {
          "ref": "f5ec2c24-03f4-439f-a0b3-dd2ce9daa5d4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e19c1c2a-43a1-4f8c-b9c2-b129e6849275"
        },
        "item": {
          "id": "8bda7510-2bec-4654-817f-cdf0eeb30d93",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cdb2b582-d400-4984-9986-a8dc800471b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 119,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feac6298-643e-453f-9859-385d2a3c3e67",
        "cursor": {
          "ref": "c794f324-fac6-41f0-9c25-dd9e901842f6",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a6c02b88-65e8-4948-9470-2b8a3e6e607e"
        },
        "item": {
          "id": "feac6298-643e-453f-9859-385d2a3c3e67",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "638353fd-0646-49b8-9828-efbda7fabcd3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabb9321-15e6-48c9-8704-e8b0ada63ed5",
        "cursor": {
          "ref": "a7966d88-ebd7-4ff3-8456-a650d241f052",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "946b4bbb-a4a7-45f9-b2af-e4c440e491b8"
        },
        "item": {
          "id": "cabb9321-15e6-48c9-8704-e8b0ada63ed5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d0bab0d5-1cec-46fc-a138-8f187f26ca41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24081343-8077-4628-93ca-100409ef1003",
        "cursor": {
          "ref": "154e002a-65f9-4489-81e4-9dd5d4ab78ec",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ef125e04-6504-4796-b90f-5c98f757b2ca"
        },
        "item": {
          "id": "24081343-8077-4628-93ca-100409ef1003",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "884c2161-15c8-4f5f-8519-9edf38c5c265",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24081343-8077-4628-93ca-100409ef1003",
        "cursor": {
          "ref": "154e002a-65f9-4489-81e4-9dd5d4ab78ec",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ef125e04-6504-4796-b90f-5c98f757b2ca"
        },
        "item": {
          "id": "24081343-8077-4628-93ca-100409ef1003",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "884c2161-15c8-4f5f-8519-9edf38c5c265",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef002116-ae04-4164-bff0-45c5e02e77f2",
        "cursor": {
          "ref": "f3db39c2-771f-46d3-80d0-2fe2f59850b0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "abcb4a5a-d6bb-41db-8a4f-4b2a949665af"
        },
        "item": {
          "id": "ef002116-ae04-4164-bff0-45c5e02e77f2",
          "name": "identifiers"
        },
        "response": {
          "id": "dc416ac6-590b-4e90-aade-6d40dbfa9d33",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313c1e1e-84b0-480e-b1fb-00dd629918fc",
        "cursor": {
          "ref": "63b1df60-b0c3-46de-ac73-c69c7253d8c7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a10468f-3104-45b9-b6ab-73826c7bb069"
        },
        "item": {
          "id": "313c1e1e-84b0-480e-b1fb-00dd629918fc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f6b5934-bd38-409c-9f9e-53b5471dbce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313c1e1e-84b0-480e-b1fb-00dd629918fc",
        "cursor": {
          "ref": "63b1df60-b0c3-46de-ac73-c69c7253d8c7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a10468f-3104-45b9-b6ab-73826c7bb069"
        },
        "item": {
          "id": "313c1e1e-84b0-480e-b1fb-00dd629918fc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f6b5934-bd38-409c-9f9e-53b5471dbce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b3f43d-898e-4801-acaf-61d14ae03317",
        "cursor": {
          "ref": "041ea3e7-4ae8-41b1-8522-20ba4124d636",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4ac4a9f-2e49-4448-a05d-768b92a898a7"
        },
        "item": {
          "id": "38b3f43d-898e-4801-acaf-61d14ae03317",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2bb73adb-7a79-46a6-84d0-521b2bcefef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9bf1d7-d5b3-46a9-a3c1-ff63c8d6cfe1",
        "cursor": {
          "ref": "a236b5a8-edf8-402e-a6f0-78f9c60a1f4e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ef306aa6-79fe-4b19-8dff-68536ef9ec6f"
        },
        "item": {
          "id": "9a9bf1d7-d5b3-46a9-a3c1-ff63c8d6cfe1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3b1c940f-f3ec-493b-83fa-69b2b16ecac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ed22c4-a97c-4432-a263-f5f29f43e746",
        "cursor": {
          "ref": "64eaffcc-9d8f-4575-92d0-60aad9c9dacb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "46ad79df-4222-42a9-b43c-31fc67364751"
        },
        "item": {
          "id": "00ed22c4-a97c-4432-a263-f5f29f43e746",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2f103dc9-1555-465f-8548-38e17b84f2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58d5155-1f6e-423b-8d6a-c39525a7ff32",
        "cursor": {
          "ref": "e4c0e8b6-294f-4e21-b4df-2b4895663dd8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aa34165f-3ffc-4a08-a95f-68da191c360f"
        },
        "item": {
          "id": "e58d5155-1f6e-423b-8d6a-c39525a7ff32",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "23dc4c45-cb75-4dbe-b3cc-72865553b6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c6ead5-e598-4b9e-9458-f79c7e6fff85",
        "cursor": {
          "ref": "6d889e94-df7c-4368-9ece-f097638ed07f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ec046cb2-31f6-46c4-84e8-d174f4713f9e"
        },
        "item": {
          "id": "55c6ead5-e598-4b9e-9458-f79c7e6fff85",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe2f9c17-a57d-4b8f-ac1b-43932344f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ec8c24-608d-4ceb-abaa-29bafb0da1c7",
        "cursor": {
          "ref": "657fbea8-f491-42fb-bd5f-641d92198197",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9585c7b2-5f10-48c4-b625-ecc824bf2efd"
        },
        "item": {
          "id": "b7ec8c24-608d-4ceb-abaa-29bafb0da1c7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "90138e61-34d1-4ee7-999c-977b660dbf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bacdf9-c406-4f98-98b7-7880a223bd35",
        "cursor": {
          "ref": "294dc4b2-3b82-47fa-a4bd-9eacca46285b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6e9e2985-cd3b-45fe-978d-142f192260b1"
        },
        "item": {
          "id": "d8bacdf9-c406-4f98-98b7-7880a223bd35",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fc2d7f1d-6893-4e80-b543-0ddd556550d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c308c3-ed9d-462b-a447-24b9af01d7e6",
        "cursor": {
          "ref": "5086973e-b119-40ce-9d18-f13ed2e426ad",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7ee30e95-b854-4fe2-9e3a-1aeb667b79cb"
        },
        "item": {
          "id": "26c308c3-ed9d-462b-a447-24b9af01d7e6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b541096d-a614-4dbd-84eb-ca96fe82bf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad341bbe-2055-4ea1-9915-e09c2583d43d",
        "cursor": {
          "ref": "02ee36ec-5d51-4815-99d4-e42dcf7d76e0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a32f5bf1-9272-4836-930d-83cc09f60caa"
        },
        "item": {
          "id": "ad341bbe-2055-4ea1-9915-e09c2583d43d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb2d193b-423b-4567-9c9a-d8d545d6e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51052eb-2e2c-4ea7-b4f7-020b5fc3eb2c",
        "cursor": {
          "ref": "575d7d51-2b91-4b16-b4d0-fb02915ee5c0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9558a9f0-2af9-44a1-b6d2-5021a5e9bb73"
        },
        "item": {
          "id": "b51052eb-2e2c-4ea7-b4f7-020b5fc3eb2c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "584aa53b-c0d8-4e17-9ba9-e7b3cffb1a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3802dc-a9e4-4ccf-a145-fb2784806e10",
        "cursor": {
          "ref": "a8b4bda6-92e6-4821-8199-a265956811e0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e7fe354-324e-40b3-82e1-0bfbc00e63f6"
        },
        "item": {
          "id": "fc3802dc-a9e4-4ccf-a145-fb2784806e10",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1a46e3fa-b828-46a5-a2da-f8bbddd8c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4ad366-7196-4a0c-bac8-b8a4c6560b6c",
        "cursor": {
          "ref": "cc89eb99-0143-4120-8aea-893a65df55d9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f0bc54e5-81db-4e76-b681-ba51dbf47e31"
        },
        "item": {
          "id": "dc4ad366-7196-4a0c-bac8-b8a4c6560b6c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "48a03322-7bda-4e2b-9e6f-2ff54f0f658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0fba99-80ba-4d33-a84f-a9fb53bcf3b9",
        "cursor": {
          "ref": "14de5fde-7d14-421f-b372-00d88683b552",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eb0756ed-e0d4-404e-818a-86646d80787e"
        },
        "item": {
          "id": "de0fba99-80ba-4d33-a84f-a9fb53bcf3b9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "29ae3fad-0e1c-4f9e-a727-48b466216a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb92e108-67c4-472b-89b5-fc5a606a839f",
        "cursor": {
          "ref": "04b1f0d2-eff1-42f7-bda5-b25ea30238d3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9f718ec3-e41f-492f-bac3-d9de2101996d"
        },
        "item": {
          "id": "cb92e108-67c4-472b-89b5-fc5a606a839f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f324b848-846e-459c-bc57-62f689e931c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fe48a5-208d-4b4d-8729-3cb8d90baa6a",
        "cursor": {
          "ref": "36966be5-26db-486e-80d0-dc207d902fdc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6538e8c7-b846-40ea-8ff8-fcd17cb692de"
        },
        "item": {
          "id": "d3fe48a5-208d-4b4d-8729-3cb8d90baa6a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "010187ea-27bf-4f1f-8068-6522acd385d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2364a500-7be0-4e51-acbc-edaa5bd3ed87",
        "cursor": {
          "ref": "71ccea8e-bce8-4b95-a93f-d6fcae1ab9eb",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b98e759b-1ff8-4bca-9745-74bfaf792670"
        },
        "item": {
          "id": "2364a500-7be0-4e51-acbc-edaa5bd3ed87",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f45e493-61bf-4796-a3b5-ddf43aa18f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76902917-1a9e-44c2-8e39-136cf0b94ff7",
        "cursor": {
          "ref": "16a2c122-fea1-44d2-869b-8d9939b63152",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e3912f89-7a5b-4251-bcbf-c868f97941f7"
        },
        "item": {
          "id": "76902917-1a9e-44c2-8e39-136cf0b94ff7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "080ac58d-220d-4c81-9a97-f9260b77f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604bebc6-8d42-4b67-906b-eb9351b242df",
        "cursor": {
          "ref": "44cdd9e8-69ce-4833-9db1-8117f2f3ac4d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a8fdaf36-7e98-4061-8137-bcb564945418"
        },
        "item": {
          "id": "604bebc6-8d42-4b67-906b-eb9351b242df",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7da32163-c18a-45a5-b810-62b667020d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87eed55a-797a-4ce0-a530-7a98c9a3ce5c",
        "cursor": {
          "ref": "ba4e5a0f-fd5d-4831-9e34-3931a062b5b6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c0b831b3-c513-42a1-a043-6fe7d765b17c"
        },
        "item": {
          "id": "87eed55a-797a-4ce0-a530-7a98c9a3ce5c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9fd45e81-3788-4583-b158-7d629e418e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc98f71-83b0-48b4-8663-49b40c330903",
        "cursor": {
          "ref": "fb2858dc-d3a2-4fe7-ab41-f4c9879aa056",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d54251f8-55fc-42b3-8147-5bef525fe5e3"
        },
        "item": {
          "id": "2fc98f71-83b0-48b4-8663-49b40c330903",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "65a70b2f-2f60-4a71-b77d-6f76f965c402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a369fae-cd1a-4058-871f-2e5e5e0a588d",
        "cursor": {
          "ref": "8d826d60-89bb-4b04-bdff-dbde2db16b2f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9bc7cf80-9f77-4da7-b939-acc5d5fd20ad"
        },
        "item": {
          "id": "2a369fae-cd1a-4058-871f-2e5e5e0a588d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2ce2be9b-e80c-4eae-b8a6-ab43c89d7e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e651061e-f514-441b-bd47-29dd2590586c",
        "cursor": {
          "ref": "2142ac29-66f1-46bf-b256-bbf1facc7787",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d8de07a9-8f77-457e-8ec8-2422cd8da9ce"
        },
        "item": {
          "id": "e651061e-f514-441b-bd47-29dd2590586c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "33950347-b0e9-4aee-b198-3f40b36dfd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d191635a-a50b-42af-b299-2ef2221677da",
        "cursor": {
          "ref": "50393b0e-d607-4d5a-b498-13097906e654",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3bbf9999-0120-4762-bbb2-4a8d795f4df7"
        },
        "item": {
          "id": "d191635a-a50b-42af-b299-2ef2221677da",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1b531947-2fbd-42b9-8a98-6f9ac670c75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7aff83-5f73-49f7-b35b-a5b145e3d446",
        "cursor": {
          "ref": "2699967f-0d9a-4ea9-a289-515092489783",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9e4f26bb-2618-4e8e-80c9-4d7a0daa66c8"
        },
        "item": {
          "id": "6d7aff83-5f73-49f7-b35b-a5b145e3d446",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "66fcc891-23c8-4b29-93ea-1b5b74a352c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aef109b-10d3-4c71-98e9-40e9c073a1ae",
        "cursor": {
          "ref": "fef2f573-bfa5-471d-a733-c376c1f25045",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "511076e0-d5db-4e88-8ef6-4842095ad3b6"
        },
        "item": {
          "id": "3aef109b-10d3-4c71-98e9-40e9c073a1ae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "33442466-5e91-48af-aa00-3d1f3f97fd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0207b76f-9ae8-46ad-ae13-2fc6752c9058",
        "cursor": {
          "ref": "0d49596e-e36f-459a-8217-d71b45a85828",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e1e51f6b-4d74-4bc4-9b3e-ac5adf4aab89"
        },
        "item": {
          "id": "0207b76f-9ae8-46ad-ae13-2fc6752c9058",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8006b9bc-1dde-4c90-b35f-ff05854c45b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2020b7b6-7a1a-4e55-b361-a1bbc877508e",
        "cursor": {
          "ref": "0b79ce7c-3cc8-4f75-92ef-f7922e5d5dbf",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c68133d5-4800-4ad3-a240-b610bd064277"
        },
        "item": {
          "id": "2020b7b6-7a1a-4e55-b361-a1bbc877508e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5d19ec2a-d387-4477-b8f8-c9c161b8e890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0829e9d9-1f82-4fd7-8006-1642d5cfdc9e",
        "cursor": {
          "ref": "453a91a2-00c4-4879-b7cb-91d3a6615cfb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b32d8c08-024d-499d-8543-934fe0b16139"
        },
        "item": {
          "id": "0829e9d9-1f82-4fd7-8006-1642d5cfdc9e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3b2ff31c-4c7e-4b6e-8906-6565dc8be9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5558baf8-d799-4d94-8c7f-0187aa3143b1",
        "cursor": {
          "ref": "cdf2b5cc-6b04-420e-9c5f-c33d399dd742",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "75dcd8ee-5e56-4bf5-a7a7-e6f55b53141e"
        },
        "item": {
          "id": "5558baf8-d799-4d94-8c7f-0187aa3143b1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7e46c367-80e1-48a7-bf55-0ac344790b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e4b894-b41c-492e-a445-1768c1016785",
        "cursor": {
          "ref": "2f129cbe-1ed7-4069-bfbf-752a97cc3959",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4dba0dd1-256a-4728-8400-c6d51fa397bc"
        },
        "item": {
          "id": "a1e4b894-b41c-492e-a445-1768c1016785",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d6e24b50-d39b-459b-ae5f-97deb44bc532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8908418-49ef-4fa1-8885-6a2c248d5a84",
        "cursor": {
          "ref": "f3f3f743-157e-4241-8f06-8018985cc392",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4b4df5e-a218-4480-a657-6cc3ff741303"
        },
        "item": {
          "id": "b8908418-49ef-4fa1-8885-6a2c248d5a84",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "84657aad-b630-4a32-969f-55aa35a6521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734b0200-5bc5-4453-9e29-664cded5a583",
        "cursor": {
          "ref": "aece2275-b857-4918-b202-072442b4ffea",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8935e22e-de28-4264-bdbd-885c1f03591e"
        },
        "item": {
          "id": "734b0200-5bc5-4453-9e29-664cded5a583",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48666498-1502-4a08-a8ce-248cbcca50cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47402e32-e98a-46b8-af8f-59daadb6226a",
        "cursor": {
          "ref": "d590ab45-6915-4006-a0e4-1677ee7705df",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2fc27985-f713-49bf-9210-8433ac2ce28d"
        },
        "item": {
          "id": "47402e32-e98a-46b8-af8f-59daadb6226a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "90f10db6-fc18-410d-9d81-ad7e41548512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa768afe-dffd-49c7-9864-c0a4cd11bb8f",
        "cursor": {
          "ref": "32d560ef-1ba0-4424-b40c-6711649bf14c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "70eb3128-0dae-4be4-8424-ad2cae2a7fb8"
        },
        "item": {
          "id": "fa768afe-dffd-49c7-9864-c0a4cd11bb8f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47b61a9c-e83c-4d67-913c-41d12a4bd560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1206cdd7-9740-4d8d-b78f-beda2ba21874",
        "cursor": {
          "ref": "b4416cbb-66ff-4d3b-a1b2-82b4216f3548",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8f5da88c-a0e3-438a-b5c7-3ffcacf3f016"
        },
        "item": {
          "id": "1206cdd7-9740-4d8d-b78f-beda2ba21874",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3796094e-7275-4ee9-b640-db13e548b07e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cca740-63a6-4ee5-b313-79721166ce5e",
        "cursor": {
          "ref": "1a9eeffd-295a-40f2-b7da-009f6c17070c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1a1e18c4-e752-466c-aee5-12bbe6e51e70"
        },
        "item": {
          "id": "c6cca740-63a6-4ee5-b313-79721166ce5e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "82dd75a2-2e7e-41ea-9398-d78feb47e120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0302f07e-0d4f-4368-a512-f55df03c0b89",
        "cursor": {
          "ref": "44c3792b-189d-4ae7-b18b-0d1a32104b63",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "46ba5bb9-b8f9-4cca-8922-1de2ffbc94f6"
        },
        "item": {
          "id": "0302f07e-0d4f-4368-a512-f55df03c0b89",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f9dce84e-5dfd-422c-94bb-f4da13d2cf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0359b7ba-1f91-4842-91f0-54441c418389",
        "cursor": {
          "ref": "126b9b1f-6106-4cd3-9033-0be5a1036b5f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1bdbbbc7-99e5-443b-bdc5-d4aa89529ae9"
        },
        "item": {
          "id": "0359b7ba-1f91-4842-91f0-54441c418389",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f327777-3952-4532-8806-6e567c6e6396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dca5cd2-3e8f-4d1f-8792-83cb7b609bee",
        "cursor": {
          "ref": "57490d16-b772-4b40-850f-19631ec16ac5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "288db450-ac66-4def-8a7e-b6c84c4577a9"
        },
        "item": {
          "id": "7dca5cd2-3e8f-4d1f-8792-83cb7b609bee",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db692bd1-238e-4595-a73b-4551728e5820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae34d041-0086-4adf-87c2-fe2e62ae7f4e",
        "cursor": {
          "ref": "74fea861-fcf8-4180-8bd6-78543947bd47",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "29de328b-3e43-4020-80e1-a44aa92b0281"
        },
        "item": {
          "id": "ae34d041-0086-4adf-87c2-fe2e62ae7f4e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b249118e-2ffd-4ad6-afba-8dcae87c4839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed18e50d-b6ef-4410-854f-f99e2ddc9936",
        "cursor": {
          "ref": "e3623fda-ec47-4e66-9e89-59a4c1ece664",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "797fb387-3c08-45eb-a1cb-079f20daa253"
        },
        "item": {
          "id": "ed18e50d-b6ef-4410-854f-f99e2ddc9936",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "38d4c6b8-e31e-42a4-a214-6b4b259844dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77af233f-bd4d-4ab2-ad71-f21b1b53b294",
        "cursor": {
          "ref": "61124c28-4509-4981-b007-c7c44c78ec8c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a47adb50-b7c0-4d6a-add6-9154f4b61179"
        },
        "item": {
          "id": "77af233f-bd4d-4ab2-ad71-f21b1b53b294",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "281c9272-e62e-4f44-a3fb-647391c6adfb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6576804d-e7ba-4e1f-aa89-5a1a55de098b",
        "cursor": {
          "ref": "5770a812-25bc-469b-8c29-44b5cbee04b4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "278f3a3b-4267-476e-ab8f-e5881d563056"
        },
        "item": {
          "id": "6576804d-e7ba-4e1f-aa89-5a1a55de098b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9e2053ed-f7bd-4607-ab8c-d56700163ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15174fea-8b07-4015-9afd-4159eb14223d",
        "cursor": {
          "ref": "61c0f87b-43d9-40ba-b4c2-3ca099fc1f2f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "498497f9-ee12-475b-8498-cae57933be5e"
        },
        "item": {
          "id": "15174fea-8b07-4015-9afd-4159eb14223d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dbf2d73b-ce56-41e7-9e9b-283a08eaa478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b36a061-d2fd-4438-beef-6ef8055f4824",
        "cursor": {
          "ref": "5ae25930-1c39-4e81-8b7b-47ed0727d585",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5b7318c8-976a-42b0-af28-f9abc74390a9"
        },
        "item": {
          "id": "2b36a061-d2fd-4438-beef-6ef8055f4824",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4be48ec9-da94-43f0-9987-b93539dcff5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aca9ea-6691-4303-9f0e-8f9dada37ed1",
        "cursor": {
          "ref": "ac4c6924-b561-40c8-9496-5b3c1fcd644c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d4885776-fcd9-4888-b1f6-67e6529dc8b1"
        },
        "item": {
          "id": "06aca9ea-6691-4303-9f0e-8f9dada37ed1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "32e3866a-92ba-470c-9ccf-55a5a81e28ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35335d2-7b1f-4ba0-bec8-cca8710cf047",
        "cursor": {
          "ref": "432cdae5-a99c-4acc-b303-a6cd9824494b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5e0627c8-864b-4fda-a5c8-71437d9a686c"
        },
        "item": {
          "id": "d35335d2-7b1f-4ba0-bec8-cca8710cf047",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e3e359d5-c80b-4b41-b5d6-3913028f1537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b26dfa-cc93-46de-a96a-0cedefe3cb92",
        "cursor": {
          "ref": "d813d359-f6d7-4460-9744-07a20a573d48",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e9cd7b17-e81b-4962-9c55-6885fd57869e"
        },
        "item": {
          "id": "14b26dfa-cc93-46de-a96a-0cedefe3cb92",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "54d052ec-bf9f-4eee-b293-02a74b1c2780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e9b81f-c0d1-4d3f-9e22-dcb78ae9d24a",
        "cursor": {
          "ref": "30beabd2-3468-496b-9a71-7822897f8e60",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cec8b740-4a55-42fa-9136-cd641baef97c"
        },
        "item": {
          "id": "b3e9b81f-c0d1-4d3f-9e22-dcb78ae9d24a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "901504a7-28ce-4333-a49e-e064021315e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9786f646-8668-4751-93c2-4df91138550a",
        "cursor": {
          "ref": "50252c80-7c8b-497b-820d-104121d27454",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "43e25782-9d9e-457f-8e8c-d5920491c2ee"
        },
        "item": {
          "id": "9786f646-8668-4751-93c2-4df91138550a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4ca94eeb-e123-43d8-955f-57928e3b0477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4145c58e-4705-439f-86af-0eb834d05164",
        "cursor": {
          "ref": "3f6cffa4-ec96-424b-9e2d-1fb331c9a204",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "702bc031-5a9d-45dc-8c02-0e8df7a1a2d9"
        },
        "item": {
          "id": "4145c58e-4705-439f-86af-0eb834d05164",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3afa1e89-e488-4e12-a456-940fbb49fb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d761f936-14fb-49a6-813e-66c438a9db54",
        "cursor": {
          "ref": "c11405c2-de73-4972-b3d6-038788711bc8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2a966d40-a087-469a-a9fb-ed534b5d0b9c"
        },
        "item": {
          "id": "d761f936-14fb-49a6-813e-66c438a9db54",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "52feb671-d408-4449-af74-0e00c28c24da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3230a5d4-3620-45e6-932c-69008831c9aa",
        "cursor": {
          "ref": "d1ed054d-de0f-4f96-9097-bc38ce32dd7d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "48eb377f-ccb2-44fd-896d-de76c5b62929"
        },
        "item": {
          "id": "3230a5d4-3620-45e6-932c-69008831c9aa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "614f4082-047d-4a7b-8961-c69aa328f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04ae116-5849-43de-9a5b-d2643068527e",
        "cursor": {
          "ref": "b61a1f2f-37da-48c6-8ab5-16bd48d34c6f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "389bcd6c-51fd-414d-ab3e-3629f1c2b3bb"
        },
        "item": {
          "id": "c04ae116-5849-43de-9a5b-d2643068527e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "571835b1-618c-4c13-b1fd-6eccc84d2f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb763750-acbf-4067-8c2c-7fea7d12c6a7",
        "cursor": {
          "ref": "54a7f07d-f403-4233-9055-ee45c4c05f5a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9079343d-2e44-4006-a4d4-41227c6dbc70"
        },
        "item": {
          "id": "bb763750-acbf-4067-8c2c-7fea7d12c6a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6b666e08-97bc-40e4-abbc-49a78f588dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d4ee8f-7da9-41df-b733-d464ef2a73f0",
        "cursor": {
          "ref": "4f0c0c27-b63c-40b3-9ca4-4f5379d09d80",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "95a0802e-899c-4d7e-93f8-3f4b848de262"
        },
        "item": {
          "id": "09d4ee8f-7da9-41df-b733-d464ef2a73f0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "15f1c5c1-6f37-4248-9c3e-d9b7df54b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef925f-5ae8-46f9-9d4f-2d4af5be28d0",
        "cursor": {
          "ref": "9527b3cd-cdb5-4ab2-bdaa-f172e532e522",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4987aa1e-72c1-4ea8-a1af-5df26dd1669b"
        },
        "item": {
          "id": "f8ef925f-5ae8-46f9-9d4f-2d4af5be28d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d7e81dd7-9ae1-4650-83e5-00dcd20b365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa3bf4-33e8-4843-803a-3ff14ebb98b7",
        "cursor": {
          "ref": "bb121183-eeff-4640-94a7-fa756d540197",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "75c69f04-fb37-4772-86d3-58a494f609b4"
        },
        "item": {
          "id": "ffaa3bf4-33e8-4843-803a-3ff14ebb98b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5ddbc012-6689-428e-9f13-b0bccae5f7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbd037d-d501-48c8-88b9-44b455d2bba3",
        "cursor": {
          "ref": "4eb7fc08-e0a7-4fe3-ac36-8c846a9d0dbb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ec618541-c56e-4f84-9cc7-a5e7e1264dda"
        },
        "item": {
          "id": "1dbd037d-d501-48c8-88b9-44b455d2bba3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "825148a4-d6f7-4dea-9ee2-61bf5021c52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61064a-b887-47d9-a956-ab12ef03c215",
        "cursor": {
          "ref": "0f3b0b6c-246c-4929-a4ef-a451a5b173ef",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "218a12e1-7a4f-4be7-8959-e4343815de9c"
        },
        "item": {
          "id": "ed61064a-b887-47d9-a956-ab12ef03c215",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f1044150-c8d2-47ee-93fa-ca0bcd05e984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82251f83-327c-4db8-8c40-ea7be9085146",
        "cursor": {
          "ref": "3c1fbffb-d6e8-4d05-b803-f43be54e3fe9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5a286de0-68c1-4b4b-b1f5-4780b8c34019"
        },
        "item": {
          "id": "82251f83-327c-4db8-8c40-ea7be9085146",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d62d9619-850b-45de-81a8-83ffc275f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf9cc38-6220-4039-8341-211ffc126d64",
        "cursor": {
          "ref": "f4662e80-8325-4019-9d7d-eabb80632ef6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7794451f-99cf-4d66-87f7-03e251b5e782"
        },
        "item": {
          "id": "aaf9cc38-6220-4039-8341-211ffc126d64",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "efc38880-f385-40fc-ba14-0a1165b13105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6b53ca-09b5-4fca-adb0-25f33fd937c4",
        "cursor": {
          "ref": "b4c3e4c9-5596-4446-ab49-d29dca5c9b89",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "691424d6-f4b5-4988-87ad-6e5cd5f90e9b"
        },
        "item": {
          "id": "bf6b53ca-09b5-4fca-adb0-25f33fd937c4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f3d8849d-6f7d-442e-8d6c-cbdae941f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030d943f-1548-42e3-a915-e374c3fc582a",
        "cursor": {
          "ref": "7027d093-94cc-4d36-9f7d-886d1ceceec6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7eac2280-0aff-449e-953f-14c046eeea29"
        },
        "item": {
          "id": "030d943f-1548-42e3-a915-e374c3fc582a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "64163447-7987-4304-a734-5a379cc6de20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caa34bf-bd37-43ac-a2df-f7ba479160a8",
        "cursor": {
          "ref": "938a3bd0-4bc5-4ccc-a3fb-aa235102e7f8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a3f1fb08-88f3-4d3e-b960-14928cec0165"
        },
        "item": {
          "id": "7caa34bf-bd37-43ac-a2df-f7ba479160a8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ce702ce8-b154-4051-9e05-c4bd0cdeb0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853f1687-7205-4ecd-99c1-011f240e7c99",
        "cursor": {
          "ref": "4a2b14fe-dca9-4187-8a00-59d692ad4b84",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "708d857e-514c-4877-9b6c-70ab36824619"
        },
        "item": {
          "id": "853f1687-7205-4ecd-99c1-011f240e7c99",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a7d951c7-4c96-450c-bbfa-ecce199b2289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c732823b-80ce-4533-9ae9-583ce8e4095c",
        "cursor": {
          "ref": "7f5f136f-8ae0-4c31-aa4b-ad04dd686ddf",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f73e2a7a-d797-41d4-8e9b-2a1cb319d0c7"
        },
        "item": {
          "id": "c732823b-80ce-4533-9ae9-583ce8e4095c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4e4c8f9d-c501-43b1-a1e1-8685abd159e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f842009-af32-47f0-a260-3af9f529528c",
        "cursor": {
          "ref": "d0681549-a459-47c4-9b40-31b5bd3d1728",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "75e9fd85-709b-4bc7-b63d-80a9e0a3ca5c"
        },
        "item": {
          "id": "5f842009-af32-47f0-a260-3af9f529528c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1c4c35de-da2a-425f-b600-83863afa1a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a1acec-3866-4eff-b354-631196b1e089",
        "cursor": {
          "ref": "4fbde10e-f5cc-4782-8aa8-c25d26615265",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "475ced5d-40be-49db-bf18-d0cfdf9c965e"
        },
        "item": {
          "id": "14a1acec-3866-4eff-b354-631196b1e089",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d2af4cf-1217-42b1-a372-b3bafb7cc596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f661045-45bf-4b39-bdcf-d3fd4ee0daf7",
        "cursor": {
          "ref": "7932f29a-edf3-4120-a71c-8a3023682c74",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "056e1cd3-fd84-40d7-b42f-00910940ba44"
        },
        "item": {
          "id": "0f661045-45bf-4b39-bdcf-d3fd4ee0daf7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4d7db16b-c16b-46dc-96ff-18c8f07491f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42987f02-94fd-4582-aa7f-d3ec5be74716",
        "cursor": {
          "ref": "43972f7a-280c-4bd7-b941-0eb723ced557",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "289a3ef4-e33f-49cf-8f75-f5b0f2ca1b78"
        },
        "item": {
          "id": "42987f02-94fd-4582-aa7f-d3ec5be74716",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ffd10683-7046-4b55-8773-54b08d4b816f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499f6b9-8d6a-4802-99b4-ac8a8a5d0dfd",
        "cursor": {
          "ref": "7b44523e-6f1c-43ac-aa86-5e0d41719f02",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa4da2e1-0995-4530-abf8-19d56bd6a7d8"
        },
        "item": {
          "id": "5499f6b9-8d6a-4802-99b4-ac8a8a5d0dfd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d53f183a-8fde-4c2d-9ccd-45ad08be2306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149a6572-4a92-40ad-9d47-888d34a65a2f",
        "cursor": {
          "ref": "54a58e3e-4d68-450e-b198-cf9b24a8a673",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b770d772-3327-406f-9ef8-c45a09d04c12"
        },
        "item": {
          "id": "149a6572-4a92-40ad-9d47-888d34a65a2f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a38abd27-c0de-4dc1-81f4-9d07c848674c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde83b17-9b57-48b2-a614-cee1e0474309",
        "cursor": {
          "ref": "b132c896-4baf-4c97-96a6-bdadff51e502",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a4c91288-486d-4953-8a84-772f2a349dc5"
        },
        "item": {
          "id": "cde83b17-9b57-48b2-a614-cee1e0474309",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ee383ac9-e7a3-48ec-ac7d-71845a571905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb4f19a-06c5-47fa-bc3b-3a025957bcd4",
        "cursor": {
          "ref": "beed611b-963c-4b03-8aaf-bbcc59b370e1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e7cf5526-967a-4e8a-abb6-e35951e0609f"
        },
        "item": {
          "id": "0cb4f19a-06c5-47fa-bc3b-3a025957bcd4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2c285245-b37a-418a-8d7d-6b0da194a650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e30c26b-5a13-4f68-bc6d-4cb0c6b0f65c",
        "cursor": {
          "ref": "a780b1ee-ada2-46fb-b9bd-2ae950eef406",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0cdb850c-fd77-4e10-9219-c050b293ac5b"
        },
        "item": {
          "id": "4e30c26b-5a13-4f68-bc6d-4cb0c6b0f65c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a4d06aee-97f1-4107-9915-3bdeb496190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd24044-7e40-4c01-8d29-d6a47426b8a5",
        "cursor": {
          "ref": "911fbf67-91cb-4419-9f1b-50e3dfd9014e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "91f89d2b-362b-4e48-82b3-0e62ee14d1de"
        },
        "item": {
          "id": "edd24044-7e40-4c01-8d29-d6a47426b8a5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e8c4a4be-76de-49cd-ac67-c2029bf65c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd3be2-8e20-4ba4-b9da-4cdf02c8c828",
        "cursor": {
          "ref": "74be2f88-f12f-4436-81a8-7d3e1e78764f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6a6060a5-33fc-4b2b-936e-88d75020db66"
        },
        "item": {
          "id": "2ddd3be2-8e20-4ba4-b9da-4cdf02c8c828",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bf8c6487-c345-4aca-92f0-b0191523b60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cede2b4b-9722-4e9a-815d-1702c966c50e",
        "cursor": {
          "ref": "b7d1cf8c-a86f-4a3c-bcc7-1e1e4de54ba9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "875de440-8b10-4a07-850f-64e5994afb29"
        },
        "item": {
          "id": "cede2b4b-9722-4e9a-815d-1702c966c50e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03652f29-2f4c-4058-af72-5fb18b0bb765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9193a181-86ff-4c4c-ad2e-014411c0c314",
        "cursor": {
          "ref": "afa45ffa-5b6d-442a-b94c-f18d8f49cf8c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0851aa56-bb85-49e7-a3d9-3d11d1fc2c3b"
        },
        "item": {
          "id": "9193a181-86ff-4c4c-ad2e-014411c0c314",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5a13bd7e-528f-4330-b4d8-4131922cc524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0b63bf-1a65-4893-ac5e-8c076228d4f3",
        "cursor": {
          "ref": "bcf32b00-4b10-49db-a66d-fd8e42fd84a8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d1084633-1e4f-4f97-bcf6-cde8b09fc45d"
        },
        "item": {
          "id": "fb0b63bf-1a65-4893-ac5e-8c076228d4f3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "457544a6-d0f7-43aa-82cc-60b3f3103939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467fe63a-5638-4d42-8d5c-0cd3d6996295",
        "cursor": {
          "ref": "e57f50bc-f85b-4101-96f4-06f675851335",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06b42638-6894-4496-b70f-00b9f416a0c1"
        },
        "item": {
          "id": "467fe63a-5638-4d42-8d5c-0cd3d6996295",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b3f5a7a-fc2f-4d35-9862-a6cc677b7532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d071cf72-c512-42e3-ad60-95bddb4f5fcc",
        "cursor": {
          "ref": "323c2317-a064-4ff6-a5fc-ab0124f5b3f6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e51b7e37-6eae-458f-9eaa-f580da4789e3"
        },
        "item": {
          "id": "d071cf72-c512-42e3-ad60-95bddb4f5fcc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a5d46174-99ae-4e91-9a98-b8732e235a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573e4fce-5f25-49c7-926f-67016a0903d0",
        "cursor": {
          "ref": "bf06be27-a1f2-4cc2-8ae0-01d12956924a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "05ed008d-9835-40fb-ad47-1c455309b1f3"
        },
        "item": {
          "id": "573e4fce-5f25-49c7-926f-67016a0903d0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "370d110d-c8bf-4123-a88e-06c45b66960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a7538a-69d9-4fc8-86b4-a2fba9517cc4",
        "cursor": {
          "ref": "22ac4ff2-fedd-411b-9e8c-c70768a4814a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f7253111-436c-4b2a-9f0c-cab12df67b4d"
        },
        "item": {
          "id": "72a7538a-69d9-4fc8-86b4-a2fba9517cc4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8709b337-aa4c-4beb-8606-a6262b271c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4f7518-ea77-42c7-b732-c20c7d81610c",
        "cursor": {
          "ref": "8e2f0ee7-889d-4568-ab2b-a1a9e10c695d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d57cb3a-9bf9-4dda-be9c-8013f1f59dd7"
        },
        "item": {
          "id": "3b4f7518-ea77-42c7-b732-c20c7d81610c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "23dccec2-2b11-4436-a817-d72ec8a53c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ee6cd-c961-4801-9f3c-6e533f5ba5ad",
        "cursor": {
          "ref": "e51df922-3cc6-4f39-b02d-e0f46231d18b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0f201732-1350-4ff7-924c-3d2e35836821"
        },
        "item": {
          "id": "792ee6cd-c961-4801-9f3c-6e533f5ba5ad",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "328b275b-fb67-49ad-a090-5e212403f247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c750aa-0ee7-4d9d-a4e5-d6dedcc1da1b",
        "cursor": {
          "ref": "36b92889-f5b9-474c-bfd9-a6f247478693",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a6fd933b-02b2-4461-8c7a-645f157e8b64"
        },
        "item": {
          "id": "d9c750aa-0ee7-4d9d-a4e5-d6dedcc1da1b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1fab10f2-b79c-429c-a77e-08ca2b4b81bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561fc1a7-c934-401d-b35b-ea7927a0763b",
        "cursor": {
          "ref": "1f1bebac-2d20-40e7-8efe-5c98faa73182",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "74de6dc9-1ca5-48b1-a473-0a93f8cea99c"
        },
        "item": {
          "id": "561fc1a7-c934-401d-b35b-ea7927a0763b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f96cfa53-91c8-4d79-b799-4bcf25005dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbaf427-596c-498d-b431-e419a750216a",
        "cursor": {
          "ref": "ca28e2c8-e3e7-4505-9848-4bdd7576e075",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "88d285a5-27b9-4ea7-93dd-08a513935ca6"
        },
        "item": {
          "id": "4fbaf427-596c-498d-b431-e419a750216a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ba7682b5-be95-49a0-8109-573b090abf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ab8ca8-7917-4cf2-9368-706dc4e72f3b",
        "cursor": {
          "ref": "de42d844-3069-4738-b746-bdd881c51340",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ba45d414-180c-4dae-835e-8719634b72ac"
        },
        "item": {
          "id": "d9ab8ca8-7917-4cf2-9368-706dc4e72f3b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "27b8a2b5-785a-478c-b79d-b24c2936d0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3780185e-cc6c-4499-a6cb-2df95148591c",
        "cursor": {
          "ref": "5a8922f2-9c09-4d6d-88f2-14767924abfe",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7ec37ac2-3511-4283-9fad-a03b2e599d03"
        },
        "item": {
          "id": "3780185e-cc6c-4499-a6cb-2df95148591c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f4b4f00e-aff3-47f9-8d63-d7b0d6031779",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edd0436-d2b1-4d10-a73a-42f85a1587f4",
        "cursor": {
          "ref": "2425a1d3-b0e0-4f54-b9d4-26cc4bd2049c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c2c0b8cc-8fb4-464f-9004-4f3735e2e4c6"
        },
        "item": {
          "id": "8edd0436-d2b1-4d10-a73a-42f85a1587f4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8ade276d-70f2-4c0b-a4e3-2cef93d48a24",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 26,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e6e4a-cd9a-4a48-9b1f-e575f15315fb",
        "cursor": {
          "ref": "52df4e3c-4dbe-4029-b16d-7c2a6581c264",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "718a5239-4cf1-476c-91e7-e7eebc086685"
        },
        "item": {
          "id": "f25e6e4a-cd9a-4a48-9b1f-e575f15315fb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e19a8ca0-daaf-426a-91fb-e68b35bc7864",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e26a4f1-401a-4c35-bcca-cb132d6fadce",
        "cursor": {
          "ref": "d8a87499-1606-47d8-b8a7-095e4f7c8a4b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6717baae-a62e-4429-a6be-0c40f541dafd"
        },
        "item": {
          "id": "1e26a4f1-401a-4c35-bcca-cb132d6fadce",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9ee0c84b-c047-44be-8e35-67408c1ec89d",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbae16a-7c3f-4843-9b7b-7e573b14c086",
        "cursor": {
          "ref": "c69ad75a-efbb-4be0-bf7c-2f3d32eefabc",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "673c02a1-c7ba-454e-a59a-870a6c7f26db"
        },
        "item": {
          "id": "fcbae16a-7c3f-4843-9b7b-7e573b14c086",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "702d45bd-93c6-4c6a-97fb-5cf20292e74b",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4aa578-e150-48c9-b609-0e65b9a5334f",
        "cursor": {
          "ref": "74abd41b-8780-42ba-bb77-fc6f456dd81d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2dd7d7a2-5df6-4834-82a6-f44cccd0a6b9"
        },
        "item": {
          "id": "5e4aa578-e150-48c9-b609-0e65b9a5334f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "db6b17a0-dfc4-41ce-b6fe-0a2e8858729b",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e743769-743d-4e48-8a77-0c74873be2b5",
        "cursor": {
          "ref": "061613b4-006c-4697-94a1-3bafe5583c19",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "01d23d88-3f9d-49e1-af04-918e9af6be97"
        },
        "item": {
          "id": "7e743769-743d-4e48-8a77-0c74873be2b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "72bf4d51-b79e-40af-8c92-cbf8952c5767",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a79ca79-1f0b-40b6-9c29-5c0f063d9e47",
        "cursor": {
          "ref": "7f75a8d5-a629-4e97-925b-d53861480496",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ddf23ba9-ab9a-4220-aca3-887c3802830c"
        },
        "item": {
          "id": "8a79ca79-1f0b-40b6-9c29-5c0f063d9e47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "69aeb39f-0f69-4357-8241-fe70d7882cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a79ca79-1f0b-40b6-9c29-5c0f063d9e47",
        "cursor": {
          "ref": "7f75a8d5-a629-4e97-925b-d53861480496",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ddf23ba9-ab9a-4220-aca3-887c3802830c"
        },
        "item": {
          "id": "8a79ca79-1f0b-40b6-9c29-5c0f063d9e47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "69aeb39f-0f69-4357-8241-fe70d7882cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa3b0fb-9b74-4366-9403-d0cda13244d4",
        "cursor": {
          "ref": "f3651224-dbad-4678-b0d2-a63072d08a91",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "91f2aae7-8487-4cd3-aa45-52da5db23b2f"
        },
        "item": {
          "id": "afa3b0fb-9b74-4366-9403-d0cda13244d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7c47da0-38b4-425c-b9c7-e8b5f46b8c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a428e-fbde-42dc-a9b4-114a6e9907b9",
        "cursor": {
          "ref": "da09942f-86c5-4237-b5fb-d7de4f8ce0d4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3f93a4c8-bd97-4ce9-b3f7-4f7ec70add74"
        },
        "item": {
          "id": "4e1a428e-fbde-42dc-a9b4-114a6e9907b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "802b1396-e88c-4024-8c2a-a90a70156f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5ab7a9-279b-4f98-a225-49003db9827f",
        "cursor": {
          "ref": "466b3ab3-06c7-40ca-aaae-8ed49d370831",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "58ab8c50-8d46-4d14-bf2c-807ddd123cbb"
        },
        "item": {
          "id": "af5ab7a9-279b-4f98-a225-49003db9827f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bdcbe52c-9bbf-4a9b-a177-e58ac0ea5ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bb4974-1388-4f63-90eb-4eda2476842c",
        "cursor": {
          "ref": "5886897e-329a-4361-a105-20cd2a655f78",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2a4116ec-dd91-4c68-8947-4c73778b29dd"
        },
        "item": {
          "id": "51bb4974-1388-4f63-90eb-4eda2476842c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3045fcfc-9904-4da7-9535-cd9d3200b3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b05e49-54bc-46e5-9092-d19af65b7423",
        "cursor": {
          "ref": "9073d8d0-8111-4f20-b5d6-f90cdee81fbb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7eae1752-bed9-4549-9e4b-7ce1ac59f3c0"
        },
        "item": {
          "id": "20b05e49-54bc-46e5-9092-d19af65b7423",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fea8200a-9038-413b-abb0-f7b2c285c32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de40643-87b6-47f9-996b-19ec4f5e016c",
        "cursor": {
          "ref": "a7287f9e-336e-4e47-b22a-f2318c437935",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c8fb27a9-3ec0-4272-9768-5838a5c9bb4e"
        },
        "item": {
          "id": "1de40643-87b6-47f9-996b-19ec4f5e016c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "237dd515-abc1-455a-9fe6-6d692cf3d86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a64a34-5e4d-4386-a8f8-fa94db2b79b5",
        "cursor": {
          "ref": "01ee28ee-0d87-4af9-b14b-bbd71c3d02bf",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8ee9fc70-c6ed-4678-9864-12efa8fd1adc"
        },
        "item": {
          "id": "71a64a34-5e4d-4386-a8f8-fa94db2b79b5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c8c55a93-ca86-4b24-9511-58ad3a7731be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4db251-870f-4564-a024-e5e260241880",
        "cursor": {
          "ref": "9d90cde6-31b6-4a12-b933-8a926867d09b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "60978472-e2a4-476d-abb6-2497c0b362e2"
        },
        "item": {
          "id": "2a4db251-870f-4564-a024-e5e260241880",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2f9a529a-979c-4216-ae60-b93942d9fb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e516d19e-f2d7-4cca-9fb6-bcb18fb5f18f",
        "cursor": {
          "ref": "fba80f43-4d26-4ca0-a132-4e286c6db41f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "865bbe2b-3497-492f-b508-a31dd9f14df7"
        },
        "item": {
          "id": "e516d19e-f2d7-4cca-9fb6-bcb18fb5f18f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "667bfe61-b1f1-4864-a516-229d3bb1b51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85fa04c-194b-4101-a4c5-23a5c27ef638",
        "cursor": {
          "ref": "a6d98d67-388a-4399-92b1-c03f1a6f60d4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "be734d9d-3750-4f77-9885-84393f4bedf1"
        },
        "item": {
          "id": "e85fa04c-194b-4101-a4c5-23a5c27ef638",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58be9d94-bbd8-4b0d-93bc-68f45eab9640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba87b95-edc6-40e6-b47a-9458832b4ddd",
        "cursor": {
          "ref": "2ce375bd-405a-4c07-a47b-9f9bbb5b1f2f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b41000de-a044-48b1-a0e7-5bbfbfdf607b"
        },
        "item": {
          "id": "aba87b95-edc6-40e6-b47a-9458832b4ddd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c0bfa383-5f9c-47b1-859e-3f3394cc3fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120aaac7-b954-4f1e-9078-57a4ee560c15",
        "cursor": {
          "ref": "157b7f34-9c29-4f80-9ec7-064c5da38f6b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fb1a3802-923b-488a-a6e0-215b14addcf8"
        },
        "item": {
          "id": "120aaac7-b954-4f1e-9078-57a4ee560c15",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "89cf3c30-f58e-4b11-b918-7f0b66a5f738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae69abc-dfe7-4b14-860d-04e9a4e8f0a9",
        "cursor": {
          "ref": "56239428-9cca-4c30-ac86-069c441aac76",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "25aff311-5560-41f1-8883-218426bda271"
        },
        "item": {
          "id": "eae69abc-dfe7-4b14-860d-04e9a4e8f0a9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d158dbd8-2d50-48e7-b3c9-8b12c12a7ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce5cc4d-24bd-4327-a1e2-c95df4875e86",
        "cursor": {
          "ref": "07223143-1b92-40bb-a465-5f9ab7aa7be0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1e50ed1d-3f5f-4f2f-9d00-41416cdf5c1e"
        },
        "item": {
          "id": "3ce5cc4d-24bd-4327-a1e2-c95df4875e86",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c409649-00ad-44d7-a4b6-372e560b6d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e94bac-b8b6-447c-8ac3-54127ca6b1fa",
        "cursor": {
          "ref": "d5d2e050-e95d-416b-a139-07c452237a3c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c4d73dc9-0b68-4fad-b1b5-3e4bcee40c3a"
        },
        "item": {
          "id": "d6e94bac-b8b6-447c-8ac3-54127ca6b1fa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48bd677d-742b-43e1-9795-b8dc3c7127e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4c19cd-46d3-4659-a3e5-9b6df96bfc99",
        "cursor": {
          "ref": "c955f9bc-aa2a-4943-8d73-26e2d966f085",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aad54dea-bf46-48ea-8ac1-3710f265f4f3"
        },
        "item": {
          "id": "ba4c19cd-46d3-4659-a3e5-9b6df96bfc99",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "456abb63-ed09-4610-b71c-4deae682ebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2bd67d-0413-4151-a8e9-1387ac7feffd",
        "cursor": {
          "ref": "0b6d6bc5-4676-4603-abce-91de2ea1be65",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ba06d397-bd52-468a-9310-b2b4aabb0b02"
        },
        "item": {
          "id": "4f2bd67d-0413-4151-a8e9-1387ac7feffd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "198105dc-60be-4c7f-a933-5becbee4acce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1d86bd-f3c9-4c87-b8be-559190557747",
        "cursor": {
          "ref": "dfb50eec-ae03-4545-b2b6-77e96b9eacee",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1f07a48d-4337-4635-8077-1d2647b0fce3"
        },
        "item": {
          "id": "ac1d86bd-f3c9-4c87-b8be-559190557747",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "38f3459d-15a3-4ecc-bc76-3e2b367ef832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb55e5-aa62-49ef-a5e1-fa46f1593f40",
        "cursor": {
          "ref": "efba5b44-de4c-4f24-ad42-aea71bcb77d3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1cffeae5-d271-4f37-8faf-d4044baa6d1e"
        },
        "item": {
          "id": "3cdb55e5-aa62-49ef-a5e1-fa46f1593f40",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "00c307f1-f557-4d35-8d71-2ab21dd6b5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2748ea91-ee4d-43c4-9350-297b52300856",
        "cursor": {
          "ref": "2293c2d4-edd0-4dcf-9dc4-da044ed199c6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "50b3dd1d-f243-45be-bb81-e89166bad7dc"
        },
        "item": {
          "id": "2748ea91-ee4d-43c4-9350-297b52300856",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b19aa429-cf3f-401b-a504-af279b1dacc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53510917-858f-40c4-af35-3676c600ec8e",
        "cursor": {
          "ref": "a393a073-df71-4400-b81d-9205da40773f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "68b30e46-77c9-4991-9234-563c6870aa21"
        },
        "item": {
          "id": "53510917-858f-40c4-af35-3676c600ec8e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b2f24289-ceff-47ef-bca0-dabd4f2ccd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973cdd97-ac31-4a77-bd45-4656db09079d",
        "cursor": {
          "ref": "cef61e6d-4992-40eb-8030-4bb07772a3a7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ff87e147-bd92-41b6-8b8b-f9bfcac499ff"
        },
        "item": {
          "id": "973cdd97-ac31-4a77-bd45-4656db09079d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a26a989f-872f-4f0d-86d9-6c39da7a2ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ad9d4-f84a-4e96-b88e-9c8fba95b1cd",
        "cursor": {
          "ref": "611cfdda-b27e-43c2-8dfe-52b366d0cff2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "63bc47b0-5e2c-4105-a741-696f9241c7a3"
        },
        "item": {
          "id": "c69ad9d4-f84a-4e96-b88e-9c8fba95b1cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ef760ef-3d94-4da2-a118-9a2d55fd2ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d18e69f-1e3d-40ab-be7d-84ab37935bde",
        "cursor": {
          "ref": "4d1efb4e-4005-454e-b6b6-cbf6c1daf225",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a384be14-0f71-4362-9110-0632c4877d27"
        },
        "item": {
          "id": "1d18e69f-1e3d-40ab-be7d-84ab37935bde",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b1089ca-02fa-4dd0-913e-56314b68e427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5436cd-4fdb-45c6-a0f8-e56661591afd",
        "cursor": {
          "ref": "8fac8e6a-b274-44a6-b4e0-06f52e211b1c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "719fe55d-8107-473c-8dd4-129c90ab86f9"
        },
        "item": {
          "id": "ab5436cd-4fdb-45c6-a0f8-e56661591afd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "245d6931-0d0d-45ec-bdab-55c8ff0c127d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f27175-1290-49c6-bdcb-44442cb64be5",
        "cursor": {
          "ref": "d6fd3ac5-5854-449a-9dbb-1b6e378ac7e1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e6233c34-3653-46c2-b44b-22943d80005e"
        },
        "item": {
          "id": "b1f27175-1290-49c6-bdcb-44442cb64be5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bc2ccc09-bcdf-4c19-8cc4-baf12fd5f4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31992e2-9acd-4b63-b458-6c7b61bc4b4a",
        "cursor": {
          "ref": "97be7807-44bb-4d49-8ef5-47ec815277c7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "557c2b2b-8ef7-4ff4-9c22-2d84c06c60db"
        },
        "item": {
          "id": "b31992e2-9acd-4b63-b458-6c7b61bc4b4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5022d6e1-b530-49eb-84e0-32590595a090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324ab133-11b7-4489-8cc6-6ebbbed5b8a4",
        "cursor": {
          "ref": "50dc5a93-a3cc-4a7f-8152-88a662bbb113",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "601eef8c-4d99-46e8-9313-2f169fef43e3"
        },
        "item": {
          "id": "324ab133-11b7-4489-8cc6-6ebbbed5b8a4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d31e84a-09ed-4afa-952b-948d55263967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed83fa7-28b3-436e-9bf2-5961074fedba",
        "cursor": {
          "ref": "c0d5ee7e-8ba7-446a-9719-a53e3ff52737",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1eff541e-c1af-4101-8ca9-aa44f3c05d29"
        },
        "item": {
          "id": "5ed83fa7-28b3-436e-9bf2-5961074fedba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6a89304a-94b2-49d0-85e3-a5ca5b78050b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd98bf1b-7c50-46d4-9fe6-e4861cd114a6",
        "cursor": {
          "ref": "9370fb27-a60b-4d9b-9db7-54f262fa90b6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9c681d3a-f275-4aea-87c7-87805f1de2b7"
        },
        "item": {
          "id": "dd98bf1b-7c50-46d4-9fe6-e4861cd114a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "411dc511-5460-44ff-b35a-66a6d22275f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4bebcf-208a-4daa-a074-095dc0f0d043",
        "cursor": {
          "ref": "092318d5-65b9-4b82-a175-3344b607f6df",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "12907e84-a247-42e1-a198-2efd09c85c61"
        },
        "item": {
          "id": "9f4bebcf-208a-4daa-a074-095dc0f0d043",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7ccab691-7c16-4193-9af5-c45a93c1cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd1e071-f117-48ee-baf0-b4ffc4d8c059",
        "cursor": {
          "ref": "9a7b6322-0ac3-4569-a25f-4c73d8653a81",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "78b8dac6-3582-4f84-ad57-fc24699f1d81"
        },
        "item": {
          "id": "bfd1e071-f117-48ee-baf0-b4ffc4d8c059",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ea346df-fb12-47e7-bf21-da34fef8c555",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc928aeb-713c-420f-a661-1e1c0982e9b0",
        "cursor": {
          "ref": "d3db5ef7-a9ac-4154-ab19-81d99c84fad8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ba6d780-1724-4060-8c73-631e7a117e6b"
        },
        "item": {
          "id": "bc928aeb-713c-420f-a661-1e1c0982e9b0",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2fdaab18-5d4a-4faa-bbdf-3d148cb9ba82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a661ad-911e-460b-b240-8bc9052d3f17",
        "cursor": {
          "ref": "76a12600-4428-4446-87c1-86560a0dbf3e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1a78ddc3-149b-42c7-be94-ed70ed82fc0f"
        },
        "item": {
          "id": "f1a661ad-911e-460b-b240-8bc9052d3f17",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "45913038-c280-4351-9695-57a2a3d1ed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a661ad-911e-460b-b240-8bc9052d3f17",
        "cursor": {
          "ref": "76a12600-4428-4446-87c1-86560a0dbf3e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1a78ddc3-149b-42c7-be94-ed70ed82fc0f"
        },
        "item": {
          "id": "f1a661ad-911e-460b-b240-8bc9052d3f17",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "45913038-c280-4351-9695-57a2a3d1ed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b708248-11c7-4f4f-bee1-a92937eab9ab",
        "cursor": {
          "ref": "aabf4622-5932-4bc6-a83f-9917b311f004",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1931cea7-b647-42be-b216-8e2603a1a44d"
        },
        "item": {
          "id": "2b708248-11c7-4f4f-bee1-a92937eab9ab",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b86dbe07-d742-48a5-91f8-a779e08d4ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c3b88c-35aa-42c7-a281-0bc06a2360ff",
        "cursor": {
          "ref": "03de3bfb-efc3-498a-b7d6-42d2955eb04c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bd10eeff-6287-48dc-8082-1fceb65c1f12"
        },
        "item": {
          "id": "43c3b88c-35aa-42c7-a281-0bc06a2360ff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bdbb9fb3-7d11-4fcb-b9c7-25ac42aa7d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac19a685-ba9b-4ab1-845e-1b2d4a127312",
        "cursor": {
          "ref": "34696881-2492-4242-858f-7db83925a510",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cc0d9528-a400-4d84-af6c-a5c353bc1eb0"
        },
        "item": {
          "id": "ac19a685-ba9b-4ab1-845e-1b2d4a127312",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b48a89ad-02d4-45e2-b20e-1b1bc80a321e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a076363-af7b-40f8-b9af-c35606a75163",
        "cursor": {
          "ref": "2d13b12f-337e-4647-b376-4530867c9d95",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "50a6ca7b-1eaf-4abc-8608-af4d841db953"
        },
        "item": {
          "id": "0a076363-af7b-40f8-b9af-c35606a75163",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b8b5efc9-9fe8-497b-8791-44f4efac82bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed5fdde-4640-4dbc-821a-dee216b2f248",
        "cursor": {
          "ref": "93af3011-dc5a-4751-b6ae-858ec1063431",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e8dc3c6d-9195-4ca4-a584-901255b8eb29"
        },
        "item": {
          "id": "7ed5fdde-4640-4dbc-821a-dee216b2f248",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "915f7324-1124-4cee-a84b-a3563bf98fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b675c-c802-4497-8268-b25f3ce09448",
        "cursor": {
          "ref": "8ed9fedd-f55d-45e3-821b-1391621a341b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a3e418ab-9ebb-4609-80a4-8ae3694aede9"
        },
        "item": {
          "id": "ee2b675c-c802-4497-8268-b25f3ce09448",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4161f7c4-4723-4921-a99d-a97d6ae0eee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa56e3-9f6d-4a7d-8259-f9fc3de45e4b",
        "cursor": {
          "ref": "212cda2f-a3b1-430e-a274-ed49a9783f44",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d24e928c-afc8-4497-9486-6e99458364c4"
        },
        "item": {
          "id": "10fa56e3-9f6d-4a7d-8259-f9fc3de45e4b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4f76e02d-366c-44a9-b0bc-1cdc63952d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b24298-2a75-46a2-ac70-6ae1e380f12e",
        "cursor": {
          "ref": "1f7e5af0-7e86-44f0-9024-60c2c7304697",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "87d113f6-2fce-42a3-92d6-8b03417838e7"
        },
        "item": {
          "id": "58b24298-2a75-46a2-ac70-6ae1e380f12e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "863e3578-eafc-4d15-9b1d-6bfd334c1e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fffa147-7a89-4ec6-8628-10657c567f4f",
        "cursor": {
          "ref": "956be2c2-aa3b-45db-920b-72c1f08d976f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3b41c66c-fa5a-4386-b62f-ab0a6a55f7c9"
        },
        "item": {
          "id": "3fffa147-7a89-4ec6-8628-10657c567f4f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "124b1423-94cf-4e26-99c5-f74de287200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b774d-aa11-4da7-a19e-22ce7fbb3019",
        "cursor": {
          "ref": "7c20ff9a-9cb6-4776-bcd0-50300ce66f3b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca9d322f-8b7c-45f0-9073-8115e70602ee"
        },
        "item": {
          "id": "be0b774d-aa11-4da7-a19e-22ce7fbb3019",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6faa63c1-35eb-410e-8fd7-0cc968d8cdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3da0123-cabf-46f6-a198-ebc0fe3b4607",
        "cursor": {
          "ref": "90f912f1-5f27-40a0-87ab-fa4767e0d08e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "13ba17e9-b788-44ff-aede-4ff2d3e56c21"
        },
        "item": {
          "id": "a3da0123-cabf-46f6-a198-ebc0fe3b4607",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05014233-0f5a-4966-8728-f3e4721b87d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a1622-6c3f-47df-80c5-77453c85115e",
        "cursor": {
          "ref": "0a260d9b-2d86-42e4-af34-099fa265e832",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aa30d7a1-cf2d-4991-8b01-e87ce7adc5e9"
        },
        "item": {
          "id": "705a1622-6c3f-47df-80c5-77453c85115e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5e7b64c6-0811-4a71-ab31-23cd04c711f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfc727f-faf3-4978-aa76-9b2701ae8d98",
        "cursor": {
          "ref": "9b8c0256-c0f4-43b7-b223-cec919311688",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "67cdf422-916d-4dd0-947d-b13abe78ee26"
        },
        "item": {
          "id": "0bfc727f-faf3-4978-aa76-9b2701ae8d98",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "75013521-2143-4168-936a-27b704bcca02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cdbf3b-d637-4385-bd81-c3817123732b",
        "cursor": {
          "ref": "d88a2402-35bc-47f1-9119-107502af2a62",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "98718dc9-2b04-4582-bcb5-aa76856f93d7"
        },
        "item": {
          "id": "13cdbf3b-d637-4385-bd81-c3817123732b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "02c2fcae-976e-4ce0-8fcb-0696e545d420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610d4029-7ccb-4c88-b3f9-fc7e50c3c479",
        "cursor": {
          "ref": "79537dc4-c188-4c70-92c8-f06a27498ec4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5af2b3f1-d555-423c-bd94-369b50429ed8"
        },
        "item": {
          "id": "610d4029-7ccb-4c88-b3f9-fc7e50c3c479",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b89737a5-4ae4-436b-bd54-19b206971b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dbb04f-c9c1-48be-a3c1-866557014167",
        "cursor": {
          "ref": "73c2c8ac-a771-475f-ba12-1b64c7d9ffc5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "82910509-ac84-472b-ac3f-c7763da29a20"
        },
        "item": {
          "id": "17dbb04f-c9c1-48be-a3c1-866557014167",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34c199a6-5b74-4fa1-97d9-f3aeb4af550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f177dde-db62-4c07-b00d-574625c71c65",
        "cursor": {
          "ref": "cfcf9565-bcf9-473e-9553-d418e0ba85ce",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e4a4720e-7427-4360-9851-7b15c0b8f225"
        },
        "item": {
          "id": "2f177dde-db62-4c07-b00d-574625c71c65",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6e1107c0-98fe-4a81-b5f9-da563aeb9c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea101c7-135c-4fef-b2a0-da8bfbe06493",
        "cursor": {
          "ref": "8ae4a9c1-4ace-4dc1-93df-cc78b93ae029",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "63da55f4-43a3-4b39-8824-d91dc1743b78"
        },
        "item": {
          "id": "aea101c7-135c-4fef-b2a0-da8bfbe06493",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3032af2-eb17-4e3c-9c97-9a5a5f452329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cbdc1b-5804-4b9f-b951-2d1b257d9080",
        "cursor": {
          "ref": "1221a4f4-e02c-4c6d-b6c4-a9a4700b8ad9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5f5db32c-3606-4786-a7df-feea46d990fa"
        },
        "item": {
          "id": "70cbdc1b-5804-4b9f-b951-2d1b257d9080",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "730d9829-a33c-4b86-9fc2-3c6080a379ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffcd330-a6c5-45eb-b55b-7c158e394e06",
        "cursor": {
          "ref": "cfc62668-96a8-493f-88fd-87e30db34970",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "babd3561-4ca3-4405-8a12-3231a3cb4128"
        },
        "item": {
          "id": "8ffcd330-a6c5-45eb-b55b-7c158e394e06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4e770200-7b37-434a-b476-f94692b2c062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f9161a-ad98-4033-87fa-cee050f2c975",
        "cursor": {
          "ref": "b53c767c-2dcf-4dbe-bf2c-0bca049014ef",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9a2677d8-6fc8-499b-a3ce-713d1f193856"
        },
        "item": {
          "id": "12f9161a-ad98-4033-87fa-cee050f2c975",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3457d2c6-f6d9-42f0-8540-6c6d2542e5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e600a410-ee10-4621-828c-a6b49940527b",
        "cursor": {
          "ref": "a0daa7ce-c2d8-44c8-b09b-a02779305f39",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9b91e80b-eaee-4956-9b62-a24f68bbf47f"
        },
        "item": {
          "id": "e600a410-ee10-4621-828c-a6b49940527b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "00ff09e2-758b-4e35-92a5-a3e90c79f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357d18e7-29f1-45c8-a11b-20f93faaac30",
        "cursor": {
          "ref": "0c7d283d-4eb8-4084-b07a-0aa505e746a9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0006d156-510e-49ac-b73f-2be7cc056408"
        },
        "item": {
          "id": "357d18e7-29f1-45c8-a11b-20f93faaac30",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4ec2aa7d-4a2c-4afe-be49-fdef74eb22f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ee60eb-c5b6-4bc7-bf81-cbf869a448f9",
        "cursor": {
          "ref": "9d531f0c-19d2-4b6c-afe0-22e54eecda63",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b07b87c1-c850-48f7-ae7e-051275bd34d7"
        },
        "item": {
          "id": "20ee60eb-c5b6-4bc7-bf81-cbf869a448f9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4d0c137f-7076-44a1-9052-21eaea54d820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9648c69b-c2a6-4fa7-a657-3876f78efa32",
        "cursor": {
          "ref": "04b776fe-1eba-4354-a482-3dc68effb7ce",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "97664ec7-6616-4363-8476-a36720b394ba"
        },
        "item": {
          "id": "9648c69b-c2a6-4fa7-a657-3876f78efa32",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1dc20d53-c2ec-4d6b-bcfe-56411a9ab4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc1a8e-cc9e-4b8f-a014-37542b6d7fd3",
        "cursor": {
          "ref": "48e8af99-a566-412f-8baf-30c230842d4f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c8e1ed8c-70c2-4a17-b96d-ee76c6dc0ae7"
        },
        "item": {
          "id": "b4dc1a8e-cc9e-4b8f-a014-37542b6d7fd3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ea1c1a6c-01b6-41d8-86dc-f5df492f87d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d97cc01-c448-4259-ac60-095e66e519d7",
        "cursor": {
          "ref": "c19374bf-ca80-432d-8516-5badae27d98d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b6e91a05-bc2f-457c-ac4e-cd27f1c8aca0"
        },
        "item": {
          "id": "1d97cc01-c448-4259-ac60-095e66e519d7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "59d6f5dd-b475-484c-998a-e47f9fe1bfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e7b5ca-48ad-4879-b99d-c9ced897d00c",
        "cursor": {
          "ref": "b0ab6c47-611c-4171-9852-7fe25c85a97a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f2f1ae5-2f7c-4a0a-942c-8ebc290ed134"
        },
        "item": {
          "id": "85e7b5ca-48ad-4879-b99d-c9ced897d00c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ba4ccca7-be8c-4c31-a9c3-0645d590a2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500678a-d55c-4b07-a8d5-1ca583467b76",
        "cursor": {
          "ref": "26da1c4f-e3e1-4848-9cb7-ab33add9d3b4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f9048851-c0bc-42b2-8256-bb2fe02fa5d8"
        },
        "item": {
          "id": "e500678a-d55c-4b07-a8d5-1ca583467b76",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ab029c67-de7d-44ff-ada5-1e5fca80b84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1d865c-2218-4476-a0b6-cdcc3a04c1cc",
        "cursor": {
          "ref": "05b981da-cb93-4c2c-aee8-1b980afb0265",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "edd3d42b-9e56-4052-91d7-cf09ce26ed96"
        },
        "item": {
          "id": "0e1d865c-2218-4476-a0b6-cdcc3a04c1cc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8a889522-66cf-40c7-96b1-9a4088e18bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02164088-de87-4bf5-ab36-6a9954f7bc40",
        "cursor": {
          "ref": "a306ed1d-b2ce-42de-a27c-db9a0d48c30a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a526f506-1a60-4a22-b419-befa54965d24"
        },
        "item": {
          "id": "02164088-de87-4bf5-ab36-6a9954f7bc40",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fa16487d-7bb0-4e28-9864-868d63a4eea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a4cdbc-617c-442f-8010-b9846d88c8b9",
        "cursor": {
          "ref": "814d48c9-b01b-464a-af72-6a5790120774",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3a19ed65-8731-4a21-8e48-1cffe12bef20"
        },
        "item": {
          "id": "62a4cdbc-617c-442f-8010-b9846d88c8b9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3cac771a-ca6d-42ae-94c7-8b95be84a7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02e4a99-547f-419d-8b70-92e7db9347ce",
        "cursor": {
          "ref": "5d0d2aa0-cd01-4dc7-9470-11eafdceb80d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "86c0f25d-59ca-4275-80ee-35fa0cc9fc3c"
        },
        "item": {
          "id": "f02e4a99-547f-419d-8b70-92e7db9347ce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a071eb0e-4fdc-410b-a4b4-3c3929eff040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf333b51-4238-44f2-b979-a85798ddb7a3",
        "cursor": {
          "ref": "4f1a2ef9-768d-4c71-a22f-f4c5f48b092a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fb47b266-f879-4826-a0c0-c711b8f00070"
        },
        "item": {
          "id": "bf333b51-4238-44f2-b979-a85798ddb7a3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d206bad0-ca15-4690-ac2d-ee105aed051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db559e6d-0248-43f3-b6bb-afcb7a9ce317",
        "cursor": {
          "ref": "528a9ad9-e1c3-47e9-af2a-d2519d5e464d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e6523303-961c-4529-bd61-7bcdd2ef04a2"
        },
        "item": {
          "id": "db559e6d-0248-43f3-b6bb-afcb7a9ce317",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3d99ebfa-5416-42bf-9faf-3dec962f7b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fcf320-da51-4a2d-90e0-fa851c2da8be",
        "cursor": {
          "ref": "a043c27b-647d-4929-a373-a6d751ea7827",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6e3b0c98-526f-4849-8648-a82e3fd138a8"
        },
        "item": {
          "id": "22fcf320-da51-4a2d-90e0-fa851c2da8be",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d73a7ada-7df0-46d9-82f8-5865a68a177d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49c8a72-9d54-4dab-a5ec-3d9aa141e6cc",
        "cursor": {
          "ref": "e4320ecd-ae4d-476a-a118-7543172fd7eb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cd2541cc-1ec3-4e5f-a14d-24854dc5a9bb"
        },
        "item": {
          "id": "f49c8a72-9d54-4dab-a5ec-3d9aa141e6cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dc264ad5-b67e-45ff-a018-2fac83da530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3840742b-2dac-4970-a0e8-dc122d0d4f8a",
        "cursor": {
          "ref": "f0b1f729-c539-4ceb-8e10-686df0aca510",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2220e37c-860e-4ff1-86fe-d47ffb982fb5"
        },
        "item": {
          "id": "3840742b-2dac-4970-a0e8-dc122d0d4f8a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "844dd783-b396-4e13-806d-40d6cb5210dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4b3f1a-efa9-45b4-a661-d7cf6dc02417",
        "cursor": {
          "ref": "53371339-9b3e-4c70-b44f-ada9c850c23c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e002e153-7f0c-4d0b-a054-047e146eb29e"
        },
        "item": {
          "id": "3c4b3f1a-efa9-45b4-a661-d7cf6dc02417",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a0d1cd2-b841-4fb1-9806-1eedf399c9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6f770e-08e7-40af-b8cf-d5ef2c3b4842",
        "cursor": {
          "ref": "d1b87361-086f-4c21-906e-a93daff970b5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c73512c3-6a73-4dbd-9c03-b2910b3093d3"
        },
        "item": {
          "id": "ab6f770e-08e7-40af-b8cf-d5ef2c3b4842",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dee3acd8-c28b-41f5-a610-e7fb70f37e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21378283-e6cd-4b2b-bd63-259aefa61c34",
        "cursor": {
          "ref": "7c05417e-0344-49da-b5c3-4ea06ccf970d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c145449e-9156-4ab8-83fe-f182dc4bec4f"
        },
        "item": {
          "id": "21378283-e6cd-4b2b-bd63-259aefa61c34",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b4cff192-4ea5-4bdc-99cf-358aa6910752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be37a926-e79b-419a-9965-bb5f96bcc269",
        "cursor": {
          "ref": "601c94fc-a2a0-4d77-b78c-5be624f016c6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c78f0657-81f6-4499-a195-dc8b61d713b5"
        },
        "item": {
          "id": "be37a926-e79b-419a-9965-bb5f96bcc269",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d8e7b584-2726-4cc6-88c8-7ea608b687dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f0bd2c-495f-4646-a1e7-7e5535a1b21d",
        "cursor": {
          "ref": "26cf8c7a-40c4-485f-be5a-2fe798375c55",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b8b9e0e3-1abf-4d79-adaa-e7196f4644fe"
        },
        "item": {
          "id": "16f0bd2c-495f-4646-a1e7-7e5535a1b21d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8370a4d1-bfd4-4c38-a455-5b579b6555fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a9d748-d11e-466a-8d40-d30bdff4b3e1",
        "cursor": {
          "ref": "782d3d13-b4f6-4751-815d-42f00b52be88",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e1d489e7-193a-4883-8685-1bffc7a2b96d"
        },
        "item": {
          "id": "63a9d748-d11e-466a-8d40-d30bdff4b3e1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "123dbbd4-ebae-48c6-b8e4-34fbea526ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87367be-602c-4747-b4f0-86e08a97f1c0",
        "cursor": {
          "ref": "e9c01b57-e416-424a-856c-740d0f01a6ec",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f78f9bec-3e5b-4dd5-b776-3f3bcece3ace"
        },
        "item": {
          "id": "b87367be-602c-4747-b4f0-86e08a97f1c0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c3ba5c26-8c7b-414f-be26-d0f0b75f8624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ee868b-2d3d-431f-9924-95b3d1108411",
        "cursor": {
          "ref": "fb3e0fe8-03f4-4d26-a153-59feb6cf7bc1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e46f9ff8-27ec-4e8e-91ff-87a94b73967a"
        },
        "item": {
          "id": "41ee868b-2d3d-431f-9924-95b3d1108411",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "afa25059-c12b-46a2-aa65-1712ea77e9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d08d3e3-571d-4add-97bf-e4a30896665c",
        "cursor": {
          "ref": "4b2d70d4-e129-4bee-90e0-71baa0005aaa",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5ba80013-ff6c-4aeb-86a9-a761af8c1b55"
        },
        "item": {
          "id": "9d08d3e3-571d-4add-97bf-e4a30896665c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2704fd02-bef2-40d4-aa61-8b60495c248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbc8eb9-f57c-454e-a6fe-84feae9e4daf",
        "cursor": {
          "ref": "6fe5f6cb-f382-431e-8208-1d51771b23ce",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "16744a57-3b98-4f66-809f-92ab83248932"
        },
        "item": {
          "id": "acbc8eb9-f57c-454e-a6fe-84feae9e4daf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eb795d18-0b85-4d64-b2b5-5366724a56b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d0daa5-8682-46cb-b4b8-54ed560e03e9",
        "cursor": {
          "ref": "b1acda8b-13dd-4080-ae6a-bc8b6254c01a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6834db43-7f3b-4c4f-8a62-6f670cd02338"
        },
        "item": {
          "id": "37d0daa5-8682-46cb-b4b8-54ed560e03e9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "86a8b5a1-123b-4c57-8108-81c11650baf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113bd4a-e822-43b8-8efa-ca0f9b5a1fab",
        "cursor": {
          "ref": "b307847b-e4ab-4cdc-9673-fdf9941a2ff1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "82480c14-8c29-4e7a-8dd3-da0517043e82"
        },
        "item": {
          "id": "b113bd4a-e822-43b8-8efa-ca0f9b5a1fab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "12fabaa6-e7e9-42c7-ad25-7daf98c26a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ded7278-0453-4fbc-8068-37f34e0a1a7a",
        "cursor": {
          "ref": "a48b26ef-fde7-4bc1-86bb-19a03fb27e9b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "24134369-765c-4042-bee3-79359cfa6756"
        },
        "item": {
          "id": "6ded7278-0453-4fbc-8068-37f34e0a1a7a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c2ce24b9-c7c6-4a7b-b343-63a45e50d10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34daf17b-4ec7-4007-bdc1-fdd21d2b9bf5",
        "cursor": {
          "ref": "c02f1000-6fac-4f86-ac85-2761cd27ecbf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e8a89640-1dcf-4453-9284-84ff74ea2c99"
        },
        "item": {
          "id": "34daf17b-4ec7-4007-bdc1-fdd21d2b9bf5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "42f1ed29-2556-47a4-8147-66d456959793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843b99d1-1d66-480c-bce0-43f5982f2636",
        "cursor": {
          "ref": "d3dcbdb7-c19c-4b8d-aa6f-c40341c27b94",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9e66327f-5e0f-4248-81ce-7f043438b083"
        },
        "item": {
          "id": "843b99d1-1d66-480c-bce0-43f5982f2636",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ff175a0a-6c1e-4901-8e2e-233ba146927e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe3b3f1-9f72-490e-8f8d-e2764be3af89",
        "cursor": {
          "ref": "3d28a481-58e8-4012-976e-f0e0bb4c4b6d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bea12edd-d97a-49ff-8557-8e8524be2efc"
        },
        "item": {
          "id": "7fe3b3f1-9f72-490e-8f8d-e2764be3af89",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3bfcc74f-7468-4514-b347-94a07936d9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469d914b-aac7-4a1b-95d1-e875ae241ffa",
        "cursor": {
          "ref": "e60c0380-f577-4897-8441-6524ecfd22ed",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dfa51511-710e-46a1-b014-9be90ab7fb09"
        },
        "item": {
          "id": "469d914b-aac7-4a1b-95d1-e875ae241ffa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "414b2c57-bdcf-47a8-84a5-09556f673fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079e2d4c-7386-41d8-8c86-d22ac28b6809",
        "cursor": {
          "ref": "bae7f58a-84a2-4c45-981e-fb9704414e0c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "69bbf94d-11e5-4025-8e5d-ccda4e416d34"
        },
        "item": {
          "id": "079e2d4c-7386-41d8-8c86-d22ac28b6809",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "98b0c19f-96b8-4eab-a9ff-22d4c6e00540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55c6df8-b927-4357-ae5e-82bf3a68d176",
        "cursor": {
          "ref": "b5aeafe9-e9a5-46a3-8f46-274f9dd0d580",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "991ccbe9-7996-42b5-9e01-0a80f866e1e8"
        },
        "item": {
          "id": "b55c6df8-b927-4357-ae5e-82bf3a68d176",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e06f07a2-b219-4d68-81e8-02bd03523798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7206bd22-6260-409d-be8f-60dcc4ef8aaf",
        "cursor": {
          "ref": "290a9e97-d235-4c64-afa1-920f68a07638",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1fd300fd-52bd-4e80-8e2f-5e5c7413b55a"
        },
        "item": {
          "id": "7206bd22-6260-409d-be8f-60dcc4ef8aaf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1ff77394-2b10-4f92-afc2-9b171558ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3842d166-a909-4ce9-8a74-defb8333f582",
        "cursor": {
          "ref": "1443edd7-042a-447c-bd2b-ded9ede3025a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "24b9000d-b284-4c62-b6e1-da7c1a02de15"
        },
        "item": {
          "id": "3842d166-a909-4ce9-8a74-defb8333f582",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "388d00dd-b279-4110-8fec-8c8e31d94c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31d9374-f832-458c-9530-f54860052cb2",
        "cursor": {
          "ref": "7f8102eb-43d2-487f-b97c-bf089a609759",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6a67b1ea-dfca-467c-a7c6-dd38014d8e19"
        },
        "item": {
          "id": "b31d9374-f832-458c-9530-f54860052cb2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "23c1366c-b153-47d1-a6fb-af9edbf1fc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f3d1a1-ebc0-40c0-b641-1544311c540e",
        "cursor": {
          "ref": "754a56b4-9b08-45bf-8163-9f3aaa7b53e7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0ea829be-08fe-4fdd-8bbf-67f77f2a4e04"
        },
        "item": {
          "id": "b6f3d1a1-ebc0-40c0-b641-1544311c540e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "47955143-b2b5-479c-b83b-7ebda13c1c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107642ed-64dd-479b-af9d-6e297b60da35",
        "cursor": {
          "ref": "fee20d69-c7ea-42b9-aa35-906f894555e0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cf534274-b533-497b-8119-5366f33ede78"
        },
        "item": {
          "id": "107642ed-64dd-479b-af9d-6e297b60da35",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "732d2b6f-d4f1-42c3-a386-e60a3bce2a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d7e1cf-d6ae-4f13-b081-63aa18a4a4bd",
        "cursor": {
          "ref": "ebeadff8-355c-47b3-9ba0-16a4b268993c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6003e6ea-e81e-44b5-a473-514aa902553f"
        },
        "item": {
          "id": "e2d7e1cf-d6ae-4f13-b081-63aa18a4a4bd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "842cdb0d-f4c9-4c12-ab68-90d97b18c641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c182a68-6ca2-427c-a378-937f25313265",
        "cursor": {
          "ref": "f96de94d-741e-4d50-84fd-f232c9792a13",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3375683d-0baf-4550-8042-3574d05f50f4"
        },
        "item": {
          "id": "3c182a68-6ca2-427c-a378-937f25313265",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "07a40a22-6db6-4a1c-ba43-c2da206c5f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e79cf50-e118-4ce7-b2e2-f15f919f2f11",
        "cursor": {
          "ref": "8b65f3c0-9388-4c15-8198-bfe647fb7d19",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0e74800e-1d51-4d27-ac44-e80671875ad1"
        },
        "item": {
          "id": "8e79cf50-e118-4ce7-b2e2-f15f919f2f11",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1b8e65e1-7648-4286-85a7-9f4698a74c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e20ffe9-a824-434c-8f36-5c0937255e44",
        "cursor": {
          "ref": "ee57988c-cb58-4dd0-a2a7-7b66a9d3c1b5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2078b193-5069-479a-85ac-4389614cf2c0"
        },
        "item": {
          "id": "9e20ffe9-a824-434c-8f36-5c0937255e44",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f79a135-41e3-4600-907e-32ff5c45e427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcca5a9e-83e6-44a8-b2b0-3d102b1ee100",
        "cursor": {
          "ref": "7156e62e-b744-4abd-be5a-828d452cbe2e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e6dd3b55-a753-4dc3-8427-0e174cd5a346"
        },
        "item": {
          "id": "dcca5a9e-83e6-44a8-b2b0-3d102b1ee100",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5a3082a8-805f-455f-ae91-fccbd3bc736b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0243aaf3-225a-4e2b-bc7a-9120c21740d1",
        "cursor": {
          "ref": "91cb9d7a-e024-4cdc-9dfc-ea929802310c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d6e38d49-a52a-4dc1-a827-3666e63fb6d2"
        },
        "item": {
          "id": "0243aaf3-225a-4e2b-bc7a-9120c21740d1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e69c960d-41cb-4f05-8627-c3ca51b2219b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67eb443-705d-4157-aae5-89a32a22fb94",
        "cursor": {
          "ref": "6000121a-2a8e-42a4-bc4e-a5af253a3dec",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cb838a78-ae44-4372-ae28-8c15ac432b0b"
        },
        "item": {
          "id": "a67eb443-705d-4157-aae5-89a32a22fb94",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "561a0d6f-08e1-418a-9d14-8f508b2900d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf98067-a123-4799-837a-83299042ea95",
        "cursor": {
          "ref": "88771fc4-7088-4cd6-8214-5158e0826aff",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8b427681-639f-4e98-96f1-6ac0eebf167c"
        },
        "item": {
          "id": "abf98067-a123-4799-837a-83299042ea95",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "52ab5990-b0a3-4df9-806c-8eb734696381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bfb5d6-e644-4120-97e3-f7c137eaecf2",
        "cursor": {
          "ref": "630b82f9-73b9-42b6-b946-c7f9527476fb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ab5a7f7c-de12-4a9b-8b58-4fb158f749a1"
        },
        "item": {
          "id": "d1bfb5d6-e644-4120-97e3-f7c137eaecf2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2bcbc93a-f992-4aea-aff7-21f01dcb0c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27b8521-9c92-4363-8d51-9330897c46ad",
        "cursor": {
          "ref": "6d679eee-0ca8-4179-9c1c-795be87bce1c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7030b888-9e8a-4f28-b22b-a08106f5a875"
        },
        "item": {
          "id": "d27b8521-9c92-4363-8d51-9330897c46ad",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31dfc2a7-48ef-4a76-afd5-b3acd4f0e4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a914620-d1b9-40b0-b91e-483d74233077",
        "cursor": {
          "ref": "50ef3109-6497-48f3-8bcb-9a52448c8519",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "447ec90e-b7b2-4751-bccf-16056d37d6cb"
        },
        "item": {
          "id": "4a914620-d1b9-40b0-b91e-483d74233077",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "68cf8749-29ee-423a-b8d8-4e67a3552c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a150a3-a31d-4d35-8500-e088380b7e11",
        "cursor": {
          "ref": "b4050b3c-ad6a-4bb7-b754-5a63517c450f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5215bb2-ac0a-4172-afc9-87b9faa4609d"
        },
        "item": {
          "id": "e4a150a3-a31d-4d35-8500-e088380b7e11",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "31c8389d-5ff3-4843-8aa9-ce4a4280c8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d39505-599d-48b5-99ad-1fc64037b12f",
        "cursor": {
          "ref": "1d9c4918-a29f-438f-8768-ca210f4df986",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b703d369-31c1-4072-af19-bb23be950e0b"
        },
        "item": {
          "id": "09d39505-599d-48b5-99ad-1fc64037b12f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b4d5f57d-db97-47b6-a0cb-ff78c458cf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6852ceaa-6767-40e3-b70c-ed7572698985",
        "cursor": {
          "ref": "230285c4-eeeb-47f6-8794-888544a9b85e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5fbe7a36-9847-4aec-b7d4-75a58ecb8baa"
        },
        "item": {
          "id": "6852ceaa-6767-40e3-b70c-ed7572698985",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "47b8fdec-1771-4208-a5d2-71105b73b5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baf3a1d-9de8-4c90-9024-48a24abe5c97",
        "cursor": {
          "ref": "37e6b10d-0af3-45bc-91bd-30c80c4499e6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0ab4a9a7-e7a4-47bc-bce1-193f594077a3"
        },
        "item": {
          "id": "4baf3a1d-9de8-4c90-9024-48a24abe5c97",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "241d7ee0-73ef-48f6-859c-5ce8a1baa8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bcdb04-a17d-406b-88af-620765b0904a",
        "cursor": {
          "ref": "e81d68e0-025f-43f8-87eb-82ba05db8ff7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4125033b-0084-4a22-aff0-c3ec3b0e4ab9"
        },
        "item": {
          "id": "d7bcdb04-a17d-406b-88af-620765b0904a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ee8af28b-48d5-4960-aa8a-fdf8e5e1bd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7553affa-a0d9-42a8-87d1-3b1e90f8c824",
        "cursor": {
          "ref": "c56cbde3-7c8d-4f01-9fd8-2041b5013e8c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3d4948be-3151-4e75-9f7a-014ea1b49d9a"
        },
        "item": {
          "id": "7553affa-a0d9-42a8-87d1-3b1e90f8c824",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e82fdc88-3384-4b78-b735-8b38b8fb1c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80215b2-dd6b-48cd-ae7b-06aa1aa85fb4",
        "cursor": {
          "ref": "66deac6e-2f2f-4f3f-8804-94f7f12ba840",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ebc1975e-786a-4ebd-8815-239770bcbc50"
        },
        "item": {
          "id": "e80215b2-dd6b-48cd-ae7b-06aa1aa85fb4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "63dc5b7a-6243-4765-9168-14594ac26815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e64bc94-2fac-485c-9cdb-78dd6c5f0831",
        "cursor": {
          "ref": "366eff4d-c5fe-4c0f-95a6-5c75edb30d36",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0658c605-af8c-49f4-8bf5-d55489d73e8e"
        },
        "item": {
          "id": "8e64bc94-2fac-485c-9cdb-78dd6c5f0831",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e48fb2b5-2f8e-4a8d-94a6-180f2813a0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b2994-8cf0-4f2b-a0ce-afd1929b6b2b",
        "cursor": {
          "ref": "7bf9e686-9b58-4040-ab26-8ac579e56601",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b8188fbb-67a8-4a4d-8432-4f57bf0671a9"
        },
        "item": {
          "id": "0d0b2994-8cf0-4f2b-a0ce-afd1929b6b2b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8cab6bdd-d024-40da-b4f3-691c377176d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166622a7-5460-4b94-817d-0305856af5a9",
        "cursor": {
          "ref": "d244b09c-e012-4614-a956-89ab6aa69554",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4ffc0f3-5e81-4ab4-91c4-9f6b163e404d"
        },
        "item": {
          "id": "166622a7-5460-4b94-817d-0305856af5a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6c3a07cc-5dad-40b0-8a29-0924b9610183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc58742-c777-4d41-b803-f69529d89a7a",
        "cursor": {
          "ref": "ef99bfd1-66f5-4204-ae2d-252c1268b1ad",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ed4d1c39-fdd0-468c-af23-6f21a2b82bdf"
        },
        "item": {
          "id": "bcc58742-c777-4d41-b803-f69529d89a7a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cec81334-50c9-4102-bafb-4bc2260f33ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84915fc-6e11-4d92-8d48-5805dd211181",
        "cursor": {
          "ref": "58e592b0-4539-41f9-9d87-36b6b5e64898",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "70ba2672-0c0c-4308-923a-d4dd98d98352"
        },
        "item": {
          "id": "c84915fc-6e11-4d92-8d48-5805dd211181",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6961935a-1b08-43cd-a192-272326ed8e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c533ff6-12c9-4bdc-9786-11af2cb216be",
        "cursor": {
          "ref": "e56cd7ec-5a4d-42eb-8999-adb825e3df01",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4adf3b44-b47b-45e6-9a84-770364e084c6"
        },
        "item": {
          "id": "3c533ff6-12c9-4bdc-9786-11af2cb216be",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "205ee693-7eb4-4488-94b8-a8058a123161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8235237-541e-4e9c-b38d-2f1aa71b0247",
        "cursor": {
          "ref": "b78e17e0-887b-44a7-933a-240c25155102",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fb9db248-a59f-4eb2-aad6-8c33fa079ad6"
        },
        "item": {
          "id": "c8235237-541e-4e9c-b38d-2f1aa71b0247",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7b8e775-11e3-4b2a-874c-db0795f179fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef50a807-39e5-4a38-ab38-37f13068819a",
        "cursor": {
          "ref": "9344e03e-c61c-40f1-894d-1e82fb74e5e8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0f662b10-e1e5-4f2f-9203-e1d18febfa8b"
        },
        "item": {
          "id": "ef50a807-39e5-4a38-ab38-37f13068819a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9caafeac-1225-4d34-bc9b-216916307020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469ddfb7-ae7e-440c-9cb9-19259fc9fd4c",
        "cursor": {
          "ref": "51fe13aa-fc3a-484a-8280-94f4346f6f8c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c0641da6-4e4a-4541-ad7d-ff3dcc550f87"
        },
        "item": {
          "id": "469ddfb7-ae7e-440c-9cb9-19259fc9fd4c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1222f61b-0dcb-4934-a7fc-8f065e06b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6315b35-cfee-47dd-ab4f-d391a27467cb",
        "cursor": {
          "ref": "d789e382-d512-4672-a5b5-2d6a177a1f5d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "29df2d1f-ccdf-4abb-8468-e027fa40e252"
        },
        "item": {
          "id": "d6315b35-cfee-47dd-ab4f-d391a27467cb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8d04b873-3fc0-4125-aa2d-1ee4a168ebd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6ee405-9f10-4d3c-9d95-e9ae4c8d2cfe",
        "cursor": {
          "ref": "76a1ca41-d609-49d1-914d-a5f48024983b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e941415e-73fc-45a9-b20a-43031d1bae43"
        },
        "item": {
          "id": "5c6ee405-9f10-4d3c-9d95-e9ae4c8d2cfe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "61be49d0-49d5-4da6-9a71-0cc5acc1552a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf1b066-4124-4f48-81d7-86ea571138ef",
        "cursor": {
          "ref": "a899f266-128c-4899-ab38-5063ff80eff5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a3d3bcbd-7400-4493-8817-e08e8fe75942"
        },
        "item": {
          "id": "7bf1b066-4124-4f48-81d7-86ea571138ef",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0f27d278-a4b3-485e-aaf5-0a705c5b7704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb58e4a5-4bf4-4b8a-b76c-e74b298d36a5",
        "cursor": {
          "ref": "337f6d97-7797-44c4-afca-2e458e0de5d9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "84e034de-885a-4c15-baba-e0cd0dd9a847"
        },
        "item": {
          "id": "bb58e4a5-4bf4-4b8a-b76c-e74b298d36a5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e5ee3997-4866-42a8-a0b8-0624af53fbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea32561-7e75-4eb5-97d1-789a94eeae9e",
        "cursor": {
          "ref": "9df13ba5-2e05-43c9-a7cf-47672f73e87d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f12296ed-3fd9-438d-80e3-54bcea0a3e4c"
        },
        "item": {
          "id": "fea32561-7e75-4eb5-97d1-789a94eeae9e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d313bf64-de02-445f-a76f-c76720f15b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be17a108-0146-4e59-b1af-e2cecf40868f",
        "cursor": {
          "ref": "c4651063-d7cb-43d9-b651-ab8aab0a7d89",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "26f65033-c696-46f7-b053-19613939ac6d"
        },
        "item": {
          "id": "be17a108-0146-4e59-b1af-e2cecf40868f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b388c6ec-ba66-412b-8736-bdce5d18543a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58089937-a7c9-4a47-830d-5e24668ab3a1",
        "cursor": {
          "ref": "c844b61a-66d6-422c-bc1c-7e1ae483c382",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dd943321-f6ca-47b7-95c8-144b89550295"
        },
        "item": {
          "id": "58089937-a7c9-4a47-830d-5e24668ab3a1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f6505214-b992-443e-8a96-50e8a36ddeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf61694d-9737-4aba-8d37-8d688fd71b3e",
        "cursor": {
          "ref": "7a9d4d08-7185-44b8-b9bf-addec35ddb00",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9bbd25dc-b249-4221-820c-5a3c86bd26fa"
        },
        "item": {
          "id": "bf61694d-9737-4aba-8d37-8d688fd71b3e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3625f779-b8a0-40f4-b0f8-e04c9f89fe39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e4b656-09f5-4458-9a81-a9e3a27f48fa",
        "cursor": {
          "ref": "f7d52e70-5615-45e3-bba3-a5aab2d84f79",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4b4dd588-92fe-43e9-ad45-c60a77e981ae"
        },
        "item": {
          "id": "d9e4b656-09f5-4458-9a81-a9e3a27f48fa",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "85778ff2-6cb2-41ff-9d7c-ec6bb8afa464",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bc3b00-d37d-4418-a62b-9013dfffb58a",
        "cursor": {
          "ref": "e3371e7a-d033-4ca5-9c54-cb8f7ea71270",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "88b9f8bf-c3e0-4d65-a4a8-a0e89070db26"
        },
        "item": {
          "id": "97bc3b00-d37d-4418-a62b-9013dfffb58a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c9e02e3e-a9a5-4c44-820c-5882339c1ca8",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c37748b-d26a-4626-9bed-c7aa90c2a891",
        "cursor": {
          "ref": "6bff148d-54fe-416b-b8de-5a36f920d243",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "addaf039-feeb-49f9-89ad-9aa4c21c4a92"
        },
        "item": {
          "id": "0c37748b-d26a-4626-9bed-c7aa90c2a891",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5596d78f-47b7-49b4-b51a-04683a428daf",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e0a2f6-5f26-4efc-b40f-82037d1d3612",
        "cursor": {
          "ref": "0792ea46-7169-4082-932f-ee2f47aa9cb1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c4e7bb75-6b5c-4cff-a557-6b666bfcfc4a"
        },
        "item": {
          "id": "98e0a2f6-5f26-4efc-b40f-82037d1d3612",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ee5ade63-fc22-42c0-aea6-8d86c8d76309",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38b966-2071-4220-b702-03d9b20e7399",
        "cursor": {
          "ref": "4aa679f3-9e97-40b1-b290-05052f504a13",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9f2a19a8-f8ef-4f4a-8366-345f357bf3c9"
        },
        "item": {
          "id": "7c38b966-2071-4220-b702-03d9b20e7399",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38fa10dd-43fb-4c0d-8fcb-0114aba0301c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38b966-2071-4220-b702-03d9b20e7399",
        "cursor": {
          "ref": "4aa679f3-9e97-40b1-b290-05052f504a13",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9f2a19a8-f8ef-4f4a-8366-345f357bf3c9"
        },
        "item": {
          "id": "7c38b966-2071-4220-b702-03d9b20e7399",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38fa10dd-43fb-4c0d-8fcb-0114aba0301c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38b966-2071-4220-b702-03d9b20e7399",
        "cursor": {
          "ref": "4aa679f3-9e97-40b1-b290-05052f504a13",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9f2a19a8-f8ef-4f4a-8366-345f357bf3c9"
        },
        "item": {
          "id": "7c38b966-2071-4220-b702-03d9b20e7399",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38fa10dd-43fb-4c0d-8fcb-0114aba0301c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec17ec6-4e69-43ef-bdf0-834c9024849a",
        "cursor": {
          "ref": "e61d87be-b5cb-44d1-8d4c-277149c1b834",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ef3bb963-f4d9-4d4e-852c-dc053e9fda21"
        },
        "item": {
          "id": "fec17ec6-4e69-43ef-bdf0-834c9024849a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3d58d366-f2e0-4a63-9570-cfc5ed542914",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821e07f-297d-4cb9-8527-16836611d80b",
        "cursor": {
          "ref": "7ad80d1f-2f96-4424-a130-b4779d965d2b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f6a7fd07-87e9-446e-8c03-6c9480f1587e"
        },
        "item": {
          "id": "0821e07f-297d-4cb9-8527-16836611d80b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "27627a1a-654c-4025-a00a-0128b73301b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821e07f-297d-4cb9-8527-16836611d80b",
        "cursor": {
          "ref": "7ad80d1f-2f96-4424-a130-b4779d965d2b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f6a7fd07-87e9-446e-8c03-6c9480f1587e"
        },
        "item": {
          "id": "0821e07f-297d-4cb9-8527-16836611d80b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "27627a1a-654c-4025-a00a-0128b73301b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8193fcd-cf3f-4dd9-bf07-2f75e56d52ad",
        "cursor": {
          "ref": "4bfca1c2-9a37-44f7-84e4-f5a5917d3326",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bb8cbfc5-cbc8-4775-9617-13ca5ef96b1b"
        },
        "item": {
          "id": "b8193fcd-cf3f-4dd9-bf07-2f75e56d52ad",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "124f2475-e1a5-4a6c-8080-fcf7c58d70ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbbe22a-d75e-4186-9fdb-18d9dc52d418",
        "cursor": {
          "ref": "21db7d88-30d4-43e8-bfa5-7f2e9d3ca2e7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86c75de0-0bd0-4382-bf7c-00e14fc086d3"
        },
        "item": {
          "id": "fcbbe22a-d75e-4186-9fdb-18d9dc52d418",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c0c159d-25d7-4902-b504-8d519c9bde22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbbe22a-d75e-4186-9fdb-18d9dc52d418",
        "cursor": {
          "ref": "21db7d88-30d4-43e8-bfa5-7f2e9d3ca2e7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86c75de0-0bd0-4382-bf7c-00e14fc086d3"
        },
        "item": {
          "id": "fcbbe22a-d75e-4186-9fdb-18d9dc52d418",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c0c159d-25d7-4902-b504-8d519c9bde22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f7a22f-be48-4596-a17e-61971c18e54b",
        "cursor": {
          "ref": "170d99af-ef4f-4ec2-957a-bcd67db15c9a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bfc564f2-5609-40cc-a9a0-464b49aa33ad"
        },
        "item": {
          "id": "c5f7a22f-be48-4596-a17e-61971c18e54b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "82c6d7a5-7c63-45b4-bc4f-958a20301f4b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}