{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "550410ec-f21e-4b47-81fd-d2095b88c4a7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cbaf75c7-8eb4-4cd7-a5aa-3afa481e8369",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5708d35-70f6-4dbc-acc3-5cdbaf0deb69",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3a905dc8-370b-401a-a9be-d30d85b5113d"
                }
              }
            ]
          },
          {
            "id": "33ea3b96-3b3b-4165-9962-788b370d1c8f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e9cb642-a395-4b0c-8d2a-013cc3d82aed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b71bfcea-0132-4f0b-953e-34ff99348a1c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ba8ef6d4-0f40-463e-8f40-f69bd39516e9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2e9e5c61-6c71-4ed3-af1b-23ceca5b96e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a6d151c-74a0-4204-8993-cbfe599ef197",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ea23a7b-3a44-4afb-aa29-63940c5e5923",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a66a658-fd9f-4fdc-9e07-a3c2034257b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d74fa31-833e-46d8-a1ca-501645849860",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b794489e-ed35-41d7-9cd6-6d56176c51cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac73d13f-eaa0-4da9-94be-90ce6719c1bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ca44db8-6456-4806-8a4c-5e3d3a9bbb34"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8f88dcb-08e6-4e00-bb61-6d26b9b518be",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a46505a5-aad5-48f5-a086-b0d38ac4dbf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eef96a25-330a-4c9a-8844-bfdf3d2a8bad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "619ed6d1-16b6-46bd-8cc8-7ad0746b4c35"
            }
          }
        ]
      },
      {
        "id": "8a6ce27c-798e-4ac5-9553-80fe8978b7fb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f492eca5-9cd0-432d-bcfa-f5263d7c995d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa086e7c-ceb5-4167-8781-0d2b097fb584",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1e58192-be51-45b6-8485-916e161375c7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e85f48-3dd8-4b8f-8ab2-ebaaadee650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b022aad-20cb-4709-a40b-def574a3b548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfef6fc-7815-4e2e-b8bb-f3adf622ff2c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ebef5f-7bea-4776-ba03-bc3a24cc2c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "232a232e-803c-47c9-9624-c43297d5cae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b616e93-f023-4603-bf4e-fe33e3c07e3a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1a1e23-c52a-48f2-984d-58c56687dd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1213d8ba-ebe5-4c4d-b757-6d25a2d350cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ff71e76-70a3-4d5c-8fa6-2cee69c09e10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60eedd77-01d6-4cdc-afd0-5ba3089f1c6f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5252e21-0b00-4240-bac8-2889e29800ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b461a1c4-c1d9-4570-a780-e2b45058ecb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927f2bf7-febb-48df-bfca-e9ac1fbce6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec35be5-efc7-40bb-8936-ac32203d944e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "02cdfff7-e201-4e84-a017-f5bce6ff26fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "717808db-dd47-4d54-9d9e-92c205b45a9e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4af7ced-2465-4323-86fc-0181f95ed1f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "252201ed-4885-4007-9db7-8a4f9e3d2b3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94ce112c-e66f-4aaf-a7ce-d80ddeb9b080",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c985eb41-c836-4fde-891b-12f453f92080"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8769324d-469f-4bf6-ac27-c6b688318154",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb0e9481-ec3c-40b8-a682-fa52b0b905b8"
            }
          }
        ]
      },
      {
        "id": "2c2fc460-9f92-459e-b8dd-8e060dc98e11",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "58083be2-3da7-4bd0-8cf9-55f45fd783cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39b33bee-86d3-4303-a3b5-af45ea6286f7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a3893519-8d1f-42af-b6c9-e853f217a226",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcda9ab0-afe3-4283-bb85-afa9290d69ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2fde77-4c64-4ed2-905e-c016b6d54bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3778c1a9-21a5-4925-bc79-15e939dcd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "179e36d7-61b2-4a26-bd01-1973e0beca61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe8020-ec6b-451e-b639-0866fe0e9bad",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e4ebe9-5a70-4fb1-8ef4-e980e0ce02c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae3c932-2b0c-43fc-8984-c32e832ad4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8366d74d-8614-4618-8c77-19d21dd716a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03884992-ab49-4d8c-a84e-5b96bf30bcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27286d20-a6ca-4d32-ae50-34e21e19c44d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aaf425-f248-444b-b1ba-fca3e032bd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d41dd0-e82e-4389-8116-8ed905cbe86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd40537-1d0e-49d4-8b97-b60cdbdd024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa77e6d2-7ea1-4293-a54f-4fcead276977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3b7b5a-01c6-49d5-ad97-76d2ddd5f931",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ee6752-9df3-4d36-b0c5-c27475adc170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb57b132-fb84-4d76-af19-84d1a0a321cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221a557d-3990-47d5-92ab-af57efc92cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5640fa8-9bd0-4c5f-a358-abdace610a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab0ce54-7eba-4a00-a2d2-c504b5b591b1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708e988d-a9dc-4048-8ba9-2dea38778a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b96073-4c7c-4d5e-89e2-f2cf760a21ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dd62fb-5014-4ee8-a742-8044c77f8b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6187acc1-47e3-497b-be70-31e451aebc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d79be98-8896-44a4-80bd-12c17c94a9df",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4dead5-0100-482a-ba0b-e4f19755dc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607c8f63-3ef9-40d0-b459-94a2288d3e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1204f83c-a3da-49a5-adfa-8c82b479e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f676c7b0-eaaa-4ca0-975d-1fb8b4b88c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8727c9-6999-4ca8-b3b9-d879078fd393",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f92bf13-9d7b-4bac-bdac-9ba5ce4b8a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc95b7e-b9a2-4f58-9473-cbab9d21800c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9eb4ed-c7be-4f48-8831-381cd7fee3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2752d27-d14d-46da-b690-e4d47428728a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ecfdd7-fe0e-43e5-a1ea-357938f4018a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03462029-b8c5-4e93-8c1f-14ee8d50aed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a487a1b-62af-4504-b1a7-d24ce8da0de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75657a17-794b-4f33-9243-04e3c29f71b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19eba7f0-cf4d-4c37-89ce-b9f4a6092904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6507e41c-d395-4b11-9b7e-25d12cfe83c8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1bc366-9c8d-4f46-9a7f-2e62fb060fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38563312-0172-4e83-b1cf-86ac120d1a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f76569-18f7-4e9c-be62-285a61d62f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46436140-931a-4976-90dc-1a719ce5bba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6704e82-596c-4b1a-bed5-c68bbd53b431",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03335cad-1645-425b-a8f4-433c773c0745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a76ed8-afd5-4a8e-8c12-650a0213fa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c75e85-892a-44d7-8831-a0fafdb3186a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3393a2d3-c205-422b-8f80-6a7f4ead0a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3f8df5-c498-4612-8cfe-a698aeac43e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277c70f6-48e0-46e4-880d-d1f2645b9f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237622e3-5c18-47ab-9a35-17136054b8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c37a7a2-897e-4a7c-ba7b-16cf7879d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e977658-92db-4bb7-8053-db4d56fdeddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1932190c-dd4d-4723-9415-8014b71131f5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c4579-70ab-4891-9129-e54818c767f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd76299f-4e5d-46c5-b688-dc1c87f69b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e33aca9-f039-4f46-bba2-7e22207cc200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bbb32ff-89b8-4260-a6d0-dfaa1c564eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e2ac7-a6c7-4f2d-90a1-3c6893facb81",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da4ac7f-e14a-4aab-ab4a-499421055ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b450611c-92c0-472a-849d-3f39a9bf16ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aba1627-bd12-4b85-9e0f-0e4bfba272ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "622c09c2-304e-4444-9d9e-4193016e21aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1b977c-e9a4-44f5-8579-ef73bdea9313",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167dcc01-9ac4-4de7-94e2-f1298582cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae263085-1544-44f8-b697-61b41ba376af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb8cebc-ba5e-48a7-8196-492e22080a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2210279-16e6-469b-99b6-ff0d65cf3299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670cd38e-565a-4012-8b8e-20ccce51435a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00f5eeb-2080-4661-8ea4-9cd5a41565c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7727218-618b-412a-ba14-9d19e2404993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea4f81-c1f2-4e10-bd25-4ec698733f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2787effb-5b9e-49da-9453-04d7c9b13822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b39ec3-a268-4124-b144-4777482466fe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39da2d9-22ae-4424-82a0-e3daba77dc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b330e804-64a7-487a-87e8-5564e4b2d5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76598270-0299-424c-ab87-7b3081587a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "828077c8-654c-4811-bbca-7e6bed0ab3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588413b4-e596-4705-9908-a6d498665148",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78e49b7-07ab-4a99-ac30-f74c565a857d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbbe157-a04b-4edd-81c8-a7319122a28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41714be0-feaf-4e6c-9579-364732d17cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cda45bd-827d-4d91-b43a-1599d3c9bbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010bab79-b4b3-4f76-8d62-6e2008be6f8a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d593021a-2cd0-4f07-a7f5-5ab05708e28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c4e17c-2b84-49ff-af97-ad7fb89ce41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f96634-c556-48a6-90c4-009a518e5c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68453e72-5747-4b97-89af-6508cafe39df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39cab09-6fe9-44fc-b19e-052c9f17cb95",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d8126-771f-4718-beed-ed7819ca1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443be7fc-31a9-48fd-9c9e-f1e62d4a70d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da49f6dd-a041-459e-9f18-b7705939d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba74ba8-b776-4b82-92f3-e101f7a6de9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89d2593-f80f-4241-83d1-fc5d2e7eb06c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c6288-ea64-4118-a7a2-1ce6034d638f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82193c6-1d1e-49d5-ba47-f9388b6b51ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd44d9-ba03-4eca-ae3f-e499486b540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07607cf-5770-4721-96d8-6255ac32ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c7fb7-5a2a-43bc-9e55-98faeff70de8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f059bb6-d005-454b-93fb-c93ff6bc0038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff904d57-8bf2-4aa7-9972-f1bbd468868f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604e5a9f-5425-40ec-ac7b-cc94a2c60d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f281b8ef-1562-4869-8bdc-0c4654450454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2d2b7f-60d5-4f33-b7da-3ac8d4b385d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c90f324-4d8d-430e-b7d4-4937a6b8b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fb943b-7ea9-4708-9093-185f6e94d190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2c210e-e6dd-4f41-835b-77bbe8d2448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f780d4-05bb-441e-a9cc-7c95059871bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42919e5-2a83-4c07-b920-6b9b1616db52",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa39035-f1cc-4835-ad24-d471761af600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a914485c-4b15-4e2c-9ace-95af713c5719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc80cdb-68a9-41cc-a114-dbce365a7a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8be429fa-a9cb-445e-bd6d-d8d3b2cd812b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe41f55-2d34-4fa5-88f3-b8ae7e15438a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455cae00-13ca-4f6b-8f85-a7a78d5b65cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29217b54-65e0-43be-8627-4db5f02d5836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbba66f2-f0f6-4407-9d5f-d286d4fef5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "58bbcfdd-f2c5-4e19-b817-9a7f3b0c70c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df71241-47f5-40c7-9bac-6f933f1274c1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b63ef1e-b42a-488b-b978-fb3ad4ae6ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fd6e14-0ae7-443a-82c8-f42d9311135f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2700c6-218e-4b87-befa-c381b8af90a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eff686f-9db0-425b-9813-723cc88455da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1a9efd-c3c5-4141-8710-efedbb71cf7d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca00b5b-d576-4086-9a82-a0f904f32999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06bb24-ecab-4f1d-96f6-f781df0190cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c87d85-53ee-46ba-86b6-c220d6674aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6295befd-20c0-4b0b-a255-ec0916492abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d98511-1567-44c2-a8a4-6cb6bda7ecf9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c90e26-cfdc-4d09-8c1a-5783b6606bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd10918e-6419-4851-a06b-602a19d2fb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdddcb6-3f58-4707-95bf-9bbaedb9411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfef0a84-9664-438c-8fed-b9ef6439c099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37045c3-6b21-4e60-b430-801e3c59344b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a1afd6-4dab-4da8-9ffb-146dfaaf43e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bb6d74-22b7-48de-8215-603c46421c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d38facc-5f36-4d12-a553-e27e2c8fbffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "097b18f6-e6d5-4920-a2d9-cf9ec50a0c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2f3d02-07bc-420d-b08b-8c42746331ad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eab22a-b811-4bbc-a30d-8f9b912b694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d9c32f-f89d-40f4-839d-c4ebcdf03dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd446d3a-0ff5-456a-989b-f8133682d415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec0f1bd-e6cf-49ec-9f2c-dc4e4ff0fdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4981213-eb4b-48df-9872-7b101be5d3a3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43f54e-348e-48c0-be93-0fc51acf3aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea77c20-0679-47c9-bc87-d39d73f4b74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29002467-ad85-4c35-85ad-99daf81d7d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d768717d-208b-4f11-9f80-30e1b0c38967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362ab1fb-0b77-43d4-b14d-0af5866a13d1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f4ae74-5800-454a-a81c-ce71ab92d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901230e7-49b5-4a2f-994b-e054998f4ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad96654d-9f5d-41d0-b3bd-50f14f27d1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0cc052-db71-4df4-9076-b075144a0da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bac0033-d732-4d3c-96ef-66d4d9be305f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5bbac9-6aed-4a93-93e2-d053fdb12862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c82f61-60b2-4fa2-a827-4c43edbce50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929ec3c7-3f76-450e-9579-112087d47a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ce119e-7142-4ded-b8cc-0f3a7d4216d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3380fcd-541a-439f-945c-18fe27da006e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c88b7c-ba2e-422b-a69a-182e249e5bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9010e680-f555-4613-840f-101479492b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed4cb49-662c-4e7f-a281-bfcbbfacc6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46963d40-bc1b-42bf-880f-aa8b0b5a4169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48412b04-1d71-4339-88d9-377b207f942b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7f20b0-267e-4b1a-be1d-c0e2e7909586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e700ce3a-76b5-42fb-83ae-79583df6f214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef0e3a-74cd-43b2-89af-505aee180198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bac4efc8-7469-4a56-9b4f-5a69e101a923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f38f37-649c-436c-95d4-6399d674aad8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7f36dc-179f-4454-a382-657f9e1340e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bb8f63-4045-4017-ad78-0934a2fdb662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6880d304-cf6e-45f2-b9c8-b676b8e7e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8236ddca-7d9e-4bd9-85f7-6a246b3a9651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4508a9d7-aefc-4079-ace5-35ce1360b554",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe1be64-3fc7-43fd-96e8-9ca9a445c09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afc2122e-ea0c-46d4-b6cd-7244d6c8628b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7275e3ec-520f-4fbc-ab14-74f38c20bc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3dd928f-62e3-4527-b56b-f2bfbdbeefb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ee901c-8a9c-43a4-aa6b-c594c6e16707",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8675636f-bc3e-4f8c-8518-7a814bd0d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c059df9-fe0d-4c44-b6b1-230291faa265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6652708d-13cd-4549-8ce2-9793276ef16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c394e4e-3b6b-4767-aa05-bb4d9ed1c71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb7881b-228e-44cf-8cff-ebd470788781",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd65397-49bc-4b37-bbaa-eb2ca6bb8b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39460ab4-d32b-4322-9221-8d46b9bc0f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd59428e-9a40-4712-a2f6-bdfd65e0fe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcb5268-9900-4a75-bde5-800a51510d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503071f2-9db5-46d0-a1bc-b7635617addd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8294749f-51b9-48ed-a209-06384c110ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd08d8a5-a9d3-4d77-b2e7-964b5fc70fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2409f83-29e7-4a93-8ebb-5b435c0c60c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42040d4c-c6bc-4219-8a9c-64eef12b6b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a92781c-1470-4ce2-ad2d-e7ca6ae5ec07",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af134060-1091-48b0-8330-570e337f3dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385c0228-ef80-4444-a0b1-2923abbcfcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b530e9-9d84-45d5-9ed5-84318ff0186a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73780e50-415f-4000-89ba-d7e82231eb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cdaa0c-83fa-44ba-95be-ec1a0027f2da",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955be115-a41f-47b1-a377-295bf53f2f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb939d08-07b5-43b8-a00e-1342f3a86475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20fa1b1-88b7-419d-925e-703af7f58243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "331cda96-0e4d-4f22-b4d4-298a202b8143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be16aef-ab14-4bcd-b68c-8c6a71db143e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e509a-48e7-4755-9432-a382c57d9b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56021e4e-61ad-46ec-a597-47cc69b9f4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fef4ef-2d6a-4aa6-a74b-1429c2d9b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd5f155-46d7-4daf-affd-e4e1061c34fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b7a3c5-4fe4-448e-bb75-5d806494a87b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13845c9-b48c-4bbc-9405-2635a54fa57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632adfd7-735d-4525-a12c-3b94dc639a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fee9e68-9317-4aa6-9a90-9b8054638781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85109ee3-1a22-4592-ac87-f2ac5d61eb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea05f90a-f13d-4ec9-ba30-6646c5384997",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81963e3e-02d9-4dc7-b696-71aa86ab8a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476b1277-f84b-4015-a91f-35cb05a25860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b628c661-41a1-4a61-933b-6bfcd43ad401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e38ebb0-3dd0-4a12-a9cb-e479db4e6b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5969a1-7d65-4b29-b476-d348da6cf7ea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a979f2a-40f9-4f97-9dcf-eefcf77b50ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc7ea6d-e311-4025-b062-62814e6d023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf2d884-14f8-47c8-8103-9e3cee002cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b636a243-fe72-4d6f-8d8d-b87924d4ed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b32be-653a-492a-b411-af8aed05f778",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f7626e-9a32-4ed9-84c6-f0e1cbff03fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224cb9c1-f91d-4636-b5a3-8c6efb876c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815114a1-37bf-45b8-9399-ec738ca65a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c372bd-0a93-4a0d-8484-40723fcc711c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c7e5bc-7c46-439a-9eda-0235be950ff4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bd0397-570d-4489-bc61-eec3cc70f3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1100a74-baac-41dd-85b2-d8fa43db23d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783219d9-4a4d-4a72-812a-ee0cabd9ea9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa1d819-a892-442b-b1c3-69b753410ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c3b118-5485-4e48-b7b1-fb4da8f08834",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c3394d-3de2-4278-b04c-4c9887c5c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa9fd3f-b365-442b-884f-d53fb99cb62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a246b9-a685-4171-b0d9-f0289b09a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fbd08c-b15e-47ef-a420-d02b08dd7f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3d6510-89cc-4670-9b90-645534583b95",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf9109b-a19a-4ff7-a72a-1516a6fe22f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161d8778-d30c-4515-8d4c-668ae37cdbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c88dd3-8220-4229-861a-a13a50cbc0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9833ce-0f9d-48df-90ff-e49d1daf6e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2160d1e8-2fe9-4be7-b732-2241bea74a8a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f98aa18-914d-4d8b-a4f3-921b4dbbbda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d865a5cb-f02c-48d6-b72c-7245d2447e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf752589-3a58-4dd4-b313-7c5e1e0c1db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6121528a-c3e5-4d52-a0d3-338f937a4ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3456ee-3f36-43fe-b98c-4b79ee662fb3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78dfba2-14ea-4874-a5de-13c3e36cc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223e4819-61b1-46a4-a454-29320408f006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0e0beb-68d9-4b21-aed4-15c147d898ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddbc7fc-f578-4b34-8bd6-dd6e01743b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91d48d9-9d92-4786-a59a-a766df703c8c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ac4ba1-e4d8-457f-a4d8-39849cee7150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9754587e-1c35-4a9a-95ea-440ab73c73d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13991ee5-0a03-41f3-a5a6-28a449387e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb53774b-1040-40fd-9a18-28b67b6af9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f4d451-c253-421e-9b50-7c5c9fc82fed",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bec4065-6194-4417-9bd8-7d73a2601fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38bcc2f-7eea-4053-9a5a-8def6b9bed76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadf92e4-490e-4e2c-8d9f-ddb5155b5742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97289526-90e4-4b98-8be3-b651f029e332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c5c5e1-23a7-40c3-824f-72afa0ee99e7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0555d7b9-2077-45fa-97c8-f3d112c63304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740f2c55-eba1-45f9-a452-fe04624c3177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f493ae-ae77-43fc-a09a-3d95f13d75c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28c55c4-b147-496a-a441-62548e12a637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a787580-d71a-4617-804e-195a98fca3c3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57de1d3-a36c-4e49-a204-479df0ff8bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1450e81-983c-41b7-8b16-158c5d229a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d265d9c-ffa8-4dac-8a85-53411f60d749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc73787-ddad-4c33-a4f6-3f9c1e97136b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b02ce70-6819-4c05-9f44-fab743c9f79b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed69634-b48a-462f-aa3b-98762831439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa02085b-e28a-4c78-ad95-6cd1fcd8bba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed9c8b4-83e4-4515-aabc-547db54e07a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0a994979-a7e8-4ad1-a20b-c96f38d2459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3999eee-ef94-4ae2-99c4-252fe2377580",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8db03e-e3ec-4b84-a485-0875e529c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5eece1-3673-4b56-bf44-44eb19b9ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc1862b-5d41-44bc-b1fb-d9546d0fde0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d80142b1-72d4-4811-a8ba-318d9912c363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c19e526-b729-4ba9-bb0d-2905e7dd9761",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef63f97a-7dc2-49a9-b439-bc14ad9660e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df7860c-d255-4b4a-a90c-fbfb54b30d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2589fd09-071c-461c-a9e2-07e59e0c68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e92c55b-0c90-4515-8b4d-d75f92595dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cbf553-df99-41f1-8794-a4faa4212eb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60b78a0-5e1d-4f20-81de-3ae8597a5c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd4b4d3-1a9a-4740-9c0e-af3241462661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bb0f7f-3a44-40e2-87e3-f88332088aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1a7ef8-d979-4a2e-828d-beb148bd3a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8310c7-d3c7-42cb-a7c0-4c5d8a3aa9ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c380bf29-e361-49f3-9454-68145f2b7038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ab3150-e351-4c44-8094-dfbe5e7f9997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bdbf6d-9532-4dbe-be84-f28167bda0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4849ecf-6d20-44a9-9d6b-86c5478e8007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af16398a-0740-4d09-ae8c-556564895c65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe8e9be-2263-4a3e-9fce-f44b686aa755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f405b66c-8214-4113-a18f-a6edd1bb65d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37da5f53-50d2-436d-afc1-ad4d8e196e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "707a90ae-f170-48e2-a947-023e28bc69b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5735c244-13c9-4287-8f0f-882629acb44b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fe5b2d-d670-4937-8fa3-7138e0f2f988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fe53fd-de85-464e-9988-f31569ce2c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b46e61a-1ef9-4ff3-b036-2d0c0e0aaf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a80df7a-7028-4818-97db-0c4632efa97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7bae34-f0fb-4f41-9cea-84b54613ab9b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4047bc59-2e84-479e-9fc8-add7475deee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1a015c-70fe-4ff4-9d82-83e98012cba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2f8dc1-2348-4ff9-8750-4d1207368f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d7bc6d-ea1a-414a-b1b5-7262060e3138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b550e6-c58c-4fff-a622-013f20f02f6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22af709e-8c2b-4c0c-98b6-0799c464bed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23980b2-c693-44ca-a590-318da778148f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45f61de-76ba-4394-a3be-1d51732453f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18dfcc7c-3376-4f19-9712-0357e55af2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fffc842-ee75-4574-9e89-080697e413b0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341f70de-108d-4dae-8a39-7ea87cc4ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f43aaa-8e64-408f-ac95-c130780614c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae37a62-a13a-499c-a64f-967863ca1aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43734129-c3af-4381-9307-a923f1792395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d262b48e-229f-402b-9d76-585b6adb1c9b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e3a7e3-bcea-465d-997f-705df77915c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d40dcb1-dd9f-48fe-b8aa-0a42cffa8e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6626032-1f7f-447c-85bc-be6b368e02a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c7a9bf-f250-4d03-b6d7-f7649708f0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c732bf-6761-4fcc-aafb-0226ce4bbc2a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140d37e5-0970-4a63-a5e7-e8677e4fe239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bd6ee3-cc64-4046-9397-3e7090513751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f40787-3d5d-4b6e-a618-e97149dd2b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adcf7554-6029-4245-9df9-81913aae7c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb99641-b7f7-4efb-ba5c-f3569f689051",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e971dd2-4ed3-4040-9890-e6ad1b9bec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd94a75b-3956-4c30-ac50-8e17339fe5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d846beda-06a4-42e0-8767-587c81656d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2a2d29-fbbd-424c-90e2-a62a97573196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa1095b-c38c-45b5-b0a7-84a4f9a346e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a3f360-b813-4d8c-9afc-260526dc6275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a81230c-1024-484e-b913-24877c0ef75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e76741a-85fc-4dd2-b8ca-1e33d923bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e81e83-5c03-4013-9636-e9eb08fb9203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b7283-b3ea-40b8-8aaa-77a2a05e2abc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fc211c-c772-49ef-b20d-e585feb2ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3257d775-d9fc-4138-93dd-f3a58b1ac6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1812fb5-8516-4779-b0c0-79dbb44640d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30812d64-b958-4aa8-aca1-70d05e1756b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49206c67-1862-4ec9-b766-7b4c3ff917c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55373b0-f7e2-420f-acae-0099d8c9641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd064006-2c91-4c02-bd3e-3acb95b8e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9ac2cb-ce41-4c60-a863-0c07813e3c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcae4fac-b62a-4be1-9ddf-21d0a97b6bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49207bf-7510-453e-8a0b-593341b5ba70",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b32afee-4c02-46b6-99e8-349dbca6626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378dedf1-f2cb-4cc9-9e09-d215bed874dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d535b7bb-c5f2-4d5f-8a2c-646929828451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e00471-8486-4792-9291-c6aa45b63c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ef0e79-4539-4e4b-85d5-f08796915a95",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193d8eb9-d385-40f5-bd4b-07c12f9a6ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924ec4ed-a547-4323-8b76-16c484b561f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6277cd2f-4651-4d97-9b0d-1160b28cf2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d58dd43-4967-4ef5-abd5-09dd6a2232a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f0c30e-98ca-4d13-89a2-91614f769eaf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d246c35-c611-44e4-8b43-250e53660bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e466271-2a26-4626-ad8b-903a50adf795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e82a988-9ce0-4930-a9cf-6aad8ad4fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc8b6e7-1ed0-4f23-92ad-f5c305c71edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563cc38e-6a56-455d-aa28-e141b43301f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974f9567-e1cd-41a4-befc-161f2c02b378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b678bb-4615-4679-974a-ef88ab8a93f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cbf9e4-0256-453b-8a63-3bdbd372e65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5068c37f-1f2b-4591-9ec6-3decea338ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c63786-b332-4629-87ac-e76e7ee05552",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab34510d-e92c-4b8d-a973-4c5ad2028078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd11e2e-1964-4561-90eb-d61df42168fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0079ab2-7671-4fac-bd21-c3d8dc22abd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8f6955-cb85-4e13-b0ee-0276d1e2e984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228b41ae-f713-4291-bb99-c33b86036dad",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c57e243-f098-4b3a-a840-ac380414c633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f57054-a418-43a9-8761-b6e2223eafed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0512292-1835-443a-b526-a1303dd38a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfde5d0c-9f91-4aba-ae8d-390b8d14e556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae5021-2623-4824-ac07-9f83d8ade351",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb585c-a027-4338-ade3-d6c5e8225af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f59c62-ce7b-41b5-be0f-a8df71f7bba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8206628c-db91-4fbc-827a-68c992887563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb77c09-51b6-49f0-b3ef-7cec590269d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da9554a-e6f9-4a88-8e75-e28ab8b82fba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70513e28-26c6-4304-8259-9ee9028fc2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bab7612-0b8d-4372-a040-33f7a5cb17f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1d3b8b-85d2-47d4-bb47-672b3cafa541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aba66a87-5b7f-44e0-a200-6574435dd3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7725490f-894e-4b15-8a1e-a71f150077ae",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5884cf1e-5398-4f82-81ad-391b5557e6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50f5393-0fcd-4c65-b542-12c6669a867e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02eb372-ac6e-4f87-bf98-91c6d5a2d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77f6c74d-83b4-4a52-8948-aa594d59bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df972728-9a65-4497-9411-f504c0347092",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b01a52-acde-4b08-8bb7-8fe39471713f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69b0a43-12b9-43d2-90fc-ceb8649cee97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d12bfaf-2bb9-47df-9e48-52f6b625c98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb326a4-e425-455c-a714-c7537056b50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4795ca4e-0236-456d-bd48-8e3397af4997",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1247fc-007e-4b3c-8880-0750c9581b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d253630a-e0d6-4ff9-9ddb-497b13b402c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fdd59b-4169-4afe-be0b-d6cb8d0d4568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc429745-1262-4145-a2d3-db89b41c1003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f7a34f-e1af-4020-a2f5-05ed17452173",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c846d9-818a-4238-b2db-778bd179ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cae81e-f8ba-45c4-8481-64e729767157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cfbd6f-2195-479d-93b7-74e80001a38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5935cca1-6a7a-4763-8ef5-0cc557abed82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe3e83d-44ee-49c8-bf24-93f2399ba866",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f1ad45-4619-48c9-8302-2173f0d4f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84564e5-b878-4bd9-8841-e69184fc0766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452b4d15-9c34-482e-b805-aa14357220c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3544b33-b8b4-4ca4-9786-8ad322d2fb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05ff1b5-2615-4505-b54f-fba15a477560",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddd4d2e-4885-4d8d-b8a9-1a26a70112d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626564d9-5b7e-43f9-b393-ee07953afc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae5183a-8b4e-459b-bc9b-b3c4553f4e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7a5c2c-a8e3-4675-9d26-f63a5cc61c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0605ae-ad0e-4bef-a3a4-68c33b860172",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d989bd58-0417-4748-9b50-3b41bdf8771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56aa51eb-40fa-44ed-816a-d1462945d5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49bec15-67ae-4436-8277-5fba05c1b038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0563fc-2576-469d-9804-9487a13c85d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75c1989-33db-4223-b704-f10227c0066d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcfbbdc-9213-42e1-903f-b3548fa5bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fecc4b-28a9-4caa-881d-d7a7b747f1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb65b0d1-66ed-4d35-94af-a8a713bec136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cab4278-e300-4ce4-a707-d140642d35bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378efbd9-29c1-4697-96d4-6d79ecd590e7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43bfaaa-af2d-438a-ad87-e399ac7a900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f41914-9b24-46de-ae5c-1e1945d969b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f39fb4-324c-4bb5-bdb9-49cf887fe16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1f63e7-6526-43a1-9a24-a9484fae297e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a4153-cf4d-4402-9f5c-522e001879ce",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae40029-4637-4cf7-ba13-842364b8e74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a9f521-3d5b-4a1d-9941-3ee22a38b3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c9b1a-e6be-4b34-b41a-66c8886c8f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "716c0fcf-2acd-4e07-8552-b5039e341b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1502e3b8-d773-4b18-a218-290da3b83133",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f805a568-f1d6-4bdf-9610-9165e6af897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d025949b-5004-4d63-9904-38162bc7aafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7972b261-09c7-489a-bbbf-7184ce51ab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6603ee4-6ccf-4057-8e23-5c9fabefa1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b288f1-74d2-4385-905f-e2bc92dd07d0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3a0bc1-477c-4474-8822-b9de2c0579cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe1feb8-20b1-4eef-a270-14ca8f7ff11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9aa23a-a07b-4ba1-a436-ceb4a8c22170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6a3973-989a-420e-acf3-2cb3eebee53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb911f2-e9d4-4cba-938a-0882dc3cc814",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7685f378-abe6-4938-bc52-a15fb06f8ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8aab5bd-6513-4de3-9b23-6146801accd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0722fb19-5561-477c-9129-b8be3b21366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9694b834-eaca-4cd6-9227-0193bfd4dd96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12cb0cc4-873f-49a2-9021-1b028dc3fe92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52b6075e-8acf-45c4-8cca-a295abf12ae8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707347ae-db83-4423-9e18-12df3699271c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af24bd8b-9cd2-4ec2-8991-8962505b7b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bd5b3f-398e-4681-981d-20a9a8b4e755",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91aaba96-9b23-45d4-97fe-60075b72bc9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72aaed94-8172-48b2-befa-a9a48012597e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ffe5561-df92-45f8-a91f-01c92a3877b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc0ea8c9-062f-44aa-ab90-ff71b44acdf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54517de6-7e4b-4ead-84b8-77eea360ba9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7fd46a9-27e3-40fa-921f-66690ca4e897",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ee715a1-1180-431c-8c2a-bcd27d9f33f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ac765ac-8079-4f42-8476-9b5408a40255",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "330d7161-f1ab-4e92-aa2f-f9ab33ac567c"
                }
              }
            ]
          },
          {
            "id": "81c6f6d2-82e6-407d-9fa6-fdabce433e32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e38426a-c9b3-4691-aa34-8ff3d2ea4e20",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "284b2f1d-39ec-4db0-a6b6-4c838afee50e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5991128f-95f5-449c-94c1-cd40dacdf012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dca6311c-e64f-4329-ad89-9c295dba92fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f8ed3c-3dbc-4f32-99e0-923fac8c553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6033512-2160-42c8-bbd1-e7ec40c6311a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da936dba-63ba-4f2d-bbc6-74c5e9b3044a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad9531eb-27ba-4df2-a99c-40be1b0e68fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df1f027f-3104-45d2-8554-8dea1a9fbfd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3a6f75-9888-40e3-b09f-649ec24f93be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d24658d-8a8a-4e8c-9705-a9ce71e625fa"
                    }
                  }
                ]
              },
              {
                "id": "91205281-3e17-4552-9333-85a964e025d7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb5b0102-1e95-43a1-bf8d-f8bf890a582f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d52df9df-7e19-4cfb-b827-81d1cb68bf1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dc09bad-aed3-4509-854a-ff2bfad8cb0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e1d26e5-df9a-46b6-a0bb-52c6f2b350ec"
                    }
                  }
                ]
              },
              {
                "id": "be0f07ae-df9b-4542-84ec-4a954c20b8a8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b140c001-986c-4efb-b9fa-a08d7e55903d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "175682ee-1483-40e3-9cb4-802572b472e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "550bd440-ef81-4828-9703-a8f68a26c5ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2688bfb9-709b-48ef-9c69-d69b917c9fd8"
                    }
                  }
                ]
              },
              {
                "id": "43dfa014-d629-4001-b46f-e880fd6078e2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bb2cd21-4dc6-4ee3-a435-9272c61c2dfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e484870-992c-48b3-92e1-ea4f72e44e0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96030081-5022-4c1a-85d1-34b1b1313b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7bc9810c-4d3a-4440-af44-0fae0e29cd11"
                    }
                  }
                ]
              },
              {
                "id": "609429f9-0f07-41a8-8eb7-256ba79351d8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bac1d3a-5642-49dc-8377-5a3bdb7d37c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4a56dab-0d00-4a86-b360-f0d87037b19e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40eeb24f-27f1-468d-b89f-5b5f3f66177e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f311b4ed-20c9-4a1d-a241-24ae910add34"
                    }
                  }
                ]
              },
              {
                "id": "0c219762-4448-4a30-bf70-3734b0562d07",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b490987-1ffa-4d77-82bd-57b7aa74f1fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f32f41-41e2-4cf4-aa41-b061cfe02d90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc071729-ffc3-4d3b-abae-29f59b0e79e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80a0fd6c-36e4-404b-b438-abb059829361"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b96b267-c41b-4360-8668-46815b85d45f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b3a7682-1cd2-417a-8987-45db3557f3ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10fd654d-115c-4e2c-b84c-b9c5c903637b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b97e108-1a3f-4da9-a5ad-eff14657c2ef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe76bb3b-5e07-46df-bdee-db2f48f5fc43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aa33bbf2-e727-47ef-8ebe-210f51f49a8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8998a313-9518-4d73-a0c9-be631adf981a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f649894-6652-40e1-aa44-911c39089480"
            }
          }
        ]
      },
      {
        "id": "ce087214-4909-4ede-be56-78c8ae5eea93",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "01f195eb-c7f0-40d8-b6ce-7f3be3a594cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e9b83a6-b938-4aa5-9bfb-17f03e522b58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "498ceab3-0c69-4aba-84b3-c23467a3f00a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5757ab-a675-4b13-afa0-42b80348cfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb1aea6-10d5-4d8b-b7ad-4408a0107057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaef1370-a3e1-49f4-9774-c5bc06dfcfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e2ad94-9020-4413-a7ce-dbb7c2e3a762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c6c928-797a-4419-b908-35b6fb95628b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2d3240-1f6b-402d-b3a4-4897fc9819bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32752c0f-942d-445b-bf9c-3639ba5a62db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25732f19-7fd9-490d-9cc8-1b7ccecbb755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71e115c-b8b6-4119-9379-fa6a1023e737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a77eb7d-7449-49b9-9a97-9197e65851db",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6687dfe-5fec-491c-bbe2-1a458d5cc7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5997cfc2-4cc3-4f84-848b-be46b98970de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923d800-b435-4097-92f0-53516901b695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1a9c38-7f18-4717-90f7-56eb8a2178dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc98312-8e40-443f-a771-9c155071ec99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184cdf31-c603-4410-a001-5b022ab32f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7c3388-ba8c-445d-b5c6-8325a032f5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c102dc94-5ae3-40da-a972-b6ef8ff4e341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f575592e-0706-48f5-a43a-264cb11a96f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab92458e-9550-4e5f-90aa-0cbcc8a4148a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f4de4b-0d5c-4e05-a33d-228af38f8911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee705d8-5383-4a3e-85ab-6e409f1503b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d93d6-3513-4ead-be21-8f355ce969a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46875e25-fa0a-4b21-adb4-8cacf2a272f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f520e7-41fe-40dc-8282-b70ad166fc3b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a81e07-2ee1-466e-93a5-04c25927a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba9e483-686d-45e3-b6a9-7b8d8f784cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eea3c23-76c0-4364-b286-caa7adeaa8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca89d69a-903e-468c-a8d6-fe16612c7d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bbb507-7269-48c0-a4a2-bdd8a8b8f27a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7de5033-262e-471c-ab5e-4d430229e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137c6bd0-0612-48a8-985f-c98e6972c6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec41014-6fe6-463d-9698-7f086f30ca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29140c7-c495-491c-b412-7b3aa4fd5fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc3844b-7cfc-40dc-8a88-aeac4313b1da",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c848a6d-55fb-4185-9839-ddb933425ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3afa64-a692-4ef7-b569-fb4cbf2aba68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391707df-1d61-4e7d-bb90-295ee145124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1de73b8-de47-4a62-ac89-f7faaa1fdc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30415bbb-8a0d-43cf-83c5-9ba760961cc4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82def689-d678-4a29-84e2-e85ae79bf91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c657dc-3c01-4dcd-8bee-a57b63d4993c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ad013a-fcb4-49ef-a386-13b2b4885ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34150177-ce69-41c6-bf1d-1c30972e4190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc673672-da43-459b-9a4f-37bee3212398",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ab1f5f-dd9f-4087-a72e-147205f0271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e077525c-9852-45ca-8531-db2e61c927b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a409579-2780-48e3-9bfb-e62755b789a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a585b59-9e84-4ce5-8f64-dfd7f9118806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f42ac-2f1e-4f5a-9359-e8225c7f9156",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81833423-4600-49a2-a52b-5bbe5fb32062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7d5b6e-479a-41c9-917c-142fbdf0408b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95d905b-8805-4494-a2fe-600f669300f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "17762a47-0023-4d5b-87f4-8b8e7204906d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67803a30-9956-45eb-a9cc-0c8d6cb09092",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826c59b1-7c06-466b-9e07-8ef7536d7594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f37be3-279f-43e2-86c5-e21723535006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a27b7c8-553e-4513-8572-0575a48155db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc4b3d4-8295-4afa-b3ab-6dce54948a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4e496e-56b4-4c3a-ae35-e5348d76d56b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65d510a-4b46-4db4-ade3-0e12ccd35c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a909775-e4b4-4dd0-8eae-90e27a053c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc26bc1-331f-42fa-8b8f-bc89af18c914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "634b9e2e-e839-4ee5-a4c4-9f61e3217b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f0db80-dfce-45ae-9a78-c52a3e907b42",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9bbcdd-256d-475e-aa08-b02b725c9fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fc27bd-119d-4615-b43e-b2d6518085c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640a896f-a4aa-43ec-b219-5fe83762f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61afeba-8400-499b-b394-19bb428ce7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f97d533-04b4-47a9-abd0-2cbdac169426",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d6c99a-3550-4488-bd8a-dcd89560482d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564908fb-8c2e-477a-9f90-274dc96cf47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89d6e7a-9603-4989-985e-9f217f6b0519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a577556f-dca1-4328-9664-ab4f92986a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cff84a8-77d7-4105-a14d-643b4f5883a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026c887e-8fd7-45fe-bae0-141227576f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e90a81c-2037-46aa-a210-7a55969fc8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc67011-c4b9-4067-aeb3-b939ea17b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8e0ef3-6a1d-4e83-891e-a641ff51cecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27edcb41-2cc4-41bf-826f-b3aba8b14707",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617a074d-8a5d-4ff5-aff4-5ae96de4f58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99e4212-f135-42b6-af0c-c29031a2d5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac47a935-7cd8-4e3c-b529-abcd944758c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb54da6-1af4-4370-91cd-efbe813d927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58236ecc-d3ee-4d56-846e-ba04130e5227",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7052c7-181b-40a3-bd47-a3f81a57bab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5872580-3316-4ca2-8664-ab1c6f557c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09332cf-04be-43c5-8bd1-6f208233b322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ca788e-8476-4d11-b6d8-8dc2b69fb5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949699f1-d0b8-433b-b9cb-4fe7fc05c37f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fbc88f-b660-4348-af5c-f32934990135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fc7d23-db38-452c-b6cb-06cee2ff3173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062be86b-b9b3-4442-9d5f-b82e3941912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae71c67-a967-425d-9517-d5718c9e4a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fda0852-0db5-42dd-8c05-a6e4dedea116",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f75654-19c3-413e-b966-184fab080866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d95e24a-917f-4073-af12-9ff350c91917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a6e23-75d1-469f-bf3c-cbb1fe8985d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb69863-63fc-4f1f-b95e-88631ccc32c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e63af2-1e44-418c-ae1e-b137d6d3c3b9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa70d864-0ac2-44c5-99ea-3e14d5d88826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f48f6f-7f14-4baa-aeee-3fd53a4706a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1547809a-1694-4fad-adbc-dc6d1270d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8320b4e5-a9f9-4249-9c40-b84932faffb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99b83a2-21e8-4adc-9cd6-40ac5e26c178",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c24a9c-b89a-41cb-97f2-a100483722c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb6e22b-2e13-497a-9d0a-fe0507c3d2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5d90ff-c2de-4595-83d4-b2d4b64a34db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1724e6a8-1227-4f82-99b9-3296492ee7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e55736-67c2-4257-a2d0-25a3b7be6c30",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b28439d-bd0a-40fe-8565-6fe03102e98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef16c2e-9196-4b41-a05f-d1f35c7f54f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb4a998-25a3-4182-9e02-66fd515abf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d75a55b-d81d-46d9-8450-ea5132399c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4814533-7ee6-45f9-9133-4691e352104a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a8cbf3-2dca-4a0e-adcf-15cb891fda47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc421dea-5206-4ccb-b913-07402018f720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed31ee-9cee-478e-86bc-947289214e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a028ee12-2f0c-4dcf-9a05-8d098658dbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef09935-fd52-4c92-b435-8417a17425fd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7939cd5-700a-46db-bfba-d0464d612acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29258862-66ba-46e6-8901-db123db07e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7669dad6-2a88-496e-bf34-730e430d34df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7918a969-ff20-4d01-93c8-7be871356bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bb3a94-d567-475b-b330-e82b33301942",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d64c93-2ed1-494c-a6b5-7ed1f3e987b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f458c7-d5af-41b9-b4f7-6f1d22d7a549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea2ded1-e9a0-4151-8efc-b5f71ea04530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0f3602-56a6-470a-ad8d-f707a5649dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2d3997-d795-442a-901e-0c33d6189cd5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b0416b-bc19-445a-847c-2b6c868d69fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dc0e8f-92f5-4e45-9bbf-be46cb944076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4457fcdc-8ce3-45a7-9672-a66d839279bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6d81f6-fa97-486d-909b-78f499304a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f23283-238d-445a-a0a5-a93556b7ec82",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246dc14d-5974-481c-bc23-77e080b1d4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4ae157-d17b-489a-a5d5-2849bc9038a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9cd9a5-051b-4dc9-8cbd-9d4765e2bb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b09f299-d9e6-431a-a4a8-88e10698fcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5544841-57b4-40e1-a8f2-3ccb518515aa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce32ac15-46d1-4874-8962-aa92b81543d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a42e7f-d33d-48ff-865d-a1e149208ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc512cf-b0dc-49ee-986e-3f2a882235f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d424039-f094-4bc4-af86-41f9aa2f594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b399255-5d6f-4605-85e6-06b7ebfa5164",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f0345c-75d8-4180-8afe-46ea9dfd5303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2baf60b-9a4f-4c42-affe-1d121ab19983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad17a07-45f5-467d-95e9-463498c982b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4ab413-722d-444e-a4ea-401cabd12da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a76062-dd5d-42e0-bc63-206d2b0fe4c7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b34d5ce-7fbc-42c7-bae6-0a0c316486cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2821c6e-049e-4c8e-abde-298a977db279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df57685-da0b-4991-abbb-f57a9f82517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d9a381-6aa3-486c-9cee-6c69b0df1cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b2dafc-709a-4eb3-873f-f0da1018d173",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73f19c4-711d-442e-ba49-bba230383e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf289b8-a9ca-490c-9216-3c2d5252a5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c776c6-978e-470e-a662-9b72d28900f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d698dcb3-fb2d-47b2-8fd9-9b32413e0c99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ccfea45-ca1c-4815-a0f7-e7a2092600f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fd67fc2-98ae-41e7-9f04-593d59db42af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d07ce3-1ca9-4143-a33c-a246587239c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c95b773-4f90-4d6c-b706-8fceec3187c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663783d6-6045-498b-a13e-4d092471cd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bc61f35-de4d-4e4f-bbb5-b53faf89e0fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c5c4b44-5940-4246-bdbb-423200892d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9c10fa-e596-4d9d-8d42-b3dbdac502c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e4287e5-eeac-435b-a71c-1f36df92a65e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cef78a1-ce13-40d6-ac7b-cc3628ab6c0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28b76cdd-556d-4eb0-b45a-2460a2854829",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60f48df8-db56-4a90-9129-ab7a265915cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "210d9e3a-77cd-4070-b638-bc3558a69554",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcb16607-e97b-4d91-b644-2a78cc7da5fa"
            }
          }
        ]
      },
      {
        "id": "6d38b737-d4cb-4a32-9a3b-6be3c51e8f91",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0ad6de47-bf84-44d1-af7d-031674ed3820",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c42a5b5-be3b-4e21-afc1-5acbae22fab2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53dc762d-e64b-4483-b2bd-23afe31d1183",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a92514-fab1-4778-b051-0f6ef1fc4afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65458c67-28fd-46c4-a56e-d4a6cf717315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20b75d9-003c-4d10-8173-e8dadba8a039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b2968d-d733-4f90-9927-8d54385dcafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4519c6b-9967-4367-bfc5-c3b616696996",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e3661f-de04-499e-834d-030d1302dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8218793e-375e-46d8-a6cf-dab605e6976a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f1ec1e-1af6-4795-8650-6738f2250735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4925ef4-3322-4a21-8a5d-aab73e266038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5075f9-8f3d-4e19-a88e-5afb4ba99708",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebfe732-1d66-4808-a58a-d0c9d8a8e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a34ebb-e2a7-4578-a74d-ae9aa2225a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05648d42-2d1f-452f-8873-3df7af2c6723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8addf08-e3c6-4afe-823d-e669e4e3a265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32883325-97fa-4e65-a770-1391a074d988",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b709a92f-68d3-46fa-8b03-6799c9dad956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70428955-bdec-4e98-8300-94cb8207eacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720737a3-4544-4c0c-a32e-c86a8f89841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "936745cd-2c6e-4712-84f7-bc897ff57b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feff2b57-1b0a-41b2-9669-3ba721e17e3d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc9ec7c-e963-4f77-ad06-629f6587c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d528a6-4513-4b8a-9663-9a04b1b6d886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f75612-6a10-4dd4-ae3e-3f82a56ce55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d4547f-a436-43b5-97e8-fc6dc5f408e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3176f02-b6bf-4333-8ef5-cf24bcf86389",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f938d62-c295-49f8-ae8e-a92e5810f7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa91edb7-3b0b-458d-b5fd-d36bb9ac353b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9726349a-bb17-47d0-87df-3e5a23a43dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67db86b7-7fd3-41f8-b36e-362c4a759bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf680ec7-337b-4bdc-b68c-4801e8e6d4f5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd7c03b-8183-407e-a40a-de78163b4274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedf3adc-b1f0-4bec-a25c-536573c6aa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2584477a-4c54-4c37-9423-a5552d832d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "68fa6cc1-24ae-4deb-b72a-9fb22e990e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89bbd37-0c1a-409a-a997-265278c96efa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204354e8-68bb-4c71-b0d3-87ca629809a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216df59f-02b5-42a8-a6ea-cebd71ccddc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaae1d3a-8873-4fa8-aa99-f77425bd9949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25229659-a7b5-40da-a3ff-bce018bf23af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532e074b-4d5a-45d7-927a-d181cc5448d0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f100d9f-792e-40af-b210-38cea0f4f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb637b0-cb5d-4776-bbce-aff953d52c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8cf4a9-650e-4040-8f98-a4dcc65df437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c629c20-ea34-4c76-8d53-09c044b76b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd25e32-dea2-47f6-9538-11135a21e2ae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bcbce8-5293-46b5-af9e-417cb59e67e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab3416f-1ef9-4ccf-864b-bb905a8bc440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597405db-f06b-424d-a105-6b9868b1f85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24ac6d5-de8f-4229-8851-eedfc713bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00924641-c6e6-4588-a57a-da18113e95d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bd21c9-a34f-45de-83ea-6c796e0c658b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306d4b12-2f70-4030-897b-cf845111eef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bde976-865e-4099-ab23-d6510a8a036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d70492c0-ebba-468a-8b2e-45798570d356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fc1c4e-68ae-4db1-8ec8-2994804d4ef3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4272ecd1-197d-47d9-8940-e8350f96d483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d058d016-47c8-4609-bad0-da471fded0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d767ba71-7145-4428-aed0-9c9f61d2fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f448dbe-0451-4998-869a-f4b15010e174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543bf7ca-e92b-4fa8-9259-e8d87faa560e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43510b8a-664c-4d82-8c5a-6671d36679c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b12b6f3-9856-49ac-9f58-1eceb6fceb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e053a8a-2baf-4eb3-86e1-2cd9f1db3de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d7539d-fe8d-460b-a2ad-b4c1f06c2de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb370f74-62f1-49c2-8734-a1923ddf64cd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1bc751-f95a-41b0-8cfd-7ca6ab8df905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f08bb6-7af1-471e-9b3d-c7f297a5d735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad76a47c-ae7c-4b85-b535-92d75e1f484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7483aa3-a129-4ef0-aa6e-853056bd1ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b37af16-86f4-46fb-b0b5-9d199fcaa46b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58484d71-03bf-44ff-b471-b600403b7e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a59f24-801d-4a56-a545-a5426019d5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff926d9-f814-496b-b999-146aee7779d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df528e9-6b19-4fbb-9d33-817ad53226a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1f949d-f370-44f9-ab08-44d886bf7528",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0eca3cc-e8b5-4bc6-bf3d-725e9f808275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6c2b73-4bb5-46b9-8c31-8c41d958e5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2383bd9c-3b6b-4c20-8e75-7f5e6e29cfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c2978c-08ea-47e8-9942-449c99d58f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a5bd3c-99ad-48c0-b087-bf1a07830584",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e4065-b99c-404a-8069-3039afd7dc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19285031-1302-4d85-9b97-a61a0647cf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129b2897-813d-448a-be5a-9adc351123a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "52500033-cde7-444b-81ac-cc9a7e8aa4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ea172e-4e67-4a96-bead-e5862693af57",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e638d04-6eca-4e88-a0f2-c24f212ebec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3081f1d5-e90a-4ca0-84aa-e4c7f2f172c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68197c0a-966a-4f61-aa51-9c137fba4d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9632d8-481b-4762-b47b-ae786ab34878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab634ba-1322-4b85-a9e6-6a2ec056a500",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ff0f40-a3a5-41e8-bb0e-041bdd43bab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda16b9d-fb58-4737-a873-711e75046a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b02f786-68ac-44ed-835a-83a67964953f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba7c58e-4cab-41ed-9cda-c2e05bf77ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38757ed-cbb8-40b1-b7ee-468d8ce05e52",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9f7f14-03b9-4923-a23a-7b68bd1b53db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b127e6fe-4b9a-4107-a14b-de54a3265ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2f1848-3350-491c-8e33-dd79882c0209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58854a37-d57d-4014-8b04-85d039ecb5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cb3814-f476-4802-a708-5ed48b934ce9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ce2db0-d30c-42bb-8fb2-43d353290f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3eed73-a094-43f8-97ec-d48523fd858c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6e4aac-e079-4ca7-9fab-3bd5438feda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9a8d26-039a-49da-bca2-aa36276c8be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37629ebc-7ac0-439a-a8a5-dd5753f9f743",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad432951-8653-410f-835f-6d38e0d5f916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af34ff77-5fc4-4f13-966e-954c02fcf2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadf87dd-49e8-4f69-acad-944e0780d6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e550f70-e347-45a9-af1a-6ab8c2043fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9058fc0b-ec4f-4cb6-9da3-ddc613b9ab63",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e282ea-76df-49e3-84b3-325f13c7a36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7c300a-5a80-48d2-89ae-fe8d1339b180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf81c2bd-37bc-4170-8f66-67dadf244a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c593f8c-d033-4075-9c02-02cc78f0c21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f150421-11db-4ca3-863e-373943dedc13",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e889439e-0234-4d9e-b8f5-3d44b4f821a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b037142d-b36b-4367-b9ba-16a3a85f1d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7475b77-9fd7-4406-b179-c9942429c358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7b9c74-8ae7-40d4-a5b7-da850e47d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8485a3-58c3-4691-b15c-ec811615a9fc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb8dcba-da44-4739-9784-f1a242a7db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2833682-4dc3-4a29-a3a5-5d3113721c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849fefde-c111-477f-8540-5f27ad251843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b7e6ba-ed30-43ed-9df7-6aef8239717f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bfe523-8438-451c-9470-8e68458fa98f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150f802-262e-4919-a873-094728cd4f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc75ea3-9008-4414-8aa9-ca557c790315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239e6443-734d-4137-a07c-b5d10d9d841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a71472-f8ae-4f52-891a-aae405f7eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8b18e0-c79c-4e59-a919-47ea19d1c36d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132c7d83-5c27-4196-a43e-378ec1055f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db198b9f-37b4-4de5-9658-a8b9971fcbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dd5f11-e980-4c83-a54d-7e8ca5e99177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2917369c-bc77-432f-90c8-68eb776c0670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcf90b2-3083-4d6f-97a7-49df8fd20d77",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2331952d-4a23-4afd-892f-aef3022cb60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a931aba-3f85-4336-9002-1d0799deb80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbfcb98-52db-4b54-b471-5117e6e3c8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e292212e-3efa-4b06-b7db-632c6a3c33f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625b70c9-1481-4b58-8551-2ecb19fd6019",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2100f5ce-cae8-4181-b76c-dd58e8564554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28e33a6-8879-48f2-aa51-649fd017c3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277e8712-efa2-4565-b146-1ec5a0ad2a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd8d1b5-1705-4434-b1e1-3fcd590ecb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64868a04-e7f9-4fbe-a096-9302ceadcf48",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898daa00-a359-41e2-91c5-d03923852ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c10c9f-c860-4e82-a0d9-2e713555fbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbabd02-1f92-4f9c-a32d-a205fb811710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50fa98b-f09d-4146-aed7-955fe0e6084b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fba8b2-994a-43b9-8648-760732540fc7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f08d80c-5179-4aa0-9643-afc9698056c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34374f2b-0348-471a-ad22-9fbf854aabfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bece5fd-c8d2-472c-8734-f10f7769899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a42bc79-e3d1-4f7e-8b81-d7a3f6c6e254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d26eeb2-7b18-4aea-915d-30e840f3c45a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de63068f-1d25-49f0-97cb-e9380d4f6fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aacfad-fccf-445a-afc3-2c210a7edd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ca1a53-4b87-4c42-b626-978e3fb9755f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba4ffea-5530-4461-ae43-7ded1ea097de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9d18ca-7f4c-46e3-bd37-f6d4175b3686",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83adf15a-58c4-46c5-8a2f-ab7424dd63a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a241d0-72de-47ee-9ecc-1ea3fc83d6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d02e67-2817-4fef-b7f5-3cb19dd002fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9efc1595-c121-4cb5-b84c-53c602715caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beaeccc-6948-4f80-8295-9f35f13f3622",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae76d7ff-666a-40b0-8fe0-06333eee7943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac9df07-a894-48f2-ae24-935d9967b10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7302d77f-4326-4409-ab46-d77b2f75590c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8384be24-ace9-499d-b69d-a3bcd2264f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7429960b-6bc6-462c-a526-34699301f079",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a42117-6a85-4c8f-8448-70be53632d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2e3104-eef7-4126-93bd-fa58fd359b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a695622-cb19-4a0d-aa39-ae954157ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4792fec8-7df2-4887-8d80-6bbcd653f7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb428d5d-6c42-4da4-80a0-87557bb6c0c4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2389ab4a-2618-441b-b9c6-6b9b613e1232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a834c8fc-319d-4f03-af06-a45a22949704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bedbbc1-3508-4dcc-a641-358230500c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31c1096-b167-4e14-a7d5-c4f0554bdd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ac7d0-55b3-4ee4-a525-25ecbea16727",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92beff4-c9e3-4f1e-9000-0b4aac5dc387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b5f720-79dd-4ce6-8fc9-1b81d009e233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b254e95c-ba02-4022-9fbc-2faa570d851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f2ee3c-40b9-42a0-af06-59b6a3bc67e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "760de4ce-ca60-4a63-8f41-085e3be8e6f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "124e0a11-bb29-40ba-8dec-89646356500d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1f00c-66d0-49fb-be70-766b40e1a71e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a23c8887-3fe8-46aa-9d89-3906117bb3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8cc438-d737-4084-afc2-64d7c140f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "044ce534-6a35-4dc3-967f-564eabef71f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78f1a030-b94f-4cd3-a084-f369851be14b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56fa48bc-7442-40ad-aec4-81fb8d47c1b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98a1e124-cd52-4e0d-9a66-64ce1e85bc5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5c66dd4-52cc-4b59-9ca4-4f8793e91977"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3b1d641-90b5-43ec-a518-49823e12ddc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61376855-987c-41da-b1d2-37d03228b290"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6a54bcb-8581-405d-a801-b402487bb27d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb5c8aec-5713-4c2d-b898-bad10466acab"
            }
          }
        ]
      },
      {
        "id": "1f020ddc-f674-43b2-abd0-bb59f2850f46",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "444bd105-79dc-422d-be93-a1af4584cb7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f8e81ac-3fff-4d86-86fb-81f856c22b60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73ac2c82-08b1-4205-beec-33cb76c81b5a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a5aef4-2d78-4869-b5af-1e6eab979fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb47abf-cc2e-471e-aa41-2b2490a32cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb04f4f-1457-46f8-b98a-0ac95f78feae",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e56f6b6-644a-4c0e-b573-b5c7878cae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a563ed-f388-4722-b80a-dfd330e0c5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d002c6-6cde-47d7-92bb-8595f25a59a7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66fcb39-1d0f-4e92-9c28-b9a0f02521f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46b5584-644e-481b-a682-a9f440962a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edef096d-fac5-4a5f-acf9-c183b30f82ad",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0a4fb8-1641-4e74-88b5-a0fbdfc94283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3399852f-16da-49d0-90a8-8a5a09c4a4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c25c5b-e0e9-4040-9893-828ff1576a73",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143c69b6-aee8-40b2-850e-480ddaa20a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6488ad2f-c731-4f46-8269-a686353acc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b726492-6b72-4f89-b7e6-e9eb2014a6ad",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3611085b-5015-4f5a-831d-3a0d34eb7f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e15d796-fe1e-4b2b-b44b-82a22856ef9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3739775-597c-4af7-b5f0-7801145763b2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37b72ba-49c6-4953-915b-cc0c2a067dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ced5b8-f9fd-4eb5-bb56-bc853b8688c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dd3466-9aa1-4203-accc-a9a536898e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e963168-c92f-4dbc-a73b-6ee01279abd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d75b501-17d6-4daf-96a3-50d9ebcb6ea0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f54670f-1f0e-46be-b1dd-fe8fcbfdb9d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fcf0e8-58bd-4224-ae63-c536bc881854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a8ff1b-1565-478a-941f-5f288d742357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d63b4a-4e59-4efc-a169-69f29636251e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb80209-de5e-416e-a32e-21091733dfbc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8c731a-99ba-421a-82a5-5a2af3cdf37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b8df03-3649-455c-9e66-8f62d1680330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a07893-80ff-49a0-94b1-1d8f7c34c0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0010a2-9cdc-48df-be03-01ddaceda3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4c26dd-90b7-432e-9433-30a23d66ce31",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0f8661-a2a6-4ccb-8aa0-9029dc73de51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84af0cf7-ac51-48ee-a7d9-5b2679bd9e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac90760-95f9-4e73-ba63-46d1f9c4e698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daa925b-8547-4d60-8ff9-f34ddbcd7fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d3bff-1ea0-4106-9466-9867e2bbc178",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4519c069-0c34-49db-a364-ee854e7fd5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f454b5-7a88-4ff1-8652-268f5245377f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc34a3de-9430-4c3e-8266-5db56c8b9367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e5763c-f5c6-4b71-9bcb-f7fe366311ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914d66a9-49a4-4eff-bbfb-e7a0105e63aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91acb7f7-b2c6-4daa-b83b-5f25b4126c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703fbb92-fd9e-4e41-9dd8-cfd5f8ded764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd87e37-0a88-400f-8496-b1d2d9a3096c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0569ce7-50fb-465b-9680-eed322d257cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5491c7a9-2813-42ba-912c-917bb663241a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5264b8-1f06-46d8-b2e1-0065314007e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a19ad9-813b-467e-8258-b071383abf28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023374e-e7b0-4e3d-b80b-d5997efc5b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95a80d0-8b16-4b2e-a729-6507a0455c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9845cf8-3c75-434d-8b79-d03cc3deacf4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a40ffe-9901-460a-9f78-77d93f0d7992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262dee38-dc03-4064-a218-d00f20dc5c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e85d431-fa0f-463f-91f2-19cde345abcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e029a8c1-6a0d-490f-a62d-72f65289872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d21625-dfe0-4194-8b96-9b135fb2750d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a7ff89-b7e6-434d-ac3f-7623e5e3a32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e3a35b-3ca5-4ef1-a864-2c9a1df30077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced53d22-001d-4149-9ddd-526da7f348bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535899a4-b242-419f-9538-990144226364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31ed606-73f1-44e6-bc5c-4394d2b6794b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60afd20a-5083-4438-a8d8-94d4624952f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73870ae5-98e3-4b31-97ee-da2e2479a9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7707f70a-d612-4ac6-bca1-a806a38de6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168bdf79-4d8d-4e11-a047-190b0c6600e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41239f89-ec82-431e-b8f7-86eafd15615f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8653df68-f46b-44a2-9392-a641ca75c2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd0bf20-79c0-4236-8c29-2f91afc753b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fead816d-71bf-4086-a936-1f51f35846c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36aaf12-0f1b-4910-8a6c-8938cfbdf76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03c8b94-2c93-4eca-87d8-0aaa1f7e5711",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2fcb43-75a3-4efd-b118-8cec16d5e4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200a0f79-1b39-42e0-8702-3869d1ff9c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5831859-1e87-4f41-b540-9f2be5a36613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47230586-6fff-4563-8ce8-49a6eb06c7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da5910d-893d-4213-8cfc-74605be9b217",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e89f0c-070a-480d-a066-d18e59b2df2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444c880b-b9d0-4b91-8a9b-6927da8fad43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe117838-7893-4538-a094-fd69881591bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45efe53-0404-4c51-b9de-aa4870b922ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0d9015-df1d-46e1-b9a1-272c0abb9471",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bfb622-6271-472f-986a-89f408814d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ab063c-8454-493f-809c-c8ff4203458a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b4c9d7-9fa9-4544-8ea7-c6a5a119254f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee8661e-9ccc-4d26-b840-3e5585c786ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615f1db4-9953-4d9a-960e-02f465ad1921",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f8fcf0-b5de-409d-be09-1334f4526b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44367956-2bd6-4320-9d25-691d15a009da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c588de2-8402-4ff5-b463-1b6703b824f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62392411-a23a-4692-a2a1-e79e600db24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcb4f0d-e4a4-4cbf-8d8d-8302144a0820",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5bdbd2-07f3-442b-b945-b1b0a249ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7317a6-3dde-44e2-a4fa-6621b4296029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbf2731-a055-4b45-adb0-886d4efa4a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4854f783-ec0f-4d5f-a344-2bd8902fae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d09546-54d1-48fe-92c8-f264e707abdb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df7358f-cdf7-42c3-81e6-d64efd8028d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412163c2-6ecd-4aa1-9b73-404fa88131b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beac14f-75b4-47af-8be5-1be03e1d448d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b47a13-abb9-4172-acbb-8a0d9b084581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30553f9-18ca-4279-91cb-3e1e7af10e1e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3605d0a-e887-4c58-8429-37454e6853d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ddf63a-3c3f-4d89-8776-2aef5efa22ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e273fac8-f064-422d-b770-8f63c8025598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f7e9e1-2251-44e3-96b4-0edd3ec0f6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c01df28-c59c-417e-8290-342d733c2065",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85ee1c1-1924-4a6b-b437-ad261d75b59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d133c70-d371-4371-bcac-ad5dd8d3ed30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fd7a0c-a8f5-478e-a415-92f8e06abe34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecff7ae1-009e-4aff-8bc6-89943c7a3519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f8c1c8-9041-4e1a-b19f-dfc026eaaee9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba68868e-94dc-4d98-9050-867d4d3afb76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49643e98-6d3c-4f04-99f9-e7b844f5d9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee62bbe2-5af6-485a-9db8-17ce3916a163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7d1883-d587-4245-9b14-c5b4adb863ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe5a2e8-c50b-4819-a6e3-35c22fd01ef5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf7a75b-faba-46cc-832d-252f13497571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1127ca-445b-4c95-8ded-dd98ef4836bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97889cf6-84bd-4cf9-b3fa-4911855cceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8538bf8-6e00-4207-9550-b82cb146e554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddc9795-bf43-4b6f-ae1c-d0f64508831f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537db126-9d2b-4160-846f-90fed94c829b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a414947-5c2a-4fe3-b12d-297648b8a9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d3aa15-26b7-451a-9212-5760bb0a5d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec94f50-9a7e-4777-b433-5917e919ea80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82d822-77a3-431d-977c-394384878a48",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d128f-fe4f-496b-841a-2c1d9ff020df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b841c7-8514-4d5a-a5a5-cb626ff9b1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eab02b-4704-4241-b09f-2e1e9818f2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1731a870-7341-4609-993c-9b459d27e526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa5c3cb-4a34-4637-9f4c-b7e8a8217e10",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5fdd9e-4f84-452b-95ac-f9a5447edff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40a7955-0fb5-4aa0-a3b3-9344874f1cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6698af7f-8f9c-4c7a-b398-7be5ee678a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f19ced2-5950-458c-a75e-d49869d8a8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04402b03-6d15-49f2-ad90-f478d9656b2d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252249e5-3107-4d71-b653-bae7f4828e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af69366-ff55-4f05-b7bf-adfa175bb4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd852f1-d87c-4c52-bd66-537979c83a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06736495-ad11-41e6-84a3-5d4e334723bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb53c735-aeee-44f5-8443-071c9abd87d0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76050e79-f40d-4293-95bf-944a20213849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa36dbc1-5bd2-4d0c-b1c9-5406b9324a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7695712-e3f9-41f9-89c1-d45ccc636a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58c0cd9-bd6e-4e63-843d-0111768d84c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0422d8-3d61-41d6-a0b6-3ecfaab16d8f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6effab-b362-4503-91fe-cbc69a1adf6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1066a641-74be-475a-adc9-7ee5586c1685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deede005-cbc4-436a-9051-fa09e3698c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa44d3c-a809-4348-b463-4d9159d261ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f93ec6-d1e0-4fef-96b0-8d3ee1ddf96a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d0d044-6b42-43d5-9704-a43faf9486f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1d138f-e7d8-4109-adf0-8f9a821af24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f948c719-c193-4301-bad4-cc5187ee0cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e065283-418a-4a6a-a37f-9596c522c30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f98ec-2a5a-4a6c-aeaa-ac5d3defbac8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324177a-6bb1-41ea-97e3-9ebba7825246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c8bbe0-53bd-4415-84f0-ad9d702b19ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b998579-3c4a-4930-ab81-45878224961f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8a375a-d474-4113-9d73-63ba3e128d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc6356b-7fb4-42d2-b240-e451bf7a772d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f288d36b-0359-4aea-aec0-18bc66d55f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1ec4f5-d876-46c2-ae93-84f29ed2a598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f96bf95-dff4-46d2-a489-598a60e68fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758dd1cb-c98d-43c3-9b28-13d64c2d793e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855798c8-4ddf-4adc-95df-3a2f004ed649",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a52328b-9197-4c27-8bd9-85937bcfa674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84070b12-b6c7-4eeb-b6e5-aec365f42f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bff63d3-d937-4f1d-b20b-cc8330f0c1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca1a820-1934-47c5-bb3c-a2466a9853fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5809dd5c-7548-41e6-829b-f3f0ad5220e7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e447322-1095-43e1-abe0-df2b65750fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1d0282-fc9e-45be-9050-43c775883a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d1570e-e911-41ec-9fda-f8e14b75d497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937bbc47-f76f-4290-85ed-1ae65695de09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c47ac24-cc41-48ea-8866-e0ba03effefd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc53410e-d8d4-4aa1-92bb-7adf1c20d928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a38048-7c75-425b-8077-724d16aef6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a189258e-733e-4ba8-9476-004d3f656192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4291cf0-48a0-4f4e-92fe-21a6260071f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f78801-fa34-4b57-a5cc-d3680826019c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aabc683-f2a5-4238-883f-437cff2c898c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8e7441-ae0c-4b4a-b157-ce9885e2c711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967974ab-0221-42a6-8d7d-58e8970633d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4611fc70-f2e0-48f7-a649-8e507fd5d06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed4be25-e9ae-42ae-9552-9925065ea3f9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f85bd9-44a1-4dbd-bec6-1246312f2fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b9472c-e50b-48dd-8f5e-d558f7cbe9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bf8aa9-2f75-4257-80da-99cd7b1a40fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e52453-4add-4443-a291-4d939df60ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08434093-4206-4a66-b881-b78fe2f78f84",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1d37d2-6f21-40f5-9e91-54da103002a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51585032-264b-4735-9133-2ed0802e7a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664e948e-0871-4cc5-9bbf-5add52a30128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23767f72-1076-4b97-a912-ca47d5ccbbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca33d9d0-79f6-47b4-8d8e-4afd42ba7bdf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e85e240-cb0d-471d-b34b-7c011ef7a9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3239c3-9f03-4196-a21b-47973a520ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b68cb-c7f5-4640-b8b2-d4387f006d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a291dd9-d908-489a-a784-da8437c95ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77febb2a-78ea-40bc-9600-8ba16d663633",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95567073-6d18-4982-9aad-3f0442e714a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c900bb-7010-42e5-805b-e350d7a029ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f540034e-d9eb-4803-85c0-f3c3ce87544f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a63a591-60e2-4de8-8d00-6a139c5a3f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c19233-0223-4816-a79f-85e9ee0a90a9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355b3509-ad41-4ba1-9478-6f805d9250d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ada62c-1133-482b-9753-988aa5a86123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f2716d-8396-4f72-ac73-aed2ba3efdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04107173-2521-43a1-a8e5-2e2f69b45b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7a7435-afcc-4b74-b97a-bcd5c7852194",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2987c-5497-48a4-9eb6-19e0647aa3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19db234a-4a82-4d73-883e-1579fef50ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7717e8fe-2316-4dac-b378-7ed0e7b0499b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7d5940-010e-4863-8f1c-4f6914a52fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2e08ba-250d-480b-b997-969921393f76",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9c6c98-1697-4e92-bbc8-4ea02fcfc9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074217f5-fddd-496f-b050-4445f1d332d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0581eecc-aade-4a0d-84c1-5f9735f6d66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357aa24b-af89-49c8-bdff-6471014bd5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a1acca-6f65-4f01-b24c-e10c70559099",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d7e111-22f9-4c88-b7e6-edc2e5e63d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1d83ea-1550-4620-b3af-421f8349e3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00c423c-9d6b-4436-8267-4df96c51b36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c958fed3-2858-4241-8860-062453786e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f563514-50db-4815-9221-e7eab46fae55",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1129577b-4059-442d-8826-ee13ac28b706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7aa115a-1df1-4c85-9b04-ca9d1172c907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82d7df0-5c97-491a-a190-b831a2a7ac41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089c8fe7-e63c-49b5-bd73-6fc344917446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29b69c9-ff50-4d06-a7bd-5bc847d9dd0a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4942b3-8a65-481c-a567-303c82620772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f0369-0090-4d18-bcc0-57878aeeba65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ed7083-369d-4e3d-8809-50727d55c08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba7cf40-59c5-4469-97aa-6e1e2fe9918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41992d64-f06a-40d0-bd9a-b307bbf87e94",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88f9db3-fe35-4abe-9948-9d84753a8dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ff0462-107c-492d-b0bd-1612ee9fb6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888cd5d6-ec24-4316-80cb-155df875c1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775ba110-dd58-474e-a893-f783e3b8f8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8065a788-2dd7-4ecf-b5dd-248550bc6883",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac679618-190b-49ea-bf5d-5951a4459de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b8abd1-c3b9-4df9-8e5d-ca7427b0e29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26446c52-9c6c-4b73-9e68-610845a0ca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e583069-2093-4b24-ab11-32f22696e9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800aeebe-810a-4636-a670-688409ee1aa6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07493b62-daa6-41f5-af73-58a0f8cf827a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c27c68-a579-4496-a104-5d9c3de2689d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90255f21-483d-419c-aa93-aee5a3721dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac31579-bbf8-4b19-b4b2-ad3a1c72eba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d1a3cf-26e4-43d5-9e30-0b5d57005eef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0bb05f-ee33-4924-bb3c-19358667b71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e285eea0-2d9d-4763-9704-a5d5a9825cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379e1cd6-6246-41c0-ae5a-8ed126e4b6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68260414-e1a9-4f5a-9dc3-2abb550c9daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef184aeb-b8e2-446f-971a-0771dc9f3c01",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43abbd94-07e2-4999-b015-2397238408f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2bebad-ac60-4227-900d-2f92941d8e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cea809e-871b-4fc5-9b15-693415cd626d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7e9038-7f9e-4f44-b2b4-08d21ab1cc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372c1017-0e3e-4d43-b7e8-cad8e697e710",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f6b76e-3760-4467-8dc4-9169f5d0bd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b81d7ff-bb45-43db-abe8-9e229247b8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d95d427-aa90-4e83-a97c-1810c18e6e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff91b14-77ca-4e89-b016-ccc39c9ce182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b759e7-05d4-45aa-acd2-59e245a56694",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce9e584-9cad-4b3e-8508-e2295625fcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c28770-481e-4da6-944f-357fa4c2624b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c224e5f-365b-45f2-b9ed-f73bcf271b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307a213b-28d1-4cee-bbb2-3df72fd6aec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda9d667-39b1-4c00-8245-69b29f645fae",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9c037c-0a2b-4951-9860-1d21c6c19379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca03db42-0cf7-43b0-ad01-32fef7533a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf2b649-0b56-465e-83b0-e55fb79332f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45963a83-1964-4cd0-bd4e-1ece7d98873e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a79db01-36ab-46c9-b7d4-6a1526473b6a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06882c75-76b1-40b5-9ef2-28c11f9516c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75945486-7b00-4d63-a573-edecc36c7963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49940660-7917-4f93-8737-20b9665f1486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed04865e-7f41-44ae-83d3-b1fcc807bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae42bd7-e088-4e09-8653-c02d3be7f837",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50479081-3de0-4216-9bb8-2585f9aebca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0859b99-08cb-4d32-b129-063da388283f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c4b1c0-1005-4f88-8be7-9edffced4b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b6e641-0402-4d90-a30c-a58238957b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f983ef-d24b-49f0-a9b0-49440f2fd80b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc03e045-b1a8-4ffa-acea-992a9b3a7e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebbbf57-964e-4c83-8339-2ca141aaf76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0adaf49-f04a-4da1-af6d-e186b324a944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6177e208-ee34-45fd-b04a-69dc2a4eea1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4fa77b-5462-4bd8-a307-973023578a59",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef9cb3d-e7e5-4d93-a812-80a8bd637c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767df5ef-47fa-4d70-83e1-20814ad055ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db14bb1-63ed-458c-a36f-ed804a69665b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84c2e4c-7823-4cdd-a4c3-8007868503b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd46317-5695-4ceb-b196-f556f5c3dc66",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba2b97f-02ab-48c3-8474-7ca19595e242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2388709-5a66-4cd4-ab43-80d6d27c2f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a03ffd7-6d83-4641-bae0-9b392716b228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db75a1c-7b31-41ff-9d47-f09c02c83831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38877574-7796-4b29-be6f-02f8d83fe66a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc61e7c-5299-46d9-81f6-0702a9eef3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978bfd5e-b66f-446d-9733-39debc451976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a28bae-771a-4bb3-a864-687b4123cb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e34cfc-9036-45c6-b5a8-fc18a261d603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b837dc18-93f3-44d9-a414-d3b149150b59",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3960d2e0-6d6a-4848-b268-549dc4dc15e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78abe6fd-7bb7-473f-b385-e150c8b4d562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9799e237-8112-449b-94ea-21bcc8e7c54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b35516-de91-40a5-895e-38e79993f759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072b1f6e-1aa4-4be2-9b93-1a97dc797ee4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3da57b-c5d3-4595-b914-d5af2cb5f80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1404517d-9d66-4402-92ac-7c8e0473b50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2196171e-1b40-47d3-8604-5974d0a278bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3baef37-80cb-4b46-b4bc-5f7ca3267a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74762590-9e77-452f-9065-529609094b3b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b819593-7237-4c50-b111-74616168393c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f20e1e3-2c66-4a02-8427-ca59451693ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa69dc8-4535-4357-af54-7cf970364e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a173d7ea-ed50-4bc2-940b-44e8a0f9b9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ef1b92-a033-4f28-8b60-67028bb24281",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824fe89f-33b3-4e6a-932a-8bee52e2e63a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14725e75-bcf2-48ca-9287-e4e2cc0ac377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbf27f0-11b4-47a9-8e4d-8da8aa9032af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2982e97a-f063-4c54-919c-f0aee84ef2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bb475b-8a95-4a6e-89a4-680ea2d06412",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ca3ac2-24f7-467d-a565-2562aa77f235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34df0949-9093-4927-b62a-63cf8aa68c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abda0e6-d82a-4bb0-bc12-ba08ee26b8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df1ffe4-ad4c-4205-972a-ec793e14fb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f20de4-a343-41a3-915d-d1721e638333",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcad42d3-8491-4442-baee-e6f25fafc15f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2561cb-7be3-4238-a2be-d0548f10e1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11160615-91db-4b69-b140-aa69b1a0a4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a21c9ce-bda2-4b89-abf6-89fe22d3420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe429bd5-a64d-462f-8b29-bcfd46443684",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152365ec-8fc7-4cf9-8149-20898e058744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910366ff-c58a-4dac-af1e-4e515260b08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31c6af3-40fa-4c02-b656-9d129053a066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b837cfa2-7364-4411-9f8a-dd853d3dfe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9460dbb6-c781-46ce-b962-9d8a04e60bdf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954f813c-780e-4b11-8aaa-6a99c63348df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec3d21a-db09-41e0-83c1-da702d0f95d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21506e4b-8c0a-4a9e-948e-336f755953a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e795e1d4-1818-4c79-9d52-5d52e98bb398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc6e048-73c2-46fd-8799-5ee39eba9dbd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e4a737-4215-46e8-82c6-2166a9108a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4947ea-a2fa-47a5-8edb-fcbe21204970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4545be-f1c8-41fa-bcfa-c3bc2a2bb124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6887a6-3b65-43a3-9fca-2f6e432ae656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f568491c-ac78-415f-ae9d-68ffcc50ebf6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1263399-4106-4b68-ad20-6109efe53ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fbef1e5-92e7-4512-b1eb-a6516774d8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f80a4-f3cb-40d8-be1e-528c1a32ef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287a1824-df84-4d98-836d-08f6dd9a673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448a0f19-2b03-46e0-8dc2-c509947b41e8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30779ef-7504-45bc-a270-a82f6d31068c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41574ee0-860f-4b58-91c3-260d3de70f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5506217f-0afd-4a50-b45e-70efdb018227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ff55d9-133a-45a9-b86a-6cd22ae990ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067b0aa6-cf88-41f1-9396-30cace67b9b4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612ba233-31fc-4ce9-bd2c-3a3100225c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb288215-04a9-4ed2-b91f-9f2de0aa8a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351a7f5e-d99e-4bfe-88b4-d1c019fe9b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6561db02-81c0-4da5-9dd4-78c925dcc1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b06af4-4dad-4048-b799-3a469f480ae3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf315eb7-62c0-492a-bff7-2d94a0cf3078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4843a5-c61e-4513-b5ed-76df4c807ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f6fe51-2766-4bf4-8461-399bffcb8be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cb29de-e837-4213-8933-e657307e1dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d93ee-bc64-4102-9a15-8af9540e4b72",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe2654f-5659-4bbf-ac8d-acb31e2f918a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d914db-cfa2-4416-9435-3da492ff2cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58010c37-0221-4bf8-aa22-0613e5926c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb59b656-6892-46f0-ab64-120e22abb40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13229df-a68a-4c93-a7fe-f97be4218a19",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b53d2a-860b-4e4f-be2a-b1332f3cc011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7b964b-33db-44a9-9413-b633526c6c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac2c62a-1847-43d4-a162-a4fbe717d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160a33a8-a180-49b8-a5a2-be4bb79402d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5fe727-d47a-4d1e-9784-2bcb1e92ea2c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74604272-35dc-46c9-9e3a-9747a566f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "908eb128-84ec-4f1c-9868-ad628940cd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340079e3-56df-4c5b-8643-c99d39b53f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b767446f-0037-424f-b3e6-d94222f84336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef9fcc5-9cf2-48c6-bc8d-516848ac6c2a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5e3019-32f6-4902-a8b8-d2473b9c44eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da57c180-8fb6-472d-8160-759de3f12b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a4b106-6615-4efe-9cc0-b1b53f1f205b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f825a584-1536-4ae7-8153-1c766d6f3cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c979370-41da-4fe6-8e80-5c16c4268c08",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dbb9a1-c1ee-4f84-b2d4-93d7c3e0539a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc86d3f8-aa17-40f6-b63b-5d1007dede1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5087c55-b542-4b14-a239-2bf16c0d42e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f14c1b-8b8a-4fff-b860-36479aa03cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db987a00-7f94-45af-a4df-4c34c0e9b6bf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d092ff4a-5988-4458-aebd-0239df3ab962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbc2c11-6aca-41bc-b7b5-0b9941784b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a8089e-6ce2-4c01-b0d4-66ce9c172fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b121afe7-1bcf-4272-af7a-559b4296ed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2faa86-9375-4d3d-950e-62423f58506f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6595e0fe-a178-40fb-9763-20c94e5f1193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07256faf-c787-481e-a935-24baf2e089b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac16be70-5b12-4265-a228-4bc904bd1108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4be0e1-4d56-4ccd-a96b-7f1492497a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9321d2a4-bce6-462c-b8a8-0b4b12a82eed",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54bde40-16d5-487c-a008-390c5c8a03b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913ee365-6dbc-4cbe-aa00-cd545871e2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d69b5f1-e00a-4691-97f8-d0ab781014d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f36d54-6f99-4e08-97d6-f2c67a8e02b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48197aed-ee83-456e-9d00-1a7859295c6f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07c7a2a-97a9-4176-bbdd-0b1c1052477a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce50cc03-10b2-4c6b-abbe-824ac2349608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359b32f2-d145-474f-adc0-6b565992d8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5793701-888e-4559-93b8-8de5556e32ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c839b1f3-e3e1-4596-8373-4e6f6163d55a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e836c99-a210-4025-a033-8583306e652c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5538e5dd-4e97-43eb-a86c-bd4fc2e70328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a75cf9-0063-4ab7-a10c-001780b08ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4311b4dc-99ba-40d5-8564-1c2393e5c73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52113bcd-2b6a-45c1-8825-bbf71a1756d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294512dd-f824-4216-9711-95d085e57bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f8c0b3-352e-4c17-8a03-0b530297628c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bb49c0-0219-43c7-bfa9-99d7fef430e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b67ca9-da13-4ddb-ba10-44d15de9b3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c111ac2-51e3-4d3e-a2a2-ce1f87be2885",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9b3e33-c8a1-4360-bf7f-535a73a73ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b395c2b-894f-44e2-a006-d2edaaa1174d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cd881d-bd9f-4b66-8faf-b3d3c34c8d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7f63de-d13e-43bb-a7ee-b1957fc1dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e22c71-28ac-4b95-a1b0-81a9bd6a48db",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1353521-b930-4181-b63e-485f0fc16356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a51c8bf-75a8-48de-8ce9-fc5f23e23840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be839eae-307e-4e69-8996-53fec73ce63b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281a3389-b15e-4e6f-82fa-e84bc4a367b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0877eed6-14c7-484e-9b2b-6a758e4b649d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e559ef1d-4388-4980-86fa-63f1b0e847a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d146bf-6dbc-4c0c-9f95-add7c46398a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1a6856-a20c-4233-a1f9-b2f18ffb1a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c28bb8-15d2-4b0d-bce1-4315b7c9bd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a9243f-0d3b-4121-9cc6-3b2a71502b42",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb50f6c-7394-4264-af34-05081ad76a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b753df-1852-466e-bd72-8e85c20f1460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb560cdf-c98a-4b34-a664-54566abd1214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2777a4e0-757a-4460-9ff7-2e8ffd683994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf06f94f-a9b9-4306-93b0-83275dbdae05",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8ac3a1-4422-41ef-a408-b386037857d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db506ce-bcc4-4054-bdad-04d43901cc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321fca20-f821-40bc-ae0e-9d29d5af0fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90c70e3-cb9c-4ecb-a4e8-674394f16feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df32487c-8a01-46bc-a70d-99a493290aa0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4143db11-5623-4a92-9e4f-603d51caa904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e2d67b0-f9df-4aa3-baa0-7c3361b3896c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938ba365-50aa-4f1f-990f-8e1449891b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9e930f-581f-4039-bec1-8397995c2553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80860387-f0ca-4794-8f6a-c4a53796196a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840b58f6-e06c-4dc1-906d-a33236b06755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce84e4a7-d01a-43df-ab01-eb45e5b0dc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af2b0d7-2ed4-4366-afaf-042fd1aa9652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fa63dc-f75a-4086-a84d-28a135fe8dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac7eec8-085b-4707-9583-36ac46ac53b9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dede6a62-0d9c-4855-ac31-f91385119d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36146750-08ab-4ab6-9975-5518920535c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f693f730-b60c-4f4d-8026-0c82925835ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1d85df-4f2d-4eae-a8d4-d026771d9eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485b08b7-de16-4f08-8177-9e465529b7ad",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf52a99-4fc1-4a41-b417-7555caa82b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2bfe78-6788-490f-b8e9-5d578d018355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05bc1f3-640d-49a7-b8ab-dd89f6136083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3603ae-f153-49a3-a11d-098d3fb20d04"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c56a6593-5ed1-4efd-81e3-b60ce041dcdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cea78fc-8bc3-4bbd-b64b-4db5fb245f36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ae067c-871c-493a-8f30-d2053a745d39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac603184-724e-48b5-8059-7a72c80faefd"
                    }
                  }
                ]
              },
              {
                "id": "5b63d513-248d-41bc-b7e5-6820ad3db74a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6265cb90-6f68-480c-9652-aa1c8cdd72d4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5c04a8-08fd-4782-a0aa-68f02fbd20c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ac499266-f0a0-480c-af01-46721240cd0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7cbe59-4e70-4926-be98-d67b9a64e826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9f38a9b-56c3-448f-92fc-5a7ac7f272b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc284366-e479-496f-8a1a-35d40e8d9e88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd7882e7-8879-49a4-a8ca-11d019f7b094"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a972ecb-06e3-44ee-8ff5-e70e2956f794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc8c809-5fa0-4a60-861b-fbb9ee1190bf"
                    }
                  }
                ]
              },
              {
                "id": "d6189f31-40b6-4cb6-9d4f-c4445309d223",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "15533794-35b0-429e-9f80-c4745d3537ff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d328ae55-ab25-48d0-b0d5-c9322f54193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8387a210-4a6e-49d7-8182-b03fa34767f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a97b3f-3a91-41a6-b91f-b214a146c688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7548568c-5ded-4397-8e3f-c6864633c016"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b2235c3-07fe-402d-b751-ffebe2a379a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74cc303a-3594-462f-9ee8-8a60695077f3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "215dbe5b-3b5a-40e6-91d6-617be30d6fd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a94ff49-0ec1-4c1d-bfab-613fef891bcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bf752d2-614f-4f3b-a6b5-d9d9a21e674e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c9fa11b-09ef-4ad5-8c82-9b207ef96c38"
                    }
                  }
                ]
              },
              {
                "id": "7b79add2-0fbb-465b-b87a-94059cba32a8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39143a81-fbe3-47d7-bbb4-6390335e6868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e88380b6-8dbc-4026-bc8b-dce213825b4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6878c37c-e6ed-47dc-b701-3c7449291e83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eef62c5d-44b3-4c85-aac3-521d90752027"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7390bd94-724b-400d-a2a7-28ad74bb88bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2f0976ff-2609-40b3-83f8-5d7d5908597d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0538aed-3266-4308-9bc6-ada3417a17d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55c6147b-ebc7-43cf-a7d9-8e400bfade99"
            }
          }
        ]
      },
      {
        "id": "6b707156-ec31-4b31-aced-e52a44821359",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d739ceac-1216-43c4-a1a2-718c76631127",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acd349de-1da3-47b0-9f55-41608ae67413",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "934ea2b9-5b7b-4ba6-a645-a218fd08a3f6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f01d25-918c-4cdb-a12a-d3fe81e94f03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0fd68144-be63-48c1-93ff-937e99190902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0948ec4f-1570-49c6-9ae2-682ea25a12a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c4d4155-1b48-4b17-9943-0895bbc56070"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c823da0-a2d5-4696-94f6-674ee1a0bc6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c00d6693-1417-4121-9830-e3be0ba0353a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f97c5c9-ef92-4263-acf9-e3282a0a9f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d75fd74-ab21-4326-98d1-bc6ccb752c97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0dcc45f-ce7b-4750-a4ec-cdfa033ca701",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ca831c8a-f5d0-4187-9cc6-2beb2b81de33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44cd1fb5-4338-45a2-a920-e22a41a430d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3e67c3e-71c4-4d61-b5cd-9a19b594d4a6"
            }
          }
        ]
      },
      {
        "id": "623e136b-a61b-46fc-9b54-1f6117f1c706",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dd4b9dd8-9737-4ec7-9962-eef234f64a58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ffca637-8ca8-4ab8-b43a-4611645b5bec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "968b68e1-4cce-49b7-92ec-e5dcd31e9d14",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd22ade-abaa-40a5-9ab7-fa9fe7ccb165",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a39645e3-65fc-467f-a128-0cd5c8ebf60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a22368-ca15-493c-9750-d257cc5ad04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1c2576b-3ac5-49ec-ad8e-11bbdac84679"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f47c612b-a849-4729-a68c-eaee9a55d2c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44efc654-a9dd-47c8-b991-fa91ee0dc7b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "683f9133-dc04-4182-a4c4-30c87ca2b6f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54ca35db-1d8a-462e-9f9e-8105886da5d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "724a243f-b5af-430e-813c-0393191d476a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "907208b8-3e5f-43af-a623-a9c70877184e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5bef048-72bb-4aa8-a53a-32f1a0e70483",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c80e9de-92ae-4b43-9246-3afb6e4c1a0b"
            }
          }
        ]
      },
      {
        "id": "61ddf93d-2cc8-4e49-87ce-58c4c9c8c311",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6b44c4ec-17f6-44e2-9e03-cc3f9d465080",
            "name": "Negative Testing",
            "item": [
              {
                "id": "316b97f2-4dd4-41b4-b3c3-c31080a85396",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1a6fe13-274c-4d52-8e0b-e5437b6f3846",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f097f987-1349-4aa4-8887-ca89ed72b937",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38149536-c625-418b-ac22-095975b3f558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf4ac63-6dcf-4bea-9dd4-18f9ba063f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "298cf87d-1e56-4cd2-bfc8-4d6bf0cedc66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd4a716d-4478-4396-9953-736da521de83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acbb7f5a-7caf-4716-9674-394b86206b03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6882f278-1a64-4366-a956-d3b0b2fd8e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a194c3f-2093-4c7b-b315-439707310d6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3928b5a-4dce-46ad-aa4b-9d810a6c1426",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70b6b3d6-a8a6-42a1-9680-7a9017c41d39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc67ce45-3663-4af3-82ea-b12af9d15c3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0becbf95-8455-4f76-b2bb-76f49ff6eb39"
            }
          }
        ]
      },
      {
        "id": "207469f1-13d3-423a-8191-08d9d8414550",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6708e3ff-09fe-4087-af0b-a4086eb8cd7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73180644-f6f6-443a-b6c6-cbe20a554875",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "19f4ac16-be23-452a-8751-b9fc64edd13c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5edded1c-ffec-4f5b-996a-4777c20392e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "290ffc24-fcc2-41d5-a2a5-36756cf2c3e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.99649122807016,
      "responseMin": 10,
      "responseMax": 6860,
      "responseSd": 477.84004148966704,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706488460265,
      "completed": 1706488496673
    },
    "executions": [
      {
        "id": "cbaf75c7-8eb4-4cd7-a5aa-3afa481e8369",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "51858bae-7f2e-4f76-b4c3-a5b2934c77b1",
          "httpRequestId": "1af5acdb-abe9-42cb-b4b6-3dd7cb016f84"
        },
        "item": {
          "id": "cbaf75c7-8eb4-4cd7-a5aa-3afa481e8369",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78299199-3fbc-4b6d-affe-c5e397a7aedb",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "33ea3b96-3b3b-4165-9962-788b370d1c8f",
        "cursor": {
          "ref": "f5ffb705-46f6-4094-acf7-99e2d1024ac4",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5579bfff-43be-48fb-a2a3-dc36cdb27731"
        },
        "item": {
          "id": "33ea3b96-3b3b-4165-9962-788b370d1c8f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8ecf7826-57cd-4c5d-85c3-60397f35f836",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0a6d151c-74a0-4204-8993-cbfe599ef197",
        "cursor": {
          "ref": "c0a08212-5f9d-453e-a546-e96ff534e5e6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "58ccf1de-2a3a-4b84-94af-7778ec48eb67"
        },
        "item": {
          "id": "0a6d151c-74a0-4204-8993-cbfe599ef197",
          "name": "did_json"
        },
        "response": {
          "id": "56196a40-7154-4c30-ad99-b2a0f2b8ac3d",
          "status": "OK",
          "code": 200,
          "responseTime": 264,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e58192-be51-45b6-8485-916e161375c7",
        "cursor": {
          "ref": "c948ab61-f4de-4c39-8f39-3324485ae748",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9cf0e5b9-add7-441a-9b0b-12a6b5a373ea"
        },
        "item": {
          "id": "d1e58192-be51-45b6-8485-916e161375c7",
          "name": "did:invalid"
        },
        "response": {
          "id": "01ccf85f-899c-44af-a3da-3b20c2106178",
          "status": "Not Found",
          "code": 404,
          "responseTime": 835,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e58192-be51-45b6-8485-916e161375c7",
        "cursor": {
          "ref": "c948ab61-f4de-4c39-8f39-3324485ae748",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9cf0e5b9-add7-441a-9b0b-12a6b5a373ea"
        },
        "item": {
          "id": "d1e58192-be51-45b6-8485-916e161375c7",
          "name": "did:invalid"
        },
        "response": {
          "id": "01ccf85f-899c-44af-a3da-3b20c2106178",
          "status": "Not Found",
          "code": 404,
          "responseTime": 835,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfef6fc-7815-4e2e-b8bb-f3adf622ff2c",
        "cursor": {
          "ref": "de36b562-6e26-45ee-b298-ce21530e5a80",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d74a724e-4fb2-4011-bff6-bbac9e3799e0"
        },
        "item": {
          "id": "0cfef6fc-7815-4e2e-b8bb-f3adf622ff2c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7f3fa4cf-af82-49e1-86d0-6897a380db15",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b616e93-f023-4603-bf4e-fe33e3c07e3a",
        "cursor": {
          "ref": "ed64d5ee-e193-462f-80d4-f58aea8c383b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "19e9e5de-c22e-4bf5-9669-53fd6110cc03"
        },
        "item": {
          "id": "8b616e93-f023-4603-bf4e-fe33e3c07e3a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c39f22d2-7523-4684-9e0d-5b6b72c96ff4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eedd77-01d6-4cdc-afd0-5ba3089f1c6f",
        "cursor": {
          "ref": "1d908110-fc31-450a-960c-d555915c9534",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "572ed524-f187-4133-a24b-d8e3b94724ee"
        },
        "item": {
          "id": "60eedd77-01d6-4cdc-afd0-5ba3089f1c6f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e120ceba-093c-48f6-b7a8-2e76eb7c73e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717808db-dd47-4d54-9d9e-92c205b45a9e",
        "cursor": {
          "ref": "35d04046-f6d1-4ea9-a80c-777b15d3c84c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ff9b9f8-ad71-4fb3-994e-a2c555624b00"
        },
        "item": {
          "id": "717808db-dd47-4d54-9d9e-92c205b45a9e",
          "name": "identifiers"
        },
        "response": {
          "id": "98f99d8f-df85-47d4-9650-d2fd522efcbc",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3893519-8d1f-42af-b6c9-e853f217a226",
        "cursor": {
          "ref": "14bcef01-595f-4aba-b591-fddc4a7ebbba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "66e11854-3eac-4d0b-8093-2ac491b35d95"
        },
        "item": {
          "id": "a3893519-8d1f-42af-b6c9-e853f217a226",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e1c32b2e-b114-48fc-9f83-7718fb450a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe8020-ec6b-451e-b639-0866fe0e9bad",
        "cursor": {
          "ref": "1e8ad3a3-5700-4e72-851c-2b77245ca789",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5c01cd1a-402f-4d47-8078-7f51f5665a5c"
        },
        "item": {
          "id": "76fe8020-ec6b-451e-b639-0866fe0e9bad",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fba03360-37d7-4c55-ab25-bd65cdd1a346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27286d20-a6ca-4d32-ae50-34e21e19c44d",
        "cursor": {
          "ref": "7c83fb22-da03-4ba7-9aad-d47c1ec4b6cd",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2c9b2aee-9595-4766-bcf9-331c25c8a860"
        },
        "item": {
          "id": "27286d20-a6ca-4d32-ae50-34e21e19c44d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4d6ea41e-af79-432a-acf5-c77cf4dd0300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3b7b5a-01c6-49d5-ad97-76d2ddd5f931",
        "cursor": {
          "ref": "5af36408-0299-4d73-8eb6-12d0605653c2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "45f8fc88-3a40-4199-b526-f3f94cef6ae8"
        },
        "item": {
          "id": "3f3b7b5a-01c6-49d5-ad97-76d2ddd5f931",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c63da3aa-a52d-4ced-8341-383641c9d301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab0ce54-7eba-4a00-a2d2-c504b5b591b1",
        "cursor": {
          "ref": "ad85ca93-36c4-4ed1-a48d-e4646be06c2d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "68989152-e6f6-4627-85d2-e8dad1fbd9e6"
        },
        "item": {
          "id": "4ab0ce54-7eba-4a00-a2d2-c504b5b591b1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1c540f62-ab5b-4cad-b86a-aa42626e25a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d79be98-8896-44a4-80bd-12c17c94a9df",
        "cursor": {
          "ref": "bf74d529-39ab-41f9-b6cb-366cef4aa459",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d44236ad-1c2e-4045-9309-ed5745dbc88d"
        },
        "item": {
          "id": "7d79be98-8896-44a4-80bd-12c17c94a9df",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0ac16011-3278-43b4-a4e5-00dea509909e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8727c9-6999-4ca8-b3b9-d879078fd393",
        "cursor": {
          "ref": "6afcf63c-ec15-49a2-8f8f-c67d52c0d6b1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e8ecf538-4a4d-42ec-94a0-17dc2148f66d"
        },
        "item": {
          "id": "fb8727c9-6999-4ca8-b3b9-d879078fd393",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e05e3522-23b4-4a14-9ae9-80b4217d4529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ecfdd7-fe0e-43e5-a1ea-357938f4018a",
        "cursor": {
          "ref": "b7e33dbd-14b5-493d-bfa6-936275ec69cb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2bc51184-ac6c-4c58-bf0e-55313869d643"
        },
        "item": {
          "id": "c2ecfdd7-fe0e-43e5-a1ea-357938f4018a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "637f6d40-e3e9-4d1e-b792-9e26f43de3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6507e41c-d395-4b11-9b7e-25d12cfe83c8",
        "cursor": {
          "ref": "51d5e13e-6cc4-43fd-a893-8f98270a76fe",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8ec15512-a6d9-406e-8c0e-740403ef46a2"
        },
        "item": {
          "id": "6507e41c-d395-4b11-9b7e-25d12cfe83c8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac57e6e3-be09-48cd-a2c7-dee47e204f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6704e82-596c-4b1a-bed5-c68bbd53b431",
        "cursor": {
          "ref": "26a315a9-98ab-4b5d-8613-4f209ff481a8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9743a405-f473-47bc-87cb-99a292634cb5"
        },
        "item": {
          "id": "e6704e82-596c-4b1a-bed5-c68bbd53b431",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f8257b3b-fde8-4099-8f7c-578590225447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3f8df5-c498-4612-8cfe-a698aeac43e6",
        "cursor": {
          "ref": "53b0c168-46c9-4d45-96a3-d3f9b376ac41",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d934467e-ceec-4e57-ad55-80822216eef0"
        },
        "item": {
          "id": "3f3f8df5-c498-4612-8cfe-a698aeac43e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c5fb9f8f-046f-4021-ac06-bce4b4394df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1932190c-dd4d-4723-9415-8014b71131f5",
        "cursor": {
          "ref": "2a85e59a-c5eb-4e7f-8148-f086258750bb",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80b5c26b-f701-4a3e-8b35-b9510b1f3c12"
        },
        "item": {
          "id": "1932190c-dd4d-4723-9415-8014b71131f5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a4ef9249-2768-4a4b-8c4e-d7d9cfe13534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e2ac7-a6c7-4f2d-90a1-3c6893facb81",
        "cursor": {
          "ref": "8cb357bb-7bab-4974-80df-c1c065bc7d0a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b9f645dd-77d8-41c6-8d81-534d70ebb73d"
        },
        "item": {
          "id": "e81e2ac7-a6c7-4f2d-90a1-3c6893facb81",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a366f875-2688-432d-a87a-5c249a3c0f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1b977c-e9a4-44f5-8579-ef73bdea9313",
        "cursor": {
          "ref": "734f7bb3-4ee8-4bbc-9c26-eb8914ed175e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "70d45f95-e2be-4ebd-ad05-5dd5e3664f91"
        },
        "item": {
          "id": "9b1b977c-e9a4-44f5-8579-ef73bdea9313",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6351affa-490f-4176-8629-6e9e5ccf779a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670cd38e-565a-4012-8b8e-20ccce51435a",
        "cursor": {
          "ref": "9613ef12-d533-4f62-a6ec-6e18c47e6e71",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "430d2c79-2888-4820-8ab7-27eb86e5c2d6"
        },
        "item": {
          "id": "670cd38e-565a-4012-8b8e-20ccce51435a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0b6773e4-02ca-40e4-ae8b-60bc6e333472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b39ec3-a268-4124-b144-4777482466fe",
        "cursor": {
          "ref": "ddb3cdec-db50-432f-bf50-f0e72356472b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "11e0968d-2f5a-4a3d-b39e-a64164e44312"
        },
        "item": {
          "id": "c4b39ec3-a268-4124-b144-4777482466fe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "66a928bc-99aa-46d9-8efc-86d895dc6012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588413b4-e596-4705-9908-a6d498665148",
        "cursor": {
          "ref": "62db6eee-6ca5-438f-8a66-d4acaefb2617",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5a156a8d-d289-4d2f-9c98-eceb406fcc07"
        },
        "item": {
          "id": "588413b4-e596-4705-9908-a6d498665148",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0f3855f0-b3da-4f33-bce6-5e5944387fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010bab79-b4b3-4f76-8d62-6e2008be6f8a",
        "cursor": {
          "ref": "4935b637-dad4-4b4f-b922-f07ac9423bd4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd310cc2-6e97-423f-8d12-749931d0c39d"
        },
        "item": {
          "id": "010bab79-b4b3-4f76-8d62-6e2008be6f8a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "968233d1-c2fb-433a-86c5-091c1dfb74ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39cab09-6fe9-44fc-b19e-052c9f17cb95",
        "cursor": {
          "ref": "ab9b9e01-a22c-45ab-b326-4c3196cd80ab",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6bff72e7-070b-40f4-a21b-4a09013aaf3b"
        },
        "item": {
          "id": "f39cab09-6fe9-44fc-b19e-052c9f17cb95",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c88404c4-110d-4da1-8122-42504a1a77c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89d2593-f80f-4241-83d1-fc5d2e7eb06c",
        "cursor": {
          "ref": "56a4c406-445e-4ac7-98ad-1e4f0c7b44cd",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "86c52627-5b85-4770-b59b-42a052d7ea7a"
        },
        "item": {
          "id": "e89d2593-f80f-4241-83d1-fc5d2e7eb06c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d8fc75d2-725a-4bc6-a4a6-4c8e98db857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c7fb7-5a2a-43bc-9e55-98faeff70de8",
        "cursor": {
          "ref": "4b972583-f7e9-43aa-8beb-49c46e11ceca",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bba72f63-d59f-4168-bafe-27b175e29ed3"
        },
        "item": {
          "id": "363c7fb7-5a2a-43bc-9e55-98faeff70de8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e9e3015b-8cd6-473a-8795-a748a382f472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2d2b7f-60d5-4f33-b7da-3ac8d4b385d7",
        "cursor": {
          "ref": "6271ec45-3c90-4757-9fc2-dd9b2f677cf0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "62835b4d-39fb-424f-8296-84c4f2e6ad2b"
        },
        "item": {
          "id": "bb2d2b7f-60d5-4f33-b7da-3ac8d4b385d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9b6c22ee-9b78-49c5-a44d-4edc47a42b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42919e5-2a83-4c07-b920-6b9b1616db52",
        "cursor": {
          "ref": "1219aa1b-8049-44e5-a6ee-7b97c10da2a8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6c7dce4a-6412-4f78-a8e3-a760bb68665e"
        },
        "item": {
          "id": "b42919e5-2a83-4c07-b920-6b9b1616db52",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b55c0ff7-328d-4067-9e0a-62f4b3267e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe41f55-2d34-4fa5-88f3-b8ae7e15438a",
        "cursor": {
          "ref": "b70622f0-0fcb-4100-837c-286c53f5c25b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "21286aff-e883-4f94-a3c5-3cf687feedee"
        },
        "item": {
          "id": "5fe41f55-2d34-4fa5-88f3-b8ae7e15438a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9edb38c7-e14b-4f6e-8b9e-c5ad166e6823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df71241-47f5-40c7-9bac-6f933f1274c1",
        "cursor": {
          "ref": "96f386d4-5c6c-4191-afc6-ce33d80da035",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "03de2c2f-4f03-4776-a8ac-84259cf2c52f"
        },
        "item": {
          "id": "9df71241-47f5-40c7-9bac-6f933f1274c1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4ee00612-0058-4cf0-8f5f-7fe98efbe1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1a9efd-c3c5-4141-8710-efedbb71cf7d",
        "cursor": {
          "ref": "50eb3ec8-5519-4494-b037-e1cf33e91c92",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "09b7042d-6541-4c27-bf80-9390f54381d2"
        },
        "item": {
          "id": "0d1a9efd-c3c5-4141-8710-efedbb71cf7d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "690877e2-ea09-406f-95b7-c20836bb348a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d98511-1567-44c2-a8a4-6cb6bda7ecf9",
        "cursor": {
          "ref": "099ec09a-5001-4c65-9264-4b277c42ceac",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1d3ce3c5-304f-4df9-ab90-8730e01fac4a"
        },
        "item": {
          "id": "06d98511-1567-44c2-a8a4-6cb6bda7ecf9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5377be6f-a0b8-4993-b41a-d091c051903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37045c3-6b21-4e60-b430-801e3c59344b",
        "cursor": {
          "ref": "2763e585-77b4-4596-a5af-e3631f47f595",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e46b2ab3-1231-4e59-9a3e-5e51bd14b2cf"
        },
        "item": {
          "id": "d37045c3-6b21-4e60-b430-801e3c59344b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fae62f54-8f33-4093-80c9-d6be36669c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2f3d02-07bc-420d-b08b-8c42746331ad",
        "cursor": {
          "ref": "d4a742cf-fe8f-47a3-8e33-33fffb2e0aa1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86861926-63dd-4554-a652-e6f91dbad78d"
        },
        "item": {
          "id": "ed2f3d02-07bc-420d-b08b-8c42746331ad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "94c5aeef-0881-4ec6-b282-ad4ba981b1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4981213-eb4b-48df-9872-7b101be5d3a3",
        "cursor": {
          "ref": "4ccb605d-d7ec-41e4-b71c-3ebdffdd08c1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fad929fd-8b91-4b75-a0da-61f982a608af"
        },
        "item": {
          "id": "f4981213-eb4b-48df-9872-7b101be5d3a3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5f7fd4e8-9e4f-4ce9-978e-ab0f98d1f472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362ab1fb-0b77-43d4-b14d-0af5866a13d1",
        "cursor": {
          "ref": "673e07c8-eff5-4235-a03f-8a0607b59795",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "784bc7ce-1ac0-40d4-92a2-4abe79c496ca"
        },
        "item": {
          "id": "362ab1fb-0b77-43d4-b14d-0af5866a13d1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c367a5bf-5c33-4b65-8fc3-631d917e38b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bac0033-d732-4d3c-96ef-66d4d9be305f",
        "cursor": {
          "ref": "bb215151-b181-4e7f-aad4-ee9b63e52a6e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "213c5e04-9a4f-4e5d-88a4-b0a9929af194"
        },
        "item": {
          "id": "9bac0033-d732-4d3c-96ef-66d4d9be305f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a76c7251-5b56-4b24-80d2-fa2bdaaafefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3380fcd-541a-439f-945c-18fe27da006e",
        "cursor": {
          "ref": "443651b6-8520-4aa3-ac93-aa55489e5a63",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "06638c6b-050b-4326-a233-f33bec03c64a"
        },
        "item": {
          "id": "e3380fcd-541a-439f-945c-18fe27da006e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "44c71328-f7ef-43ae-b1bc-63d77fcd355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48412b04-1d71-4339-88d9-377b207f942b",
        "cursor": {
          "ref": "c512c6f9-06b5-4658-8c63-e4d27080c43f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cbd811c5-cd8d-4111-9c67-085d31d034db"
        },
        "item": {
          "id": "48412b04-1d71-4339-88d9-377b207f942b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c4f01cb2-b95a-48d3-b2a7-fb6c782b84b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f38f37-649c-436c-95d4-6399d674aad8",
        "cursor": {
          "ref": "3b72811c-2f45-4b1a-a0f7-5101411a3bbe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8966b306-5a56-4cbc-9ad0-4c2ba8b85fbc"
        },
        "item": {
          "id": "59f38f37-649c-436c-95d4-6399d674aad8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0f00adc9-dbcd-499b-8d3e-e805f2eda6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4508a9d7-aefc-4079-ace5-35ce1360b554",
        "cursor": {
          "ref": "b3c81bcb-a8eb-47b9-b358-3ada212eb91d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "10b6f4c4-d41f-423e-90df-4a9f8a03e123"
        },
        "item": {
          "id": "4508a9d7-aefc-4079-ace5-35ce1360b554",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "81b1b498-7a34-40ca-85f6-38e4b9d29460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ee901c-8a9c-43a4-aa6b-c594c6e16707",
        "cursor": {
          "ref": "8862944f-b040-4c92-8318-3c1bd83906bf",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b412749c-e2e1-451a-ab23-ae2f2c21f42e"
        },
        "item": {
          "id": "e1ee901c-8a9c-43a4-aa6b-c594c6e16707",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1215fcb1-5b7c-4798-aff9-742af15b17a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb7881b-228e-44cf-8cff-ebd470788781",
        "cursor": {
          "ref": "e6e3414a-fbd1-4d72-8b67-62df7805bff5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f3b5d243-a07e-4787-bf56-028c7b18e6ad"
        },
        "item": {
          "id": "7eb7881b-228e-44cf-8cff-ebd470788781",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8697c519-c3f9-4699-846c-99618014c350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503071f2-9db5-46d0-a1bc-b7635617addd",
        "cursor": {
          "ref": "6a1ee2e1-a0cf-4221-8b05-75bd053b527f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f5117b75-a881-4a0e-9b5a-3b96dba61f7f"
        },
        "item": {
          "id": "503071f2-9db5-46d0-a1bc-b7635617addd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cf066450-4deb-4acf-8cb0-a24f995f05b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a92781c-1470-4ce2-ad2d-e7ca6ae5ec07",
        "cursor": {
          "ref": "f6d043cc-d689-48ea-bfa1-5f7e16aca856",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "88efe4ae-a15d-4491-8e40-827903388437"
        },
        "item": {
          "id": "6a92781c-1470-4ce2-ad2d-e7ca6ae5ec07",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "16e73fd3-4a61-448d-87d4-51bdec706b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cdaa0c-83fa-44ba-95be-ec1a0027f2da",
        "cursor": {
          "ref": "5749d2e0-53f0-48c5-b98b-2210bcf4e677",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8b7ea8e6-d1b0-4aa9-8bf0-60a58f96614a"
        },
        "item": {
          "id": "15cdaa0c-83fa-44ba-95be-ec1a0027f2da",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "19c198c9-19b9-4108-a7e4-e964c487a56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be16aef-ab14-4bcd-b68c-8c6a71db143e",
        "cursor": {
          "ref": "d603c863-ec75-4d80-8ce8-1b9035b5bdec",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "108878de-260d-4fbc-8bba-8c6cbe5323ae"
        },
        "item": {
          "id": "9be16aef-ab14-4bcd-b68c-8c6a71db143e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "425e1abe-1d56-41e7-97dc-b5933a1f3615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b7a3c5-4fe4-448e-bb75-5d806494a87b",
        "cursor": {
          "ref": "c7322595-fcb8-42ec-9b64-7bf2deacedcd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c851237-8b57-4776-9df1-c9453922c8bd"
        },
        "item": {
          "id": "60b7a3c5-4fe4-448e-bb75-5d806494a87b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "48fb0f20-380a-4e19-a334-83716b97929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea05f90a-f13d-4ec9-ba30-6646c5384997",
        "cursor": {
          "ref": "9be97b19-6b17-458d-9981-e9790428a590",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c77c9f30-ab99-4716-97b3-d60be11c41f9"
        },
        "item": {
          "id": "ea05f90a-f13d-4ec9-ba30-6646c5384997",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4a88ad67-0875-46f0-9d39-b02893d7f418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5969a1-7d65-4b29-b476-d348da6cf7ea",
        "cursor": {
          "ref": "7deb58af-8546-4a27-ae60-0bc9a5555c45",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "19a9ad1a-a8ff-415b-9d8a-d15db7aaf714"
        },
        "item": {
          "id": "8f5969a1-7d65-4b29-b476-d348da6cf7ea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ca72282c-4dd4-4a1d-9a3b-db4cbbdc0419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b32be-653a-492a-b411-af8aed05f778",
        "cursor": {
          "ref": "b468217a-7fbc-4f3b-a752-82293be37c6c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d2316a20-a5f3-4fb4-a9c2-e43dda580c39"
        },
        "item": {
          "id": "f23b32be-653a-492a-b411-af8aed05f778",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a2b91efb-ddd5-4945-8c54-2a1e5b2c940c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c7e5bc-7c46-439a-9eda-0235be950ff4",
        "cursor": {
          "ref": "8a61f1be-46d2-45b6-8ed0-cfe6fcaf5bd5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fbdd7ba3-6c05-41ac-a861-cb618bb0ea33"
        },
        "item": {
          "id": "13c7e5bc-7c46-439a-9eda-0235be950ff4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0a6253b1-1f78-4e42-9e2e-84de0ad3b556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c3b118-5485-4e48-b7b1-fb4da8f08834",
        "cursor": {
          "ref": "84f68dd2-80f6-45b4-957c-0780fe8b4ea8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "00b84009-8e7a-47fd-8bf4-5745156f1326"
        },
        "item": {
          "id": "70c3b118-5485-4e48-b7b1-fb4da8f08834",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ea10b72b-1815-4cf8-9b85-4b63b0930e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3d6510-89cc-4670-9b90-645534583b95",
        "cursor": {
          "ref": "4cb4bcad-c1d3-4157-a513-6102035543d8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7e5a3be7-342e-4986-ba86-1d97424b8434"
        },
        "item": {
          "id": "fb3d6510-89cc-4670-9b90-645534583b95",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "841ccab2-3c63-4248-8a36-80039e1d3a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2160d1e8-2fe9-4be7-b732-2241bea74a8a",
        "cursor": {
          "ref": "5f3c1f81-352a-4278-aef0-8c127ddf8d5a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "738b818c-73df-44ce-98eb-d1324e3f6cb8"
        },
        "item": {
          "id": "2160d1e8-2fe9-4be7-b732-2241bea74a8a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "041d6f8f-400a-41d9-a5fa-12d621fbb5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3456ee-3f36-43fe-b98c-4b79ee662fb3",
        "cursor": {
          "ref": "d5d1e674-2c28-439b-a1ec-8039904abdc0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d65a1c66-5eaf-40f6-90eb-ae48399ca735"
        },
        "item": {
          "id": "6c3456ee-3f36-43fe-b98c-4b79ee662fb3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b2200080-d36b-43fe-b164-643b332a9c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91d48d9-9d92-4786-a59a-a766df703c8c",
        "cursor": {
          "ref": "c3e8e490-53cb-4d8a-810d-88c3af1133a2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce3950ad-d419-4266-b819-a1b4c3a5e4cd"
        },
        "item": {
          "id": "e91d48d9-9d92-4786-a59a-a766df703c8c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf161328-7bb6-4800-8428-9fcfc41e922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f4d451-c253-421e-9b50-7c5c9fc82fed",
        "cursor": {
          "ref": "32ef4bd3-b625-4a9b-bc55-cd46a1488f89",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3b11b3f5-0894-40ef-9d39-7845e92f68eb"
        },
        "item": {
          "id": "85f4d451-c253-421e-9b50-7c5c9fc82fed",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9310f701-838a-4a9a-ae1b-8396582c2b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c5c5e1-23a7-40c3-824f-72afa0ee99e7",
        "cursor": {
          "ref": "7e4b9c92-72c0-44ca-a252-25df08c2f7fa",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6ba4aae9-37f1-49f3-ab29-00917e9f40a5"
        },
        "item": {
          "id": "e9c5c5e1-23a7-40c3-824f-72afa0ee99e7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0b01ab7b-6726-4fca-b39f-6da08c50790b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a787580-d71a-4617-804e-195a98fca3c3",
        "cursor": {
          "ref": "2e52e088-f054-4c7a-a255-d682eb5b4be9",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ed3c019b-2bf4-440a-84bc-e676edede1db"
        },
        "item": {
          "id": "7a787580-d71a-4617-804e-195a98fca3c3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f7df59eb-5ef8-484c-af15-71a5c9751c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b02ce70-6819-4c05-9f44-fab743c9f79b",
        "cursor": {
          "ref": "1a467722-4274-48ac-aac6-9ae46e5c4237",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0a1fda49-e2e7-4013-b98a-6ba7e107ea84"
        },
        "item": {
          "id": "3b02ce70-6819-4c05-9f44-fab743c9f79b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b4cd5440-4276-4e12-bbda-a78852d98291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3999eee-ef94-4ae2-99c4-252fe2377580",
        "cursor": {
          "ref": "6a2da118-febb-4234-a263-75aee1c9d36f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "627496b1-962c-4869-9fa4-c864b7f0ba66"
        },
        "item": {
          "id": "b3999eee-ef94-4ae2-99c4-252fe2377580",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4cde80b0-8e22-4cd5-b2ea-9214702591ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c19e526-b729-4ba9-bb0d-2905e7dd9761",
        "cursor": {
          "ref": "a418069e-9676-402b-b83b-1553147cd068",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "144d5963-732e-427a-bdac-cf22d9c703b1"
        },
        "item": {
          "id": "9c19e526-b729-4ba9-bb0d-2905e7dd9761",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "110314c4-292a-4920-a54d-e01378e63ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cbf553-df99-41f1-8794-a4faa4212eb3",
        "cursor": {
          "ref": "68e92be5-9407-44a8-ae80-08cca3c061c2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a495d95e-c7e5-4b81-a4de-1d9b8ff88ccb"
        },
        "item": {
          "id": "57cbf553-df99-41f1-8794-a4faa4212eb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0406e945-ae73-4488-a65a-3be94a0c374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8310c7-d3c7-42cb-a7c0-4c5d8a3aa9ec",
        "cursor": {
          "ref": "411a75f7-c7c1-4580-85d8-17d77bad8886",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4c41b690-18a1-4372-a57d-e593e57d24c1"
        },
        "item": {
          "id": "6d8310c7-d3c7-42cb-a7c0-4c5d8a3aa9ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c98a018b-ccf0-4ea5-b15f-7665a8b89b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af16398a-0740-4d09-ae8c-556564895c65",
        "cursor": {
          "ref": "38a25762-5994-423c-ab39-d566b0afd83e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3065880c-f40a-42f2-8377-b9ebb9474800"
        },
        "item": {
          "id": "af16398a-0740-4d09-ae8c-556564895c65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aea3b6a4-a532-4e5d-9d4a-614d0fe223fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5735c244-13c9-4287-8f0f-882629acb44b",
        "cursor": {
          "ref": "5d6ae0d3-21cc-441b-b4cf-be647505d412",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1068e869-f6d1-489b-b707-e99595124a9d"
        },
        "item": {
          "id": "5735c244-13c9-4287-8f0f-882629acb44b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b8ad11e8-6d16-47fb-a3cd-704f73799f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7bae34-f0fb-4f41-9cea-84b54613ab9b",
        "cursor": {
          "ref": "3eb27ffa-60e6-46e8-a291-a7a402c4a853",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1ffad7e0-00fb-442c-b5d0-e64572f42cd7"
        },
        "item": {
          "id": "7f7bae34-f0fb-4f41-9cea-84b54613ab9b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "469face3-0c4b-491b-ba2d-f2719d717fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b550e6-c58c-4fff-a622-013f20f02f6d",
        "cursor": {
          "ref": "eba70875-6e34-4fea-bda4-53a6d95bd78a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7fe41f03-3745-4d13-b409-5e3a96e1f4b6"
        },
        "item": {
          "id": "56b550e6-c58c-4fff-a622-013f20f02f6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "625e395c-c253-4615-a1cf-b0612519dedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fffc842-ee75-4574-9e89-080697e413b0",
        "cursor": {
          "ref": "b4ad82d4-dd6f-4b15-9b79-aaeda4d59e73",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8dd57c02-f9a8-4b7e-8a47-bf00190541ff"
        },
        "item": {
          "id": "4fffc842-ee75-4574-9e89-080697e413b0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "92d3f4e1-9722-4545-91e5-ff854b7d5fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d262b48e-229f-402b-9d76-585b6adb1c9b",
        "cursor": {
          "ref": "6d179b51-65c6-4522-bf78-1a10ec591279",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2c968477-4e6e-420e-9de9-13809d3f7c17"
        },
        "item": {
          "id": "d262b48e-229f-402b-9d76-585b6adb1c9b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "709d5024-90f0-4965-aba7-33de4fa9d165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c732bf-6761-4fcc-aafb-0226ce4bbc2a",
        "cursor": {
          "ref": "961de4f4-e7dc-4597-a299-f5d20a4b6e96",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "13adc014-922e-4e3b-b973-8d4cd54a0f1d"
        },
        "item": {
          "id": "c9c732bf-6761-4fcc-aafb-0226ce4bbc2a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "afb33beb-6e1e-4211-9478-47691790cc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb99641-b7f7-4efb-ba5c-f3569f689051",
        "cursor": {
          "ref": "14cd0701-0bba-4617-839e-2c7fe257ca99",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fe77fb01-2c88-4827-a3fa-aa409f74125b"
        },
        "item": {
          "id": "edb99641-b7f7-4efb-ba5c-f3569f689051",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4061f0bd-ea50-44ec-8651-aa0f6163c3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa1095b-c38c-45b5-b0a7-84a4f9a346e6",
        "cursor": {
          "ref": "65965528-e8ba-46f6-99f5-8e0a413e1d0a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "33078146-27ae-487f-bddb-6464242dd08d"
        },
        "item": {
          "id": "3aa1095b-c38c-45b5-b0a7-84a4f9a346e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c246e432-0645-4c7c-95ef-3b29a2075562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b7283-b3ea-40b8-8aaa-77a2a05e2abc",
        "cursor": {
          "ref": "80f9c0f8-e26f-42c6-8539-7f029a3a9b92",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cb90c6f1-3347-43fd-9ad4-819dcf77713a"
        },
        "item": {
          "id": "da3b7283-b3ea-40b8-8aaa-77a2a05e2abc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "abc7c5a6-40f2-4a0f-ab7a-970361a458ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49206c67-1862-4ec9-b766-7b4c3ff917c6",
        "cursor": {
          "ref": "a3d8ac79-89a8-403b-bf63-207575702489",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e9533334-8c67-4361-964a-1c1cfa3a05a5"
        },
        "item": {
          "id": "49206c67-1862-4ec9-b766-7b4c3ff917c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "93c6634c-e6a6-422a-86f1-2a626a440d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49207bf-7510-453e-8a0b-593341b5ba70",
        "cursor": {
          "ref": "19cf5f09-e817-4270-b304-037fb9cea756",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "531fafa9-8354-4331-9ad2-e4e8a2316fd5"
        },
        "item": {
          "id": "b49207bf-7510-453e-8a0b-593341b5ba70",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0bdc08bf-aefc-409e-a63f-ef1af240f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ef0e79-4539-4e4b-85d5-f08796915a95",
        "cursor": {
          "ref": "2477cefb-4df2-4744-9312-aca0858bcf12",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "565039fa-a776-47a8-a78a-a3b90d07c493"
        },
        "item": {
          "id": "e4ef0e79-4539-4e4b-85d5-f08796915a95",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3738447e-5558-4480-a8e7-dfbe31459621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f0c30e-98ca-4d13-89a2-91614f769eaf",
        "cursor": {
          "ref": "450143c8-bc80-4b9c-88d4-ea0b1b83d4e2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e71f245-c6e1-4620-9b29-2c58b938d965"
        },
        "item": {
          "id": "62f0c30e-98ca-4d13-89a2-91614f769eaf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91a0fa44-b7d2-4b8b-883d-10c3f9858671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cc38e-6a56-455d-aa28-e141b43301f5",
        "cursor": {
          "ref": "ecc14bf2-4f4d-43f8-8238-685347f3bfd3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0e23e8d1-f8dc-4503-b169-3925a6d5cf52"
        },
        "item": {
          "id": "563cc38e-6a56-455d-aa28-e141b43301f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3349050e-8e7b-4731-aa56-1918542ad3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c63786-b332-4629-87ac-e76e7ee05552",
        "cursor": {
          "ref": "0510d42a-9954-4d6e-ad4c-d2918c2d112c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fdc60076-e1d7-4d26-acd3-28e37a7eb78c"
        },
        "item": {
          "id": "92c63786-b332-4629-87ac-e76e7ee05552",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "75f84480-7a6c-42bc-9408-db76dc803f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228b41ae-f713-4291-bb99-c33b86036dad",
        "cursor": {
          "ref": "8f2eca07-8b1b-4225-984f-f99c2c6770c8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5a15f096-4db6-42d6-955e-fd3c6bf7aef0"
        },
        "item": {
          "id": "228b41ae-f713-4291-bb99-c33b86036dad",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "72f00793-9748-454b-a313-155583d934b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae5021-2623-4824-ac07-9f83d8ade351",
        "cursor": {
          "ref": "cc99d738-6a9f-48cd-8e58-f97a71f12cbb",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf303601-3062-4668-a4aa-0971880ecf3e"
        },
        "item": {
          "id": "18ae5021-2623-4824-ac07-9f83d8ade351",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0dcbbd04-5d60-4f45-b7c5-95d537000324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da9554a-e6f9-4a88-8e75-e28ab8b82fba",
        "cursor": {
          "ref": "5ba5c99d-4704-465a-98cc-7ce4d319b239",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7e0699a3-edf1-44cd-a33a-a9e3226035a7"
        },
        "item": {
          "id": "7da9554a-e6f9-4a88-8e75-e28ab8b82fba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b71f9e4c-9f94-437b-be5c-181777d67e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7725490f-894e-4b15-8a1e-a71f150077ae",
        "cursor": {
          "ref": "54f346a3-361f-473f-ad90-a03c11955d1c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d5c99af7-d0b2-44df-b2fa-32501802f932"
        },
        "item": {
          "id": "7725490f-894e-4b15-8a1e-a71f150077ae",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bb47c985-9408-4dfa-9fd0-9dc94a19f0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df972728-9a65-4497-9411-f504c0347092",
        "cursor": {
          "ref": "eb820dd9-1427-484d-a525-38600108ec27",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bff5ed58-e211-4840-b679-ad189b5c12ab"
        },
        "item": {
          "id": "df972728-9a65-4497-9411-f504c0347092",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf96ef9f-4099-45db-8fa0-aa4786154c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4795ca4e-0236-456d-bd48-8e3397af4997",
        "cursor": {
          "ref": "f74d6519-fedf-4b84-83d0-c831aaf4343e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "74d1efd9-5f2b-4566-a283-79549daaa0ac"
        },
        "item": {
          "id": "4795ca4e-0236-456d-bd48-8e3397af4997",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cacc1b73-be5a-4433-ad1e-805e291690b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f7a34f-e1af-4020-a2f5-05ed17452173",
        "cursor": {
          "ref": "4f8d5a00-77a6-4321-b322-d705d3ab7536",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d28950e8-0018-4d60-b0f2-e5e0a1555e6b"
        },
        "item": {
          "id": "96f7a34f-e1af-4020-a2f5-05ed17452173",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "85dc1e2d-8d2b-4de4-ad0c-48e55ecef682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe3e83d-44ee-49c8-bf24-93f2399ba866",
        "cursor": {
          "ref": "bfcb66e2-93a1-4f52-b36b-35267db10763",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7276c597-2db7-42af-b732-9a32d3e73e0a"
        },
        "item": {
          "id": "ebe3e83d-44ee-49c8-bf24-93f2399ba866",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d1956a38-bea0-4752-8ebc-5bc97a1d8b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05ff1b5-2615-4505-b54f-fba15a477560",
        "cursor": {
          "ref": "5971fe07-7b2f-46ed-8a50-ca98d578ad9e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e13165d-b1ac-4491-934c-5b209dfd0374"
        },
        "item": {
          "id": "e05ff1b5-2615-4505-b54f-fba15a477560",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d997a2e2-7640-4b26-9ca7-d46ed7b75f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0605ae-ad0e-4bef-a3a4-68c33b860172",
        "cursor": {
          "ref": "16c74afe-fa83-43e5-8ab5-e1aa1cd70750",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "28851f20-465e-4340-b035-bcee6ba4708d"
        },
        "item": {
          "id": "7f0605ae-ad0e-4bef-a3a4-68c33b860172",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "57a1be91-a630-4583-958d-25e801c5e4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75c1989-33db-4223-b704-f10227c0066d",
        "cursor": {
          "ref": "a86a38d6-dd8f-4c5d-9fc2-0840ed70dd49",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "68d315f3-76f4-41ff-be29-f36e8709af08"
        },
        "item": {
          "id": "e75c1989-33db-4223-b704-f10227c0066d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "10a4a064-f6d3-4cd1-adf5-eaa137dec2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378efbd9-29c1-4697-96d4-6d79ecd590e7",
        "cursor": {
          "ref": "3c96ca28-652f-47f5-9bfe-f2cd98a608c3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e6de2e93-66da-4fc5-a845-3c66e9d81f18"
        },
        "item": {
          "id": "378efbd9-29c1-4697-96d4-6d79ecd590e7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7bacee7e-0ade-4b61-986a-fd24c1f4c819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a4153-cf4d-4402-9f5c-522e001879ce",
        "cursor": {
          "ref": "0d616c98-eeb7-4c9c-a6d1-50e333b2d100",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d365c5a2-8943-43f0-aa7c-449170ef31ce"
        },
        "item": {
          "id": "e98a4153-cf4d-4402-9f5c-522e001879ce",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2426d372-37fd-466c-b041-2c99377d5ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1502e3b8-d773-4b18-a218-290da3b83133",
        "cursor": {
          "ref": "ea2169d4-20e9-4ad3-bf13-253f76dd24dd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a6d331a4-7edb-4779-8c40-b475ceb8b5ad"
        },
        "item": {
          "id": "1502e3b8-d773-4b18-a218-290da3b83133",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dab5dffd-2064-43ff-9d63-c8a6afaf1426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b288f1-74d2-4385-905f-e2bc92dd07d0",
        "cursor": {
          "ref": "673cf6ce-2bb5-450b-8ab0-11d467470017",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3c67fbc2-3b36-4dd3-85dd-9285a12ffbdf"
        },
        "item": {
          "id": "03b288f1-74d2-4385-905f-e2bc92dd07d0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "77c7f678-280e-4952-8a78-20a2b3d9c4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb911f2-e9d4-4cba-938a-0882dc3cc814",
        "cursor": {
          "ref": "be0be3ec-9b57-48ac-8706-1f489842357f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bc46a35c-ccb2-4cc0-8033-da551d94b732"
        },
        "item": {
          "id": "beb911f2-e9d4-4cba-938a-0882dc3cc814",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "be23b6e4-ffe9-4905-8e99-3d27a20ca248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b6075e-8acf-45c4-8cca-a295abf12ae8",
        "cursor": {
          "ref": "3f800a88-7051-417a-b2ef-2ff848c50cb1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c7b5daf-333c-4488-913a-309e1a863634"
        },
        "item": {
          "id": "52b6075e-8acf-45c4-8cca-a295abf12ae8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c1388913-80b8-4957-a5fb-367c058dc085",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b2f1d-39ec-4db0-a6b6-4c838afee50e",
        "cursor": {
          "ref": "ef274298-93d4-4e97-9a0e-cbe0fba0c331",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8db8b813-063c-4f4c-aaed-fbeb67005b80"
        },
        "item": {
          "id": "284b2f1d-39ec-4db0-a6b6-4c838afee50e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f4cc9da0-4eb5-46dc-94fe-a47f7bab3680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "da936dba-63ba-4f2d-bbc6-74c5e9b3044a",
        "cursor": {
          "ref": "a01b0c33-6289-464b-b444-33dc5bc56683",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "68ca6cdc-f78c-48a7-9a03-dd395b237791"
        },
        "item": {
          "id": "da936dba-63ba-4f2d-bbc6-74c5e9b3044a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "89f4b4fb-c750-4c22-b74a-4d78e2de764a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "91205281-3e17-4552-9333-85a964e025d7",
        "cursor": {
          "ref": "a229194f-b1c6-4344-8e62-732c0bd280d6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b9012dbe-4232-46ce-aa53-dc2660fbbae6"
        },
        "item": {
          "id": "91205281-3e17-4552-9333-85a964e025d7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b672fa42-9d6d-4929-b9fd-ffe6b7f7cb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "be0f07ae-df9b-4542-84ec-4a954c20b8a8",
        "cursor": {
          "ref": "6102d184-df92-4f4e-9cd6-3e765383a1c2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "052ab49b-b896-4138-a478-2468e83db744"
        },
        "item": {
          "id": "be0f07ae-df9b-4542-84ec-4a954c20b8a8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7007195e-4c7d-40d1-87be-3cc4afaa454b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "43dfa014-d629-4001-b46f-e880fd6078e2",
        "cursor": {
          "ref": "2c306159-bd7d-4e42-885d-350a85c9ca79",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6cf6a070-ec0d-4e5d-8bd2-358dfc858daa"
        },
        "item": {
          "id": "43dfa014-d629-4001-b46f-e880fd6078e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ae4f1926-80e6-4572-b376-b008db30d355",
          "status": "Created",
          "code": 201,
          "responseTime": 6860,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "609429f9-0f07-41a8-8eb7-256ba79351d8",
        "cursor": {
          "ref": "8f392726-736d-4deb-b685-ca789d799c0a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "25252470-90c0-4fc3-9a08-a11c1d5a029f"
        },
        "item": {
          "id": "609429f9-0f07-41a8-8eb7-256ba79351d8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee117185-0e1c-4cb5-8812-3352119f5e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0c219762-4448-4a30-bf70-3734b0562d07",
        "cursor": {
          "ref": "df238b8c-c9a0-4d6a-8078-0b808eeaaaa0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d52f676a-c1d6-4265-ba59-c6502ad8a72e"
        },
        "item": {
          "id": "0c219762-4448-4a30-bf70-3734b0562d07",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "975ad00e-fe35-4958-8ddc-c63a15cbddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "498ceab3-0c69-4aba-84b3-c23467a3f00a",
        "cursor": {
          "ref": "e34cffec-57c0-4023-9f77-0d16bc0f0bfa",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e1e39955-cc88-4ce6-bf6c-7ddfa32ad0df"
        },
        "item": {
          "id": "498ceab3-0c69-4aba-84b3-c23467a3f00a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b9dc325-d859-4bca-90eb-28d62970e298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c6c928-797a-4419-b908-35b6fb95628b",
        "cursor": {
          "ref": "84c797ef-be80-4c40-8682-d20eb258bf11",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b44c2557-e69c-4792-9452-c91aae112eee"
        },
        "item": {
          "id": "54c6c928-797a-4419-b908-35b6fb95628b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0ce4d6ed-08a5-4223-b35a-cc711e595e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a77eb7d-7449-49b9-9a97-9197e65851db",
        "cursor": {
          "ref": "73b7d77c-3271-4662-a3fb-55d5d95bc985",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "19715ff4-bb6d-4c67-9f07-c224284dcf55"
        },
        "item": {
          "id": "0a77eb7d-7449-49b9-9a97-9197e65851db",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0464f52-d076-4ed7-8344-efe42d72b2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc98312-8e40-443f-a771-9c155071ec99",
        "cursor": {
          "ref": "60801a91-8039-433a-b6f1-2d4a99851fce",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4c985f37-526e-4c59-92a0-cce4ec06dbe9"
        },
        "item": {
          "id": "ccc98312-8e40-443f-a771-9c155071ec99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0ef8bbdf-4441-4741-9241-1cfc640c9e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab92458e-9550-4e5f-90aa-0cbcc8a4148a",
        "cursor": {
          "ref": "1d7dfa96-6bf1-4b27-80fc-c8ca18db577d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6e762793-344e-467f-a4b2-63553d79e7d5"
        },
        "item": {
          "id": "ab92458e-9550-4e5f-90aa-0cbcc8a4148a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4af789e3-ed11-4ac9-a67b-2065c4f1913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f520e7-41fe-40dc-8282-b70ad166fc3b",
        "cursor": {
          "ref": "1cbda069-88f2-49e3-a741-9bad4a7c7ffe",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cb430bee-d66f-49f5-ad17-8176d7f9a328"
        },
        "item": {
          "id": "c1f520e7-41fe-40dc-8282-b70ad166fc3b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f7d687d-32f2-46ea-a408-487b9325efe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bbb507-7269-48c0-a4a2-bdd8a8b8f27a",
        "cursor": {
          "ref": "9edc61d6-7d34-48d3-aa76-a03201edd089",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bec97070-4281-44ed-81ca-d98d169408e5"
        },
        "item": {
          "id": "04bbb507-7269-48c0-a4a2-bdd8a8b8f27a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf358491-16b2-486e-98c1-55da1bc92c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc3844b-7cfc-40dc-8a88-aeac4313b1da",
        "cursor": {
          "ref": "0bfdae79-2375-4a6a-9278-8e7ec3d059ec",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca40c9c1-e861-48b9-af3f-ae544dd9cb29"
        },
        "item": {
          "id": "dfc3844b-7cfc-40dc-8a88-aeac4313b1da",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "17774076-7cf8-4ff8-b0c0-2ec26f0f24f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30415bbb-8a0d-43cf-83c5-9ba760961cc4",
        "cursor": {
          "ref": "eaa02b9b-4dfe-45bf-889a-1eb158e2c5ad",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bf461e96-0b5c-47df-aa1b-c4555382c498"
        },
        "item": {
          "id": "30415bbb-8a0d-43cf-83c5-9ba760961cc4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "023e6248-e407-417f-a9ef-22f4a7d13a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc673672-da43-459b-9a4f-37bee3212398",
        "cursor": {
          "ref": "dfd216d1-8956-4cc3-bd92-786f25cff084",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ff459d53-d7f8-472e-9301-9d3b595426e4"
        },
        "item": {
          "id": "bc673672-da43-459b-9a4f-37bee3212398",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "02694799-201b-449b-9568-61ef1b5833dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f42ac-2f1e-4f5a-9359-e8225c7f9156",
        "cursor": {
          "ref": "f6fcae03-3799-41fa-a2b3-facd697c594d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e68d4127-9de8-46dd-960a-d1840b5b8ab2"
        },
        "item": {
          "id": "d27f42ac-2f1e-4f5a-9359-e8225c7f9156",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16745f57-440b-46e5-b2ac-340a0346f35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67803a30-9956-45eb-a9cc-0c8d6cb09092",
        "cursor": {
          "ref": "b6fcdf79-b0b6-48aa-8e83-7d8ddf7cc795",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "892fb774-ecf0-4cab-8e9b-ee53f243a5d8"
        },
        "item": {
          "id": "67803a30-9956-45eb-a9cc-0c8d6cb09092",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bcf0bbd9-9209-41cc-aa2f-fa1bd497239d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4e496e-56b4-4c3a-ae35-e5348d76d56b",
        "cursor": {
          "ref": "f6951a33-3e5b-4434-a8f1-fc3a7c18ed62",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e5bc0e47-bb70-4e9f-b909-72194055854d"
        },
        "item": {
          "id": "3d4e496e-56b4-4c3a-ae35-e5348d76d56b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0cb9b24-185c-453e-8160-e99ba6087360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f0db80-dfce-45ae-9a78-c52a3e907b42",
        "cursor": {
          "ref": "7ba07d7d-9fcc-4baf-822d-65c0468353bc",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "420a8142-3571-459c-a228-ca2fa27bb103"
        },
        "item": {
          "id": "f3f0db80-dfce-45ae-9a78-c52a3e907b42",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5c4296ba-9eb5-45d1-bbc4-44c81ad2ebe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f97d533-04b4-47a9-abd0-2cbdac169426",
        "cursor": {
          "ref": "3c05d9d0-db30-4aea-b4c2-086c91a03f70",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4b6f2560-60eb-4bdf-bbdd-731f40f3e861"
        },
        "item": {
          "id": "7f97d533-04b4-47a9-abd0-2cbdac169426",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d666287-6d94-4740-97d6-610b38b6a419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cff84a8-77d7-4105-a14d-643b4f5883a6",
        "cursor": {
          "ref": "d1a4ee3a-06df-4e98-abae-20065ee5fbf2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8fb16eaa-f29f-41a0-ada2-854a90fa15cd"
        },
        "item": {
          "id": "9cff84a8-77d7-4105-a14d-643b4f5883a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aa43add1-c8a5-4620-aa89-864333587333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27edcb41-2cc4-41bf-826f-b3aba8b14707",
        "cursor": {
          "ref": "4af547be-f1e7-4675-abe6-480b67dda501",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a9cdc388-daca-46e1-ae0b-85404faf1aa2"
        },
        "item": {
          "id": "27edcb41-2cc4-41bf-826f-b3aba8b14707",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3ca1fc6b-9898-43f2-81d1-0988eb7c84d6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "58236ecc-d3ee-4d56-846e-ba04130e5227",
        "cursor": {
          "ref": "30245fee-f672-4bf7-b80b-f827a9a9e91b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b78e6f90-11bb-4c24-b80d-b12cea1cd460"
        },
        "item": {
          "id": "58236ecc-d3ee-4d56-846e-ba04130e5227",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e71cf7cc-3287-4112-8898-079bd0e4a8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949699f1-d0b8-433b-b9cb-4fe7fc05c37f",
        "cursor": {
          "ref": "91e379d1-2744-4db1-92bf-7a1f402f49d4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "01fbc41e-3af3-4777-8a54-3c6530f87cbf"
        },
        "item": {
          "id": "949699f1-d0b8-433b-b9cb-4fe7fc05c37f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "34136481-5364-435f-8fd8-82080517ba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fda0852-0db5-42dd-8c05-a6e4dedea116",
        "cursor": {
          "ref": "ac1b53e9-0a25-4a52-bba4-8613545780a0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e95a0cdf-78cc-45c5-92f5-27d09052ff05"
        },
        "item": {
          "id": "4fda0852-0db5-42dd-8c05-a6e4dedea116",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8357edcb-9342-43b5-b177-097de8167a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e63af2-1e44-418c-ae1e-b137d6d3c3b9",
        "cursor": {
          "ref": "dafa9518-5adb-43bf-8908-e9f53b48fd36",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b4e80cfa-f718-4c94-b238-1851dea1b247"
        },
        "item": {
          "id": "27e63af2-1e44-418c-ae1e-b137d6d3c3b9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "da0f4204-fc85-4555-babc-20d4ca9601c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99b83a2-21e8-4adc-9cd6-40ac5e26c178",
        "cursor": {
          "ref": "48117670-58e7-41b8-83c8-7166b2e24525",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2fd45fb2-d89e-4de5-a97d-0e78e6d6efb8"
        },
        "item": {
          "id": "a99b83a2-21e8-4adc-9cd6-40ac5e26c178",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aec7ac15-4a25-4f75-b2b5-ae45e5a48790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e55736-67c2-4257-a2d0-25a3b7be6c30",
        "cursor": {
          "ref": "2495c21a-b904-4af4-aa29-41bc3a5e5b0f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f3c1c75-8636-4db6-8822-e9c0dba5fba0"
        },
        "item": {
          "id": "53e55736-67c2-4257-a2d0-25a3b7be6c30",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4890f2b4-4f8f-429b-a7eb-5df67ad8199f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4814533-7ee6-45f9-9133-4691e352104a",
        "cursor": {
          "ref": "017336a1-17f0-4fa8-8c2d-e37a26b60896",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a629a2a7-c226-436d-ae04-c912bbca7b83"
        },
        "item": {
          "id": "b4814533-7ee6-45f9-9133-4691e352104a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eea82d05-4480-40d7-b259-925acf5ac591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef09935-fd52-4c92-b435-8417a17425fd",
        "cursor": {
          "ref": "899b7cd9-3ca0-45d5-b52f-63c0f308b458",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a59b133-e5a3-40cf-b149-d47b88228eb5"
        },
        "item": {
          "id": "eef09935-fd52-4c92-b435-8417a17425fd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e1daa5ba-b2ec-4ace-893a-23da66feb926",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "24bb3a94-d567-475b-b330-e82b33301942",
        "cursor": {
          "ref": "c80d969f-1fed-4a10-9e1d-236695803ee9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "551c9ee5-c7eb-4215-99ab-f711cd6f8077"
        },
        "item": {
          "id": "24bb3a94-d567-475b-b330-e82b33301942",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6da8328-110c-4ab6-aa28-306aa5db315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2d3997-d795-442a-901e-0c33d6189cd5",
        "cursor": {
          "ref": "5e2dc37a-5902-44b5-9c4e-b92ca11d6305",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76d9b13a-6c0c-4b46-8c0d-cfa8bb5bc52e"
        },
        "item": {
          "id": "7e2d3997-d795-442a-901e-0c33d6189cd5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "427bacd1-671b-4bbf-b79b-b7480ff941eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f23283-238d-445a-a0a5-a93556b7ec82",
        "cursor": {
          "ref": "471962b9-8e2d-49e8-b802-2a628801a78a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "05dfee82-9830-4e93-8b22-a2cbc2bb3804"
        },
        "item": {
          "id": "e2f23283-238d-445a-a0a5-a93556b7ec82",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6a9bef7-c254-4372-952f-243d9ccf7cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5544841-57b4-40e1-a8f2-3ccb518515aa",
        "cursor": {
          "ref": "6cfeb9cc-b2d7-4f1f-a797-40623af4da90",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "baa0d874-dfbf-44f7-b4ea-e3fa167084f4"
        },
        "item": {
          "id": "f5544841-57b4-40e1-a8f2-3ccb518515aa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e17d1e7-5def-4fb3-98fa-ef537cd08a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b399255-5d6f-4605-85e6-06b7ebfa5164",
        "cursor": {
          "ref": "77fb3f99-7454-422b-aebd-d9786daf1a3d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f772800-04cd-4335-bab2-e9b635f01c41"
        },
        "item": {
          "id": "3b399255-5d6f-4605-85e6-06b7ebfa5164",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48a7ed71-6741-49fe-80e2-aaa01b4fcb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a76062-dd5d-42e0-bc63-206d2b0fe4c7",
        "cursor": {
          "ref": "32e0c384-e7d4-4c4c-8b10-069c8e156b75",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1b49c7f4-c83a-454d-a0f1-9216fe47779a"
        },
        "item": {
          "id": "f8a76062-dd5d-42e0-bc63-206d2b0fe4c7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "323a5bc8-c5b5-490e-9268-e47673d81acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b2dafc-709a-4eb3-873f-f0da1018d173",
        "cursor": {
          "ref": "3d05af13-e441-475c-973c-04a27778b861",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "70194301-4f3d-4f19-ab96-b2262fa0d579"
        },
        "item": {
          "id": "a3b2dafc-709a-4eb3-873f-f0da1018d173",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "91ba81ad-1aea-439c-ae1a-5252961a830a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 100,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7fd67fc2-98ae-41e7-9f04-593d59db42af",
        "cursor": {
          "ref": "a2d89477-e007-4afa-85d7-dc945b582de3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59156d07-71eb-4a42-ac6a-29d9223e2390"
        },
        "item": {
          "id": "7fd67fc2-98ae-41e7-9f04-593d59db42af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7f7858c3-6a08-41bd-9c52-edfed560aca7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc762d-e64b-4483-b2bd-23afe31d1183",
        "cursor": {
          "ref": "187c00ea-df32-4d97-b2e2-20e672676de8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "04bd724b-7609-4209-90db-5e7c54ab9be4"
        },
        "item": {
          "id": "53dc762d-e64b-4483-b2bd-23afe31d1183",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ecd1ff23-3f80-485a-8194-1f78c153c11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4519c6b-9967-4367-bfc5-c3b616696996",
        "cursor": {
          "ref": "cff5dfc1-3dc9-4020-9dbe-c1fd5b5f2dfb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4df11c53-f9d3-482b-a500-988f179dfdee"
        },
        "item": {
          "id": "e4519c6b-9967-4367-bfc5-c3b616696996",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7730474-e84b-4738-875a-b78dedbc6262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5075f9-8f3d-4e19-a88e-5afb4ba99708",
        "cursor": {
          "ref": "a3fd1f4a-a6ce-49e7-9e59-2724665791e0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "220083a8-3b7a-45f2-a408-c1750c4e3122"
        },
        "item": {
          "id": "6f5075f9-8f3d-4e19-a88e-5afb4ba99708",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26319f51-0382-4d2e-92ad-f20909409488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32883325-97fa-4e65-a770-1391a074d988",
        "cursor": {
          "ref": "02b20859-afed-4464-8e74-347d57b2bc52",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bfff56f5-0e17-4954-8a14-782f68952599"
        },
        "item": {
          "id": "32883325-97fa-4e65-a770-1391a074d988",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "20c8b365-a328-45ab-a48f-58f431661aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feff2b57-1b0a-41b2-9669-3ba721e17e3d",
        "cursor": {
          "ref": "5beb8f4e-8019-46bc-8d15-b96d0da35d36",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b676df3-2829-4614-866d-55baf77021dd"
        },
        "item": {
          "id": "feff2b57-1b0a-41b2-9669-3ba721e17e3d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a14705e3-e7a0-4e47-b10b-49463a09939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3176f02-b6bf-4333-8ef5-cf24bcf86389",
        "cursor": {
          "ref": "4c96f69d-778d-473d-ba5b-1e0a9d410625",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ccac526e-0957-4162-bb7b-ca933f71f31b"
        },
        "item": {
          "id": "c3176f02-b6bf-4333-8ef5-cf24bcf86389",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e690200-7dc7-4cd0-8a46-02db2f71ddc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf680ec7-337b-4bdc-b68c-4801e8e6d4f5",
        "cursor": {
          "ref": "1f56dd70-fc56-4bba-8786-6666e1fd9292",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e888ea71-1910-4d97-8672-9b458228f6d7"
        },
        "item": {
          "id": "bf680ec7-337b-4bdc-b68c-4801e8e6d4f5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "614035c6-0dc4-4732-96f2-2df9748b59cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89bbd37-0c1a-409a-a997-265278c96efa",
        "cursor": {
          "ref": "a12a0c6a-899b-44df-9a45-19c233ecdf48",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "12886c88-a4a7-4916-a2f9-9b71ad4c82f7"
        },
        "item": {
          "id": "f89bbd37-0c1a-409a-a997-265278c96efa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b520cea-d042-4316-9607-80548ca3eb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532e074b-4d5a-45d7-927a-d181cc5448d0",
        "cursor": {
          "ref": "1185f1aa-cd24-44d3-b012-0175a8c4ee75",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aff87aae-199a-4779-879f-af38e3d2fd5a"
        },
        "item": {
          "id": "532e074b-4d5a-45d7-927a-d181cc5448d0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b4e749eb-6b25-4691-96e7-dff2b1d9526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd25e32-dea2-47f6-9538-11135a21e2ae",
        "cursor": {
          "ref": "9161b7da-80d2-454c-af4e-86be0a3383e4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aad8bb51-b478-4134-aa68-e92748dac584"
        },
        "item": {
          "id": "5dd25e32-dea2-47f6-9538-11135a21e2ae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9335cc7a-13f6-4dbb-8813-01fb2892e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00924641-c6e6-4588-a57a-da18113e95d9",
        "cursor": {
          "ref": "cc2a99c1-0354-47c3-a9e9-ebcdad5a0ec4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f5f8475f-11de-486d-a0f9-73b9112a8256"
        },
        "item": {
          "id": "00924641-c6e6-4588-a57a-da18113e95d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "284af2aa-fa45-4bb2-9a56-75004ff115e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fc1c4e-68ae-4db1-8ec8-2994804d4ef3",
        "cursor": {
          "ref": "09922a62-b9ea-4164-b0f5-bcf2ad77ef4e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6267d68d-3672-4fae-8508-cfb2ca3e96e8"
        },
        "item": {
          "id": "c9fc1c4e-68ae-4db1-8ec8-2994804d4ef3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1375dc65-29ed-4a91-bde3-d23de6f33253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543bf7ca-e92b-4fa8-9259-e8d87faa560e",
        "cursor": {
          "ref": "cd196775-06de-40d7-b842-2849bd3633bf",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f6635242-c73e-488a-b6e9-da38f2c65494"
        },
        "item": {
          "id": "543bf7ca-e92b-4fa8-9259-e8d87faa560e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "009bbc71-d942-4f7c-be52-9d048fcfb064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb370f74-62f1-49c2-8734-a1923ddf64cd",
        "cursor": {
          "ref": "bf9ab160-b06e-4d79-aa7f-911b047aa141",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fb1852ec-c50f-4ac7-bc99-2176b85237c4"
        },
        "item": {
          "id": "bb370f74-62f1-49c2-8734-a1923ddf64cd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "23683ecd-44ce-412c-bc44-caac31e9fa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b37af16-86f4-46fb-b0b5-9d199fcaa46b",
        "cursor": {
          "ref": "c5086b46-9e58-45ce-a40c-75a24a5e6b37",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9d301544-900a-454e-84ec-89af1e3edd57"
        },
        "item": {
          "id": "2b37af16-86f4-46fb-b0b5-9d199fcaa46b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0568d434-a161-43b3-bd3f-9dfcfc0d3786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1f949d-f370-44f9-ab08-44d886bf7528",
        "cursor": {
          "ref": "6079076b-56cf-46ff-af01-21cabadce059",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0ec6daaa-a59a-42d3-8805-46c61bcedc46"
        },
        "item": {
          "id": "ff1f949d-f370-44f9-ab08-44d886bf7528",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8284137f-0392-4398-89dc-860be78db6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a5bd3c-99ad-48c0-b087-bf1a07830584",
        "cursor": {
          "ref": "1551c46f-3259-4e9e-937d-ddcfa081cb73",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e3b69d0-aaf5-4ba7-ad00-d05218205958"
        },
        "item": {
          "id": "59a5bd3c-99ad-48c0-b087-bf1a07830584",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "37e43623-5ccf-44c6-bd99-3d52ff090b5c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "00ea172e-4e67-4a96-bead-e5862693af57",
        "cursor": {
          "ref": "3e7f7820-6fa5-4607-b83f-704a4ac62e61",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c647429f-3c99-4c5c-bb53-9a4f310f5ff4"
        },
        "item": {
          "id": "00ea172e-4e67-4a96-bead-e5862693af57",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e037dddd-b235-442f-8a6f-0ddc79427350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab634ba-1322-4b85-a9e6-6a2ec056a500",
        "cursor": {
          "ref": "b947b9aa-f45e-469c-82a3-2c4e0540eb10",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "76539e07-65b8-41eb-828f-87ec3c28fa77"
        },
        "item": {
          "id": "3ab634ba-1322-4b85-a9e6-6a2ec056a500",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3085f808-3490-439c-9c84-d57599e023c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38757ed-cbb8-40b1-b7ee-468d8ce05e52",
        "cursor": {
          "ref": "9724f198-6335-43a2-80d2-57565bda6f64",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4c94eabc-7b44-4a06-b308-f06057ad04c8"
        },
        "item": {
          "id": "f38757ed-cbb8-40b1-b7ee-468d8ce05e52",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5382d2c6-c0a2-4092-92b4-552423735e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cb3814-f476-4802-a708-5ed48b934ce9",
        "cursor": {
          "ref": "8f14372f-de6f-4d81-89d1-a6ad3b732082",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "44a0ba7b-5237-44ab-88ff-3a9f36a069e3"
        },
        "item": {
          "id": "12cb3814-f476-4802-a708-5ed48b934ce9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5aa3d00e-f197-4c53-b38c-712e675c43ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37629ebc-7ac0-439a-a8a5-dd5753f9f743",
        "cursor": {
          "ref": "5726dcc7-bcdf-4d28-aed6-ea8ab2cd4bac",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "50560ba2-69dc-489c-aa0b-b269fdacbd8e"
        },
        "item": {
          "id": "37629ebc-7ac0-439a-a8a5-dd5753f9f743",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "63c96be3-e301-44b4-8e2e-032ed2389f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9058fc0b-ec4f-4cb6-9da3-ddc613b9ab63",
        "cursor": {
          "ref": "eb42fb29-ddcd-4772-890d-38fe8da6f4a5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "377fa156-af1e-456c-8146-3f46ef345927"
        },
        "item": {
          "id": "9058fc0b-ec4f-4cb6-9da3-ddc613b9ab63",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "42605b18-fe69-42d4-a118-b2fc04e2fe04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f150421-11db-4ca3-863e-373943dedc13",
        "cursor": {
          "ref": "815421cf-35f4-4551-a545-4a0b0b0fb5ac",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f7f751b2-1c1a-4bb9-be77-31dd9a89ed62"
        },
        "item": {
          "id": "7f150421-11db-4ca3-863e-373943dedc13",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "381b36bf-e3ac-40b9-aca7-69e6e3f4001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8485a3-58c3-4691-b15c-ec811615a9fc",
        "cursor": {
          "ref": "89424ca4-359a-4d0e-a093-bff61151bd10",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5fda26ab-ffd5-490a-a1bf-8af6d6045e22"
        },
        "item": {
          "id": "7a8485a3-58c3-4691-b15c-ec811615a9fc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "21a53d25-e99c-4a5a-b9c9-f2ccdc023869",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "00bfe523-8438-451c-9470-8e68458fa98f",
        "cursor": {
          "ref": "75d6d470-51a4-427a-90b8-bc1488bd7ffb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0260a00c-c1f9-40c5-bd78-11021cee15c1"
        },
        "item": {
          "id": "00bfe523-8438-451c-9470-8e68458fa98f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "395c1d2c-8324-42dd-a0db-4daca9a59a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8b18e0-c79c-4e59-a919-47ea19d1c36d",
        "cursor": {
          "ref": "4e1a2e7b-e9ca-40d2-a7b6-e82095a80be7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "86b5378a-a660-45b6-898c-1a10d66f47f8"
        },
        "item": {
          "id": "da8b18e0-c79c-4e59-a919-47ea19d1c36d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4461c1c7-2f58-472d-97f8-c4fbea9b9744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcf90b2-3083-4d6f-97a7-49df8fd20d77",
        "cursor": {
          "ref": "72c81abb-16ac-44fa-aa22-3f94b5c5c2b6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "87550051-a045-4225-9b79-4ac053958403"
        },
        "item": {
          "id": "9bcf90b2-3083-4d6f-97a7-49df8fd20d77",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dc8132fd-5f01-4a77-bb3c-d1af33e139cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625b70c9-1481-4b58-8551-2ecb19fd6019",
        "cursor": {
          "ref": "3d7487c1-36a5-48f8-9a4c-ba5efac7578c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8b05bb61-af17-4a44-99ca-56871be7e37d"
        },
        "item": {
          "id": "625b70c9-1481-4b58-8551-2ecb19fd6019",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4c4d2fa8-be10-4cd7-8553-665484e26f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64868a04-e7f9-4fbe-a096-9302ceadcf48",
        "cursor": {
          "ref": "fb6093eb-26a5-4bfa-b610-2eaa62de842d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "53011af4-4dce-438d-bb13-5244d82a371a"
        },
        "item": {
          "id": "64868a04-e7f9-4fbe-a096-9302ceadcf48",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e840fd1b-1b47-49c3-9f04-a3e042e33a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fba8b2-994a-43b9-8648-760732540fc7",
        "cursor": {
          "ref": "56ceae42-1522-4104-a39e-33903df21512",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c17981c-ef6e-4657-a16f-674f850f9080"
        },
        "item": {
          "id": "21fba8b2-994a-43b9-8648-760732540fc7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a779449c-1a3a-4214-bd4b-f6fbaba27b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26eeb2-7b18-4aea-915d-30e840f3c45a",
        "cursor": {
          "ref": "1b82c66b-af77-4148-954d-da15a635a42e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "63f86684-58f9-4419-bc38-58b4edd50aed"
        },
        "item": {
          "id": "2d26eeb2-7b18-4aea-915d-30e840f3c45a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ab0677a7-bfcb-4f6f-b99b-1437ee8ebc2a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "7a9d18ca-7f4c-46e3-bd37-f6d4175b3686",
        "cursor": {
          "ref": "8475a879-54c8-42fa-b5b3-5a828f52ba7e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b966f9b5-d11b-4b25-a879-11c1b908775d"
        },
        "item": {
          "id": "7a9d18ca-7f4c-46e3-bd37-f6d4175b3686",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0b0d5863-ac63-4c60-9368-a6f548105a66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "2beaeccc-6948-4f80-8295-9f35f13f3622",
        "cursor": {
          "ref": "397de5ec-d3a5-4e34-974e-576a8bfac273",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8d5aad00-422a-4e59-a561-05323e46b980"
        },
        "item": {
          "id": "2beaeccc-6948-4f80-8295-9f35f13f3622",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "13ee2a04-9cd4-4bce-b9b7-8e962e3a7fd2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7429960b-6bc6-462c-a526-34699301f079",
        "cursor": {
          "ref": "f88c3025-32c2-4c33-b896-9a328eedf764",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b46458a6-5fe7-4445-9bff-1edfba1a3055"
        },
        "item": {
          "id": "7429960b-6bc6-462c-a526-34699301f079",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c5af4111-66dd-4ddf-ab9e-fbe70804c398",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "fb428d5d-6c42-4da4-80a0-87557bb6c0c4",
        "cursor": {
          "ref": "3c0874c0-3b2f-45d4-bb7c-d9fce08954ce",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "969044a4-d305-49f5-a2fd-8dab978966f0"
        },
        "item": {
          "id": "fb428d5d-6c42-4da4-80a0-87557bb6c0c4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "39deffec-4c3b-4929-9aa4-3843e354403c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "629ac7d0-55b3-4ee4-a525-25ecbea16727",
        "cursor": {
          "ref": "20bc78bd-e046-491b-a896-64f149e6dc0f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "df44f110-def7-4d6d-8ac5-2eb6668cfc3b"
        },
        "item": {
          "id": "629ac7d0-55b3-4ee4-a525-25ecbea16727",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "acf6dd3c-e311-4596-8a2d-ecfb5a51d632",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "124e0a11-bb29-40ba-8dec-89646356500d",
        "cursor": {
          "ref": "0776932c-d755-4064-8534-0fb570e78e0f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "73101014-4bab-40d2-b8d2-6f086672709b"
        },
        "item": {
          "id": "124e0a11-bb29-40ba-8dec-89646356500d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e9c35161-1f13-4f9f-8852-69baa6acd064",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ac2c82-08b1-4205-beec-33cb76c81b5a",
        "cursor": {
          "ref": "1e30bdca-da48-41f4-8862-1a4792b52a6a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7af6873c-9655-4fbd-a3ec-930dd93309d7"
        },
        "item": {
          "id": "73ac2c82-08b1-4205-beec-33cb76c81b5a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c00358c-3b51-4a48-b9ce-dd82aec6c83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb04f4f-1457-46f8-b98a-0ac95f78feae",
        "cursor": {
          "ref": "6de07829-4a5f-4919-97ac-1b86bb410e29",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ee0e2f15-badb-4140-b36b-3f7ea2d04c60"
        },
        "item": {
          "id": "1cb04f4f-1457-46f8-b98a-0ac95f78feae",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4f24882a-706e-408c-a219-b701e43d8c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d002c6-6cde-47d7-92bb-8595f25a59a7",
        "cursor": {
          "ref": "809f6b41-4b24-4dc4-b9a5-1622d957a9af",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8d088f3c-7194-42f4-b697-5916e04a6b05"
        },
        "item": {
          "id": "90d002c6-6cde-47d7-92bb-8595f25a59a7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2afcbf11-d9c0-44b6-8fab-86f431626834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edef096d-fac5-4a5f-acf9-c183b30f82ad",
        "cursor": {
          "ref": "2c175c1e-56f9-46dc-b9e1-62db6ccb4618",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2d2eabd2-4ea2-452f-a6e1-f5560b0bf372"
        },
        "item": {
          "id": "edef096d-fac5-4a5f-acf9-c183b30f82ad",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6f89f0e8-6050-416f-bb8e-64243be992b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c25c5b-e0e9-4040-9893-828ff1576a73",
        "cursor": {
          "ref": "0ba22fa7-c495-4f45-9311-f41109d1d5a1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d103c6f2-b326-4e2e-9c2e-703565801e19"
        },
        "item": {
          "id": "a9c25c5b-e0e9-4040-9893-828ff1576a73",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9b623e3f-ab0a-49af-be36-7f9249aa870e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b726492-6b72-4f89-b7e6-e9eb2014a6ad",
        "cursor": {
          "ref": "85135ba0-16fc-4c5d-a741-cef453cadfdb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c8bad896-7dd1-4388-967c-74f5be155667"
        },
        "item": {
          "id": "5b726492-6b72-4f89-b7e6-e9eb2014a6ad",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e0da3209-9691-463d-987e-8df3a005a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3739775-597c-4af7-b5f0-7801145763b2",
        "cursor": {
          "ref": "e13c6a08-5e5d-4225-a406-2565e2a9dd04",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0b8ecd84-a8ca-4a34-a0e1-c8860278237b"
        },
        "item": {
          "id": "a3739775-597c-4af7-b5f0-7801145763b2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a1da9a84-a8c7-4b0d-a477-6971d6ca6b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d75b501-17d6-4daf-96a3-50d9ebcb6ea0",
        "cursor": {
          "ref": "1241d15b-eef3-431e-ba1d-3bb07794e116",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "830653d9-bc19-4bb4-bc73-85b812e2aa17"
        },
        "item": {
          "id": "7d75b501-17d6-4daf-96a3-50d9ebcb6ea0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "daba26b7-f073-4b2c-8273-e984595573cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb80209-de5e-416e-a32e-21091733dfbc",
        "cursor": {
          "ref": "bc2c818b-7e9a-4f4a-8905-936fd19381a9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "88041c25-f3dc-4a7d-9b4d-35dd2e0a9a2c"
        },
        "item": {
          "id": "4fb80209-de5e-416e-a32e-21091733dfbc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8b147cde-e13c-4cbc-9d44-e85492e8e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4c26dd-90b7-432e-9433-30a23d66ce31",
        "cursor": {
          "ref": "7c76fe29-f602-4258-8165-5fd54d179265",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "319db581-023b-4d99-84bd-dbf450f07521"
        },
        "item": {
          "id": "fe4c26dd-90b7-432e-9433-30a23d66ce31",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1fcf7968-9f46-452d-8a57-037d7d2d9a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d3bff-1ea0-4106-9466-9867e2bbc178",
        "cursor": {
          "ref": "26fce78f-e596-4825-b7fa-c247b4786b76",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cb0669f6-3d7b-4698-b96f-045d62b9e613"
        },
        "item": {
          "id": "db1d3bff-1ea0-4106-9466-9867e2bbc178",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d88e06f-1d64-4d9b-9894-bda80c3ea41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914d66a9-49a4-4eff-bbfb-e7a0105e63aa",
        "cursor": {
          "ref": "fc12c25f-b32c-4875-b283-c3efb6e1ff73",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6fe5b29-80f9-47f9-95b6-a58ca12621ae"
        },
        "item": {
          "id": "914d66a9-49a4-4eff-bbfb-e7a0105e63aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b151db2f-78d5-4e31-9e8c-e636d3fca6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5491c7a9-2813-42ba-912c-917bb663241a",
        "cursor": {
          "ref": "0e894f73-528b-4fc8-93b8-84b92deef05d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ea4309d1-9724-4c7d-b067-5d139ba1e634"
        },
        "item": {
          "id": "5491c7a9-2813-42ba-912c-917bb663241a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1c151df7-c58b-44ad-82ae-58aed71891d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9845cf8-3c75-434d-8b79-d03cc3deacf4",
        "cursor": {
          "ref": "eebbaf5c-9b23-4d92-b611-b356f197f1a9",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9a01bd76-c400-4959-9728-29be0ee0da47"
        },
        "item": {
          "id": "e9845cf8-3c75-434d-8b79-d03cc3deacf4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fcb018ca-4308-492d-8997-fe36b58ffa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d21625-dfe0-4194-8b96-9b135fb2750d",
        "cursor": {
          "ref": "10b25e3d-5eeb-4631-9d78-1e6f94420e39",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eca95570-0cbb-4d37-a299-a82b89f50ced"
        },
        "item": {
          "id": "58d21625-dfe0-4194-8b96-9b135fb2750d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6eaa5e8c-438f-4273-9fad-c34dabbc7018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31ed606-73f1-44e6-bc5c-4394d2b6794b",
        "cursor": {
          "ref": "cb656920-8a4b-4a5d-b8ed-51fdc0b6cba3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc7ad622-de37-4a3f-8a22-afa16cd016bb"
        },
        "item": {
          "id": "a31ed606-73f1-44e6-bc5c-4394d2b6794b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "df1a1c27-c45a-43cd-b4a3-4a7a7d6272cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41239f89-ec82-431e-b8f7-86eafd15615f",
        "cursor": {
          "ref": "22c78112-572d-4b61-8c95-9a56ef9041c9",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9fd16b58-b57c-43fd-824f-62f9e882a42d"
        },
        "item": {
          "id": "41239f89-ec82-431e-b8f7-86eafd15615f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b1c62b7b-5d4c-4ef1-bafc-03ee9ac9bc8f",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d03c8b94-2c93-4eca-87d8-0aaa1f7e5711",
        "cursor": {
          "ref": "425865d9-c3b4-44d9-92da-fdcb560a0a4f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ed867dd3-95df-448f-99cb-4f9b0aa63e1b"
        },
        "item": {
          "id": "d03c8b94-2c93-4eca-87d8-0aaa1f7e5711",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bbdbd14b-47d1-401b-9c30-c7bf1764cc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da5910d-893d-4213-8cfc-74605be9b217",
        "cursor": {
          "ref": "9a5d7c7d-ad34-48af-be3c-e75a4db1a577",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6088c423-cf8e-4b02-8ce6-a21a75091a8d"
        },
        "item": {
          "id": "0da5910d-893d-4213-8cfc-74605be9b217",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "309f97a9-d59c-4164-bd7f-effe29205ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0d9015-df1d-46e1-b9a1-272c0abb9471",
        "cursor": {
          "ref": "85a8f9d1-2265-4692-af44-45817df7e06a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f746b4b5-6fb1-4ee0-9a24-a7944b60dfbb"
        },
        "item": {
          "id": "9e0d9015-df1d-46e1-b9a1-272c0abb9471",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "15326773-cbfc-4387-a772-f62c6e48d4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615f1db4-9953-4d9a-960e-02f465ad1921",
        "cursor": {
          "ref": "73964c40-83b8-4fe0-8df8-0fe470ffdd2a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1b11efe5-1182-4b49-95fd-5460d08e0189"
        },
        "item": {
          "id": "615f1db4-9953-4d9a-960e-02f465ad1921",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8d4a51f0-5cd9-4bfc-82e1-fc8ad1695237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcb4f0d-e4a4-4cbf-8d8d-8302144a0820",
        "cursor": {
          "ref": "e9336baa-8816-4ad6-9f53-c6a5030f22f0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7ce684d0-7fbb-4634-8db7-45c4b90289bb"
        },
        "item": {
          "id": "1fcb4f0d-e4a4-4cbf-8d8d-8302144a0820",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2fb929d3-5845-417b-9573-60c61bd06ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d09546-54d1-48fe-92c8-f264e707abdb",
        "cursor": {
          "ref": "7ec7554e-2cb8-409f-a128-8baa4114a170",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "38954caf-d7e9-452d-8f17-be688dd23f62"
        },
        "item": {
          "id": "b9d09546-54d1-48fe-92c8-f264e707abdb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ce08b4f8-8789-47e8-8851-eb7d09402b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30553f9-18ca-4279-91cb-3e1e7af10e1e",
        "cursor": {
          "ref": "79239cf3-9c07-4190-be5f-825d224e55c8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "677491f9-6d0b-4bbb-97b0-f192bb864705"
        },
        "item": {
          "id": "f30553f9-18ca-4279-91cb-3e1e7af10e1e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3f097a9c-7ed5-4dd5-aa9c-aaf689c26578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c01df28-c59c-417e-8290-342d733c2065",
        "cursor": {
          "ref": "cc3a3da2-1667-4b66-8c26-3a6a79ff1021",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "601f1b37-7b7d-43af-95c7-f08afd291800"
        },
        "item": {
          "id": "6c01df28-c59c-417e-8290-342d733c2065",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9a57dee3-c74f-4e1f-a86a-cd00280c8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f8c1c8-9041-4e1a-b19f-dfc026eaaee9",
        "cursor": {
          "ref": "8fd239a6-dbb8-4c39-b979-cf1aece952b9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ee6a1891-891d-40aa-9aee-2269fab8d874"
        },
        "item": {
          "id": "e3f8c1c8-9041-4e1a-b19f-dfc026eaaee9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8c1a77d6-3da4-43bc-aef5-cb91d764fd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe5a2e8-c50b-4819-a6e3-35c22fd01ef5",
        "cursor": {
          "ref": "23ae3614-a22c-4db9-9796-e804a561df33",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7be5d43-19bc-4369-9930-01f2d1da5e80"
        },
        "item": {
          "id": "dfe5a2e8-c50b-4819-a6e3-35c22fd01ef5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9c3deb1-aaf1-4db1-a621-8d44a9a86857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddc9795-bf43-4b6f-ae1c-d0f64508831f",
        "cursor": {
          "ref": "744602f7-8c1a-42e7-bffc-eac7c060e430",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "faa6631b-2c08-4b83-b152-3cfaa72774d5"
        },
        "item": {
          "id": "bddc9795-bf43-4b6f-ae1c-d0f64508831f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ad820e15-6715-4f41-90a7-cb2ee06523d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82d822-77a3-431d-977c-394384878a48",
        "cursor": {
          "ref": "2c87e989-25e1-46c1-a5d2-4fe5150b4f5c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4505fef1-25f8-43a5-ab41-d9fd95ccced1"
        },
        "item": {
          "id": "ed82d822-77a3-431d-977c-394384878a48",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "77cd8642-03b2-4684-ae57-472d0f205419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa5c3cb-4a34-4637-9f4c-b7e8a8217e10",
        "cursor": {
          "ref": "bc24893e-60d8-4a85-8bc3-48f35659101c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b1401ead-c001-4da5-9fe5-0492713dee5e"
        },
        "item": {
          "id": "0aa5c3cb-4a34-4637-9f4c-b7e8a8217e10",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e326c13-c7e8-4456-b0f7-536f12dadb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04402b03-6d15-49f2-ad90-f478d9656b2d",
        "cursor": {
          "ref": "ba132a26-cc75-409f-8b76-dad61ffabfff",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a98a2e4-1b3b-4c99-bb10-53a05ef72e16"
        },
        "item": {
          "id": "04402b03-6d15-49f2-ad90-f478d9656b2d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "779793dc-f5c9-4c1c-ac9a-fcdee3b3c86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb53c735-aeee-44f5-8443-071c9abd87d0",
        "cursor": {
          "ref": "6609caed-2b4b-4122-b61f-8c085cd357de",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cc25cea8-11c9-4baf-bcb2-e01648c50dbb"
        },
        "item": {
          "id": "cb53c735-aeee-44f5-8443-071c9abd87d0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3a0bfda8-6928-43bb-98e7-7c7a993cdc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0422d8-3d61-41d6-a0b6-3ecfaab16d8f",
        "cursor": {
          "ref": "1306df20-e2cd-4ebf-a043-164a69f4dd1c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "418ebb48-eda5-42b0-9479-37e02e75763f"
        },
        "item": {
          "id": "4c0422d8-3d61-41d6-a0b6-3ecfaab16d8f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "345658fb-9f23-4c6d-9c70-5ac63b41d1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f93ec6-d1e0-4fef-96b0-8d3ee1ddf96a",
        "cursor": {
          "ref": "eed65736-3c77-48a6-b949-33b19302a66a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cda4325b-06b4-47b9-a249-3e4054ad6627"
        },
        "item": {
          "id": "36f93ec6-d1e0-4fef-96b0-8d3ee1ddf96a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "37f181d6-1c4d-42d7-9819-8f4699c914c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f98ec-2a5a-4a6c-aeaa-ac5d3defbac8",
        "cursor": {
          "ref": "fbe1a0c7-e1ee-447a-a0f0-1340c13e60e8",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7a6d434c-0f61-45a5-8090-b71e0a282afa"
        },
        "item": {
          "id": "494f98ec-2a5a-4a6c-aeaa-ac5d3defbac8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c468fd30-81e6-42b9-b116-ce06b16d4a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc6356b-7fb4-42d2-b240-e451bf7a772d",
        "cursor": {
          "ref": "90420b5c-91c6-4cc6-b9d3-d700ae396dce",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b73a581c-0f74-4bb7-9486-8e80b73599ab"
        },
        "item": {
          "id": "4dc6356b-7fb4-42d2-b240-e451bf7a772d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a051423b-edd8-4cac-b405-b1bf8797e18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855798c8-4ddf-4adc-95df-3a2f004ed649",
        "cursor": {
          "ref": "8ff036d5-6996-4d0b-a48c-bb6fc39297ab",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2309abe4-4c7f-466c-94d2-794dc981b229"
        },
        "item": {
          "id": "855798c8-4ddf-4adc-95df-3a2f004ed649",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9b42803f-256e-4be8-8290-5275f11600b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5809dd5c-7548-41e6-829b-f3f0ad5220e7",
        "cursor": {
          "ref": "fb55aec1-17d8-41c6-9824-37f6720423e9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2b98f1c5-ca83-4205-a280-97463c9efb78"
        },
        "item": {
          "id": "5809dd5c-7548-41e6-829b-f3f0ad5220e7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c5186bdb-6833-4e05-8118-e483141b4116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c47ac24-cc41-48ea-8866-e0ba03effefd",
        "cursor": {
          "ref": "f4074d04-033a-4ab5-86ce-b174e77be00d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b173cea2-f37f-4ac5-979b-1d6768a4964c"
        },
        "item": {
          "id": "1c47ac24-cc41-48ea-8866-e0ba03effefd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a6da3452-7777-4ca0-bb02-7063625345c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f78801-fa34-4b57-a5cc-d3680826019c",
        "cursor": {
          "ref": "92ba81d4-1b7e-4443-bd47-d8e520ee199d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a3097640-805d-481d-96c4-879e886e6c0e"
        },
        "item": {
          "id": "37f78801-fa34-4b57-a5cc-d3680826019c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "432bac22-88f1-4564-927f-5ae89c1dfb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed4be25-e9ae-42ae-9552-9925065ea3f9",
        "cursor": {
          "ref": "e08daca7-3966-4da2-9839-82d8814a2b2a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "df05cab7-2ee8-48ba-9145-0f86d55792b9"
        },
        "item": {
          "id": "bed4be25-e9ae-42ae-9552-9925065ea3f9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "540aef62-c03e-4087-a47c-0a786271289d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08434093-4206-4a66-b881-b78fe2f78f84",
        "cursor": {
          "ref": "6ac471b2-070f-4bc7-9cbf-444d9e8b04ce",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "20904d15-787f-442e-82cc-64fd53f51077"
        },
        "item": {
          "id": "08434093-4206-4a66-b881-b78fe2f78f84",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "88fca3ac-a34c-4ed3-9fba-7a31a4b9ffd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca33d9d0-79f6-47b4-8d8e-4afd42ba7bdf",
        "cursor": {
          "ref": "e125a15b-b945-49b7-85f8-12fa1b319fee",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e03ef720-f271-4062-aeca-75384096d8ea"
        },
        "item": {
          "id": "ca33d9d0-79f6-47b4-8d8e-4afd42ba7bdf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65932856-2e81-4af1-a0ab-a1175b2872b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77febb2a-78ea-40bc-9600-8ba16d663633",
        "cursor": {
          "ref": "27ae2550-67bc-4ad7-bbb2-0a1fe64b8b43",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e897688e-25e1-44c8-812d-f1d3f4e29df3"
        },
        "item": {
          "id": "77febb2a-78ea-40bc-9600-8ba16d663633",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c8ba3fd5-e897-4cf1-b069-021f76370d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c19233-0223-4816-a79f-85e9ee0a90a9",
        "cursor": {
          "ref": "4632ddd9-a6b9-440f-bb74-074c99d695c4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "18fa79fd-b9f3-42d6-be42-c50b8bc8c071"
        },
        "item": {
          "id": "c5c19233-0223-4816-a79f-85e9ee0a90a9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ffb60678-b3e6-4160-b3d5-1495c9eaa59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7a7435-afcc-4b74-b97a-bcd5c7852194",
        "cursor": {
          "ref": "8398efe7-8f34-48e0-8804-2514d4271aff",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dd6d577e-d177-4a50-b1d1-14e03546cb8a"
        },
        "item": {
          "id": "1d7a7435-afcc-4b74-b97a-bcd5c7852194",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "33018cf7-ada3-4ebe-bca2-80d58ebcda18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2e08ba-250d-480b-b997-969921393f76",
        "cursor": {
          "ref": "351623e9-2286-48bc-9132-8a9f53ed2d25",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8fee03dc-6400-4e51-906d-fdf4bfe3ef16"
        },
        "item": {
          "id": "7d2e08ba-250d-480b-b997-969921393f76",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e33339cf-729d-4274-9f82-f9791a5d35a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a1acca-6f65-4f01-b24c-e10c70559099",
        "cursor": {
          "ref": "3b2fd84d-5569-48e0-8b7f-7aa7ba1071c8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e727f9ed-7c24-4258-96f7-783d4f132fea"
        },
        "item": {
          "id": "e8a1acca-6f65-4f01-b24c-e10c70559099",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "73b11b67-f978-4e51-b45f-0072d4bfec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f563514-50db-4815-9221-e7eab46fae55",
        "cursor": {
          "ref": "bcc06f8e-6563-4517-b19e-27f4a04d31da",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "360712c3-46de-46a8-b700-209b0b314555"
        },
        "item": {
          "id": "8f563514-50db-4815-9221-e7eab46fae55",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "30708a58-6292-4680-a8f3-ab001a47d55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29b69c9-ff50-4d06-a7bd-5bc847d9dd0a",
        "cursor": {
          "ref": "90d84383-c968-41fe-ae0a-bfa7d19f5e86",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3dee9ec-35e3-4454-8f21-8f9ad73fff0d"
        },
        "item": {
          "id": "b29b69c9-ff50-4d06-a7bd-5bc847d9dd0a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "00f62171-77bf-4613-b981-439ff7c30099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41992d64-f06a-40d0-bd9a-b307bbf87e94",
        "cursor": {
          "ref": "a0601923-7768-4ea1-9fb1-8888c040192b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f7d75b7d-61f1-4374-a497-75b98d4945f2"
        },
        "item": {
          "id": "41992d64-f06a-40d0-bd9a-b307bbf87e94",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fe52ad03-dfbb-4ff1-9ff6-4334681f1fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8065a788-2dd7-4ecf-b5dd-248550bc6883",
        "cursor": {
          "ref": "90eeb322-98db-41c2-b6b8-da01d57d22ab",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "860c3bb6-aade-4b74-93c7-7d394478cc18"
        },
        "item": {
          "id": "8065a788-2dd7-4ecf-b5dd-248550bc6883",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc74dfe2-1643-4aad-b8ba-6059b6d77b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800aeebe-810a-4636-a670-688409ee1aa6",
        "cursor": {
          "ref": "678eadeb-ffb6-4fea-b317-24f8f964c53f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f742fa91-6a4a-48c6-a365-e05da159cf1f"
        },
        "item": {
          "id": "800aeebe-810a-4636-a670-688409ee1aa6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "478e5d7d-6950-4507-9f99-7246f509820c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d1a3cf-26e4-43d5-9e30-0b5d57005eef",
        "cursor": {
          "ref": "942a4b51-d78f-434c-8fa6-6f0c04cfcae3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c536e78d-0184-4e35-94bf-56baa50af204"
        },
        "item": {
          "id": "c9d1a3cf-26e4-43d5-9e30-0b5d57005eef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e92564d8-cfc7-46ca-8bb6-bde2e1aec406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef184aeb-b8e2-446f-971a-0771dc9f3c01",
        "cursor": {
          "ref": "1279f30c-6c1a-4ea0-8306-16d2321986a3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "97deda79-90cf-4daf-80a4-535587cc8984"
        },
        "item": {
          "id": "ef184aeb-b8e2-446f-971a-0771dc9f3c01",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "75bd67e5-d060-461d-8446-d4304f69c3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372c1017-0e3e-4d43-b7e8-cad8e697e710",
        "cursor": {
          "ref": "423b66c9-e29d-4bf4-b144-c1e0772c20e6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ae09ae26-9fa5-4a87-8231-fb11b8549745"
        },
        "item": {
          "id": "372c1017-0e3e-4d43-b7e8-cad8e697e710",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f7a61feb-14c1-4b0d-9bf0-6e36a42ef95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b759e7-05d4-45aa-acd2-59e245a56694",
        "cursor": {
          "ref": "fb1ebc0d-f88a-4dc6-bb02-9c48730b8eae",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "14c26f25-a638-433b-8ed0-d3bb07fdfc27"
        },
        "item": {
          "id": "63b759e7-05d4-45aa-acd2-59e245a56694",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "70de3f36-1a35-4640-8a19-d0b0668bbd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda9d667-39b1-4c00-8245-69b29f645fae",
        "cursor": {
          "ref": "01d8448a-e54d-4683-911a-967b8f8aa16c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "76698db3-8e38-4602-9d42-30468cf7a200"
        },
        "item": {
          "id": "eda9d667-39b1-4c00-8245-69b29f645fae",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e7a90342-8726-42e1-a674-6a5cde402ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a79db01-36ab-46c9-b7d4-6a1526473b6a",
        "cursor": {
          "ref": "ea8046c6-8e87-41f7-bcab-7edb374c9547",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a33f5ae6-69be-416f-b523-a09314cc40b5"
        },
        "item": {
          "id": "9a79db01-36ab-46c9-b7d4-6a1526473b6a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e15ded54-8b2a-4a7b-8485-6cb08da66e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae42bd7-e088-4e09-8653-c02d3be7f837",
        "cursor": {
          "ref": "7d5a10ba-f1e0-4e58-a502-8acd7e0f4d21",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "af2c7914-7ad2-4e1b-a22e-e58067c01f92"
        },
        "item": {
          "id": "6ae42bd7-e088-4e09-8653-c02d3be7f837",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3335bd00-02ad-49ae-a2a9-1f1598978436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f983ef-d24b-49f0-a9b0-49440f2fd80b",
        "cursor": {
          "ref": "76958af8-0699-42e2-a415-773865aaf3b5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a8359840-469b-4d3e-bab8-2bc42b673ba9"
        },
        "item": {
          "id": "c6f983ef-d24b-49f0-a9b0-49440f2fd80b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6ee3ddb4-cff4-4634-880e-24ccfc9e21f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4fa77b-5462-4bd8-a307-973023578a59",
        "cursor": {
          "ref": "7d739235-7f33-4bc4-bc3d-d321ac31fc85",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c7a48477-88a7-42ab-a85c-61dd4c297463"
        },
        "item": {
          "id": "9c4fa77b-5462-4bd8-a307-973023578a59",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6ca0d583-6e1a-4a5b-8a07-33676b113217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd46317-5695-4ceb-b196-f556f5c3dc66",
        "cursor": {
          "ref": "42392a2b-e47d-46b6-a3a9-4cd5fa1b9ace",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3ff27aa-6f0e-43f3-9a01-2ffec677ccd7"
        },
        "item": {
          "id": "5cd46317-5695-4ceb-b196-f556f5c3dc66",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "712341f8-5cdc-4893-bfff-948e49ca235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38877574-7796-4b29-be6f-02f8d83fe66a",
        "cursor": {
          "ref": "674ce6ea-897a-4a6d-9903-fd5b3506f2d8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d2f3f29a-c342-4963-8ca2-860273d2af54"
        },
        "item": {
          "id": "38877574-7796-4b29-be6f-02f8d83fe66a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e629fdec-46ff-4b45-9217-f316b1bf3a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b837dc18-93f3-44d9-a414-d3b149150b59",
        "cursor": {
          "ref": "6728b2ac-1727-41d2-8f94-0c3b02bd3e8f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4f4e5688-34c7-4375-8b50-41fc84aa6f84"
        },
        "item": {
          "id": "b837dc18-93f3-44d9-a414-d3b149150b59",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b268610-e715-46c5-84bb-7cbf8e699c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072b1f6e-1aa4-4be2-9b93-1a97dc797ee4",
        "cursor": {
          "ref": "d91a6e59-7adc-4d32-8c89-31814279a6f7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aa4def83-b6b3-433c-9abd-a4f414342b2f"
        },
        "item": {
          "id": "072b1f6e-1aa4-4be2-9b93-1a97dc797ee4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5e86e1ff-eec3-4579-b385-ccdac53c2342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74762590-9e77-452f-9065-529609094b3b",
        "cursor": {
          "ref": "380a2a3c-b203-4534-96a6-79239c2169a7",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5cf8fc9e-d2f1-4f29-a523-ed49cd7d4307"
        },
        "item": {
          "id": "74762590-9e77-452f-9065-529609094b3b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab0c1057-f665-45ab-b16f-47ed09c7428c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ef1b92-a033-4f28-8b60-67028bb24281",
        "cursor": {
          "ref": "e55fae9b-5243-48f7-bc5a-9ebcde9fe2bb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b01b8e35-f2fc-4d7a-98b3-8040fea76662"
        },
        "item": {
          "id": "86ef1b92-a033-4f28-8b60-67028bb24281",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "748cf00a-4e76-46f1-a513-cf8bfcc3d3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bb475b-8a95-4a6e-89a4-680ea2d06412",
        "cursor": {
          "ref": "91167f66-7fbf-4d5c-9695-909b0a8ec82a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9328d14a-fd1f-402e-9fa0-b4a489d45028"
        },
        "item": {
          "id": "83bb475b-8a95-4a6e-89a4-680ea2d06412",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e0891bf1-c4be-4b4e-bd89-6fb23eb70931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f20de4-a343-41a3-915d-d1721e638333",
        "cursor": {
          "ref": "0907cec4-561f-4a7d-9fef-a1c138b7db75",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e3202f2b-e957-4ee7-87de-5e1cc067ae3d"
        },
        "item": {
          "id": "c9f20de4-a343-41a3-915d-d1721e638333",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e20e76cd-261d-4b1a-98f8-0560e455099b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe429bd5-a64d-462f-8b29-bcfd46443684",
        "cursor": {
          "ref": "ae7db160-380f-4dcf-808a-ca954e3a6112",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d42bc95d-27e0-4ebe-959c-6a33b6809256"
        },
        "item": {
          "id": "fe429bd5-a64d-462f-8b29-bcfd46443684",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1de41ad1-10ad-4c2b-b09f-37207364ac40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9460dbb6-c781-46ce-b962-9d8a04e60bdf",
        "cursor": {
          "ref": "be65154a-f039-4a37-ac45-35eb99e2b295",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "13b2f0fa-38ed-454f-ac5c-697519d666bc"
        },
        "item": {
          "id": "9460dbb6-c781-46ce-b962-9d8a04e60bdf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e9a6651-cb74-4576-bb0b-f652102f3a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc6e048-73c2-46fd-8799-5ee39eba9dbd",
        "cursor": {
          "ref": "23a4e0ee-100c-4216-b8fe-8fb05cac9d73",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b58b751d-4a10-475a-a8dc-4ef1f82eaa70"
        },
        "item": {
          "id": "1fc6e048-73c2-46fd-8799-5ee39eba9dbd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "090e38cf-80c7-455c-9adc-8abffa67d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f568491c-ac78-415f-ae9d-68ffcc50ebf6",
        "cursor": {
          "ref": "7d28af9a-af45-4e58-98dc-a9720ee6de0b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1f651cf3-34f2-4ccd-be49-c671a75b4a73"
        },
        "item": {
          "id": "f568491c-ac78-415f-ae9d-68ffcc50ebf6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d4b6ac56-5537-4e0e-9a6e-a08cd42e98e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448a0f19-2b03-46e0-8dc2-c509947b41e8",
        "cursor": {
          "ref": "298b563f-199e-46f5-8a32-ed467db60f6c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a9597c92-1b12-4952-89c9-f1c88d6fa676"
        },
        "item": {
          "id": "448a0f19-2b03-46e0-8dc2-c509947b41e8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fd7c199e-f81f-4f0c-b5f4-c75a58b86f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067b0aa6-cf88-41f1-9396-30cace67b9b4",
        "cursor": {
          "ref": "a9aa8a5a-21ce-41a8-80c1-f68a31f017d8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fd061bed-e75a-487c-95d9-e0e430aa06b8"
        },
        "item": {
          "id": "067b0aa6-cf88-41f1-9396-30cace67b9b4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "baec2b76-8441-43ed-bd9c-685cc195eee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b06af4-4dad-4048-b799-3a469f480ae3",
        "cursor": {
          "ref": "8b5705de-ee9d-42ea-ab58-2bd6098748b1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "89420f09-d727-467b-85a4-f97958a589f1"
        },
        "item": {
          "id": "e1b06af4-4dad-4048-b799-3a469f480ae3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3ad349d8-9dd4-4471-918a-af9d16b63165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d93ee-bc64-4102-9a15-8af9540e4b72",
        "cursor": {
          "ref": "b6166aea-2138-4182-80d1-b174807a280d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "05ae6e9b-5e62-4dc5-babf-34182b2024c9"
        },
        "item": {
          "id": "646d93ee-bc64-4102-9a15-8af9540e4b72",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa8c2bb7-f2f5-4d78-bdf9-292665b883ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13229df-a68a-4c93-a7fe-f97be4218a19",
        "cursor": {
          "ref": "7b7f3e45-6279-495f-b7df-1933500fe183",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7bb39cf2-93bf-467a-9972-c9a2639e5a6f"
        },
        "item": {
          "id": "e13229df-a68a-4c93-a7fe-f97be4218a19",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0553c44e-89e3-45da-9bcc-17cd18effb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5fe727-d47a-4d1e-9784-2bcb1e92ea2c",
        "cursor": {
          "ref": "8fecde09-0684-43bf-b09e-fb8f4fd3c25c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e73044da-84ea-4905-b508-53c72d8282da"
        },
        "item": {
          "id": "0c5fe727-d47a-4d1e-9784-2bcb1e92ea2c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c1fa3802-df69-4abf-b3e5-3bb344a018c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef9fcc5-9cf2-48c6-bc8d-516848ac6c2a",
        "cursor": {
          "ref": "caaed062-b51f-4a4a-bb66-49c586d503f3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6047283a-344f-4a84-9c3a-125550cd401b"
        },
        "item": {
          "id": "cef9fcc5-9cf2-48c6-bc8d-516848ac6c2a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a522ae98-3cba-4072-ae2b-e0baea72abfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c979370-41da-4fe6-8e80-5c16c4268c08",
        "cursor": {
          "ref": "9e493be9-6558-49cd-8f70-40e946168c44",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "532dd3a6-8770-42a9-ac61-2e9f8dd2cb44"
        },
        "item": {
          "id": "1c979370-41da-4fe6-8e80-5c16c4268c08",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ac1cf5c0-8995-4e66-bef5-b182f1e776e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db987a00-7f94-45af-a4df-4c34c0e9b6bf",
        "cursor": {
          "ref": "ab37984e-2769-4e47-bd7c-0b9aeb2af00f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b9b220e0-e467-43db-87e0-9cd8e0aadf73"
        },
        "item": {
          "id": "db987a00-7f94-45af-a4df-4c34c0e9b6bf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aa95a566-cf4d-463c-8843-041a7f831b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2faa86-9375-4d3d-950e-62423f58506f",
        "cursor": {
          "ref": "ae2ef8a1-a15e-44a6-b7b1-aa0d9bcb3929",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "179b6bf6-61bf-4192-9ba1-02f057652244"
        },
        "item": {
          "id": "cb2faa86-9375-4d3d-950e-62423f58506f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c2c3549c-2d53-44f7-860f-ecf8c6c4698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9321d2a4-bce6-462c-b8a8-0b4b12a82eed",
        "cursor": {
          "ref": "2ac1d0bc-67e5-4abf-ac5d-f1b33c2bf887",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "746bca86-01ce-4cea-a289-bd18be1afe85"
        },
        "item": {
          "id": "9321d2a4-bce6-462c-b8a8-0b4b12a82eed",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "da947785-5bf5-4c26-a180-6637848fed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48197aed-ee83-456e-9d00-1a7859295c6f",
        "cursor": {
          "ref": "fe691cc5-9673-45e2-af9a-206fde16504a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "72918ea7-ddea-46b2-9267-733fbd81580b"
        },
        "item": {
          "id": "48197aed-ee83-456e-9d00-1a7859295c6f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "aab3a883-8a27-4804-b79b-b2e9a3fb84b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c839b1f3-e3e1-4596-8373-4e6f6163d55a",
        "cursor": {
          "ref": "3ce0f1b8-acf7-4058-944c-b078ab700c70",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "95e9611f-8fc9-474c-9a9d-6d237562857a"
        },
        "item": {
          "id": "c839b1f3-e3e1-4596-8373-4e6f6163d55a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "db210f85-e340-4f15-a14b-27eb5afac4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52113bcd-2b6a-45c1-8825-bbf71a1756d2",
        "cursor": {
          "ref": "e976fd27-291e-4717-911b-c5b33b8f3f2f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bc34ae15-8de3-4c2a-947d-63119e937fbf"
        },
        "item": {
          "id": "52113bcd-2b6a-45c1-8825-bbf71a1756d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "361654f0-41ca-44b5-876e-78528c609aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c111ac2-51e3-4d3e-a2a2-ce1f87be2885",
        "cursor": {
          "ref": "1449e516-3d53-4eac-807f-4f8d42451850",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "908cd3f4-67b4-42e0-861b-65158e38e78a"
        },
        "item": {
          "id": "9c111ac2-51e3-4d3e-a2a2-ce1f87be2885",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8b43847c-d69d-4158-a8f6-a180ce01ca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e22c71-28ac-4b95-a1b0-81a9bd6a48db",
        "cursor": {
          "ref": "b966c65e-ce5a-4a11-aed7-f57fb7af8bb8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "86288a00-44b7-4556-8e83-9f685adf9d1a"
        },
        "item": {
          "id": "52e22c71-28ac-4b95-a1b0-81a9bd6a48db",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9c1d2715-2771-4fd2-962d-b44044200d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0877eed6-14c7-484e-9b2b-6a758e4b649d",
        "cursor": {
          "ref": "4dd03cec-a9f9-4ad9-88ff-1f51556ec4ae",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7680278c-4940-433a-935c-682cb003a317"
        },
        "item": {
          "id": "0877eed6-14c7-484e-9b2b-6a758e4b649d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2bf38a6a-6ee2-4842-a060-89259198c01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a9243f-0d3b-4121-9cc6-3b2a71502b42",
        "cursor": {
          "ref": "dfa72b71-a80b-4464-bd43-a45dc31ec370",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c483921c-f9bd-46c2-b92a-161349491c5b"
        },
        "item": {
          "id": "02a9243f-0d3b-4121-9cc6-3b2a71502b42",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "44a9ed88-8b2f-407b-b788-5a011ce51183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf06f94f-a9b9-4306-93b0-83275dbdae05",
        "cursor": {
          "ref": "94d867b0-a986-4398-a484-0e0308443250",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1a87f552-0962-48c3-95bb-418adf8c116f"
        },
        "item": {
          "id": "bf06f94f-a9b9-4306-93b0-83275dbdae05",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5ae7e5ba-a5da-4a4b-ad6d-3476e5ef3874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df32487c-8a01-46bc-a70d-99a493290aa0",
        "cursor": {
          "ref": "9b60713d-b6a4-4677-8f57-3922a8d10f3e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f2d67702-9a43-4ae0-8e62-2c82718c4dc9"
        },
        "item": {
          "id": "df32487c-8a01-46bc-a70d-99a493290aa0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "66040156-bb5d-4ec6-995a-a13784aba0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80860387-f0ca-4794-8f6a-c4a53796196a",
        "cursor": {
          "ref": "b5dcd00d-797a-4162-a73b-ebd5fd0c4dee",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "19628a36-3938-409a-aceb-e8f6ab3ce328"
        },
        "item": {
          "id": "80860387-f0ca-4794-8f6a-c4a53796196a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3b76962e-6ea1-4ae8-b75e-470d22b63670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac7eec8-085b-4707-9583-36ac46ac53b9",
        "cursor": {
          "ref": "83ec0271-d70a-477f-8153-66483d3842d0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7445c103-f5ea-4c22-85fb-e07ae7e04b9b"
        },
        "item": {
          "id": "9ac7eec8-085b-4707-9583-36ac46ac53b9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9641d01e-f6d3-4b72-9fbc-88c5b1faec1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485b08b7-de16-4f08-8177-9e465529b7ad",
        "cursor": {
          "ref": "874fffe9-e0dc-4144-993f-976e43ba9f0a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ff0879ab-6d94-4fc9-ba40-bfb3f7ae3822"
        },
        "item": {
          "id": "485b08b7-de16-4f08-8177-9e465529b7ad",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2f80c292-dcc8-4183-9c94-c1cd25c4272d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6265cb90-6f68-480c-9652-aa1c8cdd72d4",
        "cursor": {
          "ref": "d47b00c1-df77-498e-9a08-c83cfd6b0270",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2050541f-6378-4ca2-8418-a4a85085a59f"
        },
        "item": {
          "id": "6265cb90-6f68-480c-9652-aa1c8cdd72d4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "69adf947-e2e6-4377-bb40-1637bbf6968e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15533794-35b0-429e-9f80-c4745d3537ff",
        "cursor": {
          "ref": "9f8e341f-6212-4946-8dc8-2907507537b6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8de31737-8e6c-417c-9f01-5ae6ebfc2b10"
        },
        "item": {
          "id": "15533794-35b0-429e-9f80-c4745d3537ff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9474f523-1f2e-46e5-88ad-8dfd8cb13e60",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cc303a-3594-462f-9ee8-8a60695077f3",
        "cursor": {
          "ref": "85a69da9-56be-479a-a9a7-acf82d508c9e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "abb7cab6-a731-423e-8784-e3eb98fb56a2"
        },
        "item": {
          "id": "74cc303a-3594-462f-9ee8-8a60695077f3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e2c3eed1-02e3-4884-93b6-c1fd77230886",
          "status": "OK",
          "code": 200,
          "responseTime": 2716,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b79add2-0fbb-465b-b87a-94059cba32a8",
        "cursor": {
          "ref": "0626d163-3e3a-463a-bb42-156739c9f119",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7b8ad10f-d6db-4439-a7d2-ede7a8f35dea"
        },
        "item": {
          "id": "7b79add2-0fbb-465b-b87a-94059cba32a8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "609c22d4-593a-4024-86a5-7cfcbe3b981d",
          "status": "OK",
          "code": 200,
          "responseTime": 2934,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ea2b9-5b7b-4ba6-a645-a218fd08a3f6",
        "cursor": {
          "ref": "4927b67f-ce5d-4adb-b05d-10285f6937e2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9b7cb782-d3c2-49d6-8682-aae7576d0887"
        },
        "item": {
          "id": "934ea2b9-5b7b-4ba6-a645-a218fd08a3f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77a02741-3585-4057-8241-3ea1f1b5e3d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ea2b9-5b7b-4ba6-a645-a218fd08a3f6",
        "cursor": {
          "ref": "4927b67f-ce5d-4adb-b05d-10285f6937e2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9b7cb782-d3c2-49d6-8682-aae7576d0887"
        },
        "item": {
          "id": "934ea2b9-5b7b-4ba6-a645-a218fd08a3f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77a02741-3585-4057-8241-3ea1f1b5e3d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968b68e1-4cce-49b7-92ec-e5dcd31e9d14",
        "cursor": {
          "ref": "6ced5e3e-b2df-4d74-b851-c84369cd6a5a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "97385144-1864-4cdc-aea2-e0f40eddf8ea"
        },
        "item": {
          "id": "968b68e1-4cce-49b7-92ec-e5dcd31e9d14",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e6dbf78-ba3b-4a07-9259-c0f7f2e2553d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a6fe13-274c-4d52-8e0b-e5437b6f3846",
        "cursor": {
          "ref": "1e759ff8-2cf5-4be4-a060-db8201c0e0e3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e6d91acb-fef7-4ac5-9ef7-ab5f2a7d481c"
        },
        "item": {
          "id": "d1a6fe13-274c-4d52-8e0b-e5437b6f3846",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bddaa6ae-1993-45e9-b549-9e46b6933016",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}