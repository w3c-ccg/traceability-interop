{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c682a7fb-f46f-426a-a985-6492b3416df6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "06b90814-f938-4e4e-9418-6bf2317f5e45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "276b7ee0-4555-4de7-bfb3-61c03391aa6f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f822705-6fca-4ed6-8c18-df291c08247b"
                }
              }
            ]
          },
          {
            "id": "99604723-2142-420d-b018-acf5934c8c78",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2b1f35b-e076-41f3-9165-de15d413c438",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "599525df-72f9-482f-978d-e1d2fecc29fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ddbc9253-031c-4a0d-83ae-4cbc1be0d863",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0ef377e1-6fa2-41cf-8373-a0b244bdb2af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6afc5d18-164f-417a-8bd2-85c162827ee9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbc38bd2-8924-4e2a-b740-ef759ed3ea05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f38aabff-603e-4e43-b088-22d8f7963e35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da21a127-e37d-4dba-a6b2-a5463efc0b66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89d9c834-f090-4688-ac4b-dad07ff3b5b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54ba3d8c-6872-40c6-abf5-e6bb2ea6d1a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8830197c-a00e-4be7-8c4f-811bfe828785"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "461fccec-6445-4a60-84ee-a3d2e31b9401",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6976de4f-fbad-407d-8014-c837a0f0c423"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e451470a-d6b5-4fc6-8441-107c3d325b7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1b1d1b2-b6ae-419d-9521-50474c623949"
            }
          }
        ]
      },
      {
        "id": "3efa8d80-8cf5-4203-9eb4-203f7dcaa4ac",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9413bfd3-96f2-432e-adda-9be606667025",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3655b700-960e-433a-be49-c716519bfff3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c5bcdab-3326-444c-942f-96b400b99fe6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66017385-93db-4ceb-97b8-a494c88f554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67444860-97b3-4456-8548-89b7243b35da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0907ba2d-8191-4b84-9437-8223871b5377",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9e48c3-a3bd-4aa1-a03b-0ac9f99f7c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f62228da-89d6-4453-a499-170a3e400dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a47c0e-03e2-4da4-9e8f-f6dc3074c4b6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc14bf7-d359-47c3-8ca9-b31e3d48c3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8484262-15bc-4481-8a49-a01ede4ff361"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc69d762-9dc4-475f-95fa-987fd79a1e5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5256777-613e-4d39-9401-ecab7186b357",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b861a7-49c0-4c33-acc6-775051e7b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4913cbe7-4c82-4feb-95d0-3c07344e57fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19edfe95-668e-4942-9206-ca9aea6701a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777275b1-dcc6-407f-a0d0-babb4ae82d73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b3daa01-348a-43c7-a26f-c2816c6f4c36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "889ae9b0-48f2-4c41-bc74-15fbb514ac83",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fcf9930-c194-4863-a12a-7437927e9a3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1f8a5c4b-9359-4ae1-90da-e469c56c4047"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5311fbdf-d3cc-4351-a4ba-8a138bb297ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e623be44-ebf3-4d9e-935c-3edf2b2a22d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96d5a145-fb6e-46e1-beef-bebf8d5dda60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecaaa112-4f09-417c-a1d6-fc83d6cfa0a9"
            }
          }
        ]
      },
      {
        "id": "b679edff-3249-4c96-a06d-4487ab75d040",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bfdfc4f6-47b2-4956-831f-fe25294c21bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e068e3cd-97d9-4dc7-b875-8c2856969c77",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35c2d25f-509e-4ee8-83cb-cb3dea910bca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51125026-c764-4e94-8e30-84b074eaf900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084cc445-446e-4bb2-ba2c-3f0b94f604e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1fbff0-9ae2-4850-87c2-7da5ca43ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8152ed25-a79f-40a5-bd85-c092b176acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8ffdfd-b03f-4d5e-94a7-52445c1e7a6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcde174-7201-4550-b8a3-ad1e4b47e5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f4d199-b4eb-41fc-93f6-0d2e36dd8d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f683106-9175-497c-912a-61713ad76c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c6d8f0-ab10-44e0-88dc-6a61752f74e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3ef12b-669d-41f8-82f9-3f4e322c040c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c087695-70ca-408e-972a-ddb57003b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d17f3c-9fe5-45e3-9340-e303827b08e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c907b34a-ef4c-47c9-b8c7-44df02777f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11f36af5-2311-4533-aabe-bfa5620e6c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff61e75a-7d37-4f54-bf30-a60d1d517642",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebe41c6-5d85-46af-9427-e3de441cd1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c7a07f-e7f0-4277-a40b-f3e55d536dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3847885-5bb3-443d-bc9a-1d5f88575400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ab1053d-eb47-42d0-86f9-cf3f5ec4840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97215642-0d54-4ae8-a9bf-ac1b005ac776",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ae29b0-a099-47ec-b289-619d48833f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a3a0e0-b4e0-4b47-9b82-8e35b5d7fe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbc9e8b-e899-40f4-9e1b-ca00a93a8e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55368112-81d0-4d20-9d27-c6a29f3d65b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6200a64-fd8c-4a47-9a73-3c7f65b7efc8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d524005e-7cf7-4a9d-b9c3-e451b84502a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715f2942-936f-4659-9a63-5da1e04409d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b2f1b-961f-4163-8be5-db6f39332e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c55e04c0-345b-4af6-a2ef-a42862bd5070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a7e0f9-8452-4cd6-a090-4c13ed5fdd3d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258c2285-8023-48ab-b99a-2e2d8b1f50b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f738e465-627c-4d8b-8d38-56c7a184364d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1880843f-4d8d-4ecb-a242-c34f43382490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcf85047-5d4e-4482-b621-e96b400f86f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369ed0f3-3e98-4c37-ba35-6fe3df19ea3a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00414a91-f16d-4e3d-9746-20948bd9b8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab424eb6-11b9-4c28-86b4-1d4607643957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f2948d-e337-4f63-b582-d5431b78eb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73fb86ca-44ec-463c-938e-5c474dfd8e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fe382c-e971-4666-b258-282df6061f03",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2963542-b80c-4b6d-9192-69135d470e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9535f35-fa50-4ff3-aa10-9b2501caac87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b280ca-b889-489b-8966-acedba3a5994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b31da3a6-4afd-42c5-ad7b-605a04a112d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c2ccfe-f6c6-4e77-9338-33085778f989",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695c2740-7b29-4c33-87dd-783f49810b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d9a8e6-0e56-4b70-8b97-afe52c9564a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94adf78a-bfcf-40b4-bfd6-af9bbe13c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97c9d3bb-6906-4c57-800c-0c758c254a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c95e0-d720-4743-be84-964e156107c0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74bba82-5be4-4430-b035-f5e6abd130c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab29300b-dcad-4737-9039-3db3b81ab24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acddb2cb-7e7a-420b-82ab-c8c0664d9cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "630981e1-744e-4582-aebc-b4bbfecd91ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f0d1f0-1a59-4f9c-9a6e-f1594c1f38aa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e9c6b-c698-4223-8496-e5bf41d3725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72a7807-5241-469f-93e1-3d4f6f6af3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fd495a-a3f8-43b2-aec6-159964757389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8fbf521-20f4-4f72-b2ac-53c94a1dbe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5570018-aadf-4342-a92b-9ff5fd3ce958",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43d1f8c-caaf-44b7-bce0-d77a3e98b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b1547d-e646-48b1-b3cc-d9888190d778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309703a-c245-4117-bca6-e434ba629406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "530448bc-fac6-4f0d-a2a1-721490b0c037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770efcba-8250-49d7-afb2-d4e310b4f6f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f87d5-3450-40f6-9710-4dff7b729ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b96b4f4-c0b2-46b8-b3c3-fa8c0a0df47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa24514-10b4-4204-a320-9c525458dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1865c39-a422-47af-85b3-954c8a4be999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1af0771-cdbc-4856-bfd3-6ac7514b1a21",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afecf30-93c6-49d6-bd50-1b940241ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b569b-6191-43cb-94f8-033bd1911eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a300512-433d-4395-827c-17950002da1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4b9c19f-1a5c-41bc-b947-5a06f46c9acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f6ab0c-3675-427b-b48b-03d853546fdd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274af51a-1b67-4bb3-ad09-2647379dda4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20f076e-9615-410b-92b9-7dbb5c9b34eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310206a8-8e4e-4542-94d4-9dde01965508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ae3721-fce5-40f7-9a6e-26adc7d73481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d086d399-b446-4cfd-b196-056c8da0648e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eef1801-7e55-4224-aac7-f52a27de827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6433fed3-a163-4814-86a2-4a70f470ca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c538f61-960e-4131-b8a0-69f8c7e98c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4d2623e-1f4c-439e-a8aa-af2e81230905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8056f407-7707-41a9-bf74-e46fc215fb9b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebb6a44-cbc6-42e3-b1b8-f9489a892f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805fa62d-ee3d-4b52-b223-6085f034ebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddc0047-4492-4783-a6bf-d8c5ca43dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e498e9-0c40-49ac-8373-26be4e80597d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a366c75a-7c6f-40f2-ab13-5fb9440fff00",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8c0b8-fde4-49f5-ae6f-a821192ba72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f331eff-e812-40c0-bd95-9f146f336d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99bf9bf-82e5-4e14-82e1-fba342e08c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12176fbb-9777-4aba-9ff4-eecc2cf6aefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d4256a-0abb-43ad-afbc-eb629a898b84",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024fcfcf-23ba-436d-8498-229dcc98db7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef8cce8-9821-4d32-a21c-605a0b2ee0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e70e8dc-2e9d-43b1-b91a-6f4f4c55cd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a13295-f59e-40c8-b4e1-56af22f84426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eee7dc9-e10e-4d20-b9f2-62668e6e0bd8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f767c14-3e7a-4fb9-9c4e-3624b3ecd211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aa3047-2a4b-47c7-8821-5b24d3439c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b0fccc-fcf2-42c5-83fa-fcbeb8c44e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f77ff877-8d63-43e4-a61f-513d2335164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffae171-96b5-406e-adff-812b98be758d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec586bcf-5966-4b1e-8d48-d1021e62b112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ee2917-6bad-4933-9208-4734d2f23aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a30bd5-ffb2-43f0-9b7a-f1ef4765306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3deb890-e71b-4b2e-9e65-ae41f55bce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2187087-583c-4514-adb5-8e40a564e49e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef9a64b-1ab2-4c14-bb05-902aeb545dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9c0ceb-51ce-483c-99ca-4b0441d41f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed5f3f-118d-48a2-b759-ed0f1a5c1cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afc89cd2-ffe7-480c-b892-964bf60ae1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e136d1e-b54e-4a14-9360-9cd6ed3bbdea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57fe313-d893-4e50-907d-2f803daacdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cf378d-05ba-43ac-b9bf-bcf69580f3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3c729c-087c-4e3b-a632-a11233b2ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa011225-77a2-4294-a2fb-41a39c459c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81de8800-4a95-4ede-bc97-702368028758",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d567ba79-fa39-40a1-b3c4-9c17a2c0ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa0a77a-e78f-4723-b224-2ee37f764569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6d8c9d-f9ec-45d8-bbce-939e0baeca63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b63f62-81ad-4ee1-9306-054610723707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3804bc-9c7b-4be8-b546-a14b0eb1f60c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835e5f4c-822e-400c-bfc0-ba7d62f33a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e953d5d0-5de3-44b0-9f95-37866db62674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a37bce-af18-42f5-98d1-893fee445aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df19032-5f19-4566-bae4-2754af098da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca00031-a486-4516-bb18-0d84a2054d21",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3bd223-12b6-4e2e-99e6-23350dbcb327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4881632-ba27-4e08-8343-4f1c9fe842f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b89d313-3939-443b-8560-6fdc9b0d8e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c307a8c-d495-4dc2-8761-f0a8410e7e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a9672-2e2f-400c-8f46-723c7f049e89",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4683931e-bc44-4c77-a62a-dd52f6a431ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ac4ce0-ccc5-4e20-b8a1-1099e112e712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad206cfa-238a-4667-967f-d66e41de69ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6adc8d3-bcc0-4a44-9f73-3d14894eaab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d47c9b-0c8d-4cee-9696-f156c19be9c0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cd505a-101c-4a99-9d6f-6b3a2e31f8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d980fc31-7629-46f4-ad22-77ff61588311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441ca14b-ad5a-4afd-ad9a-c2d493a4aa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4647deb8-4387-4866-a93a-cf21880ca668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2282ab6d-28aa-430d-88ea-ea3dd862a716",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007d7b78-5db1-48e9-915d-707019dd08a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba227bb3-69d1-48df-bbce-01355baba9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a8250-94c9-4672-9b6a-ea2a62691b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d31ec1a9-1160-4958-8e65-74bfc742cef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4734514-2561-4f9b-9ca9-33ed73fbd954",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0d1e79-bc91-452f-b94d-3e7844c9b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dd0936-454c-4b50-a980-7f603e5d0d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31178c7-ee26-430e-8d2f-294c26a617d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c38a574-e867-4297-82ce-f21111e02ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe82ab4e-20ce-438e-87ca-73b6f79d66aa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543ceb87-200c-4ed4-91bc-c1523917a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eeb78f6-13aa-49a4-b6b5-8b9f48b66545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340df557-6af5-49c5-9a94-a0a07f009d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a465ab4-5c66-4a5c-b9b0-685d2b50dbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cc6d04-56a7-4c57-bf85-91db3deb870f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a95504-182d-4420-bb0b-15f821a49fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca94901-4fc3-4357-8d36-ed40bbf8a4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f77f8a5-f0b7-477f-825d-d7f29c19bc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50788748-e1ac-4a85-8e75-0770a3ccc4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209cdeed-4e22-497d-bf92-611ea2631396",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c994911a-d5d7-400b-b541-bcc6e9657c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f13bf0-404e-4ce7-8823-2906830ba221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c07a199-bbfb-4d1e-9ea7-6a40fe16626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9efe9499-cde8-4d81-931a-ff3ea4e0ed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8252d0de-d41a-482b-8774-911a5fce47a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6740e07f-20d3-4704-a07a-9a58c949670a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccc984c-6f05-4f5d-9398-eaeb9e617d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cb1077-b55f-4ccc-94a1-d9c3c07d083d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a126d013-9dbb-4c73-b0e6-02f855e51398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bbb9ec-7cf7-49ce-8a21-f8200b90c2fb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a442174c-13c8-4677-b47d-d6897663ae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d131b132-3236-41ac-9e3c-6e86c2cc7f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a89dd2-a6f7-4051-bc6d-d92dce997ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "713d1980-18a1-44c2-834c-5cf9f000dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f646a276-f6ba-44c2-b2ca-a7c3b249206a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712f540c-4a68-4abc-89f1-bbb7120898b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2d3e2b-4409-4654-8bf4-1b13679fc974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4578b7-fd07-4c7d-81b1-d5dd1652b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d6ca76-5df4-449d-aee9-deaf9fc7b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05ee4d-e1ef-4542-92f1-e1253152d52e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2da0f8-72ec-47d2-a5c9-e47207d534b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf376c6-4fb4-4022-9842-acf1eda1372d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ae4cff-9af0-4d61-9e7d-99d1231ac8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95a22d56-e7dd-4c8d-995e-af333ee2f15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb19d68-2438-40e9-b583-8f32e5bdfda4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccb0526-7aeb-4d36-80ff-9c1a91aa2781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44946d80-8abb-47e3-be0c-8ade4a0b976d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3754a10-98e2-4d61-bd0b-f6376aa8339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c45dd8b-f638-42ce-adc7-99a7e95e1269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baaf7f0-e095-4320-8978-2651f6b9b1d9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949cce0c-0488-4983-97e8-a9556dc28893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb1d48d-c23e-4f3d-8c4d-de1e4881e295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a398cec-7f20-45fa-9193-9a14b7797ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0523b6c5-a6f0-4ab2-ab63-f820e6160eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41802169-7c4a-436e-bb0c-40439cf71a6a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b577327-47a3-4681-b7a4-76af5f4eb46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbba7b2-f231-4b06-90c6-a19dc56b937e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc8a488-abd4-4686-ae79-0439017b9b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df003c1c-a8db-43b2-b4c4-412ae55081ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b094f12-8722-4df0-88c8-da4abc5ed12f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0cbc49-1ad3-46f4-87b4-28fa5a2bb3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad960fb-ce13-47b5-8d91-28a0df250ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc58404-e2eb-4f9a-8108-3bcdaa56454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f360007b-1d79-413f-b6a1-93f360aac13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b089756e-9471-4788-94b2-6e12327ceb01",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b44b6ca-9690-4f1d-8074-62f8d2a20811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa162cc-9240-4c12-91a2-19236a74f9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8281cc45-ad9b-41e0-a56d-12a125a675b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7f90cc-b046-427e-8be7-efab62463c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5562f26-d03d-446b-b1c9-07506f6d3afc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08261a44-f356-416b-bc07-715cef993151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0994e5-71f9-46cf-93e7-49c9878cc18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37903a13-d3d4-4c2a-9213-e7675400fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5822700-ce0f-4256-a8f3-6f94168fd12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae871d88-ba4a-4a0f-8439-e0e83ddfccd7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9de5a63-a241-45d6-a12a-b6661492ba62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38938eab-905b-4831-985a-2286d333051f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad9be17-09a1-4fab-8870-d863031fd91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8f8928-6c7b-4f45-9a5e-7f9a6179a735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8a242d-d8e9-459f-acd6-40ae26cb035f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c802755d-ca05-4143-9d85-568c9cf0fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcd50be-d5f5-457a-8a82-c72edec10bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caee30fd-333d-41cf-93ee-c0fb25d25a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d0b0f2-8d52-427e-a324-e75e70c9467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1197a46-4405-4096-b831-c9c70f710185",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6a7ff5-2837-4137-81a7-611b73085ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31d0047-ab33-466c-8349-937ca837820c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d014e5db-c32a-4bcb-8944-1b3dee4ea4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b00c21c-1866-4bee-a799-9c958cc5bde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1ad820-5450-423b-915b-520a31b75592",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f308cf5-405a-4f86-9597-8a02436e460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbec9c8-f131-4735-b6bc-e929ec5dc429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec7423-5c27-4c60-80fa-3547222e2754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96fd06a5-0084-432c-a4bf-a3171d47ebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f642025-4e24-4fc9-a8bd-eb828d7f7fde",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f6ea8c-1f9d-4011-91ff-2e021b503714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8dec5c-f5be-446f-a118-d2838431853b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6d95f2-a1bc-44c6-8496-90101ea69aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b50846c-7c8d-4299-bfb9-858f422d7b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d823d3-62cf-4350-94c8-118d9cab9687",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c8f113-2630-4946-9ddc-7ae0d9712b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae795907-4e34-4b09-82b0-ef7e963475e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a41a90-ea58-4d52-a8e5-48338abf7315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91fd10ce-c8f2-4ba0-9eaf-631b05013ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00014987-270d-42a4-b38b-944eacb924a4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a759dae6-0681-4b6f-a664-45104dabb904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395334f8-6ed3-498b-b81d-d1436b52c7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e2ef25-a540-41cd-a2c7-399cbdd8eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ddcd9f-9b7f-4a65-b63d-0b635a46ddc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d57d99-ddfb-4b79-8132-7d6970b4d1c3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496acac3-c6a3-4f1f-b5b3-8708df44d115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c0d106-270a-49e6-9bc4-b65f58279348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9abe16-2939-4423-a9a5-edffa26aaf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb1e93e-b570-480b-bd06-a3ec24013b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0d7c59-b9d2-4e70-8e8e-4a26903a4796",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aea5ba9-b5d1-4a59-bc1c-d8920aba5c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674381a9-5501-4bb6-a9d6-42761e2715e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daafbb3c-7ed5-4ca9-9cb8-7da195abd309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40791d95-b61c-426b-aae7-10b90e39fc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b580cd-cba2-49fb-8095-d826edb10151",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4268882-d691-4325-aee4-3bc4bf5213fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f77a9b-601e-4b62-9986-da918e161142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b73174-4317-4d2d-98b7-2dad36524b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28bc112e-3a51-461a-aa2b-1143e07aeb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a287f5-9f54-4162-97dc-852ec62747d1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b70be6d-08c0-4db0-86b0-e088339aa1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbcf4c2-cc23-4650-ba78-70b93de8acac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d140fd-5096-4b21-8b4f-740741c0a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf657a6-3456-4e16-b3c8-8918fdf958db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f7df18-d106-4c74-9fd6-fe38d94ad17a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5dff81-1247-48ee-bd93-e5d5e959b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110cf6cb-c18c-4225-8654-6c3c02834ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf919f7-fe43-4503-9fa2-e205e2cd6801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "88cfb7c5-2e19-41f7-af4d-1b84ae90d482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121927bf-f552-4a8e-a7da-3f245b18c11b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5a2099-5413-4987-8bea-2e1f5ed4e771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b69459-eb04-457c-bf67-026fc63650c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ce34ee-3d86-45d9-a9c0-13a504040d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffd3ac3-8ae0-4f7d-a874-9478431614e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999fa76f-9380-49b2-a491-a4449e8bcfca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af09c7e-0828-4edb-adc1-176c2851f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d3c129-8086-40c2-89e7-465d14158cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ec0fd5-2566-4367-ad8f-d08c5236de96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b86dd48-1c98-4944-a6e8-be9e663b0e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defee23d-cab5-429a-82fc-e2a323c90923",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d291432-8d70-40e8-abd4-f235a27599e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f02ef45-976a-4011-a3bb-4254ab1b9c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227e78cf-c7f2-4536-8539-7b2f7e37d567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54de7f5b-265e-4ea3-bcab-adf0adb16936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a70c82-43c9-4c21-9085-4807aa40a1a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ffdb65-120e-4990-9bdd-9e69626a287b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4113de6-628d-4ae7-b2a8-7c859d21590b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2c6356-1c10-4cc3-b220-bb7dc311c314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b1b602-7d0f-43ba-a598-13b50badca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4543851b-c9bb-4555-acc0-376362c5985f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bca7656-bf61-47e0-b3c8-d139d2f0b5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85783b5-6932-48e7-bcac-bc9fb817925d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3088c594-824f-4c12-ae67-0b9a303c6772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "47f3f4a1-2ec9-4d1f-914a-796265200a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f708abe-724b-4e19-9c64-b524b4002cee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8165214c-a466-4f96-83f4-40a2498d8f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161aa8c5-92bf-49e1-88f6-db0b305a94e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dce39a-4152-47d4-a86d-fd006a3da078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8caedff6-0951-4278-8ff5-17ed1da7e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9cbff3-3cfa-46de-8d9a-6f343950d4ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae78806b-674a-48f7-a490-61fd529f2106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b723d54e-70ac-4c8d-b76c-c00618bc5245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ba58b0-1a13-469f-a36f-d6976992469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61bc23f-0580-426c-b648-63ccc05efd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d2c2b8-ff61-452d-b43b-bdcc1568544e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0764a1e9-7e86-46e0-890c-97a98659d8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503576b6-6dcd-4e20-8406-bb94103aad9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303f63f6-2e79-428b-a115-d409d6eb036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e32ae91-5250-4631-94f9-303464768d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46778a9-c601-4df4-a760-df4c055df769",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d176ab85-cbdf-48b4-8015-4331f299247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce4636d-4f7a-4741-9086-47d9f8e91582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4b15a0-aeb4-44bc-b01f-85e946c28942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cf228c-11e1-48ef-b202-a7d93fde7a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337cc54e-2517-4cc7-9947-e310ddd16636",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d913450-b4fc-4f8e-86ca-1baa6393902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cafc5cc-ddcf-4249-99fe-8818b1933b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ffd354-5d94-4a0d-bac6-22e64d598544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24604c2c-8c2c-4d6a-8d4d-5033ec14b106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53757c3-c6e4-4731-af3d-ace1b29ff370",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac554db-b146-483b-9573-4cbded264e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace8a756-5883-4476-972e-ea6ad64de1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e2bd67-1eef-4afd-9169-0bd227a987d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c71817b-4772-4cb1-8682-ec0fade3e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595a80b3-a611-4816-b86a-58c80dcb623e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8a5485-622b-4566-a176-6c6459f44c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2730e5a7-bed7-47c0-8e17-bac039865528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3481235e-f2db-4922-8e6c-768e0102df33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c04025-93e7-428c-b702-67879ca504a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77102b41-48d9-4008-a38f-53249b59525e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e760ac55-752c-494d-9aff-a3246587d932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571ac221-dbab-4d34-bb68-3c8b5d73496a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a627c1-18cf-4ed4-a480-6d386c67e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3602450-ed9f-4af1-9f62-5b19a92c6b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847338a3-3baa-4441-8642-cedf28165934",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed38fa-6d5d-47a8-95f6-c5f1abb0a171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5792cc-75a1-42e1-af02-c3b9dfdffe8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21722426-4720-4d90-a27d-abf8f57c91cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a92b20-3fab-4063-8bb9-fb701b9d5344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad95800d-1d3c-44d9-89a5-bb882c312afa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6559f97a-5114-4a83-97de-091a519397fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e19ff35-57e6-401c-a877-53b8e88b5f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492ee0ba-d4b4-433b-baf2-34a90ead4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5963bd-8776-4815-a247-23a480073c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32a11df-b8db-478a-91be-cbe6977b8bf5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffde2379-028a-4d0e-8933-1d87af87317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613c7123-dbec-429a-adb8-b2fd86c0b416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8357ea58-fc45-4e51-9bd5-22a5539b126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7971c2b-4f38-459c-884c-c827d072419a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1990ad0b-1cec-4204-b7a4-57ee3f004bbb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebea4bbd-3e70-4aea-abe5-2d0ee5e17c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3b98a2-11f1-4d48-8465-9649b8464be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e5baa-a480-4083-9ad0-4186ce984e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "842a48a2-08f9-4a18-98f1-942637157008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb521437-4238-4096-907e-0cb278e443af",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb0ec7c-d034-4874-b58c-9916d0ebe71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ee1d45-f814-4142-ab5b-e556d75b8f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bd6139-3894-4cec-9ac6-5eaffecd39ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0cab25-82d7-4d8e-ad31-9f5e6a540741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b6c3c7-8a5d-4fd4-a949-e573ea59dfff",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23924cb4-83b6-41cf-bcf2-b78be263e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d90180-8222-4812-828c-59614881d065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb3d651-d6b3-4121-a4d2-8a410ddbd532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "818d4aaa-dc19-4a05-9000-417b96b24b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd067111-bf68-42b3-85cc-bb89068dbb27",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e786bc-25a7-4fa2-b52b-0207f0cee275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076d2df0-f452-48cc-b863-d9a31ea3e9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc99c58-d43d-49fa-a934-edde15df44ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "733fb144-5b8b-4476-b153-419f36a2fa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f8d147-a2ec-4f6b-80d3-96ec3040f849",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f3b924-654c-44f4-9ebe-c35cfb13b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e830246d-4709-45df-8e04-4df35e97a81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099d244b-1f5a-4e1c-adc3-e15c75bc275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c937af48-6692-4d9c-9151-d04e6227e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825fbc6f-7d38-457d-b407-0b631e39d0c7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c659ee9-7f6c-412c-b0c7-35a959f1e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a138ba80-1774-42c9-8d44-e2c7dea805fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996f64dd-8b24-4327-8e11-41ce90ee6614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf9b4a0-72aa-43db-aa3f-0785f24839dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2656c6-2837-4ac9-b341-2520fd7e2163",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4be69-0bec-45a0-859a-80b5207a0a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5a8c0a-0409-4888-80a7-da1fbaa80013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc09ed47-b28f-4b07-b5f6-44f6c3b44db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e11c5be-8172-4455-9894-af1362d561eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d403c9d-6681-460f-a97b-c80f12503817",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e429d408-295c-4940-ade9-7694b6066616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd54f645-0593-4bde-8b74-0f06d851a476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bb8128-0966-4d83-8369-01f6cdd203f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19f224d0-c47d-4d26-82e7-63fc940a0eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae50d1a-41be-4516-adb5-102e1e6f33de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eba521e-c5cb-4221-a90a-b04a5a49a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5dace7-d324-4ef3-a651-c462e2233115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd09823-5c3e-40aa-9355-d29114a326b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e61aca1-a205-406e-9c82-e09536171086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d988018-30d2-4a73-a3ea-f04d4a4b056f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21df060-85cb-456d-b4b3-9e0d32c5822b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2eab7e-033f-4353-bb62-b5127b023fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20400c3-d15b-4025-bf4b-5bf4f4af4e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59c26e1-2172-41a8-a75b-5275376f63bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab44fcd-1459-4220-a76c-d96ac11e731d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73b0879-e467-4df8-9745-c4b4fada1819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceea0eeb-2502-4ebf-b1a9-d88c9b7b86ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58489ec-8a51-487a-a776-3f298f1cbb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfa7120-3156-43e5-ba6f-dba611c9c732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1573ced5-f97d-440a-a2fb-d680b935ade1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675ae625-a088-417e-adaa-ddc302818a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87ca552-281e-4440-a40e-305314aa581f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4138eea-7ab9-47df-86ff-00578e6df5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94a2bc2e-ecf8-470d-aad9-52b02d7d09aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa5e80-347a-48dc-839f-67330176d38a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7665c72f-bae4-4506-b359-440d58bb42ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5e411d-d2a0-4970-b8da-f54eaa83a02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0837066-0539-4003-848b-4a3b7671a90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4aca4a8-23a1-459e-bb5b-cb11cbda604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb69689-3b03-47f1-b04a-2e94f35949a4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839e11fb-3ed7-4c7b-81a3-bc2b140c8a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f83bba5-125b-4306-9c0b-7b50ffbec051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c365e2-94d4-4187-98d2-659e22133a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "431cab8d-ac67-4d7b-8995-f7e3810a98b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6a5278-0f34-4c29-b07e-43cadc668cc5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c315420-f473-43b2-ae68-d6d5c9ab34b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c659050-b840-4aba-b1b4-c03d3b8f133f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62d57bf-03f9-4292-9d89-017f980950d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b521f410-3a84-4d75-8a1e-06222ffc3e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0389605-0c7f-4604-a71a-05a397b1e9ce",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1d8e8e-436e-495d-9138-a958db0b4bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147a8e4a-49ca-4f03-aac8-7732fe12abb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610f153b-44d9-4805-96c1-3ed517cd6d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f65afd6-b735-4421-bfb6-c445c0126ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f450f0-bff3-445d-abbd-dbbc56f4eab4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ced6b-57be-4ee3-8da5-005c0694029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db58623-fa31-4481-ace5-e5670f5b912d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b428cc99-345c-4998-b219-39d4d273aa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ad04eb-8183-40a0-b480-c6c1a09b3b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3555ac-2c37-43a2-8560-68034d7d9e4a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408c1de6-f0d2-433b-a8c9-aa2600ef6e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11aaa936-36a5-479f-94e5-8547c149b88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af325c1-e878-418a-a1a4-d2ee731671bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee05d6c-f860-41be-a319-bcec422d2630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a5ca2e-d4a7-431c-bbb1-1b1f6c030ef7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1836a3b2-519a-40e9-9ec0-632cf59d3e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2710bc-9daa-467a-b6da-0612cc859e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77287f9-df43-45ae-a531-94e73c96edaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8767d39-c86d-425d-933d-c8d6b7dada4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d9a6ae-4cbb-4478-9419-554e21925ca9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669665bf-049a-4970-8218-a115ce3185d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cb997bd7-570f-4458-a8a6-ed90808754b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db9c77d-4c00-4b1a-8457-984cf18f45e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44200918-7522-4660-80f9-cab594f8a91c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c9db207-5139-45d3-b9c5-eb985f734eda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f849042-b598-4441-b3d5-acf0cfbc68c2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6acee1-0e2a-4a67-a9c5-9d1d4a9965c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4118fa25-e9b3-4531-a2b2-0751cfe912aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df4f570-4412-4fd4-b9be-2772638ef5cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cab28a8b-0b1b-4c0a-9f19-d7c68922d484"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6a24b10-3623-426a-bc43-6d2cf45264ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bae0024b-9706-4bb0-ae60-fb610bb471bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "368790b0-0c6d-44e6-8388-95540f40eb7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "736f476c-1600-4555-bf40-ed237482c531"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d533e07-72c9-4d43-9dcb-d2603ad5ec9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05ed40cb-73a2-444f-9c58-3d7d5977da62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9848b9e3-a42a-43a5-a171-181c6d90261b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9db5e61b-721a-436a-96ad-807ea46e3678"
                }
              }
            ]
          },
          {
            "id": "1159675c-a638-4a2d-8bb3-106ce88cd813",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1177cad-bd3e-45cc-8db0-ed4bb1d7e1f5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "377adbfd-e8c4-4bcc-a23e-becfd108067a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a115924-6940-4c19-8964-d7f6b201b425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6db95f6-98e8-4ce7-b69c-1e580bb40a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3617593-1799-4af3-a26c-49b78a6d1017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b40e2f1-fa02-4190-a9cd-e64b9e39f2da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9eaf7318-991e-4b60-9333-42c2dd456f7b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a51c647-72e0-4c8e-ad81-d10d33cdee63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79dd7bf0-a092-46c1-b244-f1222f49bdd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cf1fba9-199f-4bc8-ada7-0bc25c65ecad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1acd717-9085-408e-b3f9-43f015822a04"
                    }
                  }
                ]
              },
              {
                "id": "4495f0e3-7bb6-415c-947b-ddc8c6ad031f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adae2671-f2e8-49e8-8dd5-3882abc5c063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13719cad-ad5d-424a-8b75-9d4253350170"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27b22aa2-3827-4537-922b-6a81155eb577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "573ab541-daab-4be8-962b-4f8b42d1400c"
                    }
                  }
                ]
              },
              {
                "id": "5060d171-9f44-4888-bca1-631f9ef4c15a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4244d70-2788-4bad-a4ff-ef8b88b37650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bfb51c5-4611-4a57-a7af-a1ef456225c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e3374c1-5034-4d38-bc52-1b951bc6a6d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8473a0d-e9ca-4ecc-bc01-5d268dc596e4"
                    }
                  }
                ]
              },
              {
                "id": "2fcc2f46-fe96-45b1-b299-bc76d753f9e5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7106fc9f-84bf-48d1-8292-308ed1742614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cb2b3df-c059-4bd1-88d8-02c957c19c1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "517bd344-7dc5-4cd3-a94d-79fde81c33d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dd64e42a-451d-4389-bad0-39f600884493"
                    }
                  }
                ]
              },
              {
                "id": "5c365eb1-a23a-419e-96ff-2b43b08900f0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82477c6b-6252-46d3-aea1-c875b32d629f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "000e7ec1-dfc4-48c7-af18-8426e4d7f071"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e726e14e-a54f-4f55-b489-cf55a9c74a6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f2c3fa8e-162c-4777-a399-e111e92612ee"
                    }
                  }
                ]
              },
              {
                "id": "3d19adc4-e137-452d-8ee0-526e8370569d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b4e32f1-180e-4f98-8878-add83d36cde9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50832345-217c-4930-97cc-e8a477d8d0d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36d10ab-bec9-4763-a9a9-67a4a40e424a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9046d63-693d-4ea8-bb0f-9d20e9d2309d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94e887b9-5b47-4e73-951f-15d604956ba2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a8969ce-cf04-4db4-bbb9-51458b53b4e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5bc0fee8-58cb-46a7-a321-d2a6172c2792",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ab03d3b-a609-4085-87c1-c5622d7c5efa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77fd2062-ce3a-4f09-bd1f-329dea4f88eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8451aad6-98c4-4cc2-b225-8180f5944805"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9caebb06-8095-4653-83e9-d8588e586738",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb45f446-2e00-4848-8abf-db6fa8b66d29"
            }
          }
        ]
      },
      {
        "id": "62afac76-5830-4af7-b5d5-1f8f7d173a47",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "16c243b5-6dc7-47e6-9bb9-e1f9bc8d1740",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3211e961-4b08-4195-86fd-d9feb5c9581c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b18cbb20-cac8-46c1-805d-6e95a86d3971",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792721ac-5bcb-4feb-b7c4-2cd549a16c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da5b5cb-aa36-47aa-a661-80069600938d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde002ee-d58c-4b84-879b-6ee74978face",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb2fdae-3346-4346-b8fc-ab03168335ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5e8d00-55f2-4cc5-a3a8-33841a762ba2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b61176-66a6-42ba-a26e-cdb5ce3250ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8944e0-608e-4b12-9c17-373d2e66229e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f90cb08-921e-4490-80ea-45ba52765ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "387413ef-e5e2-4c5b-91b6-77d8c6c8addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccadf874-5917-4cc5-a742-e740017ebc04",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d461487-831b-407e-88a1-a34bd31030d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a1904e-c5c8-4034-bf1f-e5a983d216d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6b37ac-ff7d-4ee5-aaef-7c4bf755a5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a51fac76-2b79-4ab4-9f4c-0247e2fb8d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c54a223-7dd7-4b92-a460-5d1468bc8020",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e57bc5b-be4e-4fd5-b222-657be36e44d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb002eb-f2f2-4d4e-b881-8afd0e9e0e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbcb2cc-6d29-4621-8696-465e8fd570e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe8fd03-0f3c-4bce-a6ae-f12a098971f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e5474f-4856-4867-8c88-d9d8325ab823",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860a531d-6499-47dc-ab41-92d6d6e2bc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0da5a6-a6bf-4929-a31e-765fc0d34ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e95c92d-dbde-462c-8d1d-1f7ca31f9b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5853e832-c5aa-4da8-99f1-a6b8ce0a9bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa109fa-da4b-4e9d-a9e7-c122c6b273fd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdbf008-c065-4940-8bcf-45f3aa9c9f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1f3aa9-ca74-409f-b78c-19e14276cf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c334311-e89b-4036-bf91-06967a6b64b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d996cc0-c009-494c-acd0-7293d4084d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9873793c-0793-4f74-8c2b-13fb7fc32e7c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2589f02d-148a-43b1-992a-c556ad6aef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be8396f-5692-420f-b7fa-ac29951af07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15c5426-f207-47bf-9aa3-21e2a99e0ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d14c28-e799-44ab-9df9-baf40b76ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e35d6e6-0f25-477c-9702-d9c0d0cb0d18",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aecc6f4-3681-4b20-8850-c09335fae335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6112e56-cea0-4b98-8851-8e724673cfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfc02e6-3f52-427d-bf1b-921454ede809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c77fdfb-de59-42fb-b615-b6167bf7d4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45bbe52-47c6-43c5-b2e0-278d554c6771",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2aec39-79aa-476f-9bd0-e533d6a9dde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae240476-efef-44ac-aac2-b6709c081f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0251b96d-4b47-4eeb-9131-e348cc751437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f63422c-7552-4ce7-bc00-3c02b152d232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3034f80-dfeb-44f4-8147-0713eef3e9b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ddddd3-69cd-4a3c-a9e6-9bbcada4c061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b4156-0016-4d86-9315-c33b13f71901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2a1241-255e-46d0-8596-8c7cba10f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3656d769-d820-4961-ab35-50b90aff6277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898ceafd-f5bf-4c54-9fef-e49a6864044d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c207a5f2-96a6-4f41-8bd4-06931e7c978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a168cbb-370e-4f53-a0bd-2edf6260cfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ba6be9-42c6-4245-8e0a-b82d20bd106e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "47cd6758-a39e-40e8-9bae-6efb3f4204b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80bec5e-983f-4c47-9030-6563ba6023b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea758c6-2370-4d46-8574-3aa9729d2881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481f8a2a-6d96-4f52-b106-c3d46ae046ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5229ad8-13b5-4149-b80b-5f8c97b71388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0148d108-33ca-4a1f-88ac-049ebf6ae112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc185ba-bf47-4437-800a-5cac34534c89",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9db3ba-07be-487d-88c7-1691302beade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d441a3-9de3-42b7-9bb9-f6c0bfb2a7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe092ca-4eaf-468a-b94a-718cdc506c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "593fe6dc-2b58-4882-ab56-1e74a343bdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2236a11-9447-407c-a21c-9544d47ff520",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904f4487-ce82-426d-a9c4-04534ab3b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13efca1e-280b-4f8c-ad2f-ff331ee26018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0520ca-8b2c-4375-8e51-eebdcde750bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91d3f46-d59e-4b4a-b2f2-95577ef3b293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22e0051-ff11-4ec7-969d-b2a697bdc713",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b781e537-17f3-486d-b291-a9963d9aa424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92db0da-a1aa-43cc-bf0c-c6b5971de875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dfe86b-ae59-4215-aede-da00923cd923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8808f5d7-9896-414d-88fc-203572985221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7189b86d-c301-4140-bc6c-a56388aaed20",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cba237-4b85-416d-90d2-1e7fdbdc9127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98665f31-d59b-48e0-a820-0c907db2adf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edabce84-eedd-415f-bd0e-d28bcdba25e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5974413-6820-4dee-8c44-116f0081942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81456f05-6360-4fa9-be7f-1c510ecb34b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53146f4b-da45-4e55-b75c-589592970a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9787de-9435-4767-b9f5-9b5997da0a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165c8363-9bfe-4530-87f0-7268c43397e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "905fa537-aa62-474e-ad81-6b0b5e2c0b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e05fd94-ffef-44ea-9a56-b6d31aeee51d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0738ef7-b1eb-4c81-b78e-3b4cfc952fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcd53a5-0ac5-4ed8-8210-99bd4b655cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a0a7ff-cb6b-4c5c-a334-3264786861e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ecad82-2880-4a1c-93a9-cd4dc0fe7d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1efe3d-7a2e-4726-a750-f2596e151988",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb659f2-eb33-4d3c-9381-23eb29cffc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b6ad22-e1f9-4cdc-86d7-2ef65499163a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b9f296-416b-4cc5-9cbe-44fd33bf86a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cbaa74-5b31-4a16-ac84-3d650a8bc4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5525b539-52c5-4283-9030-b5c5c2495446",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c860600-1789-4d91-9f5e-a06c592647ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d89b9e6-39ed-4f2c-919d-fde5d0d2119e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42800678-990e-45c8-ac56-8ad090f00712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea734aab-4e1a-406f-9d30-12cfeb850948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a439f6d-29dc-4388-a38f-a349d7111cb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f3ee8-c97b-462c-a13d-1883d17b9f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5595d181-18ca-40de-b81c-2922cdcb76e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de366f6-9e4d-45c8-93ed-0946cbeb173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f114129-100f-4816-8b80-2de92330b844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12f272b-4183-4e61-9f0e-3eac46a839ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5d05e9-5e98-4df9-8b83-530f31e94192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e4e6c2-a940-4c81-88a5-07d72ba33a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993c839c-d5fb-46b6-a421-48868ad42b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "317470cd-b707-4b3f-bc28-8058fa3b6b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d505ea-5fc2-4a1e-bef3-5f32bcd5897f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a28346-838c-4fd9-a340-614849e7b04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4847130-c33a-4a7d-876c-37bc20465ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c36dfc-4ef8-4003-8288-5eb8d58fd4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "971454a6-1f50-4e8c-84fa-139aa27c4981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9ea9a7-c40d-44f7-b845-d3d3809dd094",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca4494f-fb92-417f-87a0-fdbb705ba6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a33ddc-9714-4403-bcca-40f4110193b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d556764e-66c8-4dd1-89b0-d4623cf23ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408e5e79-2a9e-47c3-b4e6-6f245283e57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda68080-617c-4d2a-9ea3-f654c4b5c7a1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74065a7e-1b57-418d-b5d6-e6a707313f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17739d58-5db9-45e7-97e1-839782315e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72afe8ef-7b2c-4932-8955-bbb0a87779c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2bd583-d975-4d18-8cb0-efbc27df6634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11e632c-21af-412c-9d7d-6075f4f2de72",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a639f64b-e114-4286-9b48-f0c1e15d50f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cab3c0-253a-4652-8118-ee89dfb88bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55cfc33-2797-4ae9-8d41-41d31d3c158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6d9a93-b31a-4bb4-b8c1-4a8f0be1b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d251d-663b-44dd-a952-d3bd799238ef",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e84a244-decd-4685-b838-eee3b564f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93a58cc-615f-4f78-8acd-1022b8c5b402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73528d7f-d388-4e76-aec8-2631392c8139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "990102a6-bda2-44d5-9bfc-06fee293dc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378d7b93-c8a8-463d-98d8-07f292b9e2f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6af8bf-5d7b-4720-b2c4-8dfba13e47f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ca9814-dec9-4afe-b536-d704d534f710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695c9be4-fa4b-4431-b902-c41512aea316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfa7388-47bb-432d-8475-56fb6e4d265a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef1641d-5e8a-4d01-9b91-80ad7051cbfe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20007e41-4350-4f45-979f-2e3366c1114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1377e6-ec80-441c-b729-16742822653a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c7f112-0117-48e1-ac2d-a89ea462861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04822ea8-2046-4522-bde0-cc455f0bd83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd480d5-9398-4788-9b37-4e2e1c820691",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097903da-9d64-4214-90de-5b5e418ad21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801a57c1-c151-49a6-ac6f-4a158c3238ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5155eca4-4648-4531-b137-f74274051967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0fb28d-a9bb-45e7-bf8e-68b028582e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c0f532-849c-430a-beca-514fd96db8c9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f935db-b3b5-42c0-8b0f-dca16c4d51bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2791c7-160b-4a42-a00b-9e162ce09355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b513ced7-30a2-4f14-bbab-7c0d7fbe2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b34e1ba-aab6-4627-8d24-7f6c84da4930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7018296-5849-49ea-a33a-5ee1aab4d574",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd31e82-1f1b-4471-9977-57881320f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a8c967-a7a0-484f-81ee-629a40252b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ef4f87-95e8-4744-a540-fdb6907e6271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee58dc77-f295-4e93-975b-689f382d3383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3d1843-eea6-4528-a52a-568f40b61d7c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91895b72-5a63-4097-8d60-d6bf4578e6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343e429a-853c-4364-99dc-3ccd4813a66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2e7de4-4fc3-4015-be03-71e3bb219705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce9e053-90c6-4fb4-aa9f-bf0e43aa3abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efd98e9-6089-4562-9198-85b0923e8e3c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18df5d60-f24c-4a4c-b1e0-e95973b43ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f913c938-a3c8-486c-b09f-0f4863b995bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbb78a2-5f00-4ccb-9827-5eb4148711f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52c631cf-d478-4824-834a-47cb168ae748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146dd531-375e-4d69-a1e1-74624b29cc3c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf82dce-549f-4098-bcc5-0c91bb82b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956a0d1c-bf45-4038-b3b1-c08c172c7f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e562c0af-84b8-42b7-aa3c-12111586b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d592a1-eee0-4ace-aade-23cc7feaee37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2029e9-0d4e-4674-9a29-bdb254c9bf2d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b6e48b-3c0e-4d8b-9b50-7b475b96f8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0d1d42-cbb4-4e73-a644-fce8f0beba70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34294cdc-2c42-45ac-b1ed-49b15c2605e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "903c31f7-6f2e-4ae3-818a-ddaecb85581f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d2da01-ada7-48d8-b7ac-c3d5aabf58af",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc7766c-89c7-432f-8c21-0a5e8264cb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc212a06-da0a-4600-9a3a-47c299ffd8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ac4979-ff55-432d-b833-44e096baf545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7966a768-30ff-458d-bd6f-1d491154c3fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e450789-1ee6-44df-8efd-d53bb978c7a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eca9268c-c33a-4c85-9541-a74e9bc22847",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f891583-7f0f-4400-8e77-1e7db7a05923",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df1d658a-8400-4c84-a015-9e33d196e664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a965bbd-9e9a-49cb-9f07-8ebdc3924a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1b8fb81-c9db-4eef-a3bd-a7d65a6677ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6946ceea-d30c-4e8f-8be7-b37d361fec4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d823e1dc-b713-43b2-81ee-67ac4596a335"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f644ec2-e9ba-4fd1-94c7-702b9b89e75e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b68269f4-88aa-490d-8fa1-3e371f72c11c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a45410ff-5313-410f-9253-863c90015109",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d232f39-0e11-4d7b-8c5f-00e668b827db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "730311d1-78ba-4e4a-849e-977545e14870",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e41e59f-4188-4dfe-a813-d9009b2e1585"
            }
          }
        ]
      },
      {
        "id": "935c03d4-c6fc-48da-a03a-0105aaf9ed5a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "077d1c2c-19cf-4f95-a2c7-a3b34a5c53e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d5ea4a4-4a85-4698-9c67-88d51c92dd53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb043908-5803-4682-b6e9-4dd6c314a617",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edef202-f688-45b7-8302-f1bf0c013c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37799003-2313-4787-aa3b-88a2fea303ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2d4206-1419-4775-b1b7-c4f9722b3174",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed4992c-3a2f-46b6-9374-6b51591fc197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639b543e-81a8-4e3e-995e-56ce83928476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59115bf5-dc67-4a72-a0c9-0abf8915313e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326dcf45-a788-4ed4-8f16-54e693b104fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75be4755-f9b2-4389-ba90-65cacc1dfe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f585b17e-7adf-4f48-809e-d755e2db63c5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8050314f-c117-4e45-8a95-a44b00cbdc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af57020-90f3-4941-aeb1-b2deb5c76b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e072d7a-b8eb-422d-8174-f0fbcd896910",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbe4e0e-52d8-4c62-9fe9-c7d291a14204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce846ba-1be7-4c8c-a9b1-3ab685348755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced5f6e6-6848-47d6-9be7-260370b3212c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf69879-08a3-4cdc-926e-095ca7d5e0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4e0b95-f79f-4ff4-887b-ee639a39f422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950091f1-1f19-4a5c-8786-0d8dc20548fd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43867e26-a0cf-4439-bbc1-96cce214a66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa111cf-8e4c-4469-af22-2a16fcef8baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7381c7-d902-4993-8e20-da83d92ae398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8e06f6-936e-47c4-a3df-12bb80cf9396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a095f-ae10-45f8-9d10-e30e7dd746a7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ec2b2a-34d5-4dee-8bad-fffb2863ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7287bd08-a4e3-4008-b32b-9c80fcd5b05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782b72ff-3207-40b1-abd2-916e6c5e6503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439707e8-c737-4262-a5bc-98df7b8c1305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987475af-03c6-4cb9-b63e-a93c4284ec68",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e52591-2f1a-4f4d-8782-fbd3cfeb091a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c236d8-b6dd-4349-9d5a-12afbdb5a606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed3f656-7dfc-4b64-ac8e-50725043a1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5431074-0971-4b4c-afd8-d5cbf621df21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c45463-197e-44af-83ba-f070764ec578",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ffebf9-c98d-4637-a9ea-0cf422933232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f3728f-f0d0-470e-805b-080ab507f2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910e9aca-9668-4004-9c20-17330422a8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099de056-9cc2-4c55-bc2b-f6e229ee548c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5586eb3-9a7d-4c05-8eb8-c5687838dc59",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b3196c-5778-450b-91b3-6599b33898e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51624ee-9d16-425b-ac3d-134355abc6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0471749f-a5f8-4672-b496-5c294002fc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44c174d-fb48-459a-882f-25b5c740affe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932df2e7-a607-4c1c-96c2-29bb6bce5501",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bd5510-5c97-4c77-b03b-0b12be416ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e51b2e-08ba-4535-b13f-cb39a7d6d22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8b2732-508a-4338-b528-d0eec86f090d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88912e7-a93d-4b37-86f8-8f490f20bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6868ad5e-b625-4675-a84d-b701a69f0b33",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61216ee3-8c9b-4d2e-82e9-d9e66f0e2dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9103fec3-7025-4984-b979-7c8b3de28587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8229f7a5-36c2-471c-b734-d9fb6c40f201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307676a4-8cd5-43b5-986e-9798aa97981c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4227dc7-6d02-44f2-b3bd-a321a9e115f6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c992499d-5f89-48d4-b8ff-8f200d345e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62941b27-da38-4a61-97ec-08ee02c5a261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802e6caa-72a1-4589-ba74-05836cb840a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470f229a-7650-4465-9cb5-640976b0bdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba989511-5eea-46b9-964d-7468385fe6a1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1ec0b6-aca5-473d-94a7-e9f4c89e6065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "303ac287-bf67-4f7f-bf70-f622806536cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5f1081-8633-438d-a842-bc302dcec2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3a94de-bc18-4aa1-8ec3-e8f1acfc4166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f753596-a409-4a37-ae9f-772eddaea081",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bdd12c-6848-496b-9b39-8bdf6e8072d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ca6de0-dea3-4f7f-a28a-d5aaae1e0c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff057101-13db-4347-b8eb-6d1489151baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e94a41-e9ca-4d70-9980-b3d3bef37a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e97a56c-bd0c-4cff-97d0-6ec073676610",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31da1af-4620-4a96-b625-bbdb16ff6134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef984e1-bb18-437a-9853-c4836d93d5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25914fef-3570-4cd4-b0e4-9876ffb02a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd18497-ece3-44a0-9393-ad34b253e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6695a0-8c78-41b8-a5bc-caad5d649a35",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849532d1-77ec-4bc7-9d78-c23328fa7596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213f536e-ecbf-4ea1-9882-853a4a277afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a29aa8-b2f9-4109-abe2-2b2e6a750793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3158984d-8188-4cd4-8417-3c245ad192d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad823fb-b9e9-4c41-bced-e68fda1a41ff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced94faf-f054-4960-92fd-7a6240bfac3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa0e517-96b8-40b0-a37d-3ad859972d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50f3f2-f119-4152-8fe6-e928c5154e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad097ae-5cfd-4b29-8d11-3c51ed1b0dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad90e98f-1c19-4242-a1b4-a5083b4c3eed",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a628ea-29fa-4d4d-a983-d589596c3017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33ae690-28cb-4548-8398-bcac61e27792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6d1a52-bd86-48c4-bd09-441020610d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25816619-6420-4aa2-a78c-eeac5ec22265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abc36c1-ed8a-4533-83d5-52ef0280224b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49d8e14-998c-4c71-a03b-0fe3f4760019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23541c41-6e79-431d-9adf-41cf1fe7020e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cb2bd4-c56c-4348-975c-ca367fcf7276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ae29fe-6432-4177-9ba7-c6bff2d83a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5353d-04a3-4d81-b743-443ef08fe7ab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f073d5-90fa-452e-8cc7-803ff85c4fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c85b10-db1a-4f51-9b44-4d0b7b5c7c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c748d64a-8071-4119-ba8d-91b9a3364713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3f920d-f10f-4ce7-bbae-bf65786cf701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8821d8-1e91-4856-8c1d-09a1766e98c0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1657967d-0476-402d-8b4d-6240401045a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec284f6-1281-48d6-ac33-13dc5b7e41b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb5bcbb-2383-46ec-9741-24649f0a1760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03277ad-3492-411f-a6d1-45b2387006fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d3bf72-06c5-4c0a-a95a-d6540f0c1cd8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba47d12-35e4-43c4-a3ec-a92874db2ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d7ef1f-c532-40cd-ada8-e3d405b70d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f33163-1e2a-43de-ac8f-161e8bfb8e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddbb90c-55eb-4e40-918f-768c12a09bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1762987f-7db6-4558-8ae8-928d300ff896",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be452e7e-6a55-48c6-a6e2-d1cef59f58ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b12491-5760-4267-bf39-7977236bc107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3479b4f3-ea01-4fc0-8836-0f4bf42a810f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25de4434-9508-42a3-a3bc-09c4b2c26c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35106633-0bb2-422d-ab84-5a139f5a21b4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777309c2-98c2-461e-b7cf-7ba25cfc7075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f85aa42-59bd-4ca0-a480-27f7895b2a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0c1375-0023-4e6a-9137-7cbe9371429c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1756e2f-79fe-4aa7-a31c-7de7cecd1732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568446f4-cb5f-4172-95e4-2e110d03bcd6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170f5bda-edc0-448c-b5c6-b8bfe8755839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9afc424-c986-4c4f-9a9b-1722924c436b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586d1235-2cbc-4ccd-99c2-196fe7e669fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87294660-14c4-46d9-850f-d4e51d78578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232456e4-49b8-4e69-acd4-77138d4ce6bd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42f98fa-2c3a-4d81-86fb-3a3418185fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f416a79-2611-4946-ba57-02bf88ecd9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f6031e-e65b-44af-a7e3-1d8cfd4fc7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712c1d35-e1d1-4017-87d1-bd66ef70821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc0436-2cee-446c-914c-97e1f7ef2866",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f23391f-91b3-4ffa-a204-7e5827ffb5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98394f59-7429-4a9c-8507-d0630b8098c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bed6d4b-6135-489f-8ffe-7fe303cb878e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51ba53f-dcca-4bbb-8057-e2207f67516d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ad2865-0635-4c68-8289-04fd1a3683fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faab4e3c-b38e-4ef4-b910-296f5d9f575a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695fe41d-f9bf-4fba-8e97-2e828059768e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef518e51-cc22-4f35-b1ea-781e8a64e9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e05f9e-1b19-4242-917d-05fd85b6f87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78fe123-3c78-4c0e-a5e1-a92efd31958a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07099748-4e93-4af7-a127-16253567c770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b96d014-e7fd-4b94-a5fa-a00743dcac31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c1495e-83e1-484e-b362-f2f34634fc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ff7f3e-8217-4dcf-84ba-2491aaddbad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5bb535-d83e-45a1-bc8b-be7f0140f114",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd4e4e3-a364-4e82-9c77-daeb3ae2f3b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d92deba-6940-437c-9da9-603147fc51e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1117f87b-32df-45d0-b739-e739e04d2fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed38c0f-af3e-403f-b3be-08e913ede4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faadce1d-31fc-46a9-8e37-e332ec7bdd90",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fa99bc-168d-415e-b70a-f0331a15227c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88c8007-ff29-4ebe-ba8a-c82b585ffe26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9b6605-dbd6-4348-a846-a9785099528b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fe996f-d9ae-46d1-92b2-f37ce64708b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d996954-2e4c-462f-8aae-3a952ee40641",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d798112-3907-4212-8872-6d869e3963de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d921266a-1357-4c1f-98d4-dd53f6dd4cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2059570-ef34-4b70-b5bd-5ed32c8ade5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f658d10-1287-44a4-94b5-5b016f22b675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c2168b-c4eb-4d3c-bfa7-0a9c95743603",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fd8f6d-8e3c-4b90-8a3e-ca381602858b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1055c12-af2d-476f-bab7-79f6a3d802c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f4d9c2-4482-4e02-b48f-75c66aedf240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6c9fb1-ea3e-4cda-bb18-df038e2b887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476bf7ee-1c91-40d7-8cc3-6684d7daf501",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4eb776-6534-4304-9825-c03339728327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e8d64a-6c65-4e7d-a586-e18afaa1075d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f19500-0f1c-4636-a746-556c5bd4f4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5056406f-3187-4bc4-bab1-789b1b469d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742d170a-4e2b-4d7c-acfc-738c2ae67885",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2782af-d926-43b7-810e-605f3042a613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e024e517-c394-4238-8f40-6ff25670ba11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce748097-9b3f-4b14-afad-0046f942d07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de8cf58-fa2b-4fd3-a139-b22897a98611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c106c1-3dd4-4ca3-a466-88e357b43992",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae539a8-654d-4ae7-a396-ba6059945e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0b732f-2652-48f0-adff-bea4f39de70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de05d80a-00a2-4ff8-9285-8d8562ee7afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe51ebb-7fae-4926-9e29-1a379bd07981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c7bd45-20e0-4472-b077-9cdc18a18534",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7374509-0c3e-41d3-94fb-d8eabb214c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376e9561-2e1e-4957-b005-80259f34e9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a11630-7676-423c-9242-39c418dec7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98602e1-989c-423a-8f2a-80dc09ce649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d7d0e3-c4f6-46c4-9d6b-e6d45ecd4f33",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f46f656-2f58-4864-b021-6ee15e34ae6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac68efc5-792d-442c-886c-23a3c8c45d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90be731-75f0-4f34-bc62-9fb4b84937ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197cf297-1e32-4cc8-8766-d83ac9410257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b22fcd-73a5-4d18-b2c7-877ab24bda22",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2eaf34-c053-4c04-a791-24a8878d12bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85c11a0-b2fd-421f-a49c-9a7eb4547a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cd6da5-8a48-4da3-8b34-2efedf0dd3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0cd49d-12ed-4f0a-a641-4cbbd5cb487b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8d25c2-e854-4b57-b879-b3b014e4b2a7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029c339b-9b92-479f-afc2-e6a1f59c262a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd55c6e8-a27e-4362-b6a7-0b26ae3d8b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da556562-d6e0-4b63-bea4-08fbcda64092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebbbea2-7996-4c68-8e66-d2cd26d4e3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3b6a71-cdb2-4568-930c-8dd08a0bb7f8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40396b6-8181-4f03-a4c3-39d0c2830587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f5cd4a-249d-47cc-9754-92799f85ae84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb88aaa-af73-49ac-b496-8c66a052f71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdea4aa6-936e-42a8-bafd-e46cb574f298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4cbabd-7e6f-4d2f-8799-698ccdea41d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d015b8d4-176d-4b57-800d-0aab1f1d5b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97d6607-5e13-461f-b515-8897d54b614a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0022fcd-ab4b-4866-9dce-ef91e7082ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f10724e-646b-4162-9a95-c1d8f7829bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6202c4a7-b201-49b3-acf7-46b31fa64f8c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427e0c21-3d95-49ac-8af3-3867e92068c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614cc668-1914-4cf2-8485-4e540da4d376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1814e176-b716-4a90-8477-515c9129927d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132fa511-dc64-4127-b579-7bfda79d7231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0362f11f-0cf7-4f81-b0d4-c5bd366f1e18",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e48e929-c676-4e2f-b8c5-84947aa917aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b4f719-e470-42fe-9326-1bd13ed55bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e26503-3a45-4b77-b811-7b988e81d605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba232ce5-fd64-45df-916c-d6a28a1c6b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b4c3c9-5cd9-4219-964c-c517a07f6f37",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07395b7-4f2c-4937-9e65-a730e41082ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d72f5c-9705-4b66-95f9-00c239092ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4de377-fc29-43ff-b586-a476bc994de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f514da-b8a3-4900-b610-0709e52a055d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28f7108-a9ec-41f0-bd05-649258fbbf26",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5a6d6c-42d2-4c82-80d4-3769614d5f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18beb1c8-819a-4ff3-bacc-649167e43422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3f7d08-1cca-41b8-85e4-8211916fbc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747ee78b-110b-4ecf-97ad-56198aa1e165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e98fa0-537d-431d-aced-cff605aacfec",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557dcc94-6e69-45a5-8495-c1ea97d4d66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6867cbd5-783e-4835-b5e1-0a379ea96917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe70701-3172-4ddc-b26b-443ee6490943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d639d050-64fc-4b00-99c4-190a70f281a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c01a3b-eb29-4324-9cf2-7d2e7d22335c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6587c4ab-3274-450f-bd7a-3f8955433760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3791f42-e365-4ddd-803d-7fdfaad8b0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f3207b-334b-4b67-bd55-5a506e2ef2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1ec976-c365-45d2-a7bd-267eee324f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096f7dd4-5f94-4c12-81f2-d3fdebf6e693",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3c93da-c1c0-42d2-bec4-959e898e3e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e244f95-282e-4b3c-8371-1695dac04484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f57826-f87b-4bd2-89a0-6ca645d59d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2ef670-9c33-43f6-8d8d-882f77c110de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c241ec7c-7bd6-4637-a270-65dcc62073a2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c740580-36b3-448a-af0a-24ca02eb1d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6c8800-9b23-4ad4-9316-b6315fffc2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077b9131-b71d-4814-a2b0-c97101f0021d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2188bb-2902-404c-b876-ed8715c1596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b6a347-8105-46b1-815a-555a5fb7eb1e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a58302-ad99-4a27-b30c-5eb1402988c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754fd951-6b4c-455d-8f84-6948df2d4292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf1f5f-052c-44ff-9e8b-82662da937ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f4dc31-27f1-4135-8995-5b39e624926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b84f635-e464-40fe-9681-d53850c78cfe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fc4e50-6f34-4277-af58-672483df3378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04173ab8-8a25-4f2c-a22d-261c2dedb272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556118d2-8f6a-4932-9c47-5797a9fedb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3160d56-1650-4515-8eb7-bc0a8ee239a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97ab0e4-3a15-4478-b99b-32d9f3312382",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802a9fab-6c99-45cc-9829-6600562e3ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2d3e9d-6205-4f00-982d-b48900d5844a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6f06af-010b-4566-9137-1dd9a6b42fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a39465-9766-4fd9-b6da-83b8a4b1d7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b469e628-6b55-479d-8942-8cdcb7ad78f4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e749822f-506e-4617-b47e-64023651e5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedd5db5-82f8-4e31-8cd9-22c065bb82fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfb173b-d1e5-4942-af83-a14c1f751a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c179966f-3075-4108-9944-b7a557fe42d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43ed629-4340-4ea1-b6b0-decd6d45934a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8541ef6-5622-4657-9ed2-a479770ab5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e6065a-963b-4316-9e56-46682d8c99bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466387d5-f5c1-4bb2-bb24-82dcfdc7226c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbbc72d-56c5-4ebd-9b6d-586361f58557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047e7f3d-f04e-4e1f-b553-3408ed195fe7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3536437f-c4e2-47cd-b69f-c86d5ff41c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f86f5d-f526-4b35-982d-3612aaf37751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96a0f74-7714-4dfe-9b3c-4114eb444cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7107f3e-e50b-48ad-9953-f4d734e8d56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e035d399-aef9-49b8-843f-2c8e071ce9e8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f55bd3-98a5-4686-8734-08af6e653f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f761b4ee-d674-4e90-b5d8-93096e6e797e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464badee-2087-4150-8fff-2caf424eca7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec119c4-24fc-49a7-b54c-a93fbdb1745e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f642f5a-dfdf-416f-bd23-056d803aec08",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d237ca50-2de1-4d85-ba8d-31d9446957de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42232b7b-6bc2-400d-a856-39466fa52209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434f3a64-fcb2-4fd1-8f0c-27573bd28eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743b00b4-6b73-4cde-9237-e4733e87e63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8668090-f7d1-4f0a-bd86-e4999d950c73",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d855bcf3-46a5-406c-9ed5-2734da29f5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0eb57f-61f1-4c9f-859d-ca96e41a690d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcff39f-892f-4fb6-8276-5f4701a428a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c52624-73a3-454b-9509-7713a04307a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0bc66f-777e-4848-85c8-38a23e321398",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fca227-343b-4d1a-91d4-98a20a362190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ed8147-bc16-4edb-96c6-b4c3a32803e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f88830-e3bf-4b0d-a559-39916dca78da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e7593d-8bd9-4e0d-a478-54e3e63e32e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477fa109-d93a-4330-9a08-a97bba2ae6e4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee53626-cb96-45cd-b687-919d4eb53279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31b1339-ebcf-4a8d-a6e8-c784928c4d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1a7479-12ae-427d-8eac-1560ed76784e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89f9a6e-3226-4b37-a99b-123782529f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb135c79-f473-4551-b65a-5343aa866b6b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb3f409-b0f9-41e9-907e-d5590963813c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a949f4-4507-468a-9ae8-474dd4c42cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e4a733-c9c5-47c7-96f3-5e6b698020d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80f5f12-6f74-4cf0-a44b-80fe131b2304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1292e62-ccbd-42a5-8039-c74d5dc34a0f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18027922-3fbb-4c7b-bd7e-6e3cdb924b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f95a04-8a6e-49c7-b9b1-dc775fd27299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae81883-e6a5-4c97-baee-78fc99b87927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f576f54a-e5d7-4ab6-9b24-762359be5dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2f3e2b-555c-4f47-9e5b-189ebcec6211",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c8976f-36fe-49ca-9e2f-02ba6e926012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c917df-d2a5-49bd-8ece-cb123ae2bbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6322f5c-c15e-4037-bc4c-cd68ce8e6bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec02585e-f4e2-4d7c-99fd-4eca7b47f0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf3c73f-6b6e-4f83-92b4-26322dcf27eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d945f-dc78-4f0b-9601-73bcadd40e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290d54c7-a4ae-4f03-b697-13bbaf84b11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb10be30-c16d-49ee-bb3e-df9d3331862c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b072e13b-bdaa-44dd-a391-417fae612f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c11a74-b21e-4776-9139-be5841374d75",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61325c8-a547-41a4-beb3-6f4a4ebeb6e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bad54c7-96d3-4fe2-8ba4-7c7167c72203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8168d423-ca55-4942-a7a6-ee75a3162a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0f227d-9938-4c2e-bbf2-a715dc98f1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e51fc1c-48ed-4b1f-ab63-4d3345817bfb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109d7dfc-4017-41f8-9d82-57827c58a680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e7b72c-2815-41a4-9b92-0f2b07028de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c4d1da-4ceb-4f42-9d92-c4322867970e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db99a0b-1f15-4374-9827-c3bd27a70024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b80c8db-fcb7-433d-84ee-4ec523d50271",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c85519-6842-4431-a230-35ce6407dbe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2a61e3-8599-4ef6-869d-67138fad2ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b7701-0301-4683-b318-49094fba4645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19152668-f203-46f7-a02b-7041acdc0ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe2ba7e-7ac1-4fd3-b838-ddb98abb02bf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e6040d-7180-4b7d-894b-d34771f70209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc52c15-6a58-4acc-8132-24fc0d1d68fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2e2268-7a39-46f0-9a7e-fd867ad9ccb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78da8088-8627-4bf2-be4a-d6930eac3cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf0df1e-864c-41f9-b19e-39b1fa3c0a25",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8994ee-37e5-4e34-81ef-fdf05a010255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4560c76c-72fd-4095-86f2-6fc1a6c61ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779f8b5b-631e-41fe-8050-1eb461d0fd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c68839-18e7-4a6a-a390-06a82f3c09c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92c5660-89be-4dc2-876e-36e25f8f311d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c670d091-8e13-4be9-84da-71a9ca4f6812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "472e3c5d-b403-4393-b628-91e8674e2bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7a524f-da75-43b3-bb4a-8928be2f0e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95233e95-42c3-4ed5-9c7c-3dd444102bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd44b2ae-0522-4356-9100-57ca7ec0cd80",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9209dacc-7398-40fc-957b-1f597627c971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373ff232-c460-4513-adcb-2507a22cebde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c39aa50-8e34-4ee4-95cf-612c02e84909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdefee91-eb4a-426d-bc68-12c51cc0319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383ef5de-2958-4d8a-ac93-83e26fb10d43",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b268521-6e91-4dac-889a-8829a487b05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd37f1c4-2406-4561-8966-6d97a07206a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e8b8db-019c-4db0-ad25-566f1b06950d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e50062-3b4b-4fef-a846-0ffc09103299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c0f9da-2b45-4df9-ac94-e4b9b48b9dbe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fc46e2-cc64-4baf-89b5-f276ba66f940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a05583-7d62-4b21-82f2-4d1660a9f3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d9240e-14a2-494b-ab3b-b0ae03946a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa1930a-a05b-4b29-9400-55de365531b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8118558f-ebca-403d-ae58-2b7e5731213f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a529153f-4b8f-473a-84ab-ba7369e33ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd13c68-ae15-41ab-96ba-ae52257e8495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4294856-1c97-4b9c-971c-66af23190fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2d4ffb-2c32-45aa-82f3-18d5f865f315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d8bc6-b380-4e47-86ec-3ca975303f7c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c293ca2d-0278-445b-a0b8-10ad7a57850b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2ff30d-f9f0-4d37-8b94-3f24177a0aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae10565-a77e-4e40-9f47-8df5bd89cf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0662605f-35cf-417a-98fe-361275abaea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695833e6-71c4-4c06-a476-bc44e4820f45",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096539e4-98cc-45b2-8755-9cacfe6709df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5c01ec-01db-4c3f-bb7d-9eef500db61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab84beea-89e1-45b6-a8cc-23db4c6be5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df38031-27d9-4c8f-bc87-9a74c905f977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2f873d-d5e4-42c2-b8bf-d3a3dd1de19c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc75996-c9df-4151-8bfb-07c409f5e485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f38990-e171-4b6f-8676-6cce7dddf38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dede1b5-7a0f-4416-b54b-2787c5b989f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3fe4c8-8064-43bd-951b-1f8a76d2e164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5921f239-973b-4078-a08f-6ba759528ff1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df834ed7-33bb-46d2-a3f1-43d92be28cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943c2165-8d46-41de-915d-1871cb61ccc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e513e64-4754-4656-b191-80c4cdf393d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c599f1a7-5840-4af7-b037-d04981cc6f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8621882e-d80d-4df3-8033-eacb555f675f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f667673a-2d1d-49b5-805c-62c17443a7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd520962-cdd0-447f-83c6-76a5c1da336d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b7e44c-cfb1-4fed-a19e-13814b391957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab91c8d-a7f6-4d84-a008-310ef535ac93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c522fee1-c4ba-4136-8b3b-70d3db28928a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc012e42-ed84-4f10-acc2-fef8bc565946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea4d538-3b18-4df5-bcaf-32fd747badb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f010c0c4-cbe2-4377-986e-2d642fb9ffbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afeb07c-edb0-41d0-b463-4756280efccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22594b3-9c54-4137-8e8d-7921099d5888",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabc009e-b201-4473-b95b-066a81c6b032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdd2ac9-e712-43e8-b68d-2e0e84dc69ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d3d4a4-bcc6-49d0-b75c-a8370ffb9ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfd3e12-a700-4fe2-9e49-b906c760d8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103924c1-783d-441a-a840-e7d34babdbaf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dddb321-d92f-41e0-9cc9-c0f39bc319a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a407bd8-03a3-4734-96cf-3c0150049126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccea5d8-01dd-44ee-be3b-38922a43bfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a06c77-2039-4bca-88b4-ea191fa083eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d631ecac-c5a8-42b0-9468-8db48913a39f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdc0e0d-5b4e-491b-b8d8-e107de731e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d191c3-0d7c-4d5e-ab1b-c5c2809f53d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c13760-544d-4cb7-9a09-df02b949c4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec3a3a-7b87-4c68-a395-2db9e91d19e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c55f01-f2c8-4549-bd67-0ca4fbf35270",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dd6147-ce97-4945-9cfe-4681d8b616c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b8b55a-1022-44fb-ae06-c0ab3937f635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa74ba4-3616-4a13-9564-4db99edead16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c355d32-18ea-47ae-823a-749b93b6ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3af2a3-abc2-4c31-b549-b8474801e0e0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8936395c-1949-4d1d-a592-838eaa18b641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8de0d31-0838-4873-8f1a-c7f200cbd0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0313145-73b4-4c7c-9e8c-1570f01c32d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b62f3ec-02a9-4bc7-a76a-2690ee607df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b41fa-6096-44c5-8ca5-0bf2c3cdb584",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5f4adf-8536-4039-9cd4-b233a12f432c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4321d39a-4fd5-4928-8873-928b8ecb0948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50dd770-ffbc-4916-84e7-6e658576df01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab667614-9c88-4d76-86d2-00e377ed6bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a2c387-7a27-4064-a2a0-b20e6748e8b2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84248d16-a3c9-4d86-8832-6a4363f00006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf58b72-e60e-409c-8bba-1cefbb909ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4400e1-49c2-4e2e-a20d-9b33ae4c8dd1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8eb1719-8f72-45cf-a3eb-89eade8c4508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e507080-120e-45ff-b101-3d6f6a7f9c36",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d98834-bd5a-42d9-a591-e56cdc636bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf6df9e-f5ec-4b1b-8ee4-28444d64a1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f7b894-0445-4b60-ad7a-6293a214c0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5783718-8661-4855-a835-b76e2cd8cc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83055ab2-0cbe-43ce-b464-f3857ecd22b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d2c03a-103a-4731-b048-a7fab87db5f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aef2166-d218-4a00-a0db-d3bc51905f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9375cb-f49a-4c7d-bee6-ed1be05d0662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bdb2ab-82e5-465a-b330-b3a73b9ad0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0dc3d0-804a-449e-affc-633b1e9fcfa1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e46a87-dcde-45ac-9d58-9e6386149d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5764e8-8aef-4e11-97ef-5d9d3d96b4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe51183-5571-4bf2-b751-df2a539dfeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ee1717-4584-44b9-8980-50ccd7a2de74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c3a027-29c4-476f-a098-5d1782fe8852",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817dbcc6-cc96-42cf-ab38-c7130d901531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37eceab-3c8c-4717-bd27-91b097f1303b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f45530-c607-4a85-8209-0d79847a1b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c639cd7-4346-45ed-ba3b-bf12d1da5420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4690e7c3-9491-4d6e-b3c4-663f051980fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c2b19a-76f5-449c-97cd-22d218099544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "191f0872-85ef-487d-a3dd-1010be5ae0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f081ec8b-7bbb-4bd2-8c65-c6625b4b0438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd51985-c052-412e-a209-566f563bb500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d136a89-d320-4936-a10e-c78000d9a908",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a143281f-5911-4e3c-afcb-754dbadb3301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4057c10-dee6-47ca-b8a2-eb4207579502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6bd630-add4-4523-ab6a-911a7f810273",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ee8eb3-e940-42ca-8624-2dc7818f3339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7255089a-b2a4-4a9c-a690-0d0a1c6fc757",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd99f855-c9a6-42fe-9183-456ee913d55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5cd44e-4016-4110-9735-b3021dca1529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5635626-e17c-45bf-80ae-82443e8be65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d85a2b-90cb-419a-8f90-0b37dcccc3f5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "407039cf-4739-4373-be00-3f9c2f6f3772",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3b3fe5e-fffd-4436-8220-9ac31466fdca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99f543f7-bcf7-4d8c-a4ef-2856c3ab4013",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b364118b-9798-47fd-af65-7a7352e37bb9"
                    }
                  }
                ]
              },
              {
                "id": "38dc8583-2e69-498f-acfe-d0f205ea20df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5d1d65e-0856-4094-a9f1-13f854f39365",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4fe0f1-86cb-4c2d-8f7e-6a1b752084a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ac08e8d7-c77d-46e7-805a-d94620b41f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0175fa0-b73f-49f9-b8fe-dd3b496d8105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7723229-68fa-4794-8f64-fc5cd99953c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd11a37a-c1b7-4a34-9aa8-0af43781cdf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35960ea7-a6be-47f6-8595-ab659f51f0db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "128d93a2-d699-404d-ab7a-b42336223b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a87f75f1-9713-40f2-920d-f2c17d226c28"
                    }
                  }
                ]
              },
              {
                "id": "22062604-923f-46d9-91f6-72899fae7194",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5b0d9bff-f435-44b8-992b-83cec827abec",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aaee28-3d2c-4574-b4b4-11ad40b0b16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c8164ea9-83b2-4c2e-9e0d-3048c8c8d7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6525f51-5e06-4c75-9147-b66ae5d841a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91483e9-f979-4df3-b9e0-b1f999bbcf42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ef10e67-5e2c-4ec7-a055-7bb04dd895b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b35f9825-ab48-41c5-a627-c7cc4523e044",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2439bc40-408a-497d-b5ec-f7e6fc4bc1db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e433e79d-f240-4335-9b63-41979b36ab15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8772457b-ce20-4582-9258-4369a59c65f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf8ec637-ab68-49df-a44f-8026a4501667"
                    }
                  }
                ]
              },
              {
                "id": "6fbb3e14-4d12-45b6-82f5-de7fba2c4ff1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf53239-548a-47cd-8a69-32ff79a336c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "71099fa5-a079-43ba-a953-5fe13fb3b1e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf0ba43d-c5ae-4d09-8561-0f5d3ddf072b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "059a1c2c-f18a-417e-bc83-d9485e91b24b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72452e67-5550-4203-a5ab-8634149703d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e5d0129c-a240-48c5-88a6-993afd8e2dc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f0ccd87-a7bf-4690-aacd-d3a4cd11d720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa12d78-3bda-4c6f-a162-19a24eaecc9d"
            }
          }
        ]
      },
      {
        "id": "cb242a34-c3ea-41a1-ba31-4f06f5d2846b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ad208513-125a-4e7c-87e6-2bf6280597bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e177f0e4-0c91-4aff-9816-caed8e495717",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c423b67-f5dc-48cd-9809-99ebb8307e52",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c58fb3-9206-4ed8-9de4-e3aa1e1b4481",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05c710bd-2bfd-407c-8bc8-da0f77e38121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317fe3d8-4526-4ce6-88ea-129f92cd67a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a50b0470-e986-4759-b2e9-17e81ec3422e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e91f6d38-0be3-4b2f-96d3-94052eeb72ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0a9f8d5-487d-446e-bcd9-f313e1fa0827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "218b55da-e6ba-4ce7-b52f-019ba4061f5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46ba5aff-3575-4866-b962-75ef8aca4358"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d598401-490a-4d9e-a6fb-dfb3229f2c5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f927b61c-16ce-457c-9838-c224500a41b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14bf3265-4be2-48b4-bdaa-798fecaa5687",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3d71fab-fdcc-45bc-b4dc-c48038b0e176"
            }
          }
        ]
      },
      {
        "id": "30abc3bc-882b-489c-95e0-df1c803a3153",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1a0f80da-f669-4181-bcd5-39be7682be04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cca274e9-df27-4b6d-ab19-0abd1ea0cae1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb9c3bc3-4a21-4a01-9d5e-2fcb4cf197fc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71644ce9-7ec9-45b9-a2eb-d2752e44742b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7a3fe11-82e1-4f01-bd3b-a9c797634a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86cf403-f7c8-4cbb-9461-5a8aac59e304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af574066-8e5f-42ac-9f7f-4ac33ecefda9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f215b9-d287-422c-92af-6465a84df8a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "714085b5-9bb3-49a6-88b1-2bf487d626c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b67bc287-0afa-409d-9a4e-c988879a229a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb44f62c-5717-4bec-9a07-af83a5740991"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c3b12b2-5724-4521-94f9-8b2bfe5b3ca0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78176f9f-3a69-4645-8b70-f8a2b97b9807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0286e3cc-abf6-471d-bf12-556417658b27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a3eb6fe-dc51-48ec-9a17-ca48cae72e06"
            }
          }
        ]
      },
      {
        "id": "c95040ad-26a5-4511-ba19-0355e27a67f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "20e11d32-90c7-44f2-bc92-6d2fe3d3f683",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a123d6-ebec-435d-ba9e-2d43e5753546",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b589dcc9-a501-4fe1-ad8e-486d2c307bbd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98324929-7feb-4ad5-85a0-d6fe3626c403",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "734ffd3a-fd55-43fb-95a2-b41e5f2e1c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c72d9ab-d8ae-447c-b03c-5121ae59565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdababd-7091-4f9e-a41b-397ad54f9c20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f46949cc-8567-43f3-8092-08d60e1b2b39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66ab28f5-5414-4150-82a3-5496a2cf3f80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e92f0223-bd3b-459c-bc71-502234b8bbc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f77e7a6f-0700-4065-910d-3bd54ef837e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e506617a-6660-42bf-83dc-6a9dd2446357",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c806b45-3bd7-400a-8d27-9b54e87f9b36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64682bfe-c247-4054-86a3-d67bfbd0652e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4f89d31-ac45-49b9-82c4-6190cdaf0945"
            }
          }
        ]
      },
      {
        "id": "dd7dd5ee-cd86-4954-b463-b32aec8c71c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34b8bb75-cd7e-411f-a0a2-e7620dea7182",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37cb3466-4067-4861-a63f-9772523a4e5d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "97535ede-8400-4ca9-ad40-672115f61706",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86635f98-0bf7-45c2-941d-51d6dfeeda47",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "557c43d7-aa65-4bfd-893c-4803b68e3846",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.325396825396828,
      "responseMin": 7,
      "responseMax": 422,
      "responseSd": 29.89421278735843,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721435929356,
      "completed": 1721435940218
    },
    "executions": [
      {
        "id": "06b90814-f938-4e4e-9418-6bf2317f5e45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01e6b3cd-79b4-4415-a224-6bb0cccfe225",
          "httpRequestId": "4fef3022-064f-4421-b33a-f51f9063d483"
        },
        "item": {
          "id": "06b90814-f938-4e4e-9418-6bf2317f5e45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "685ca600-a9f2-497a-b685-20657e928137",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "99604723-2142-420d-b018-acf5934c8c78",
        "cursor": {
          "ref": "96e9d0b1-f284-4303-b230-08ed69901384",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "adc10a66-5965-4ad6-b567-063f265e589e"
        },
        "item": {
          "id": "99604723-2142-420d-b018-acf5934c8c78",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3ab42f3f-9e4b-4136-93c2-724248f92de0",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "6afc5d18-164f-417a-8bd2-85c162827ee9",
        "cursor": {
          "ref": "03692460-5d7f-478f-af6e-03cf463b9eae",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f5dcb8f3-0208-4561-b73b-d0d667fb5377"
        },
        "item": {
          "id": "6afc5d18-164f-417a-8bd2-85c162827ee9",
          "name": "did_json"
        },
        "response": {
          "id": "c9b94133-be7f-493b-8d82-01d6f9b1a3e6",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5bcdab-3326-444c-942f-96b400b99fe6",
        "cursor": {
          "ref": "56206fea-c4e9-42e9-bd4b-768b150a299c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea3d9423-a2f7-4118-a9bd-5e58ba8a04cc"
        },
        "item": {
          "id": "4c5bcdab-3326-444c-942f-96b400b99fe6",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae55c37b-bd28-47ce-9c0e-adaecec086eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5bcdab-3326-444c-942f-96b400b99fe6",
        "cursor": {
          "ref": "56206fea-c4e9-42e9-bd4b-768b150a299c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea3d9423-a2f7-4118-a9bd-5e58ba8a04cc"
        },
        "item": {
          "id": "4c5bcdab-3326-444c-942f-96b400b99fe6",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae55c37b-bd28-47ce-9c0e-adaecec086eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0907ba2d-8191-4b84-9437-8223871b5377",
        "cursor": {
          "ref": "5bef38b1-12e8-4c9a-be24-ef48e8b59385",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fd3fbd24-888c-4035-9cda-31f38fb816fd"
        },
        "item": {
          "id": "0907ba2d-8191-4b84-9437-8223871b5377",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8eaa8629-bbab-4ac2-a95a-a20dfe67f9e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 171,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a47c0e-03e2-4da4-9e8f-f6dc3074c4b6",
        "cursor": {
          "ref": "2f64b6bc-3908-4f30-8a25-653b216163f3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "953ba182-b419-4032-8d89-68dc89a78c5c"
        },
        "item": {
          "id": "f0a47c0e-03e2-4da4-9e8f-f6dc3074c4b6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b053ae62-837e-45e0-8f8b-2e217320909c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5256777-613e-4d39-9401-ecab7186b357",
        "cursor": {
          "ref": "9f13b0b0-79ae-4c3b-aa38-0c6b4ac9a789",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "22fc699f-fa5e-4084-9e43-39b1b157072e"
        },
        "item": {
          "id": "b5256777-613e-4d39-9401-ecab7186b357",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "19768bf5-806d-4f68-be7a-308a90862c4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889ae9b0-48f2-4c41-bc74-15fbb514ac83",
        "cursor": {
          "ref": "955b7c81-46d8-4a1a-986e-00a7094e035c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76c52457-3a9b-47dd-bd90-e565cf2eb749"
        },
        "item": {
          "id": "889ae9b0-48f2-4c41-bc74-15fbb514ac83",
          "name": "identifiers"
        },
        "response": {
          "id": "4e6ec25e-4ca9-466a-9939-492a7296cced",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c2d25f-509e-4ee8-83cb-cb3dea910bca",
        "cursor": {
          "ref": "d6012ce2-57e4-4a81-ad62-88785c8bb2a4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b193cf52-fe6c-4cc8-a166-f53e0f490df3"
        },
        "item": {
          "id": "35c2d25f-509e-4ee8-83cb-cb3dea910bca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c2fe5eaf-0b21-4e34-be20-b5ac1c0b9162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8ffdfd-b03f-4d5e-94a7-52445c1e7a6b",
        "cursor": {
          "ref": "0ea851a1-9acb-47a0-a0a7-37f5b4226ca5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "689b463d-be4b-4b80-be86-1a8a74834b52"
        },
        "item": {
          "id": "1a8ffdfd-b03f-4d5e-94a7-52445c1e7a6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c59dd7b1-0e65-4df3-83b4-61093b06f0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3ef12b-669d-41f8-82f9-3f4e322c040c",
        "cursor": {
          "ref": "bf27dae6-4357-4d8e-b97d-9ea017fd5f34",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c8517865-0b0e-4517-a5bd-c047d453993c"
        },
        "item": {
          "id": "9c3ef12b-669d-41f8-82f9-3f4e322c040c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e603e16-d492-44d7-a76b-1e788fbcbf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff61e75a-7d37-4f54-bf30-a60d1d517642",
        "cursor": {
          "ref": "554fc0f4-843f-47d2-a16f-9341762e8a1e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "87c30bba-8225-45a8-99e1-401263bc0b8d"
        },
        "item": {
          "id": "ff61e75a-7d37-4f54-bf30-a60d1d517642",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d5f3714f-ee04-43f6-84e6-176f0143f9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97215642-0d54-4ae8-a9bf-ac1b005ac776",
        "cursor": {
          "ref": "6236c7fe-33d2-4ff1-97eb-ad19c54660fd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b33e2149-c217-4d8d-ac1e-be1390ac0707"
        },
        "item": {
          "id": "97215642-0d54-4ae8-a9bf-ac1b005ac776",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4b9ba308-aa68-43c7-87fb-3324016824fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6200a64-fd8c-4a47-9a73-3c7f65b7efc8",
        "cursor": {
          "ref": "0062d28c-d405-44d6-9dec-a39d406b8502",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f67d52e5-3c54-4852-bc64-2805aa11897e"
        },
        "item": {
          "id": "b6200a64-fd8c-4a47-9a73-3c7f65b7efc8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5dd7a77c-d116-4452-bfd2-e57bb356d520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a7e0f9-8452-4cd6-a090-4c13ed5fdd3d",
        "cursor": {
          "ref": "8674e605-8bf3-49c7-b932-46e65a1709ec",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4e5371c5-f54f-4f10-89fa-77ed6432f645"
        },
        "item": {
          "id": "07a7e0f9-8452-4cd6-a090-4c13ed5fdd3d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "395d39ef-5eea-4395-9c44-cc90be8cb94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369ed0f3-3e98-4c37-ba35-6fe3df19ea3a",
        "cursor": {
          "ref": "ee72e7c9-5288-4a41-8cba-7e30776bcccb",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b2f8d2a7-3db2-4bb3-9792-49a0e689a6e2"
        },
        "item": {
          "id": "369ed0f3-3e98-4c37-ba35-6fe3df19ea3a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "15702cd3-051b-446d-8667-18e316e78fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fe382c-e971-4666-b258-282df6061f03",
        "cursor": {
          "ref": "80ffaa80-cb0d-4428-8283-91963d6d6d9b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5fd23761-48e5-490d-9e9d-2a24a4794e2a"
        },
        "item": {
          "id": "31fe382c-e971-4666-b258-282df6061f03",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "78384f20-5689-474b-ac5a-46fc87591c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c2ccfe-f6c6-4e77-9338-33085778f989",
        "cursor": {
          "ref": "01178cad-6f8d-4edd-899e-63229539685a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dbcb355c-f788-42f1-bdee-efd52ebb1499"
        },
        "item": {
          "id": "16c2ccfe-f6c6-4e77-9338-33085778f989",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "857f5a44-7b47-4005-842a-87d572662bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c95e0-d720-4743-be84-964e156107c0",
        "cursor": {
          "ref": "92306bd3-20ce-4d2f-900a-373e8035ea64",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8dc9d16b-cb91-46fb-a9bf-a502bd874eca"
        },
        "item": {
          "id": "eb2c95e0-d720-4743-be84-964e156107c0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e28008f6-b47e-446a-b78c-ae3ea85df65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f0d1f0-1a59-4f9c-9a6e-f1594c1f38aa",
        "cursor": {
          "ref": "b0aa9063-9d04-4b80-bcd2-c43a694f5bfc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6981ec77-ce5d-4874-ab79-21e16ea108e6"
        },
        "item": {
          "id": "77f0d1f0-1a59-4f9c-9a6e-f1594c1f38aa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0c35652c-ae86-439a-ae3b-80849790a734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5570018-aadf-4342-a92b-9ff5fd3ce958",
        "cursor": {
          "ref": "645b8257-7133-4e37-b5c8-7eba15e196ad",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3d503df7-cb12-4594-9e44-33df21c1bb16"
        },
        "item": {
          "id": "a5570018-aadf-4342-a92b-9ff5fd3ce958",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b2b6ae4c-c672-4b4b-84b5-d4963e4562d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770efcba-8250-49d7-afb2-d4e310b4f6f6",
        "cursor": {
          "ref": "0cbf61a7-ca7c-4467-8bc1-764fa5a1de55",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d64e6b64-5c3f-4a9a-aaa0-b687baf557a4"
        },
        "item": {
          "id": "770efcba-8250-49d7-afb2-d4e310b4f6f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1874963b-ab1a-4854-bd7b-dbf8c0959942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1af0771-cdbc-4856-bfd3-6ac7514b1a21",
        "cursor": {
          "ref": "e5d751e7-5f5f-4f78-8b59-096ef3b708ee",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "08221217-ff79-46cc-ad0a-4ce9eece1ef0"
        },
        "item": {
          "id": "f1af0771-cdbc-4856-bfd3-6ac7514b1a21",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "027072e7-d83b-4e41-8407-604c1d01cca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f6ab0c-3675-427b-b48b-03d853546fdd",
        "cursor": {
          "ref": "e2a67a98-f09a-4702-9b0d-164c3e9eab0e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "45a553fb-5603-4cd0-990a-93962220aa4e"
        },
        "item": {
          "id": "04f6ab0c-3675-427b-b48b-03d853546fdd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9df3b0e6-a7c8-48a5-8c4d-3cbaaba7750e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d086d399-b446-4cfd-b196-056c8da0648e",
        "cursor": {
          "ref": "f636bea0-587d-4f79-9589-9dbb852bc207",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "decbd99e-f268-4b1e-a9d4-b2580eabf6fe"
        },
        "item": {
          "id": "d086d399-b446-4cfd-b196-056c8da0648e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7146ba9e-4bce-4c19-aaa4-e592e5e3bec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8056f407-7707-41a9-bf74-e46fc215fb9b",
        "cursor": {
          "ref": "f92e9248-5501-4c5f-baa5-52354754ca9f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "130fe2b5-9351-4ec3-a383-45a092e9aece"
        },
        "item": {
          "id": "8056f407-7707-41a9-bf74-e46fc215fb9b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c0716f44-6af6-4722-8548-346a2068f5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a366c75a-7c6f-40f2-ab13-5fb9440fff00",
        "cursor": {
          "ref": "eb4a9aae-d11f-4947-8813-42fefe928b3b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8da77ba3-ae4f-444f-b787-e932d6039ffb"
        },
        "item": {
          "id": "a366c75a-7c6f-40f2-ab13-5fb9440fff00",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a4ef6589-46f9-44f4-9702-7800576b2597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d4256a-0abb-43ad-afbc-eb629a898b84",
        "cursor": {
          "ref": "a44b80a4-72dc-4746-ae75-f7bfc7835a63",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "14bf297a-15fd-4d48-8f9f-7657d6777093"
        },
        "item": {
          "id": "f4d4256a-0abb-43ad-afbc-eb629a898b84",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "71f447b9-e5cf-4a24-918b-0073c24d78d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eee7dc9-e10e-4d20-b9f2-62668e6e0bd8",
        "cursor": {
          "ref": "8c2c8432-3bd1-4ca6-9a55-e55c30b76a71",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6751fa72-09ea-41e5-ae56-02735e10ed22"
        },
        "item": {
          "id": "6eee7dc9-e10e-4d20-b9f2-62668e6e0bd8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1dc1395f-9730-4ac2-8ec4-282fdfc5c5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffae171-96b5-406e-adff-812b98be758d",
        "cursor": {
          "ref": "4dceff8a-d79d-42f2-aa76-225e9c14f81b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c58aff9a-6ee7-4da3-95df-d15729f6f899"
        },
        "item": {
          "id": "bffae171-96b5-406e-adff-812b98be758d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3e7a7a13-d119-4ab8-9c9e-b4dd7747f9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2187087-583c-4514-adb5-8e40a564e49e",
        "cursor": {
          "ref": "7d7950af-cfef-459c-9876-c856692fc779",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bcf506a3-5aff-4f3c-9923-4768b231a873"
        },
        "item": {
          "id": "b2187087-583c-4514-adb5-8e40a564e49e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bf522724-d719-4bb4-9ae2-eff570b5f840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e136d1e-b54e-4a14-9360-9cd6ed3bbdea",
        "cursor": {
          "ref": "673f8d9e-c664-4e64-8afb-8e80062c634c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d81761a1-3694-47eb-bff1-ec096b99fddf"
        },
        "item": {
          "id": "0e136d1e-b54e-4a14-9360-9cd6ed3bbdea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "353ce99c-eb7f-422c-bf90-c50727f15099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81de8800-4a95-4ede-bc97-702368028758",
        "cursor": {
          "ref": "83af78fe-eb89-4e81-8954-dd816f08da76",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d3b14568-faab-417d-8239-eb32f7c8c106"
        },
        "item": {
          "id": "81de8800-4a95-4ede-bc97-702368028758",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f575aa46-4541-492c-a1a8-1f2fb08fce6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3804bc-9c7b-4be8-b546-a14b0eb1f60c",
        "cursor": {
          "ref": "0e273116-be29-488d-8640-de393d05e19d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8f9b5cd5-f02f-40d4-aedb-e5b2cf221d88"
        },
        "item": {
          "id": "0b3804bc-9c7b-4be8-b546-a14b0eb1f60c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e637678b-b188-40a0-9027-12bcbf0b0a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca00031-a486-4516-bb18-0d84a2054d21",
        "cursor": {
          "ref": "3bb4eb04-91f9-4caa-a65e-7d2f1f351f56",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e4eb763e-3e37-4a14-b38f-48bf3a6dfafe"
        },
        "item": {
          "id": "dca00031-a486-4516-bb18-0d84a2054d21",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6c6f687-09cb-4d5e-9dba-3b3b133b8371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a9672-2e2f-400c-8f46-723c7f049e89",
        "cursor": {
          "ref": "a28aac70-c855-4ca2-95ed-02572244cebd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca647b04-1066-4597-8be5-26f9aff8babd"
        },
        "item": {
          "id": "b05a9672-2e2f-400c-8f46-723c7f049e89",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3c94b63e-0419-4e79-9ae6-b1658d1a2d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d47c9b-0c8d-4cee-9696-f156c19be9c0",
        "cursor": {
          "ref": "5b029ede-b6dc-425a-96ad-e9a0f3af1323",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "57b0023a-5412-4d6f-a90c-2af4a09ab82d"
        },
        "item": {
          "id": "d7d47c9b-0c8d-4cee-9696-f156c19be9c0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "89af33e0-620c-44cb-85f1-285e6057f7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2282ab6d-28aa-430d-88ea-ea3dd862a716",
        "cursor": {
          "ref": "3f42cf2d-d00d-4a83-a82d-97c1caa0771a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d979b64c-3e11-4603-931b-032de934fbaa"
        },
        "item": {
          "id": "2282ab6d-28aa-430d-88ea-ea3dd862a716",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "07ce6082-a831-4bd8-9660-7597205e111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4734514-2561-4f9b-9ca9-33ed73fbd954",
        "cursor": {
          "ref": "ff684e00-43b1-449f-9972-fc6d2b2b7a2f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5d1b472d-58c4-41cb-a925-af890c94dafb"
        },
        "item": {
          "id": "f4734514-2561-4f9b-9ca9-33ed73fbd954",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "32ec9c0d-e45b-428d-88cc-9b64487819f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe82ab4e-20ce-438e-87ca-73b6f79d66aa",
        "cursor": {
          "ref": "c9cfd14e-cc00-4807-9b70-613db8ee15f4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1464e57c-41c5-4d73-9dd2-683698e841e1"
        },
        "item": {
          "id": "fe82ab4e-20ce-438e-87ca-73b6f79d66aa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "36a508f2-56d8-4243-8cd3-a3b7af2454c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cc6d04-56a7-4c57-bf85-91db3deb870f",
        "cursor": {
          "ref": "d5afcaaa-d539-473c-ab7b-e8d299df2f8a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d586e850-afe4-47e5-ac71-8e31820c8eb8"
        },
        "item": {
          "id": "c6cc6d04-56a7-4c57-bf85-91db3deb870f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "34bf855d-7bc0-48d1-98b9-9fd2f6bd22b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209cdeed-4e22-497d-bf92-611ea2631396",
        "cursor": {
          "ref": "2c4c34f8-6bb7-4139-a31f-00f3415a333a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "86238f7c-3ac6-4502-9a15-ba8be6dda8b6"
        },
        "item": {
          "id": "209cdeed-4e22-497d-bf92-611ea2631396",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6cbc2529-8eb2-4541-8fe5-8dd5a9705b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8252d0de-d41a-482b-8774-911a5fce47a0",
        "cursor": {
          "ref": "610b86ae-cf24-4cc6-8551-35c33abd3f68",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6afabdc7-e6aa-448c-bf03-ff30741a09f1"
        },
        "item": {
          "id": "8252d0de-d41a-482b-8774-911a5fce47a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "19bad4df-3c48-4e4c-95f3-ed10914ed164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bbb9ec-7cf7-49ce-8a21-f8200b90c2fb",
        "cursor": {
          "ref": "f5820e0c-31b0-441d-a7e8-a7e11f3c358e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1b9fe9dc-d232-449b-b138-e1fe2654cc09"
        },
        "item": {
          "id": "97bbb9ec-7cf7-49ce-8a21-f8200b90c2fb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "227d74c8-fc43-4c99-a42b-93fddad43998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f646a276-f6ba-44c2-b2ca-a7c3b249206a",
        "cursor": {
          "ref": "37c7aaa4-9a55-484d-9aad-3e43f9ff4e10",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5718b8ef-9721-491c-be2e-da8934dd214c"
        },
        "item": {
          "id": "f646a276-f6ba-44c2-b2ca-a7c3b249206a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d895b7e5-4641-441d-a2a5-841670b71afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05ee4d-e1ef-4542-92f1-e1253152d52e",
        "cursor": {
          "ref": "349a5c10-7dad-4945-a18d-87aa1defd14d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9eabac14-305a-41b5-99d6-1e817b76626e"
        },
        "item": {
          "id": "6f05ee4d-e1ef-4542-92f1-e1253152d52e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bbcc5f48-3c80-4e8d-887b-4e2e88effad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb19d68-2438-40e9-b583-8f32e5bdfda4",
        "cursor": {
          "ref": "ae69b143-c656-42b0-a605-0534fb54b798",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a4141833-0257-4293-9d0b-fd70236f3bbc"
        },
        "item": {
          "id": "6cb19d68-2438-40e9-b583-8f32e5bdfda4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ac1b7d86-5d51-4545-8671-5b98e50d4f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baaf7f0-e095-4320-8978-2651f6b9b1d9",
        "cursor": {
          "ref": "b07de89e-2be7-407a-885d-4d6d5fe2c143",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb9634cb-2b73-4791-8269-1551e2dc5c3c"
        },
        "item": {
          "id": "4baaf7f0-e095-4320-8978-2651f6b9b1d9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1a608f35-5398-4a7c-bb28-44f9ac0d2945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41802169-7c4a-436e-bb0c-40439cf71a6a",
        "cursor": {
          "ref": "b013950b-d0bb-4491-9840-254a5a5de342",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "607f9651-54b5-44af-9923-349930efdb99"
        },
        "item": {
          "id": "41802169-7c4a-436e-bb0c-40439cf71a6a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "df9b43f9-2552-4be9-8aec-e7f5058faa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b094f12-8722-4df0-88c8-da4abc5ed12f",
        "cursor": {
          "ref": "207be020-25ec-4646-89a7-68b4fa537e9d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3b9a50a5-a60b-4279-a94c-7831bcc1b703"
        },
        "item": {
          "id": "8b094f12-8722-4df0-88c8-da4abc5ed12f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8ed0bafe-56fa-4727-ab56-da95d3921521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b089756e-9471-4788-94b2-6e12327ceb01",
        "cursor": {
          "ref": "6732e4fb-ca2a-4f5d-8559-fa46095f8d5d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1f1a2ef8-297b-4153-baa0-5cbfdab136d9"
        },
        "item": {
          "id": "b089756e-9471-4788-94b2-6e12327ceb01",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b7301203-d8f1-4f39-860c-4a6657409ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5562f26-d03d-446b-b1c9-07506f6d3afc",
        "cursor": {
          "ref": "e530ab86-7667-4d62-86e1-429fa622aa03",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "126e4e85-901c-46db-9c11-3940ca9c6ad9"
        },
        "item": {
          "id": "f5562f26-d03d-446b-b1c9-07506f6d3afc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0ccfd186-6fa5-4984-8cf9-db058b9a3c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae871d88-ba4a-4a0f-8439-e0e83ddfccd7",
        "cursor": {
          "ref": "e8a9cc9c-af1e-457d-9b4d-ca2e337ffd77",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a1bc83b9-c8a5-4d2e-8efd-3d8ed364aaae"
        },
        "item": {
          "id": "ae871d88-ba4a-4a0f-8439-e0e83ddfccd7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e5b0b159-b343-4a1c-8891-214ecef891b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8a242d-d8e9-459f-acd6-40ae26cb035f",
        "cursor": {
          "ref": "1b6a9539-52cf-4e33-bea6-4e87c29bdf1d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46c447a0-4d3a-4c78-a5aa-5cc8751ffa9b"
        },
        "item": {
          "id": "ba8a242d-d8e9-459f-acd6-40ae26cb035f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e31ebab4-24fe-4568-b7cb-e104d73d3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1197a46-4405-4096-b831-c9c70f710185",
        "cursor": {
          "ref": "08d7f04c-02d5-494f-afd0-43bffdff1918",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aa7d2749-fb21-4974-961c-891c3feaa5ce"
        },
        "item": {
          "id": "e1197a46-4405-4096-b831-c9c70f710185",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2e24d940-cb64-40e0-a4f4-a3e95f729443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1ad820-5450-423b-915b-520a31b75592",
        "cursor": {
          "ref": "a5bc5ab3-91d4-4c45-a5f1-eed7a62878c8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81c772cc-4ecb-48e9-9326-db4eb18e6a27"
        },
        "item": {
          "id": "1b1ad820-5450-423b-915b-520a31b75592",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "deb41b81-6d03-45ea-a688-431a95b47db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f642025-4e24-4fc9-a8bd-eb828d7f7fde",
        "cursor": {
          "ref": "92637a2c-6833-4756-bae7-fb151d5c62d0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a1570509-0836-40c2-9ca5-357090067771"
        },
        "item": {
          "id": "6f642025-4e24-4fc9-a8bd-eb828d7f7fde",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cbc5f874-58f4-40ec-9e17-9fdb366a2ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d823d3-62cf-4350-94c8-118d9cab9687",
        "cursor": {
          "ref": "9c526aae-4e4f-4084-9c26-d1f59243bf2f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "da4eec0e-cc72-4178-8a6f-2c74d15bdc01"
        },
        "item": {
          "id": "22d823d3-62cf-4350-94c8-118d9cab9687",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d4a97443-81f8-4029-ab6d-5d27a8333ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00014987-270d-42a4-b38b-944eacb924a4",
        "cursor": {
          "ref": "b57a20f2-81dc-464f-b82d-9fd86b27f66f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1b682cd3-f0b1-46f8-84fd-0eeec5750b92"
        },
        "item": {
          "id": "00014987-270d-42a4-b38b-944eacb924a4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "914cd096-620c-4eb0-908a-8577ce73e6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d57d99-ddfb-4b79-8132-7d6970b4d1c3",
        "cursor": {
          "ref": "c42c842f-c10c-45f7-a883-b8572b682d92",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bcaea84f-2e11-441e-a0e8-65afcf2ee14e"
        },
        "item": {
          "id": "43d57d99-ddfb-4b79-8132-7d6970b4d1c3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9314e598-030a-483e-919f-36b0e9099447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0d7c59-b9d2-4e70-8e8e-4a26903a4796",
        "cursor": {
          "ref": "b17f6e65-97d2-4a9f-9ace-7d674cd31cd1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c8323b2c-1d58-4b87-9d31-ff7bd005ef46"
        },
        "item": {
          "id": "1f0d7c59-b9d2-4e70-8e8e-4a26903a4796",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9f75d09c-2ac9-4040-a9ee-11dce783aefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b580cd-cba2-49fb-8095-d826edb10151",
        "cursor": {
          "ref": "377928a7-f5c3-4459-8e30-1df1a88ede0e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2c551c75-94d4-487a-bc07-71d16bbca5bd"
        },
        "item": {
          "id": "b1b580cd-cba2-49fb-8095-d826edb10151",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "01b1727f-d1ec-4cfc-9e22-f5d2269ec48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a287f5-9f54-4162-97dc-852ec62747d1",
        "cursor": {
          "ref": "963a9e48-09cb-4866-8237-ce2989ddd8ac",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a8cbc3f5-5d4d-4d1e-82df-fe763720682d"
        },
        "item": {
          "id": "84a287f5-9f54-4162-97dc-852ec62747d1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9515fb10-5e9b-414e-9f12-789e59c63e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f7df18-d106-4c74-9fd6-fe38d94ad17a",
        "cursor": {
          "ref": "41f51bb4-77c7-4a3b-a22c-24d86e1295c8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d9fdab9b-dc2f-4b8e-afc8-5fd7d9c4db34"
        },
        "item": {
          "id": "b8f7df18-d106-4c74-9fd6-fe38d94ad17a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ae2fbaec-328e-4b2b-9b60-797ab424ab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121927bf-f552-4a8e-a7da-3f245b18c11b",
        "cursor": {
          "ref": "fa5213aa-4f43-4354-8f64-bf531ae3c5cd",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "654415a0-8b1c-4b92-b31d-1627f45f0784"
        },
        "item": {
          "id": "121927bf-f552-4a8e-a7da-3f245b18c11b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "416e85d7-884b-47ad-9027-e6842603a9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999fa76f-9380-49b2-a491-a4449e8bcfca",
        "cursor": {
          "ref": "45ec3650-3bd2-43b2-a2a3-8c27a369832a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb211a8c-5d0c-4346-a60d-f20d2192882c"
        },
        "item": {
          "id": "999fa76f-9380-49b2-a491-a4449e8bcfca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e422b2df-1b72-463b-b8e6-792623679d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defee23d-cab5-429a-82fc-e2a323c90923",
        "cursor": {
          "ref": "480a60f2-cb3a-45a5-882e-e92f700866f8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d2974379-1e52-451f-b1ea-9b030222d78d"
        },
        "item": {
          "id": "defee23d-cab5-429a-82fc-e2a323c90923",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9e3f9ff-d0a6-4ca7-aa89-7aadf7123dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a70c82-43c9-4c21-9085-4807aa40a1a5",
        "cursor": {
          "ref": "8c0dc9c4-43ff-459f-9a10-9c8c2dd17137",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dac8bd2a-5dbe-4129-a000-7a0b6af9823e"
        },
        "item": {
          "id": "f2a70c82-43c9-4c21-9085-4807aa40a1a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6a47c00a-8d13-42d8-b2dc-41c83701de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4543851b-c9bb-4555-acc0-376362c5985f",
        "cursor": {
          "ref": "447fef27-26e4-409f-9811-541e62b51f64",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2a22e66b-c598-44db-918f-f45a568b46e0"
        },
        "item": {
          "id": "4543851b-c9bb-4555-acc0-376362c5985f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "63af9095-38ba-4f40-934f-23a70f738063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f708abe-724b-4e19-9c64-b524b4002cee",
        "cursor": {
          "ref": "294d023b-da9a-442d-99d9-862386187a42",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a4aaaa12-389d-4280-9f7b-8102d8883812"
        },
        "item": {
          "id": "5f708abe-724b-4e19-9c64-b524b4002cee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b6187bf3-a65b-47aa-a846-5884abb5d353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9cbff3-3cfa-46de-8d9a-6f343950d4ba",
        "cursor": {
          "ref": "37543201-8fef-425e-ae4a-a1b5a9fc8a95",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3a79c799-e7ac-4643-8cfa-c573487d67b8"
        },
        "item": {
          "id": "4d9cbff3-3cfa-46de-8d9a-6f343950d4ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "636248e0-59cd-4e72-a768-d20a8ed8653b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d2c2b8-ff61-452d-b43b-bdcc1568544e",
        "cursor": {
          "ref": "d969abe6-515f-486e-9a8b-fa03b0823413",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a249cb6b-f6bf-4bf4-95c8-7761045d4eb9"
        },
        "item": {
          "id": "86d2c2b8-ff61-452d-b43b-bdcc1568544e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "50dae7ad-b841-4016-b42c-eeb3344ac439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46778a9-c601-4df4-a760-df4c055df769",
        "cursor": {
          "ref": "b10630b8-c16a-43bf-afa4-1dd0fe0060bb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fd97f7a5-ace7-48a6-a15f-f1782da28aa3"
        },
        "item": {
          "id": "f46778a9-c601-4df4-a760-df4c055df769",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ede5d0b-ce01-472b-a3ba-921dd5d933e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337cc54e-2517-4cc7-9947-e310ddd16636",
        "cursor": {
          "ref": "e117b12a-095f-48b0-816e-43993f9a6e48",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "783cc45a-90e3-4654-923f-1a5dc7f5af0f"
        },
        "item": {
          "id": "337cc54e-2517-4cc7-9947-e310ddd16636",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "46857163-5a4d-404e-83fa-ab70ed35c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53757c3-c6e4-4731-af3d-ace1b29ff370",
        "cursor": {
          "ref": "894cdd05-128b-43ee-a8d1-be0f5bba073b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "18f99955-61f1-4790-b442-0f59888addda"
        },
        "item": {
          "id": "e53757c3-c6e4-4731-af3d-ace1b29ff370",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "988b620d-508c-404c-932b-2907a6d145be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595a80b3-a611-4816-b86a-58c80dcb623e",
        "cursor": {
          "ref": "fe8f4890-1918-4c42-b189-b40247ce6ef8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "682725d1-eacc-485f-bb4b-e890fe2deaed"
        },
        "item": {
          "id": "595a80b3-a611-4816-b86a-58c80dcb623e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5a2b34ec-1341-4a67-8e71-d319d0e96a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77102b41-48d9-4008-a38f-53249b59525e",
        "cursor": {
          "ref": "a2d81ae2-351a-41e7-80b4-9a0606f969f1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d59463a8-9488-4ab0-b54e-a43340d23308"
        },
        "item": {
          "id": "77102b41-48d9-4008-a38f-53249b59525e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e50ebffe-a2c7-4392-a780-17600de8557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847338a3-3baa-4441-8642-cedf28165934",
        "cursor": {
          "ref": "a10e9207-c7f9-4986-8587-3387382d177f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "92e38393-cd67-41fb-9bdd-e5a63b86740e"
        },
        "item": {
          "id": "847338a3-3baa-4441-8642-cedf28165934",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "378898af-37cc-4793-944c-79a54f24c1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad95800d-1d3c-44d9-89a5-bb882c312afa",
        "cursor": {
          "ref": "62a6b166-9447-4123-ab41-767f7611a758",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "54a2d27b-7c36-434b-ba67-229795f776e1"
        },
        "item": {
          "id": "ad95800d-1d3c-44d9-89a5-bb882c312afa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5b9f0d65-29bd-479f-b183-d8e6e0e2a4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32a11df-b8db-478a-91be-cbe6977b8bf5",
        "cursor": {
          "ref": "ecfeb0bd-65e9-47bd-aaee-4755499da5af",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "931a301c-8364-4793-a0f7-0870d4bec063"
        },
        "item": {
          "id": "c32a11df-b8db-478a-91be-cbe6977b8bf5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8c272893-dc71-4ed3-b7b9-b52f18b54872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1990ad0b-1cec-4204-b7a4-57ee3f004bbb",
        "cursor": {
          "ref": "b9b3790f-c00a-4c9e-bb65-7ffd6698ccd4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6e0342b3-7adf-49bf-b8ef-481998ea9914"
        },
        "item": {
          "id": "1990ad0b-1cec-4204-b7a4-57ee3f004bbb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "25e6c4f6-9370-49d6-b7b7-3bfbd06255da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb521437-4238-4096-907e-0cb278e443af",
        "cursor": {
          "ref": "1e72cd1e-a54e-476d-acdc-1f7525619f68",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dbbf06f9-9f68-4ceb-983d-16b7ef8bc52c"
        },
        "item": {
          "id": "eb521437-4238-4096-907e-0cb278e443af",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "df4c0352-3d07-4e95-98de-5b6b8189d6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b6c3c7-8a5d-4fd4-a949-e573ea59dfff",
        "cursor": {
          "ref": "edb99cc0-d00e-4dff-9877-2abd31ff6344",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7a09c9d2-120a-4c52-826e-873b1deaf3ca"
        },
        "item": {
          "id": "75b6c3c7-8a5d-4fd4-a949-e573ea59dfff",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2e7001a8-60fd-4a62-a374-b0662ec7efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd067111-bf68-42b3-85cc-bb89068dbb27",
        "cursor": {
          "ref": "95332c4b-d5c8-4ebe-99f5-20ace0ec8fb5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "88ceec2c-402d-467f-9909-83740ffef581"
        },
        "item": {
          "id": "fd067111-bf68-42b3-85cc-bb89068dbb27",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "abc8f122-895d-430d-a61f-1d37bfa976bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f8d147-a2ec-4f6b-80d3-96ec3040f849",
        "cursor": {
          "ref": "cd37d2f0-31d0-4485-bc71-9943dc3b3202",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "157b3d21-c1b5-479d-b879-b25774b117ee"
        },
        "item": {
          "id": "22f8d147-a2ec-4f6b-80d3-96ec3040f849",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0516cc84-8997-4151-ad7b-c7789902a7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825fbc6f-7d38-457d-b407-0b631e39d0c7",
        "cursor": {
          "ref": "f32658c9-121f-4292-adb9-759e9e82a1d1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0e0add9a-d54d-4f6b-8318-a9e9c18d0be8"
        },
        "item": {
          "id": "825fbc6f-7d38-457d-b407-0b631e39d0c7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "432d88eb-3d4f-4347-9fd1-b8ee72300f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2656c6-2837-4ac9-b341-2520fd7e2163",
        "cursor": {
          "ref": "07850b5a-04e2-45b1-8dd8-dbd0fec8613c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7cf50681-8d6c-4f6f-bf6b-92f26a743aec"
        },
        "item": {
          "id": "8b2656c6-2837-4ac9-b341-2520fd7e2163",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "da0f9c06-f51c-42af-a8a9-072824af5f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d403c9d-6681-460f-a97b-c80f12503817",
        "cursor": {
          "ref": "c77384ae-5074-4651-a0a5-c952a93bfac0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1ef37a28-fde7-4911-a27d-f0ef6bbdae67"
        },
        "item": {
          "id": "5d403c9d-6681-460f-a97b-c80f12503817",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6caab081-4998-4d1d-b0f7-c6fe0a88d650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae50d1a-41be-4516-adb5-102e1e6f33de",
        "cursor": {
          "ref": "136230c1-01ef-4a10-b05e-a326444e3356",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dfb7095c-184d-48d1-af5b-8694c8f04f23"
        },
        "item": {
          "id": "cae50d1a-41be-4516-adb5-102e1e6f33de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1d2ea242-e111-4b75-af05-3a5bc576610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d988018-30d2-4a73-a3ea-f04d4a4b056f",
        "cursor": {
          "ref": "ca5eb52c-af43-491e-973b-60345ac3b46b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e30215b7-f957-4274-b9fa-15ad5a88af7c"
        },
        "item": {
          "id": "0d988018-30d2-4a73-a3ea-f04d4a4b056f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6fddac3a-c745-45f3-aaa9-5ee211e3b3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab44fcd-1459-4220-a76c-d96ac11e731d",
        "cursor": {
          "ref": "d3727231-e050-4f45-aea4-1c6870330711",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2fad2da2-eea3-44aa-8394-b39099513ec0"
        },
        "item": {
          "id": "cab44fcd-1459-4220-a76c-d96ac11e731d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d23ffc1e-bbfe-439b-adf2-26170e503006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1573ced5-f97d-440a-a2fb-d680b935ade1",
        "cursor": {
          "ref": "4acf648d-d113-44dc-ab33-60be252f64d2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2300f4a6-0beb-4a07-a81c-7884dd607b0a"
        },
        "item": {
          "id": "1573ced5-f97d-440a-a2fb-d680b935ade1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ea578fdb-d961-4622-ac48-07eb70ad8809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa5e80-347a-48dc-839f-67330176d38a",
        "cursor": {
          "ref": "a59eb37c-8d86-4792-a03f-d3275876f92c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "831fcefa-edaf-46f9-b533-3b8915fc57c7"
        },
        "item": {
          "id": "d2fa5e80-347a-48dc-839f-67330176d38a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28e6a766-c76b-455e-8034-0c7da16536f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb69689-3b03-47f1-b04a-2e94f35949a4",
        "cursor": {
          "ref": "6af33b5f-5082-4b35-a128-5dad339108c8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2123045b-15db-452c-98ae-08393694446e"
        },
        "item": {
          "id": "9bb69689-3b03-47f1-b04a-2e94f35949a4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d2e68d90-ffe1-4a89-80d5-be6c944d9864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6a5278-0f34-4c29-b07e-43cadc668cc5",
        "cursor": {
          "ref": "bc2b6f0f-65f5-45a4-aa41-28a1302d729b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2a79cea1-48a5-46bf-bb49-019be6323747"
        },
        "item": {
          "id": "7f6a5278-0f34-4c29-b07e-43cadc668cc5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "73d80781-80ad-481f-b0cf-e6ebc0f84905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0389605-0c7f-4604-a71a-05a397b1e9ce",
        "cursor": {
          "ref": "42f97a35-5307-4378-8a80-0421110087d0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "449543c3-7b23-457a-ab76-6b51c1b3711c"
        },
        "item": {
          "id": "b0389605-0c7f-4604-a71a-05a397b1e9ce",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0976b5d1-fd5e-497f-a243-652457d28aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f450f0-bff3-445d-abbd-dbbc56f4eab4",
        "cursor": {
          "ref": "1bf8a1d0-22d8-48c6-8808-107105514eff",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3e62b659-9c66-4468-b023-f5343ac9971b"
        },
        "item": {
          "id": "f5f450f0-bff3-445d-abbd-dbbc56f4eab4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "60feb670-222b-4aae-aafa-d41bd8925f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3555ac-2c37-43a2-8560-68034d7d9e4a",
        "cursor": {
          "ref": "424ef344-1468-46a9-91c7-df1f3a7370cd",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7849a618-2082-4c52-b32e-17098ec351dc"
        },
        "item": {
          "id": "5d3555ac-2c37-43a2-8560-68034d7d9e4a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1b32bc4a-c8fa-4570-aea2-910e5024a7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a5ca2e-d4a7-431c-bbb1-1b1f6c030ef7",
        "cursor": {
          "ref": "e9f10b02-02ed-48db-ba3d-755537046009",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f57fcf38-8eed-4731-affa-c4e938af5f7c"
        },
        "item": {
          "id": "24a5ca2e-d4a7-431c-bbb1-1b1f6c030ef7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "15155ac6-ee58-4657-a1f2-d6ecf60a000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d9a6ae-4cbb-4478-9419-554e21925ca9",
        "cursor": {
          "ref": "99f7b997-7901-4d9d-88fd-2f01b29f2382",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ce1c872f-dddd-4910-9887-29a332282b90"
        },
        "item": {
          "id": "b1d9a6ae-4cbb-4478-9419-554e21925ca9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6d947815-a686-4ac7-b442-23f5964ff59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f849042-b598-4441-b3d5-acf0cfbc68c2",
        "cursor": {
          "ref": "2d2ef53e-932c-4dd6-aa45-e00959d37121",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a772700-bd30-4387-a3bf-3faa838a70bf"
        },
        "item": {
          "id": "1f849042-b598-4441-b3d5-acf0cfbc68c2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d9dc24a-0dab-485c-9e03-4df76e46118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377adbfd-e8c4-4bcc-a23e-becfd108067a",
        "cursor": {
          "ref": "c53241e2-46e4-428e-a543-e7d8ab559e22",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a673067e-6352-4762-991a-c3305d146912"
        },
        "item": {
          "id": "377adbfd-e8c4-4bcc-a23e-becfd108067a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "edc057bf-ec89-400a-978c-15b4e2a7817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9eaf7318-991e-4b60-9333-42c2dd456f7b",
        "cursor": {
          "ref": "12f1c4ec-4965-45ee-8cc5-32b952d40dcb",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "096c365f-e0a0-4b4e-afb4-7a38664d68f7"
        },
        "item": {
          "id": "9eaf7318-991e-4b60-9333-42c2dd456f7b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ff3227ef-d72f-402f-884f-bcf2bf0b9b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4495f0e3-7bb6-415c-947b-ddc8c6ad031f",
        "cursor": {
          "ref": "905e388c-eb25-4936-b32b-2b2e44374d25",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cfb38fee-c80d-4f99-81f0-cb49c77f8907"
        },
        "item": {
          "id": "4495f0e3-7bb6-415c-947b-ddc8c6ad031f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48f96430-93bf-4271-9a52-6d08a0b88738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5060d171-9f44-4888-bca1-631f9ef4c15a",
        "cursor": {
          "ref": "9eeb0b93-85f2-42df-8f51-a6d435e1397b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f32baff-da89-4260-b6fc-2c4a7ef514a0"
        },
        "item": {
          "id": "5060d171-9f44-4888-bca1-631f9ef4c15a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "31670a7d-2db7-4c1c-8956-4e4fe4f2bb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2fcc2f46-fe96-45b1-b299-bc76d753f9e5",
        "cursor": {
          "ref": "d204d730-55ce-4168-8788-e04bbb1fb4e5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fe50537a-dfb3-4f2a-9d2e-344e1df47015"
        },
        "item": {
          "id": "2fcc2f46-fe96-45b1-b299-bc76d753f9e5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e716fdca-bcbb-49f6-8c18-01cf8642bb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5c365eb1-a23a-419e-96ff-2b43b08900f0",
        "cursor": {
          "ref": "35fe02cd-890e-418c-9317-a8278c5bc70b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "14151355-0f2f-49de-b7a4-844676693f72"
        },
        "item": {
          "id": "5c365eb1-a23a-419e-96ff-2b43b08900f0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d78e74a4-b232-4076-9b79-1c55b6acd81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3d19adc4-e137-452d-8ee0-526e8370569d",
        "cursor": {
          "ref": "083f6ce2-0775-4c99-bd01-1cd0928d0c67",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6b0aabd8-b3ef-4ec6-a078-84866ba16537"
        },
        "item": {
          "id": "3d19adc4-e137-452d-8ee0-526e8370569d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "759a1db1-b13f-4a9e-aba7-135d7ef8c698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b18cbb20-cac8-46c1-805d-6e95a86d3971",
        "cursor": {
          "ref": "fcbbe4cd-df6b-4918-8a46-ab10d4335ebd",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d11d5283-8558-4f78-bce9-0217b13c58bd"
        },
        "item": {
          "id": "b18cbb20-cac8-46c1-805d-6e95a86d3971",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "42cb14eb-68db-4f53-bc26-850a0be68951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5e8d00-55f2-4cc5-a3a8-33841a762ba2",
        "cursor": {
          "ref": "b4d43374-3d39-4694-8063-b0651f83e92e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "50acb28f-644f-4ae2-aae6-f9263475d5f1"
        },
        "item": {
          "id": "cc5e8d00-55f2-4cc5-a3a8-33841a762ba2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6e4ec547-51ca-47dc-8506-50de33b83d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccadf874-5917-4cc5-a742-e740017ebc04",
        "cursor": {
          "ref": "968bb703-3707-403c-9dc2-e40ec860f3ab",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "051b3be5-d8fa-4d6d-a62f-f0b4cfb10435"
        },
        "item": {
          "id": "ccadf874-5917-4cc5-a742-e740017ebc04",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7c4a1065-b66a-4f45-ae12-863bf7c8e42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c54a223-7dd7-4b92-a460-5d1468bc8020",
        "cursor": {
          "ref": "3dd1e851-65be-46af-8af2-897158ba529c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "17cf6586-16bc-424d-a93e-e5a97b3fb2b2"
        },
        "item": {
          "id": "5c54a223-7dd7-4b92-a460-5d1468bc8020",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "57d5981c-3a3e-47cb-8381-9d7d117774d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e5474f-4856-4867-8c88-d9d8325ab823",
        "cursor": {
          "ref": "1fb804d3-dedc-4b58-8e9d-a40d52a1fbf4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9d186881-9bc8-41cb-aaa1-f3512383a7b3"
        },
        "item": {
          "id": "d7e5474f-4856-4867-8c88-d9d8325ab823",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6c0ce0d-138c-4ceb-ad83-51c01e50b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa109fa-da4b-4e9d-a9e7-c122c6b273fd",
        "cursor": {
          "ref": "915c8102-5816-4b8c-a479-1deb9fc2e627",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "43e521da-604a-4053-8bae-a55e3c869880"
        },
        "item": {
          "id": "8aa109fa-da4b-4e9d-a9e7-c122c6b273fd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "207b1835-b709-4e4c-abd1-1b23067e2211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9873793c-0793-4f74-8c2b-13fb7fc32e7c",
        "cursor": {
          "ref": "ae206700-d44d-4372-aa5b-361509334d34",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa30c9c4-3885-49fb-a897-a9e1e11835c4"
        },
        "item": {
          "id": "9873793c-0793-4f74-8c2b-13fb7fc32e7c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a328ddf6-a88e-44dc-94f5-d4d316858c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e35d6e6-0f25-477c-9702-d9c0d0cb0d18",
        "cursor": {
          "ref": "a4d261c2-5ef0-496a-96c3-cc459bf142a4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "00634b3f-3f21-401f-b60a-d3d5cdf111d6"
        },
        "item": {
          "id": "5e35d6e6-0f25-477c-9702-d9c0d0cb0d18",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09af9921-a2b2-453d-9b66-9512147555da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bbe52-47c6-43c5-b2e0-278d554c6771",
        "cursor": {
          "ref": "535b263b-654c-4c56-ae31-3c4cccb214f8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "735e07b0-88ca-462f-943f-1ec2d46db078"
        },
        "item": {
          "id": "f45bbe52-47c6-43c5-b2e0-278d554c6771",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "18e5377d-06e2-443c-88cc-254c91066a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3034f80-dfeb-44f4-8147-0713eef3e9b3",
        "cursor": {
          "ref": "ea5cbb2a-ac1d-400b-8d63-a79134a3e26c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "20e201c9-5582-4e31-9f8e-7d30aa9b0c2c"
        },
        "item": {
          "id": "b3034f80-dfeb-44f4-8147-0713eef3e9b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ff85cb62-7462-494f-9239-1d7d50f1efb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898ceafd-f5bf-4c54-9fef-e49a6864044d",
        "cursor": {
          "ref": "8791217e-6aa0-4001-b642-124e33a5a490",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cccc2686-f1f1-4cc4-8b87-028c4756dded"
        },
        "item": {
          "id": "898ceafd-f5bf-4c54-9fef-e49a6864044d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d202a94-b9aa-4878-b0bb-875a08a7b363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80bec5e-983f-4c47-9030-6563ba6023b3",
        "cursor": {
          "ref": "1dc59c87-3074-4490-9de5-1c2886ac168f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fe09e791-f927-4f92-a209-b878a3fbf868"
        },
        "item": {
          "id": "c80bec5e-983f-4c47-9030-6563ba6023b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "01183c34-9f3d-4e9c-908b-8f5069beb87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc185ba-bf47-4437-800a-5cac34534c89",
        "cursor": {
          "ref": "663ad3df-b4a1-416f-9f7e-21073a4876d0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f9dcd875-4edc-42b2-8412-079538153d9d"
        },
        "item": {
          "id": "4cc185ba-bf47-4437-800a-5cac34534c89",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5cef0171-ded8-4393-b37c-2757a3e387cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2236a11-9447-407c-a21c-9544d47ff520",
        "cursor": {
          "ref": "d16c4b70-afe3-4ca9-974c-ebe5565846d0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "00b908cd-4a46-4ccd-a653-c4b54bcf9ef1"
        },
        "item": {
          "id": "b2236a11-9447-407c-a21c-9544d47ff520",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "47ad8205-96d0-487e-9c6c-fcaa0bdb3be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22e0051-ff11-4ec7-969d-b2a697bdc713",
        "cursor": {
          "ref": "1a174110-eb75-490f-b9d6-8516b2dac3df",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fad4d9fa-6939-4a68-b3d4-57d8dc3c97ce"
        },
        "item": {
          "id": "b22e0051-ff11-4ec7-969d-b2a697bdc713",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f92f0cda-618a-4d03-aedc-9486c3c52256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7189b86d-c301-4140-bc6c-a56388aaed20",
        "cursor": {
          "ref": "adf41d92-5fc2-4634-9923-acb470f3fb95",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1710af35-7544-4b2d-bbe0-dbfe30d8b1ee"
        },
        "item": {
          "id": "7189b86d-c301-4140-bc6c-a56388aaed20",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f84b5f0e-fd44-401c-a91d-81e8a786a743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81456f05-6360-4fa9-be7f-1c510ecb34b5",
        "cursor": {
          "ref": "d78c90c7-7bb5-4ea8-b053-d82c5f7bdb8e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cd3d9ae4-956b-4bc8-b7f4-438b065779de"
        },
        "item": {
          "id": "81456f05-6360-4fa9-be7f-1c510ecb34b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "82eeb324-7541-4a7b-bd84-878aa3ae2ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e05fd94-ffef-44ea-9a56-b6d31aeee51d",
        "cursor": {
          "ref": "86c822ac-3a38-4754-aa2e-0fabc47590a4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a7bb6c9c-1a92-4497-9769-3b4436c91eae"
        },
        "item": {
          "id": "4e05fd94-ffef-44ea-9a56-b6d31aeee51d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4badc9e6-e72a-43ff-96a5-37283167c611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1efe3d-7a2e-4726-a750-f2596e151988",
        "cursor": {
          "ref": "d1b20966-2dd3-487d-9962-40a8568ee2d9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ed874d07-252f-474e-810a-3053a2f0b55c"
        },
        "item": {
          "id": "8e1efe3d-7a2e-4726-a750-f2596e151988",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9281e97b-37ed-4038-b272-e092afcd3f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5525b539-52c5-4283-9030-b5c5c2495446",
        "cursor": {
          "ref": "a577718d-bd29-49a5-b8b3-a2cf89e6a3bd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "250780df-35cf-4d85-b4f2-65bffcd4db93"
        },
        "item": {
          "id": "5525b539-52c5-4283-9030-b5c5c2495446",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "94247114-6885-4682-8eff-6c7fcf99d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a439f6d-29dc-4388-a38f-a349d7111cb2",
        "cursor": {
          "ref": "c9ffb008-6390-4d61-9948-63ec4e3f36e6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8af23bf0-3a06-4bc6-b161-52eed16ebf73"
        },
        "item": {
          "id": "6a439f6d-29dc-4388-a38f-a349d7111cb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c57414f4-0a2d-480c-b939-b74155882bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12f272b-4183-4e61-9f0e-3eac46a839ad",
        "cursor": {
          "ref": "ea6309b0-5856-455b-ab97-02cd59d578bb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1b0c3d97-f969-4b3b-a24e-fca74c5e6865"
        },
        "item": {
          "id": "c12f272b-4183-4e61-9f0e-3eac46a839ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6be4623d-4b3c-4246-bd92-624aa69f0b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d505ea-5fc2-4a1e-bef3-5f32bcd5897f",
        "cursor": {
          "ref": "986fa4ea-f66f-4c45-8f29-802c7c92c39c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "94f1ffd6-276b-431d-a803-2bf9afa442b6"
        },
        "item": {
          "id": "08d505ea-5fc2-4a1e-bef3-5f32bcd5897f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b2d89dbb-84d2-414f-927e-c9dd65256f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9ea9a7-c40d-44f7-b845-d3d3809dd094",
        "cursor": {
          "ref": "8a5de6a5-285d-495f-a6bf-8597c3ae3544",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "372179a4-f9c0-4593-8a90-9751dc7b46cd"
        },
        "item": {
          "id": "9a9ea9a7-c40d-44f7-b845-d3d3809dd094",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea19ba45-752d-4543-b5dd-343bdc7fc9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda68080-617c-4d2a-9ea3-f654c4b5c7a1",
        "cursor": {
          "ref": "2f94941d-0102-4959-abb3-a10261c3f925",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fd069ad0-8cc0-4b11-9b4d-28184c0dbcb3"
        },
        "item": {
          "id": "bda68080-617c-4d2a-9ea3-f654c4b5c7a1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af2a5e7a-767c-4820-a5d2-86b539a37b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11e632c-21af-412c-9d7d-6075f4f2de72",
        "cursor": {
          "ref": "b7fd0f7e-b079-445b-ae25-dbd2e4c2ba41",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a47d3285-b27d-466b-b781-f0cb287c2b25"
        },
        "item": {
          "id": "e11e632c-21af-412c-9d7d-6075f4f2de72",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b3706079-4b78-4bca-af61-e3ceafb2a4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d251d-663b-44dd-a952-d3bd799238ef",
        "cursor": {
          "ref": "751aee06-8fa4-4e3c-99cd-71298b035a57",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "23aa6027-c4aa-42fa-b283-36a59a26f401"
        },
        "item": {
          "id": "192d251d-663b-44dd-a952-d3bd799238ef",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "581aa181-77fb-4d3e-a53b-0f5ea70e1ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378d7b93-c8a8-463d-98d8-07f292b9e2f1",
        "cursor": {
          "ref": "a94714b0-bbdb-40d6-8d31-14f23309a51f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8db8bf11-1783-4650-9329-58590882c0dc"
        },
        "item": {
          "id": "378d7b93-c8a8-463d-98d8-07f292b9e2f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "96281d13-7ffd-42be-a88a-5dc75f3333bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef1641d-5e8a-4d01-9b91-80ad7051cbfe",
        "cursor": {
          "ref": "383d2827-5b57-4ab1-a7c0-7b9f370dc4e9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "71b7a3c4-4fb2-4e23-8e1c-4d4d850d09c9"
        },
        "item": {
          "id": "2ef1641d-5e8a-4d01-9b91-80ad7051cbfe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0e41e202-af3c-44b7-8897-a57dbbc48fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd480d5-9398-4788-9b37-4e2e1c820691",
        "cursor": {
          "ref": "71bf2997-8c95-4eb6-8551-27fde13381f4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "699effee-4d83-4737-997c-2901590fe930"
        },
        "item": {
          "id": "4cd480d5-9398-4788-9b37-4e2e1c820691",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c30f3894-c900-45ff-b389-4963d3cdf83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c0f532-849c-430a-beca-514fd96db8c9",
        "cursor": {
          "ref": "90290d70-8b28-4fa7-a08a-2e3191e053ff",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dc3ad54e-d943-4d0f-ab14-27d275e63656"
        },
        "item": {
          "id": "99c0f532-849c-430a-beca-514fd96db8c9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aad0e43d-afdd-464c-bf78-a1a43fe268b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7018296-5849-49ea-a33a-5ee1aab4d574",
        "cursor": {
          "ref": "2c2a739a-eb33-4f76-80f8-ec67999e258b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb000873-f115-4913-ad4e-1d71aaccf21c"
        },
        "item": {
          "id": "f7018296-5849-49ea-a33a-5ee1aab4d574",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cd1da848-77b8-4bb3-97cc-103cf5e585df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3d1843-eea6-4528-a52a-568f40b61d7c",
        "cursor": {
          "ref": "a244a2d0-d533-4b9f-8afd-b915b676b8ac",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "79ea704a-0880-46b2-bfd6-a816425683e8"
        },
        "item": {
          "id": "bb3d1843-eea6-4528-a52a-568f40b61d7c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b2ff6901-090e-4a5e-a6e2-b467673162bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efd98e9-6089-4562-9198-85b0923e8e3c",
        "cursor": {
          "ref": "3b362d0c-fa84-4db9-b556-b972707fbbce",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "39252b69-d56a-4091-bd08-bd46e489a657"
        },
        "item": {
          "id": "0efd98e9-6089-4562-9198-85b0923e8e3c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0c9f3548-c34d-4730-ac25-4b0078d177e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146dd531-375e-4d69-a1e1-74624b29cc3c",
        "cursor": {
          "ref": "13d07737-9228-4408-8fba-4c1e730b73de",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0cd68c81-9386-4ccd-8a1b-19c45b58d3d3"
        },
        "item": {
          "id": "146dd531-375e-4d69-a1e1-74624b29cc3c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3cd673e6-110b-4563-ab67-035e19c57900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2029e9-0d4e-4674-9a29-bdb254c9bf2d",
        "cursor": {
          "ref": "ff13eed1-737a-4d5d-a6cc-9df7df7520a3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0a648af7-5bff-4202-a657-dcbd9739eb1f"
        },
        "item": {
          "id": "fd2029e9-0d4e-4674-9a29-bdb254c9bf2d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7a3a298f-5525-41a3-9c2d-f0df94c45680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d2da01-ada7-48d8-b7ac-c3d5aabf58af",
        "cursor": {
          "ref": "409f9f35-a0ed-41e1-a4ac-4ff91761a066",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f9f02d41-03a9-4b58-a633-c35213b2e55b"
        },
        "item": {
          "id": "35d2da01-ada7-48d8-b7ac-c3d5aabf58af",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7d798029-5776-4a80-bedf-034fa2db7f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca9268c-c33a-4c85-9541-a74e9bc22847",
        "cursor": {
          "ref": "de54f306-a9b1-4ebd-abd0-1f124923b77d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0aa260dc-c7ca-4b5e-9232-76096f19fc3a"
        },
        "item": {
          "id": "eca9268c-c33a-4c85-9541-a74e9bc22847",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a93d80b-c765-4852-8378-7d5ec343a9dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb043908-5803-4682-b6e9-4dd6c314a617",
        "cursor": {
          "ref": "1d80d3aa-ab41-43f2-ac98-47c158245b81",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "acfebbe8-dad0-4e3d-b1f8-671a45ec3a68"
        },
        "item": {
          "id": "bb043908-5803-4682-b6e9-4dd6c314a617",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc3a7acc-97b4-4373-aaeb-16f671ad1dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2d4206-1419-4775-b1b7-c4f9722b3174",
        "cursor": {
          "ref": "e7e5faa3-ae0c-4b8e-a4a6-1efca1ce64a4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "16a8a0b7-b24c-4566-a06b-5e8157b38e38"
        },
        "item": {
          "id": "bf2d4206-1419-4775-b1b7-c4f9722b3174",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0ed48fef-f148-4d8f-a95d-4ea89581ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59115bf5-dc67-4a72-a0c9-0abf8915313e",
        "cursor": {
          "ref": "4e2e4f7c-066b-4f64-9547-edaec6c5ce3f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ac348b9d-6947-4893-ad01-5eee8edcceec"
        },
        "item": {
          "id": "59115bf5-dc67-4a72-a0c9-0abf8915313e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "abcc924c-b7cc-4f69-86f9-bef20c1a2600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f585b17e-7adf-4f48-809e-d755e2db63c5",
        "cursor": {
          "ref": "506bd430-3067-48b0-9510-79c5221bf4b1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2b32b693-fb35-4d86-b9e0-5db92ead40b3"
        },
        "item": {
          "id": "f585b17e-7adf-4f48-809e-d755e2db63c5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "180df8e1-8f8c-42d3-a8f1-e37010905635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e072d7a-b8eb-422d-8174-f0fbcd896910",
        "cursor": {
          "ref": "6a8e57f9-ae1a-46d3-8552-2663b41f9de9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bfc50770-22ad-4367-bcaa-d4ac2137cfb5"
        },
        "item": {
          "id": "8e072d7a-b8eb-422d-8174-f0fbcd896910",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "10a2e803-bec1-4642-a0c5-e098eeb33bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced5f6e6-6848-47d6-9be7-260370b3212c",
        "cursor": {
          "ref": "26a621ac-98f0-43ed-aa70-30df2571f7ac",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dde5db4d-3ea7-494a-be52-b951923045c1"
        },
        "item": {
          "id": "ced5f6e6-6848-47d6-9be7-260370b3212c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9e8186a6-0477-4ae4-89b0-66694619b1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950091f1-1f19-4a5c-8786-0d8dc20548fd",
        "cursor": {
          "ref": "1ed11cc5-d5f7-485e-b46d-9671b1e8b48d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9c6b18ee-bcf2-4aef-86ad-31f778fa39e0"
        },
        "item": {
          "id": "950091f1-1f19-4a5c-8786-0d8dc20548fd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "69bdb4f3-cff0-4085-be79-25daf3eaa60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a095f-ae10-45f8-9d10-e30e7dd746a7",
        "cursor": {
          "ref": "d09918b2-cd95-4115-bcd0-3a9898850b9b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0c999d09-0488-4d5f-9f11-7e254d2b351a"
        },
        "item": {
          "id": "7d7a095f-ae10-45f8-9d10-e30e7dd746a7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "be8138b1-b21a-41a1-9292-e88ec5112502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987475af-03c6-4cb9-b63e-a93c4284ec68",
        "cursor": {
          "ref": "dd5586e9-1cdb-4aff-ad38-b06052ebde41",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "48fa9507-664b-4b38-b349-3b8dab582d96"
        },
        "item": {
          "id": "987475af-03c6-4cb9-b63e-a93c4284ec68",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a794edb-3891-40b7-b702-a6f11d7ae5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c45463-197e-44af-83ba-f070764ec578",
        "cursor": {
          "ref": "d607d996-3077-4cb3-b100-16009f05d015",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "24f65019-09eb-4576-976c-8f3b419bface"
        },
        "item": {
          "id": "e3c45463-197e-44af-83ba-f070764ec578",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "14fb294e-e8e0-410b-90a5-302e8da5c91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5586eb3-9a7d-4c05-8eb8-c5687838dc59",
        "cursor": {
          "ref": "f1388470-0b2b-4de1-8391-035a2d511b68",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bb9d36e6-9463-4a98-8c04-6d860598d4a9"
        },
        "item": {
          "id": "b5586eb3-9a7d-4c05-8eb8-c5687838dc59",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "430e1955-ac24-433c-98d4-781fbbefd4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932df2e7-a607-4c1c-96c2-29bb6bce5501",
        "cursor": {
          "ref": "1027730c-f747-4e11-bfdc-75bb45de96a5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "32d30f7d-ac32-4f01-bca9-b33e2bc6fe8f"
        },
        "item": {
          "id": "932df2e7-a607-4c1c-96c2-29bb6bce5501",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b0626f3-a652-4191-b80f-b7dc3134b033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6868ad5e-b625-4675-a84d-b701a69f0b33",
        "cursor": {
          "ref": "620843fa-500e-47aa-8cfd-92b9b737f0d3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b8c7a532-e9de-4ce5-949d-cbd07b163829"
        },
        "item": {
          "id": "6868ad5e-b625-4675-a84d-b701a69f0b33",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b55354b2-d4eb-4865-a350-6343de468023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4227dc7-6d02-44f2-b3bd-a321a9e115f6",
        "cursor": {
          "ref": "1db84cf9-1a06-49a2-9e41-62a0b9d809cd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e3e84ee3-b2ea-4abe-a67a-e476960279a4"
        },
        "item": {
          "id": "e4227dc7-6d02-44f2-b3bd-a321a9e115f6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b8db7beb-2425-402f-8efc-073f285874f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba989511-5eea-46b9-964d-7468385fe6a1",
        "cursor": {
          "ref": "cf2cc8fc-768c-4c49-9d4d-2588825445f9",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3b90c58f-a166-49a0-9cf5-f1ffa7a48dac"
        },
        "item": {
          "id": "ba989511-5eea-46b9-964d-7468385fe6a1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e3d28fa7-3e0d-4a6a-acbe-d8d31dc500e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f753596-a409-4a37-ae9f-772eddaea081",
        "cursor": {
          "ref": "73591803-bda0-47d0-aa7c-c5c5719d4aea",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5fb41d09-5cf9-45d3-aacf-1dd240fb884b"
        },
        "item": {
          "id": "3f753596-a409-4a37-ae9f-772eddaea081",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e24bc317-c0ce-4868-a060-6a3d7eaa3bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e97a56c-bd0c-4cff-97d0-6ec073676610",
        "cursor": {
          "ref": "36eb5607-a4ec-4458-aa6e-49c7f4d8aeba",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8c0616dd-c312-4473-9a87-39f953170dc2"
        },
        "item": {
          "id": "8e97a56c-bd0c-4cff-97d0-6ec073676610",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1d9f611e-0e9f-4604-9a92-472ca550bb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6695a0-8c78-41b8-a5bc-caad5d649a35",
        "cursor": {
          "ref": "a512a106-03c3-479e-9768-9cca5a1adc54",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "828a9047-6478-4d33-a1fa-1612249566a3"
        },
        "item": {
          "id": "6c6695a0-8c78-41b8-a5bc-caad5d649a35",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "84cf67e7-6934-456b-913d-d709e464aa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad823fb-b9e9-4c41-bced-e68fda1a41ff",
        "cursor": {
          "ref": "fb558b5c-546a-4429-8dbf-b97d5de44dbe",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6378e417-1b8a-4ad2-929a-7e6d939dd7d5"
        },
        "item": {
          "id": "3ad823fb-b9e9-4c41-bced-e68fda1a41ff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db1f7829-9640-4cce-afb0-9e9e186aef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad90e98f-1c19-4242-a1b4-a5083b4c3eed",
        "cursor": {
          "ref": "1b305fe3-0d9d-4e2a-aa11-6280cb592343",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "67d319d1-92da-4856-a210-7cb994156e16"
        },
        "item": {
          "id": "ad90e98f-1c19-4242-a1b4-a5083b4c3eed",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "243b15f8-3ab2-41e8-84e2-3987218afc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abc36c1-ed8a-4533-83d5-52ef0280224b",
        "cursor": {
          "ref": "8fe4c579-0722-4ad6-8c4e-646253ed47a0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ebd04441-70e5-4aca-9327-4430711bb434"
        },
        "item": {
          "id": "4abc36c1-ed8a-4533-83d5-52ef0280224b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "68003e15-6514-4150-8d1c-b822fec296ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5353d-04a3-4d81-b743-443ef08fe7ab",
        "cursor": {
          "ref": "d17d9f77-cc36-4922-bbc8-0a48a3d5841b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2bb9190c-b314-4c36-b197-468336a44565"
        },
        "item": {
          "id": "48c5353d-04a3-4d81-b743-443ef08fe7ab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d40c86be-4eb4-402a-aa15-88e870ca0439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8821d8-1e91-4856-8c1d-09a1766e98c0",
        "cursor": {
          "ref": "00161fa8-8559-4e92-bb16-d64a73d94599",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "37afdae9-9a02-48fd-8871-f576e3f14432"
        },
        "item": {
          "id": "9e8821d8-1e91-4856-8c1d-09a1766e98c0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "abe1b9b5-cf6c-44ef-9741-f79348b55f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d3bf72-06c5-4c0a-a95a-d6540f0c1cd8",
        "cursor": {
          "ref": "07dcfcb5-a126-454c-8e0e-ecc991b0b768",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7aed160c-6305-40ca-93ad-39a0439f22ff"
        },
        "item": {
          "id": "11d3bf72-06c5-4c0a-a95a-d6540f0c1cd8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3783bfd1-8847-4379-bd4d-60618edace92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1762987f-7db6-4558-8ae8-928d300ff896",
        "cursor": {
          "ref": "f4ffde0a-c67a-4f92-ab9a-e9aab4d294a7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "15a9205e-b02a-4372-b233-23f64f5f7c42"
        },
        "item": {
          "id": "1762987f-7db6-4558-8ae8-928d300ff896",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7c9c4d64-ea54-4f79-b260-c2cb5d121c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35106633-0bb2-422d-ab84-5a139f5a21b4",
        "cursor": {
          "ref": "e372b6c8-8301-471a-9122-e41392c7bf4b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5ec20f69-d380-4460-b4da-dbae2220ee39"
        },
        "item": {
          "id": "35106633-0bb2-422d-ab84-5a139f5a21b4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "482d14a5-6867-4080-8979-a2f5d35d4377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568446f4-cb5f-4172-95e4-2e110d03bcd6",
        "cursor": {
          "ref": "98592d5d-a64d-451c-b343-181bc51e6799",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8bf24d1f-dfce-401f-992d-f1468efa2478"
        },
        "item": {
          "id": "568446f4-cb5f-4172-95e4-2e110d03bcd6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5abeccbd-87be-4da2-9002-be004276ecd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232456e4-49b8-4e69-acd4-77138d4ce6bd",
        "cursor": {
          "ref": "4dbc81b4-7c59-4dc2-85c6-e11060348598",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "76f58953-2feb-4629-aac3-ad9bb564d0cf"
        },
        "item": {
          "id": "232456e4-49b8-4e69-acd4-77138d4ce6bd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "68c4427b-cca2-4d33-adbb-7e6e8356b0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc0436-2cee-446c-914c-97e1f7ef2866",
        "cursor": {
          "ref": "263cc00a-aeef-4cc4-8082-2654f772b5d4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "480e4909-8e73-4163-b7ee-6bee12f5eaec"
        },
        "item": {
          "id": "efdc0436-2cee-446c-914c-97e1f7ef2866",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a4b118e1-09dd-4a96-9127-6bb1a1a695df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ad2865-0635-4c68-8289-04fd1a3683fa",
        "cursor": {
          "ref": "b66558a1-6365-4d80-8783-a0530659860b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6abbb04a-ea0b-43ca-a4c3-7e5f36b53d86"
        },
        "item": {
          "id": "f9ad2865-0635-4c68-8289-04fd1a3683fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4037f09f-793b-49f9-b680-526c626419b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78fe123-3c78-4c0e-a5e1-a92efd31958a",
        "cursor": {
          "ref": "8db05ee3-2d32-4781-9020-a0259a6ef0e3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "72e6cfc6-18b4-4dbb-ade3-00c7a8dbf00c"
        },
        "item": {
          "id": "f78fe123-3c78-4c0e-a5e1-a92efd31958a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e14b36e5-d1fa-440e-a6d0-0c9ee8aec65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5bb535-d83e-45a1-bc8b-be7f0140f114",
        "cursor": {
          "ref": "eb165dac-8529-4a27-9d8a-6610140db78a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c38d1ec5-0be9-41df-af48-ba42f7989914"
        },
        "item": {
          "id": "1c5bb535-d83e-45a1-bc8b-be7f0140f114",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5a20645d-76ea-43e7-8915-dc06a0a08538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faadce1d-31fc-46a9-8e37-e332ec7bdd90",
        "cursor": {
          "ref": "e657d0f9-bbe4-4329-b821-3e1de559273c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "75350521-421b-4054-a895-3025a0498d33"
        },
        "item": {
          "id": "faadce1d-31fc-46a9-8e37-e332ec7bdd90",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "616da874-1fc1-471b-a88b-52cf5abd67a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d996954-2e4c-462f-8aae-3a952ee40641",
        "cursor": {
          "ref": "46be5d53-f6f0-4f0b-a195-3e4f2c2fd98e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d3fbf481-593d-4694-bf06-a22074c7f054"
        },
        "item": {
          "id": "7d996954-2e4c-462f-8aae-3a952ee40641",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a1b70cad-1b23-4c83-acbe-756d25a4933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c2168b-c4eb-4d3c-bfa7-0a9c95743603",
        "cursor": {
          "ref": "42ec5442-9780-402b-a541-1f639e8b4235",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8dfbe98c-18b4-483b-8253-7d971c73a2ec"
        },
        "item": {
          "id": "c7c2168b-c4eb-4d3c-bfa7-0a9c95743603",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "13cdf5c0-f244-43be-be19-434cd2b54b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bf7ee-1c91-40d7-8cc3-6684d7daf501",
        "cursor": {
          "ref": "bddecf0f-a692-456b-a086-4089b93342d0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0da03ad2-77a2-4cf2-808a-52825be2aa0a"
        },
        "item": {
          "id": "476bf7ee-1c91-40d7-8cc3-6684d7daf501",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "505aa739-70f1-4d79-a91e-e61fe9ad1d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742d170a-4e2b-4d7c-acfc-738c2ae67885",
        "cursor": {
          "ref": "a9bdba51-22d4-473c-ad30-141fca7ee9c0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "357b0753-41e9-4687-bf07-704138e1ec67"
        },
        "item": {
          "id": "742d170a-4e2b-4d7c-acfc-738c2ae67885",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "88b95aa3-8620-4b3c-9cb5-7cdfcb941c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c106c1-3dd4-4ca3-a466-88e357b43992",
        "cursor": {
          "ref": "440028f9-5c9f-461d-b216-4931dcf669b1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "11920910-f8d3-4e74-9f90-e2c32d478efb"
        },
        "item": {
          "id": "77c106c1-3dd4-4ca3-a466-88e357b43992",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6acd63b7-3b44-4b1d-b744-f6b8286c2c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c7bd45-20e0-4472-b077-9cdc18a18534",
        "cursor": {
          "ref": "ed5972f1-1489-492a-98c2-beeeb65e12e4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "563852d4-4401-4e9a-b58e-500186a371ac"
        },
        "item": {
          "id": "a2c7bd45-20e0-4472-b077-9cdc18a18534",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1cde2af-9da3-4088-a181-4acf4cdd02ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d7d0e3-c4f6-46c4-9d6b-e6d45ecd4f33",
        "cursor": {
          "ref": "7b0c1ed5-75b4-40cd-b0ee-bab430fff01f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5adc4cf-920d-4aa5-94f9-959335e1e6f7"
        },
        "item": {
          "id": "b5d7d0e3-c4f6-46c4-9d6b-e6d45ecd4f33",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76ec8b08-8eba-477e-b21c-d85e1af4334f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b22fcd-73a5-4d18-b2c7-877ab24bda22",
        "cursor": {
          "ref": "add1e98f-ad8e-4dda-9d1d-5de0949bb92c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "75564b15-2fec-40fa-bc9e-9d9cd2593092"
        },
        "item": {
          "id": "d6b22fcd-73a5-4d18-b2c7-877ab24bda22",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5750a9b4-c248-491c-b4e0-092ce8bf9fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8d25c2-e854-4b57-b879-b3b014e4b2a7",
        "cursor": {
          "ref": "a53562a5-fb2c-4ba0-94cc-3c640d553c9d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e7375eeb-346b-4679-b38e-d1214a5504e0"
        },
        "item": {
          "id": "bd8d25c2-e854-4b57-b879-b3b014e4b2a7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed111744-7499-4c47-ad14-75841d37238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3b6a71-cdb2-4568-930c-8dd08a0bb7f8",
        "cursor": {
          "ref": "447d98d6-874b-4bd2-b686-da0cb52f7bb7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a7940caa-6549-46a1-b2f5-79cb634a8b7b"
        },
        "item": {
          "id": "5c3b6a71-cdb2-4568-930c-8dd08a0bb7f8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "88d63721-abb2-4cd2-a473-11bc6a35da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4cbabd-7e6f-4d2f-8799-698ccdea41d1",
        "cursor": {
          "ref": "2c020b1c-2af1-4401-b13c-eecb7d4c2761",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8f8e5552-a4ac-4e2c-96e1-4515bce5fdcb"
        },
        "item": {
          "id": "0d4cbabd-7e6f-4d2f-8799-698ccdea41d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8764b620-e3c2-4594-83c5-18cb17f5eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202c4a7-b201-49b3-acf7-46b31fa64f8c",
        "cursor": {
          "ref": "58d7acbd-d7d2-4489-9c51-c65d3d32b666",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9618dfb7-e184-4735-aaac-e148d29d1d0b"
        },
        "item": {
          "id": "6202c4a7-b201-49b3-acf7-46b31fa64f8c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "07963c72-d639-4194-af28-1f0beb2c1063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0362f11f-0cf7-4f81-b0d4-c5bd366f1e18",
        "cursor": {
          "ref": "429ff483-6152-468b-9b4b-ed95eba57c9d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a658d33-a705-456b-8bb9-57a22759dcc9"
        },
        "item": {
          "id": "0362f11f-0cf7-4f81-b0d4-c5bd366f1e18",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "423e2afd-7f38-4069-a924-aaa64975c713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b4c3c9-5cd9-4219-964c-c517a07f6f37",
        "cursor": {
          "ref": "afe05766-ddb0-4872-86fe-926964fe4d36",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1149b675-9837-4d3c-bd71-e0c9904df4d8"
        },
        "item": {
          "id": "18b4c3c9-5cd9-4219-964c-c517a07f6f37",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "700c38bb-cad4-4667-8c71-cc52e6bfa095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28f7108-a9ec-41f0-bd05-649258fbbf26",
        "cursor": {
          "ref": "90ba2c93-db69-44f1-b30c-6331b24f47f5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bff250bc-13a6-406c-8d3f-af3e6f62a564"
        },
        "item": {
          "id": "f28f7108-a9ec-41f0-bd05-649258fbbf26",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4b1f61c2-ba3e-4c14-b30b-f4799d2f40cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e98fa0-537d-431d-aced-cff605aacfec",
        "cursor": {
          "ref": "5b85d17e-3ab9-406a-a0c3-9794a9ef1f91",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "43245c51-b5ee-4309-973c-52f0b2b6813a"
        },
        "item": {
          "id": "b2e98fa0-537d-431d-aced-cff605aacfec",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c8bf7317-f669-46f2-b054-541eb2ac5de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c01a3b-eb29-4324-9cf2-7d2e7d22335c",
        "cursor": {
          "ref": "3180e374-93ef-45d2-af50-a40362ba31eb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "85e3de9a-74ec-4de0-a6b7-f5d3b47b8dcd"
        },
        "item": {
          "id": "19c01a3b-eb29-4324-9cf2-7d2e7d22335c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fdf280bd-c5f6-4453-80ad-0e28f1482314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096f7dd4-5f94-4c12-81f2-d3fdebf6e693",
        "cursor": {
          "ref": "6f19e7ee-9bd7-4c88-a35a-8ee86a11f6c5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5015d685-2848-4aaa-bc3c-e16e94f2be80"
        },
        "item": {
          "id": "096f7dd4-5f94-4c12-81f2-d3fdebf6e693",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f1f25a95-0aa6-4a22-ba17-fb42bc2c38b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c241ec7c-7bd6-4637-a270-65dcc62073a2",
        "cursor": {
          "ref": "386a1b2b-e8b2-431f-9db3-ef5d516e6826",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c4d83067-00b7-469f-9215-855330877a97"
        },
        "item": {
          "id": "c241ec7c-7bd6-4637-a270-65dcc62073a2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "64b13915-123f-4556-a1e5-bce6a162ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b6a347-8105-46b1-815a-555a5fb7eb1e",
        "cursor": {
          "ref": "83f1bc46-e584-4e4f-9847-a7da9f57461b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "32ecb561-ce69-49da-863c-f456830c84f4"
        },
        "item": {
          "id": "64b6a347-8105-46b1-815a-555a5fb7eb1e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bf4f9a3f-b5bb-4fe3-b923-1129aa2c13e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b84f635-e464-40fe-9681-d53850c78cfe",
        "cursor": {
          "ref": "babdef2b-89f7-4129-98f9-451d546377b3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3c7e0761-b2e1-4420-847a-47bef75c91ad"
        },
        "item": {
          "id": "2b84f635-e464-40fe-9681-d53850c78cfe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "20908913-1724-4ea1-bb3e-81656ce80df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97ab0e4-3a15-4478-b99b-32d9f3312382",
        "cursor": {
          "ref": "3cd9479e-3d25-4aa0-9ee9-4b6dd0c83a0a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7d33942b-306f-4163-b990-f32d03efe752"
        },
        "item": {
          "id": "b97ab0e4-3a15-4478-b99b-32d9f3312382",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b0c486df-0172-41e6-be61-7e63cbad8b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b469e628-6b55-479d-8942-8cdcb7ad78f4",
        "cursor": {
          "ref": "3d7da96e-8332-4b58-aeb4-19d8adda2c3a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e66ccd3-8f98-4691-907e-75d5d0779112"
        },
        "item": {
          "id": "b469e628-6b55-479d-8942-8cdcb7ad78f4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d996073f-5963-46fb-9fb2-c5cc75f0ce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43ed629-4340-4ea1-b6b0-decd6d45934a",
        "cursor": {
          "ref": "f7caaeb7-843b-494f-aa18-2324932c7ce4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f686df05-d7a3-4802-9908-a6f31f52a191"
        },
        "item": {
          "id": "a43ed629-4340-4ea1-b6b0-decd6d45934a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a4c4ccae-f99d-44e8-b30d-91b5edcf6434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047e7f3d-f04e-4e1f-b553-3408ed195fe7",
        "cursor": {
          "ref": "848d4afb-627c-4b92-9b7a-dc6a90e31d50",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ab344bf7-b6ed-4113-bbba-76e63c04f619"
        },
        "item": {
          "id": "047e7f3d-f04e-4e1f-b553-3408ed195fe7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e08aeb0-2dc8-4703-a65d-85896e6ed2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e035d399-aef9-49b8-843f-2c8e071ce9e8",
        "cursor": {
          "ref": "bdd30cb2-72cb-4d53-85f9-b07cc93c5f6f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d256040d-47d9-49f4-9624-21922d0c2404"
        },
        "item": {
          "id": "e035d399-aef9-49b8-843f-2c8e071ce9e8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6a1c70c3-fe6d-446c-ad3b-77d21ceae362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f642f5a-dfdf-416f-bd23-056d803aec08",
        "cursor": {
          "ref": "8c010bf0-1147-4eed-aaa8-cbb62a0f242c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ad43a699-3d29-4f73-9cf2-54cdff472cb3"
        },
        "item": {
          "id": "1f642f5a-dfdf-416f-bd23-056d803aec08",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "044d28de-e892-4627-b5ab-0e314251290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8668090-f7d1-4f0a-bd86-e4999d950c73",
        "cursor": {
          "ref": "0a4af58f-0e06-4d8e-9386-f338f6fca439",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "10482fcc-13dd-47c3-a16a-0d03d0b70af8"
        },
        "item": {
          "id": "d8668090-f7d1-4f0a-bd86-e4999d950c73",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "62026fd0-8a57-420d-8798-3b717943c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0bc66f-777e-4848-85c8-38a23e321398",
        "cursor": {
          "ref": "9d49935d-0f13-4d63-9ede-ea8962d3b640",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d00869e2-f7e0-45fc-ba90-39465c77b970"
        },
        "item": {
          "id": "6e0bc66f-777e-4848-85c8-38a23e321398",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1361838a-6037-43c0-b100-d4b0d9e2b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477fa109-d93a-4330-9a08-a97bba2ae6e4",
        "cursor": {
          "ref": "84cfc427-75a3-4524-bad9-3f93a735bf8f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2502924e-87e1-463e-b7c5-71a2fd69509a"
        },
        "item": {
          "id": "477fa109-d93a-4330-9a08-a97bba2ae6e4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "79ccb7e5-e5fa-4c6d-af8d-a58429ec3e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb135c79-f473-4551-b65a-5343aa866b6b",
        "cursor": {
          "ref": "d9427f98-e1f2-4cfb-964b-fe62f311d2a4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f26fed8-de29-4c72-af50-8044cce12d87"
        },
        "item": {
          "id": "fb135c79-f473-4551-b65a-5343aa866b6b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4098285b-297f-445e-9165-74dabfb15a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1292e62-ccbd-42a5-8039-c74d5dc34a0f",
        "cursor": {
          "ref": "badf119f-966c-44a0-b1eb-cfe24d1e1cdf",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1630050-14cb-456b-bc77-a91b150e36a0"
        },
        "item": {
          "id": "c1292e62-ccbd-42a5-8039-c74d5dc34a0f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e4aafccd-46d5-4f2d-b13b-82a18ae86569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2f3e2b-555c-4f47-9e5b-189ebcec6211",
        "cursor": {
          "ref": "e7392c4c-0d78-46ba-9969-c8daf0e6b89a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "78c388ab-b22b-4517-80bd-4b6b7a6fbe3e"
        },
        "item": {
          "id": "3d2f3e2b-555c-4f47-9e5b-189ebcec6211",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d99c4c0b-d897-4f3e-b078-f75cc2332cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf3c73f-6b6e-4f83-92b4-26322dcf27eb",
        "cursor": {
          "ref": "33c2da0b-4916-4e37-a36c-ae04ed443944",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a99e2adc-fc90-4649-942a-49d3a4fb771f"
        },
        "item": {
          "id": "eaf3c73f-6b6e-4f83-92b4-26322dcf27eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "75512857-b6fd-448c-944d-bcd7f78a7719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c11a74-b21e-4776-9139-be5841374d75",
        "cursor": {
          "ref": "6d270e76-a369-485a-93db-a9c2ec5fdc4c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ab66aeea-fa4b-47ed-a371-cb775fb7453d"
        },
        "item": {
          "id": "68c11a74-b21e-4776-9139-be5841374d75",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "56bbcdbc-a74d-4fce-a85f-fdb776b774ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e51fc1c-48ed-4b1f-ab63-4d3345817bfb",
        "cursor": {
          "ref": "f3d20d4c-aed7-4a22-89c7-c03d6657613c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c92fc5ef-46c1-4409-87c0-89a74956a4f2"
        },
        "item": {
          "id": "8e51fc1c-48ed-4b1f-ab63-4d3345817bfb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4c042d35-495c-4564-bf90-34285c85a495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b80c8db-fcb7-433d-84ee-4ec523d50271",
        "cursor": {
          "ref": "6bfa91d5-a27c-4b8a-b2ac-3a7c4f03037c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02943b85-2ef7-440c-8e00-7a6b578cbd4e"
        },
        "item": {
          "id": "8b80c8db-fcb7-433d-84ee-4ec523d50271",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "41221dff-0ae2-459c-afa4-225860e76518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe2ba7e-7ac1-4fd3-b838-ddb98abb02bf",
        "cursor": {
          "ref": "ee2257e7-0686-434c-a2af-4de4aa399d24",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e8737aac-6ec1-4983-9bf8-3bedb5a0f5e8"
        },
        "item": {
          "id": "dbe2ba7e-7ac1-4fd3-b838-ddb98abb02bf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1f43ab2a-54fe-47c5-a636-4b62a516a7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf0df1e-864c-41f9-b19e-39b1fa3c0a25",
        "cursor": {
          "ref": "7d11a85c-4981-4ff3-b65f-a3eeef057756",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1654ebbf-86eb-45ed-9b85-1edb34e62461"
        },
        "item": {
          "id": "baf0df1e-864c-41f9-b19e-39b1fa3c0a25",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9e474760-74f3-4053-ac3b-e9c7c34ff65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92c5660-89be-4dc2-876e-36e25f8f311d",
        "cursor": {
          "ref": "0c68ee4a-e7bb-4819-805c-383e9b919b8c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8c9da232-9b70-4d6f-b624-6e8ebc80fb44"
        },
        "item": {
          "id": "f92c5660-89be-4dc2-876e-36e25f8f311d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78e78806-3d4c-49da-8d0f-6551296dfc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd44b2ae-0522-4356-9100-57ca7ec0cd80",
        "cursor": {
          "ref": "dec0d150-1a7f-4612-b65a-f4ebf7216b72",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "272c6c31-ba7d-40c9-bfa7-8a97b0714a62"
        },
        "item": {
          "id": "bd44b2ae-0522-4356-9100-57ca7ec0cd80",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5f06a3cd-ec8a-4887-ac90-90d06df8945f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383ef5de-2958-4d8a-ac93-83e26fb10d43",
        "cursor": {
          "ref": "b5ce130f-c11b-4d2b-9b2f-e147f6f9cd68",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c5faaf15-a8cf-4751-bb91-a0fdfe9235fc"
        },
        "item": {
          "id": "383ef5de-2958-4d8a-ac93-83e26fb10d43",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "54401a60-7e57-421a-8d63-95ed40895913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c0f9da-2b45-4df9-ac94-e4b9b48b9dbe",
        "cursor": {
          "ref": "b891adf7-b2ec-4869-8c8b-2f835a6fa3f8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2658802e-33ae-4f5a-b76c-a8ef27940260"
        },
        "item": {
          "id": "83c0f9da-2b45-4df9-ac94-e4b9b48b9dbe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "964646a4-3df5-46cb-99af-f47f91d07ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8118558f-ebca-403d-ae58-2b7e5731213f",
        "cursor": {
          "ref": "149df032-ca52-4a44-afa5-b7355c581b4c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "12a1ddb6-420e-4d0f-9b13-33028dee3b35"
        },
        "item": {
          "id": "8118558f-ebca-403d-ae58-2b7e5731213f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ec252ef2-b05a-433f-a69a-ccbb205818bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d8bc6-b380-4e47-86ec-3ca975303f7c",
        "cursor": {
          "ref": "7ffb4d79-7ebc-487f-a194-a6a7c131fc19",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5a50a75d-0105-435a-9da0-976bb566644b"
        },
        "item": {
          "id": "b82d8bc6-b380-4e47-86ec-3ca975303f7c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "69b54b35-1d02-46e9-a4b6-da6b6d1e4743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695833e6-71c4-4c06-a476-bc44e4820f45",
        "cursor": {
          "ref": "a971cafc-174d-4dc2-b75c-7b6617b43928",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d390328f-c76a-4366-b7cc-1af34129a0b0"
        },
        "item": {
          "id": "695833e6-71c4-4c06-a476-bc44e4820f45",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "77fdb269-dba0-4d60-a571-8710b6b8ee73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2f873d-d5e4-42c2-b8bf-d3a3dd1de19c",
        "cursor": {
          "ref": "9d9acbb8-5108-42b9-ac9a-9a99919525f8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2f90fb34-c6c6-4d5c-8765-4dcb08712d75"
        },
        "item": {
          "id": "9b2f873d-d5e4-42c2-b8bf-d3a3dd1de19c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5b69c0c-2909-4322-be87-9865a5dec0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5921f239-973b-4078-a08f-6ba759528ff1",
        "cursor": {
          "ref": "e868988f-6471-4eac-b724-2174a774855e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c43f73ff-0a85-47fc-b41d-77921a156646"
        },
        "item": {
          "id": "5921f239-973b-4078-a08f-6ba759528ff1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "093890e1-a77c-40af-bce5-c8df82cff0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8621882e-d80d-4df3-8033-eacb555f675f",
        "cursor": {
          "ref": "011fd194-ff09-46aa-855d-e7022f20bb4f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ecb2305a-1717-4445-b6bd-dec5c3a1cfc6"
        },
        "item": {
          "id": "8621882e-d80d-4df3-8033-eacb555f675f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "16b99935-dd08-4032-8a35-ff0d0f482c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c522fee1-c4ba-4136-8b3b-70d3db28928a",
        "cursor": {
          "ref": "c0bdea83-6f57-4da5-bb98-f35cedbeda82",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4907ed42-6636-48c4-b002-af9cf31ad6e2"
        },
        "item": {
          "id": "c522fee1-c4ba-4136-8b3b-70d3db28928a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ec99e64-9966-4e10-8875-92a1e06e6907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22594b3-9c54-4137-8e8d-7921099d5888",
        "cursor": {
          "ref": "3d6ba347-a391-4258-963b-a2f4442d098c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4288b9a7-d9ce-4542-b71d-eb3e99dbc6eb"
        },
        "item": {
          "id": "a22594b3-9c54-4137-8e8d-7921099d5888",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2454a4bc-14eb-4bc7-abce-b5fa5cebdeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103924c1-783d-441a-a840-e7d34babdbaf",
        "cursor": {
          "ref": "269fe103-0d0e-4127-a116-a545b302d4af",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f6aa610c-ee0d-400a-bd73-bb622ec1edc4"
        },
        "item": {
          "id": "103924c1-783d-441a-a840-e7d34babdbaf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d7ea03d6-639e-45f2-8b5e-bcccf6197e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d631ecac-c5a8-42b0-9468-8db48913a39f",
        "cursor": {
          "ref": "2f3198c0-3942-4d0b-8786-6846215b6eb3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7e585559-8f64-4edb-be44-fee16272e6c8"
        },
        "item": {
          "id": "d631ecac-c5a8-42b0-9468-8db48913a39f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "35f429e9-807a-4075-af93-0115f08502f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c55f01-f2c8-4549-bd67-0ca4fbf35270",
        "cursor": {
          "ref": "50873205-8278-48cb-9aea-27ad7a81b2ed",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7054ee9e-335f-45e3-a807-86f13e3e233c"
        },
        "item": {
          "id": "74c55f01-f2c8-4549-bd67-0ca4fbf35270",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "da533272-024d-46dc-84cc-5133d42a0b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3af2a3-abc2-4c31-b549-b8474801e0e0",
        "cursor": {
          "ref": "2e8e6403-d2d1-4e42-9aec-6c3cff1c75f7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "691f3dbb-8019-408c-a72a-5734bd0997bf"
        },
        "item": {
          "id": "bc3af2a3-abc2-4c31-b549-b8474801e0e0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae044c12-4837-4bb2-b7b4-2b11290ed73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b41fa-6096-44c5-8ca5-0bf2c3cdb584",
        "cursor": {
          "ref": "f3d9ed68-ad4d-4054-8bec-2cc31491f736",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2cd7ba88-27ea-44a2-8aab-beb837f5651f"
        },
        "item": {
          "id": "5d8b41fa-6096-44c5-8ca5-0bf2c3cdb584",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "057e8ad8-f96a-4410-8fe6-6402e3db549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a2c387-7a27-4064-a2a0-b20e6748e8b2",
        "cursor": {
          "ref": "cadf3b4d-14ee-407a-ac1f-593c5fb6b1dd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eefe0700-aa7b-47b3-b840-5389fc7f52ef"
        },
        "item": {
          "id": "68a2c387-7a27-4064-a2a0-b20e6748e8b2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "77a2a415-ec6d-407c-b883-949a66e4be8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e507080-120e-45ff-b101-3d6f6a7f9c36",
        "cursor": {
          "ref": "c1d097c4-9d71-4c3a-a6e7-221f3061b388",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9b27561c-f5a4-4b3c-b5b6-e7f7955726cf"
        },
        "item": {
          "id": "5e507080-120e-45ff-b101-3d6f6a7f9c36",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7b7ad4b1-0f8d-4f82-87ea-99714d96d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83055ab2-0cbe-43ce-b464-f3857ecd22b3",
        "cursor": {
          "ref": "a5691b44-633f-423b-97ca-f8eed54097fc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "20308b71-09d3-42a1-986d-cf5b4e971bd0"
        },
        "item": {
          "id": "83055ab2-0cbe-43ce-b464-f3857ecd22b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "505be9a3-01c5-488b-b5a0-a433afa7f769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0dc3d0-804a-449e-affc-633b1e9fcfa1",
        "cursor": {
          "ref": "a571a94b-4be0-457b-9887-45875981a363",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "642a553c-c4fc-4c08-a38a-cde2b924dc97"
        },
        "item": {
          "id": "ed0dc3d0-804a-449e-affc-633b1e9fcfa1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e3cbdbe1-70b3-41a1-bfa3-3e1671173cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c3a027-29c4-476f-a098-5d1782fe8852",
        "cursor": {
          "ref": "6f896b76-7138-4398-8d54-e9eaa5e551d9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8f4e5630-34f8-4ac3-9658-69ade893f88c"
        },
        "item": {
          "id": "f0c3a027-29c4-476f-a098-5d1782fe8852",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b4bc83c2-c726-4627-beb8-257cfa04cc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4690e7c3-9491-4d6e-b3c4-663f051980fe",
        "cursor": {
          "ref": "598c213f-2f10-46f8-a5a4-ea3e216c3c4b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "73ded815-1fc0-431a-9415-eeba708d68c1"
        },
        "item": {
          "id": "4690e7c3-9491-4d6e-b3c4-663f051980fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "236c996c-b951-44d4-8278-f20864cd242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d136a89-d320-4936-a10e-c78000d9a908",
        "cursor": {
          "ref": "e5cd77ce-b14a-4c43-9a3b-2ff0ad5fc890",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f70ee36c-2c4f-4724-bd95-2e520d4cffa3"
        },
        "item": {
          "id": "8d136a89-d320-4936-a10e-c78000d9a908",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b449852b-3c0b-47e3-99cb-6eddf1c02afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7255089a-b2a4-4a9c-a690-0d0a1c6fc757",
        "cursor": {
          "ref": "4f9b31a5-8473-4e70-98f1-d30f5756113c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f0c2b2cd-37b8-4132-9a01-ff42fc557bb9"
        },
        "item": {
          "id": "7255089a-b2a4-4a9c-a690-0d0a1c6fc757",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0ecc7de9-ef71-4e65-8c4c-a6815965e816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d1d65e-0856-4094-a9f1-13f854f39365",
        "cursor": {
          "ref": "6e71c929-7ac3-43ab-b2a6-d4e5c0be1776",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8610620c-fac9-4b9b-9517-8176a33129ca"
        },
        "item": {
          "id": "d5d1d65e-0856-4094-a9f1-13f854f39365",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7b139937-94d8-4ff9-af9f-a20313a36555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0d9bff-f435-44b8-992b-83cec827abec",
        "cursor": {
          "ref": "037a9a0e-d5d5-42ae-aedf-2846ce0253f6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb14953f-1ff3-4e26-a460-9b23ce24afca"
        },
        "item": {
          "id": "5b0d9bff-f435-44b8-992b-83cec827abec",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "185945bd-3f8a-4ded-8f82-4e38d13a8784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b35f9825-ab48-41c5-a627-c7cc4523e044",
        "cursor": {
          "ref": "8070c40b-9903-44e7-a0e2-e81235739722",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2f5505aa-88e5-47ab-8113-a2bfe20fcf05"
        },
        "item": {
          "id": "b35f9825-ab48-41c5-a627-c7cc4523e044",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3121b59a-2bea-4c18-93c4-4c95037cca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "6fbb3e14-4d12-45b6-82f5-de7fba2c4ff1",
        "cursor": {
          "ref": "2c9a99c1-780f-4e33-9a75-195cd5de9844",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "989f4035-5411-4deb-8cfe-0ddbf01b2b31"
        },
        "item": {
          "id": "6fbb3e14-4d12-45b6-82f5-de7fba2c4ff1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "06d6af6e-8bc8-4ad3-acff-72f2df6727f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "1c423b67-f5dc-48cd-9809-99ebb8307e52",
        "cursor": {
          "ref": "4929ec47-31d8-4b65-b69f-934bc9712559",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa63cb1a-9c9a-4571-b7f0-32fda60be91a"
        },
        "item": {
          "id": "1c423b67-f5dc-48cd-9809-99ebb8307e52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08d5ec94-08ab-426c-b78e-bb0b53f1596c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c423b67-f5dc-48cd-9809-99ebb8307e52",
        "cursor": {
          "ref": "4929ec47-31d8-4b65-b69f-934bc9712559",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa63cb1a-9c9a-4571-b7f0-32fda60be91a"
        },
        "item": {
          "id": "1c423b67-f5dc-48cd-9809-99ebb8307e52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08d5ec94-08ab-426c-b78e-bb0b53f1596c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9c3bc3-4a21-4a01-9d5e-2fcb4cf197fc",
        "cursor": {
          "ref": "42565923-eafe-445b-ae7a-64ee1de9e27c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "eec20af7-0ef8-449d-b981-b42bdf560db8"
        },
        "item": {
          "id": "fb9c3bc3-4a21-4a01-9d5e-2fcb4cf197fc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2a2c3506-88ef-4bda-affb-17308279c8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b589dcc9-a501-4fe1-ad8e-486d2c307bbd",
        "cursor": {
          "ref": "da8dcaab-08a0-4744-939e-f5cbdef3e165",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f8ba1e6-f822-4e3e-a9e5-2d137731f3d3"
        },
        "item": {
          "id": "b589dcc9-a501-4fe1-ad8e-486d2c307bbd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e6e30a5-7515-4527-9f73-40caf72251ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}