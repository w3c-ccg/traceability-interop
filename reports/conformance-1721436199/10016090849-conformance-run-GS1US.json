{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4a59765d-6a00-482a-9189-ef18783fc2fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b172edb3-70ce-467d-87e2-29abb655791d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52211173-6292-4beb-b70a-5bfa9dd44c24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ceebb7f6-cfdb-4750-95b6-831c2e8c6d68"
                }
              }
            ]
          },
          {
            "id": "20f147c2-5e57-4e06-8535-246d98ee05a7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae6d2caa-96d4-4e9a-bc5c-a25a8670928c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d4ce69d7-b701-47be-8040-7e0af863a47d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3f785e82-9c1e-493a-aa1e-dca7779d946c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a34586da-81c3-43a7-9be0-d1765da74426",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5023fbc0-8d08-4e02-96d3-8956e55957ed",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d6ae7a6-1b9f-4d52-b246-25dde9e90e6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12e98ca3-578d-475a-b602-a479ded743a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9996a21-1e82-4ece-9707-940315a22df6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd2f4cfa-bbb4-4d72-b2e1-c6411b4c70a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2cd66764-fec1-415e-bb90-3f74d67adf6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3e15615-aa0c-480c-a42f-78fa9e02c345"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55805101-3d67-4b05-a438-2dc5fdf39334",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7292b5c2-4214-4db4-9113-bf34104bb9e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc372c34-7a34-4192-82a4-59035631c56b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23c505af-a80d-49fa-8bf3-f57003d3acb6"
            }
          }
        ]
      },
      {
        "id": "ee41fd2c-99c7-4d0f-a00e-1e8de1c3d32a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2439e483-53ce-40f8-b600-8ef4ed477f05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba514328-ea2e-4846-8a3a-6116e1d96e6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7460c1a7-114d-4ad1-8cad-87bba488bd52",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b9f002-27f1-4983-be40-9b53a3e3f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb50c2b1-0548-4057-86a6-0b711206c6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e63052-d9ae-406f-b745-4b5acc9cdcd3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a7680-81ec-447d-94c2-17ad78c02603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a36f589-4f3b-4b4d-931a-086fb9cd7627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444eadda-41bb-4cec-9745-61e7a5821c98",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3144bb-ccce-4f76-afdf-a9060ff9a75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b14c6b22-99f4-4805-991a-b6989ee9ce65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a73e311b-94c8-4d0a-9abe-770a1bcb2c51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e683e583-0dee-471e-b004-4ddee30bc889",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fb3253-9986-4f43-a299-bd50c6c138d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a1e7dd2-c24a-4167-af32-2d1dc8c78021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9c18b3-41a7-4139-8971-b911bd6652fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a53b96-e6b7-4220-8581-394b0bf32fd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c05de4a-4427-4b54-8f95-4f44c8454798",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a65bd9a-9f9b-4bc8-a397-265bb7c4a44b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4e0edc9-585b-4900-98fd-5f573355e0a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3ca51310-644a-44a2-9b5c-46de759ecc7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b851008-203e-42c6-9ceb-1c555ff1c652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4dcd634b-4cfc-489e-97ab-18cabde5dffa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be50ef6f-b769-4211-b24f-bd799ff06e5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b96ba55-9fde-4aae-86dc-4dc72ca7d1b8"
            }
          }
        ]
      },
      {
        "id": "f01ee871-2765-4fcb-ac45-c5c007740315",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "07b46b4c-5840-4215-ac38-86dbf48aaf99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "318f4161-03e4-4d10-a7a8-fb2681428c56",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4cae1e49-0f08-433c-9f23-877831353bd6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3a5234-c859-4a45-a8cd-cae5760f69e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b790312-f888-4055-91d9-7955f4e77641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5afaff-09df-49ec-84c0-53eb4ce4c728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2afaf3c-800a-4015-aadd-07dccab70e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08bbf1f-bc05-4074-afd6-4fa446497786",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee68cf9-6bba-437c-b75d-0bb1aabe8a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72ef581-adce-4a00-8a35-5a1c1c8778b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a3ad72-c533-45e2-9b0f-0d5a81d28a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e3c2f46-a0af-44d4-a3f5-ea8ea13e330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ced421a-4668-45ea-abc1-731ff51d33ae",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0201d88-13e6-4bc5-b776-bc1dfe510f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63da6c50-0061-480b-8734-555f459bb1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de557052-ae9c-411d-99a3-84e18aab7a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad883815-7675-4e37-a024-737fdd66bf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469e1222-712b-4f01-a109-301729fc7b54",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7398b0-033a-42ec-83d5-5105ba337db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bd067f-c3eb-4dc9-95d0-d06d1548689e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bc98be-9abb-4503-9856-ed9a8515f841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "613e534b-615c-4726-9a45-d7817807a2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e39ac8-c152-4444-94b8-5be151c85978",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c65001-b99c-4df4-8391-b0deb877304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c261c-5c15-4b67-8a8a-f08006c5b12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6098d04c-e4b4-4cee-8a0c-db3f0e1a9c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c372e4f-60fc-41d5-a127-a72778cec551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe73513-5199-46b7-9608-b612505db17f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9e49da-a4de-49e2-bc7a-0027542f0cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8aa764-b17d-462b-a4ac-54273e07645e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34226b05-dad4-4bfd-8a6d-5f6c7b23a0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e58168a-83ba-4551-ab41-87b13f005941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792a40aa-3424-4241-986f-d84b26bf00d6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db25122-b7f8-4bf6-9320-057084840838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071d34cb-dd32-496e-b96a-b43dd21c8f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e705c-831b-475d-95bb-2b66776c057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfe467ed-20ee-4545-ba7e-d77ebaaa321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62f2042-ddb6-4228-9a66-0347da5960cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a09ad23-0bdb-4fda-be3b-0a56fed1eb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b4feaf-49b6-42d3-8ccc-560f74d829bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29b1961-70c3-4781-b910-985d3e3fdbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df89c0eb-f381-4426-bf1f-2e537a625aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc89c3b-a5fb-4b8e-8b82-cfd718dbc809",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a9c45e-bf52-4d49-ba59-4024e3f25a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc59c20-c714-42ef-9322-fc5e6a7e5a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a5da9e-3f63-497c-8a9c-15f939b1d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "160927df-d956-4101-9061-35b860db6ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd34a58f-2a86-4de7-88d6-ba5970153c8c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08a431b-3ec9-4160-872b-d176bd96b077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7fd3c0-08f0-4443-ac22-1a263216555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed77452-169e-40eb-89ff-a876ed5230f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2565b871-144e-4677-87ad-d70d87d460ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b09ff89-587c-46f7-9d74-423eb65f6d48",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c0fbb3-5dde-448c-89ca-6e5fa1834641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c8f4c0-0862-4e9c-82f7-47ef5a73110b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d404b46a-562c-4178-b6d1-313d29876fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d35084-b6e0-4779-8423-2f31530d24b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021cea6-1f88-48e5-82dc-73abef229e8f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c71769-e299-4642-aa37-db4d16b80bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d2a3ef-0298-422d-8da9-416e2a45ee50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6c73de-4b3f-4c1b-96e6-ef91b00473b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9bca3b1-431b-4d0f-b317-ed4d3a0a9575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ff6b64-0853-4a35-b773-3169fc84f14d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdac606-7cf1-4aa0-8eaf-9eaa5163225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f16af1-675b-482b-b3ff-2781a07857c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cd7134-07d8-49f5-8d44-f0683395c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4525cd1-f96c-4f91-99f7-2ecdaef57d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c02a04-280c-496c-bec5-aae87d0d5262",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2722a50c-ed36-4f20-b554-3185b3bf3131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2399558f-1b45-421c-b848-8e7799641cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c7f3ee-4532-4f97-8233-fe82315928cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceabda94-a667-49cd-8b93-0d5633321b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc43129-4cdc-422d-a6c2-9cc6e7bdb41e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbe6353-2890-4602-9014-67dcea1efd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c04164d-65c1-487d-b110-369f2fcc465d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d57e44d-0563-4985-ab78-a06f96182e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72d35dde-edd8-4b24-a358-d3e9d5aa9b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216919d5-844d-4f47-bdf1-829d37863c87",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63aa37a7-7c2f-405b-8f3b-9ac6db5222d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfafa00-a81f-43e7-904c-a9e09bd29125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d2421-2352-4e5b-a301-1a0e061403c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6212a36-ba7f-4977-b4e6-b963300a8cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a3ed9-d1c0-451c-81cf-74ed382e8b08",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138920d5-5867-47c0-b8fd-b808c6e09d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a279029-1789-4d59-9a54-3ab30a8b6f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a7af42-cc99-4111-adcf-572480842296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5defb49-3ffa-47da-8cfd-433d42a068c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a2808a-70d2-49d1-ae5d-b8a4ecfb314f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bac09a0-663a-4d90-acfb-dd0a338c4c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03eaeef3-e53a-4931-bd06-8a978699327e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf055ae-79c4-4d53-b998-a4e4eed34d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "061cea55-3864-41b2-b1d2-54769bc8f574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd6f05c-b905-486f-98f8-f833e5b71d37",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc3105-6c97-49c1-aa95-adb05bd71b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac652781-607f-4a6e-83de-f3fb489b5209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a65d18d-16fb-45e3-be2e-11b9597870ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "840d9a10-585f-446a-8ad7-f6b53d2eb013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ca6a59-3657-43a0-b223-f4bf25f6e7ea",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a75513b-9adb-4999-b672-df234751196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1303da56-ac76-479f-a6c0-0fc495bd1031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed55c024-715f-4b30-8194-0d8f7b5fab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a284ec2-3b28-4d28-8cb9-ad85c95caa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203b0759-8e08-4bdd-82fe-d14c424dda91",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9db5115-7698-4357-81cd-72be30822a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac3810f-18fd-44a3-a793-d877b1cfd122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c545b1b-c907-4384-9c21-2a0e49b749ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98227afd-ef60-45e4-9905-1a32a8fb7ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73435624-0f22-451d-a876-3eb4871f7e9f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f82d1c-d206-4655-9057-f349d411e92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7042e5e-68e2-4068-b198-0cabac4f08a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d886079-3011-434d-84cb-3d63c8b789c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f120cc92-e1f1-4051-a392-9b336582e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318946d2-707e-4421-bd4d-3553ce9668da",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857fe546-be9d-4873-ba46-8f287b79f313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4439369e-2c00-4537-8f57-4e984f684c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122b00a9-4e46-4396-bc90-82c1ac12829c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0c11d7-b99e-4905-92d6-741271967518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41cf1f9-55f5-4ebb-9116-62085fa2d438",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcd74b1-ef28-44f7-9518-64161d042221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b67c67f-d2d2-48a8-8526-8f0c877e6114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87df15eb-e274-4b3b-97c3-fa733358a4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "913ce6a6-ac17-4b0a-8452-6a0b0c7fcd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8e5e14-91bb-4733-9d76-b3e591e3ff7f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91391c0e-d5b9-4d4d-a4d9-c6a6af76d1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc561ca-b399-46c0-a66f-79a15a7cd0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb128fa3-445e-4887-aa47-e525e75aab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24ac83a-c9f6-44d6-9477-883ee8389ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f59d203-8f78-419d-8a98-e03a51218dcb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d3ac43-9f9a-4f45-a821-9ad386e81bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c78b73-3c1d-4dfb-a558-4b26d15fec48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3adff4d-faf0-4ca5-8156-532214d06ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "774d0df1-2551-4552-b9f6-304b78076817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ce5910-c75d-4da9-9457-4349b3c9c572",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de94f90-9d3b-4549-a034-b468b65a864a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010eaed8-3750-444b-bffd-4fecf55c15ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0432bfd6-f03d-4e6e-b601-da1396bd4d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d21e21-d458-415e-af4f-e8a075b95983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eecacc-364a-4a70-b14e-409cea74aff5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fee506-0059-4273-b01c-b3ced09c2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b461f80-8297-4c00-82c4-f983372ad98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fe96ac-1d96-4638-8226-ad271ec112f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4978a6-9f44-4078-bd9c-3cfcec11f6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b78c6e-44b1-4984-a689-d0051c1995e8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4235df9-358a-427e-8fe6-bfb46d3245a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28528b7b-927e-4fd7-90a2-fd5d529ba64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162b2a23-e174-4922-ad9a-57dae54ab5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef882f21-ab9e-4b69-adf6-89cb77144349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e901984-857f-43ae-b19f-45044bafc27f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e6867-411f-4a39-af53-4dbd6272fe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77779e4c-99af-4657-85f4-cb8c59f5244c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c8b52a-2603-4da5-b9a9-8caa2526b566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eede2e48-1971-4282-b58b-8b2a1965566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7da6c6b-9478-4d47-a547-73f26ef0404d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f55a032-c176-49e5-97fb-416c81356ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289265d5-2524-4bfb-914c-6d6fbb3dd2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f7e5ee-6b63-496b-b223-a5eb4cb1b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "187dea2d-066c-4732-878b-cb40f08f16cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf3455b-c44e-4d54-b5dc-37355bf42992",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e19858-d648-419f-b7c0-a92adf801fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253380ea-c6c9-4779-b0ba-ea84f6f7dad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa80812-8e57-4579-a1c0-3815d21400ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15921186-c5c1-43d6-9c71-a18de482f685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9880ac-45c0-486b-a9b2-a69a4a8fc7ed",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a6f4a0-eed5-4bc8-9f6d-2318e52478d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60865bc-a110-4c7f-930f-f87413f95824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f019065-16b3-4f7e-8a6e-2b0eaa3b891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00624a0-a61a-47d5-b2e6-b9997d9030e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95737279-c205-4381-8a37-5598e60617fc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3878620f-f7fd-42dd-92cb-31c99703c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caef689c-e09b-4009-b39d-966f04725c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61ff0cc-eec2-4cb0-bba8-515cf6960895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ea5fe1-4793-46f0-85fa-82682f95eb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7553e551-af42-425f-9e1f-f3f8c6ed7b67",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd977b9-1b9c-4f04-9da9-67e218b76d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de87a181-7633-497e-88ad-f4c051b4ebbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e49412d-ec79-4751-8340-cc894ced273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f85bd285-bfa4-4ca1-8c7a-75fc708c36db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff84dab-6fe5-4ece-9e57-3c7332ba1ec4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014f24f5-a908-4b34-97b7-b657d6b7abe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86e07e6b-6001-4eed-853c-aa3bea7e9f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c85212-560f-423c-9ecb-375c601f882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2edf43-d451-4fca-9bf7-e5ff7ea73aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c8c472-ccce-4ff3-9e8d-d9d7f3b28859",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf8926f-7dd3-428c-af76-48f02f88ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71385df7-74f3-4200-addf-ae037b19c24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdab1788-03f0-4d46-8810-d2efdbade6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69a800f4-51fa-4516-b953-0dbc1ce89250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2726beb-3f31-4232-a4a7-927aae587ca6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba80963-f931-421a-88f8-2cad4ab3be40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c35a2c1-aea7-4b82-ab66-d46c9b3e134f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1397b205-e40f-4da6-bd0d-2cdf4df4ab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b01083-e5ff-4015-8e94-a1ba28e3ecda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a66b41b-3150-49e4-b7f1-b99d8e5442c8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193b1bff-ce13-4213-a3e5-ef28e956b6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9183a78f-0907-4688-9f49-2cd7892daefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fb2cb1-43a2-4952-b726-615c9c7002b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b38ea00-89aa-473b-b2d7-26acb15f7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e898a9f-6f54-4786-9597-1d97901ec6dd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b187c3-f54d-415b-9a32-d5917b8cb7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3f1f05-c5ee-459d-8c50-0057e283ab64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bf47a0-1007-479c-9b94-c0086d114b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e620b8-470c-477b-9756-2f89cf93e43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fb97e6-f1ef-4c96-9fc3-c2e919dd7b8a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c4eb78-0e2e-46a2-a413-3d312e0feb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5dd72c-8625-4d54-ae38-bcaa2e31c68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e93094-129b-4774-9b4b-a44f48d60a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5a0f40-bd2c-44fa-9ad6-96385e6d674b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349276da-d2e7-4afd-96b4-2ca9a264d476",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e18acca-98d6-407b-a844-701d2b89d304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d4e8a3-a093-4892-ab25-5d8c24cc28fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487dca59-f0f4-4b5b-a797-0dbec5bdd03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c109e3dd-a0b0-449a-ad33-54c7f26d293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ce5524-54ab-45a9-96f1-39206177f884",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9608bd8b-e9c7-4650-b0b1-3ab94de35c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f515e294-36ee-45bf-89ac-b84755525b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f77cc4-951a-46ce-aece-e762d9b7a0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e383a3dc-29da-4a42-b83b-53d90b588907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0934f951-52dd-43dd-a0cd-7c94123d6910",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9146621b-b922-40a8-85ff-c6baf90096eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54bed2c-e090-49e9-935c-9405ffdd8d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815759f7-6baa-4684-a884-0a6bfa596db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d41f64-2489-4571-a44e-e7587b24619c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf95616-3d05-449e-87cd-59f56aba4bec",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e35d55-cd77-4439-adfb-a72defe7d22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c96ec6-5407-4b14-a7d7-32916e3758e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2282b8-3403-47d2-b8ed-185dfc8282e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e60b5ec-1f25-405f-95cf-5403e2d0cd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1f36d6-c4f6-4b56-bc49-ddba988dc5a0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f112e07d-737e-4cf7-9c51-226d8ae36098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315f553d-da4b-4033-b13b-2b131a488ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d49c0cd-0167-40eb-bf53-bbf694307e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e978d8-1ef1-4e7d-8a32-6df69675ecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9cf58c-e6af-48e2-8772-6d9ce3438f4e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e675ced-0ea4-4deb-a8c6-16c15e84fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ead950-f008-4919-a08b-3169c2279518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744a58da-ecee-4315-a559-d1edf403b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a95153-c1a5-4b76-9058-c746f07515ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3faa226-e035-44ee-933e-129ac5cf320e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f5eefd-cd85-4f1d-94a2-b06b3fba3ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36fc163-e96d-4e6e-a3f7-ba3b8289da64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa3ecd3-8af7-4df1-8fd9-bce704925d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9320364-41e3-464a-984c-11b457edb62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad41cb05-e692-4faa-92df-f110df273b2a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d24e0e-1b8d-4518-b76c-f844ce6987d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7cf1fc-728f-4ac5-bf68-4de435bc0085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5902efed-0e8c-4c47-98ce-98929881e8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ddb687-243e-4bb3-9228-cd44b6263659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671dc350-2cef-4ff1-9c87-bb0c1c8be4be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d12b66-9d2d-449a-890c-6ae16660baa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf4a967-610f-47eb-acf3-e397dfaf78cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b015c5a-7711-4381-8121-21da59029ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1475b683-9fbb-459b-9d8b-117a17902f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775b77ef-9f01-4cef-96a2-d497d54dff95",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fb0f63-e84a-4058-a85e-7a3ad8a334b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579271a5-debc-4f9f-a7b1-9135b26ee9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de20d22-5c6f-4b79-82a9-8d177f1e4c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc86dbfd-4993-4f74-812e-665e18e1806b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553610aa-4cda-4e58-8bab-827f8aff4dab",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be60bbf-bef8-464b-b0e5-60b02edfd55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8274a372-a23f-45c0-b001-33c0771be830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa292ef-5177-49cb-8472-ca0fff8fbbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b113f4-796c-476c-9493-7df6f2d623e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923b9663-0f73-4442-9b99-2a24da94013f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fd6ee9-ae75-47b6-8993-32f292b13898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e24a07-054d-449c-be3c-a9ce4e1c657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c731ea2-8c90-4afa-ad8d-8e8e60d15396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cde17d-3c87-47c0-8cd9-9faf0ab4890b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e659f6f8-116c-462a-b8de-3455b1875414",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1465f6b-fc24-47fd-9175-7b57406264b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02160f74-aa2d-4af3-b1f2-5efcbd638456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a29bd9-ac60-4664-b663-3d13e1cf1409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a444a5b-7431-4eaf-9dfb-29c56a819546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a380402-fcb9-41a9-baba-f66b36f06c6c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23d2520-62e5-4ee5-b3b7-44c6df61eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808c3f22-b8fe-4f31-862e-6ce013dc7e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598aa091-e7e1-487e-8818-e6e49b2cb871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bbb180-0207-4511-8e1f-445e4e758a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c75518-7341-40f6-b8be-0795da28d1bc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e698d9a5-dbcc-447b-8850-81ff3033346a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21745a5-7bce-43d8-9372-8c2065f45f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d052364-c545-41a0-b46b-7803866f6805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "80f35040-1cfa-4185-98d5-4acbf0554ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb14a712-0805-4ced-a9a2-ccdbb289495a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37cb1d5-979d-4131-921c-64b3e5073f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754ebd4a-d08e-4c00-8e67-827914f67a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5354bc-7df8-49b1-b280-c1f42e30c964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4837945b-c9b5-4ebb-a873-02ce746d578e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1578823-b539-4572-9d05-17c8e91d01fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b9b27-9560-4680-b79d-f651a72c151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5307b1d2-5605-4650-8eb9-e45cfc0f6b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b85832-8d35-4503-a04c-6982cf13d3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d306b76-3e9e-4748-a921-4ab452a124a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5f58a8-1eda-4527-bddf-93943777c31f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358fbe5b-ce06-41a9-abf5-c187b02b82bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8b764c-52ba-41a2-8c97-70b6fdd02dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a234c451-4ca1-4e1b-b802-1acebb75a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00564abe-e73a-48dc-8cd4-e000d6ad1e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f37ebf-b66d-49a1-a7ae-8d14882b8540",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2704be-9b2a-4496-a209-8e0b539aa035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9765ff9-a7d4-4e6a-b812-ebb4e309a70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308b65b8-15f1-414b-8068-80ba7ecbd502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72177d02-f7be-4fd6-a140-7c45bb4101b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999d0a88-03e2-4222-bb8e-147bfb41b497",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e4e40a-53c5-4d9a-ae17-847207332154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69ae9c5-4e2d-4570-b7c6-2656e4d56f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80579b86-f1b2-4413-95b2-ea16cf2d0858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb3d6fe-2b66-4e46-90bc-1ad9a4da82f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35d17c5-bf43-4f45-8943-8a3d27e1f3e9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da611683-8a9a-4758-8d4b-a0dda0897dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7fd6b6-8c98-41f0-b0fb-f61a57508acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5da437-5cdf-44cf-b3b2-a79048e8fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa606c0-2f1f-4ade-98e6-9d5905b349ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb6bf1c-67d6-4844-9f1f-fe23bd776a8d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9990a0f3-1ee2-4758-bbae-b2fbaf6f3ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c72b82-b7d3-4744-936d-8b5cbc88706c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3ae3d2-88d4-4595-a29f-d6f2f43617e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e86eb39-0457-483c-ac87-66855e60ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cd07b1-ef95-47cd-8581-7ee0ccc5b3e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a689b15-e762-4097-b83c-fd01852b4666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1ff883-db32-41aa-b313-ce4319a8b502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d63bc2b-ae0d-4179-abd0-61aa79d9d620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c15709-7805-48aa-95fd-2eb92532fc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d43783-6ab5-46a1-ac96-edbf4d73d624",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858170cb-621c-41d6-8e72-97196be770b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ee97ba-4128-4beb-9707-c05a05ceda19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55316634-249d-4043-a01a-64968bfebc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9c270a-1d25-4d23-a353-25c3051bdd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc0347-a66a-4c33-ac91-d8167aa82326",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac2bce7-394e-48fa-908f-ea6e22104a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c9a021-e84e-4924-8f7d-9c2bd9d84cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9635118-f5eb-467a-9fc2-cf5044383473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e37020-8d48-4f58-8e9b-4ac8678f9aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14881bb8-404c-4abb-9fde-a93c1c80b0dc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e911692-b63c-41ea-a364-77ac11cfa075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2ca831-6406-4561-8e9b-ee2bd304d72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54647ee6-43c5-449d-b78d-86d1c620a319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ce2901-505e-44a9-b3be-6f9762871020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c298cb5f-ab63-4d9a-860f-407be0062998",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e2c6d-0970-4b95-8940-93662ea20b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4492d33c-9a54-437f-b067-664528c208cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d68690f-0959-4f7e-842e-3660d3e132a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01c6737-916a-4443-8cb4-ee2d633f3259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f5ac56-a388-423b-a539-a9def9a17eb9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc644966-37eb-4ea3-bb55-6c038b75f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdab69f-010b-4481-8a2d-46dfd011f73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47909165-dfde-431b-a856-e092ceaf2a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9bcb06-2497-4ce5-87c1-69e902ffc3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b66eb0-f2a0-4e68-8f68-3d34b1309501",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0a66c7-b8e0-4e07-b75f-e0dd7d409eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e94242-88b2-4732-bbca-a2eeb2d15fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2859a-4fc4-4200-b9f6-980add6178ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ba5ac0-ba61-42a3-852b-015fcdd4cd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab875958-bf5e-4d54-aa71-c552831a3ab9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f027e-c313-4bd9-a683-667b22d4006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35639508-2d83-4b2e-a9a1-6bb5c92bbc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26440d06-02e4-4dd1-bd52-e1cf068382b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c047de39-1b19-4906-b5a1-9b2d0fa152d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1626a8-7a0e-4d97-b856-75b5139089af",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad643729-daaa-4591-87d1-f418fbbcae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3726ab13-44cf-4ee7-b1ad-ca6c6f95a723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef6c17c-d1f0-4167-ae2a-7d1958bc0043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b43ec7-9a17-4644-9f04-e7c8ccae82dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c41bab1-27f6-42bd-942e-3e8b4d72bd10",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0773d9c9-ca15-46d9-a446-c1dd248af4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352407ca-1891-42dc-8090-138759c8f6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9302d2d5-eb2b-42e2-81b0-16be4ea79ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c346be7-b60d-4dc3-8f19-a72e044699e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e9da51-927d-432c-89b8-ce17794473d2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b59b6-17ba-4b3b-af6a-c75798a660a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ee0b40-0770-41b7-a038-28182c6de01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7964027b-b77e-45da-bd11-2dccf87bea26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00ec9bd7-3f82-44e8-84e8-6a06f54f2db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb4e01d-a4e8-4c43-8d79-1fd7c2adac39",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4578f930-1ae2-46da-84af-5f56dc422ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34deff5a-eb29-48a5-9bf1-c71701480625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5d7145-50d7-410b-b77d-18f1886892b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c758916-b620-413e-83ab-e62b8b662764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc13c81-3a70-4655-b39a-ad353f4f6874",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8610ff44-0490-470f-acc3-93a7447f31fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e0c254-b35d-4f44-a116-e7a946f812ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc13abfc-924a-4f49-ac5c-20265c11e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6da0c5-e03a-4be1-9cc8-8086543966d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b634fc-a065-439a-af84-dbddcff23c5e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43978f1c-a47c-4676-8bc4-db95d9911742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90e8512-d7af-43d5-95d9-1477626dbcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf12514-56b0-44bf-9869-4e120a496c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd01b648-7b5e-447b-9396-74785fd5b38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdbdf03-5759-464d-a3c4-51f7963ac81a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b00bdea-48b1-4ad8-ad6a-cd4d0c6fe6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b32b88-4762-422c-9b4b-e0a9f661a77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ecf2d5-92f4-4ca0-bdc3-ea5705d3796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fcacbd-ecda-45e2-a035-b5e84355f08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb52cc95-46ca-455a-ad77-8750c5e68376",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db0da73-3d99-4f5d-9617-56fc4de4f652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8e3d4c-5951-4f15-ba4e-8bb4e7e794f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e476bc2a-9d96-4e62-8677-8fcb6eb72323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cda0dd36-e10b-4335-830b-c917db38d4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d6db5e-337b-49d0-9f10-837676119b31",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31a3792-19dd-4db3-81a0-2466b4dde91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e8bca-c4c3-4753-9d75-e53ee0a2e0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4457050-dd54-4f2d-bf4b-8051758a2b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee612cf0-5525-442f-ab68-1a0628c2fd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be07eee8-cfe3-44f7-a40d-8d3ec9060cb1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b1fc2e-feea-4687-9eca-e950395f096d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0ba150-a64c-45f3-a2ed-b4ffeff7cea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561466d2-02c2-45b2-8181-e73947e700f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a7cea8-f8a1-4d30-b335-71af35851ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01ae526-a91e-4144-9e31-078d6c63d9da",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fdd538-43dc-43bb-8679-03d448792322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44da663f-595b-43e2-91c2-bbc010ab972b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e2efe2-4127-40fd-b151-131cbe306233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f40f76f-980c-4067-9541-3e2c736bffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360c5ec9-428e-4d19-b6ff-522a4008a2d6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28965cd-eb38-46ac-85cd-defdbe4317cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f666b5-54c4-4c1e-8ece-412d54cdde0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083962ca-76f4-4bad-9fb4-4a79590bd892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f678e6e-c72c-41d0-915a-5d4455d0b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60eb9372-a759-44a7-9696-7a58a84a2ba1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dd8849-e8c7-48e1-bb2f-9fd77622c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3897cd54-fbcb-44a2-8a89-50701db5fa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7632b0b7-e03b-4a11-a7cd-bc22f6833eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09187502-793f-4d04-a86e-8bc1f0387f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dfd336-01db-4bee-8590-1470d4fcbeb1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7eeec6-36fc-4726-b4ac-d82daab1c27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1879d3a1-6f5b-4895-a5cf-e2959cbd74c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e1e872-629b-41bd-b230-76faaef1e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82119e03-1e20-49e5-8339-0af938420e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2d095d-60a8-44a9-a7c2-85de12eb7c41",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843495f-6f57-45ad-8beb-8d9e91d943a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60ab4e6-2104-4164-80dc-7328be52d2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd32b91-4ffe-4018-8f17-d5d5460c494f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a5ff3e-bdc7-4f8c-9ad4-9ffcaa486f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e90cd8c-5a98-46cb-9746-d8c16fc4d2b5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d26f48-bc8d-46c7-bc5d-58d014e695b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36524af5-12ef-4608-98ab-afb0d7bf8348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca55cd1-ee94-4c5c-aaac-fce405671cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4ade59-63b7-459f-a4f9-6371c6ef1ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f18c49-4177-4a33-ba65-e0c60a901c47",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63b1be4-a34c-464c-8285-c8a5d18d1ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61c970e-86d8-48fe-9727-4bdb8e3033f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e88a861-e900-4757-94d3-ae9e6fbffa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "adc49430-fc02-4c95-99be-284fe97ad85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fcb76d-42df-4c1d-a0a8-e4ca1613d2d8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbce2aa8-e71c-4950-8074-29a977c46755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283efad3-501d-42af-a604-32c9fec96735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12af368e-fbc1-49df-b121-837bf11d87d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a839f4c8-be4f-430f-a804-5037a2581da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e3fdea-ea58-40f2-97db-4310d3bc03a6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eba1af-5086-47aa-b0c9-191077af7ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca839f6-eec5-4e9c-a39e-74d616f86b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fdeb38-1077-4d69-8077-0d6c2305bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5da47ce-3b56-490b-a82e-7273bc88ee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27513a4a-6db0-4730-8515-041132c1ce94",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbdcb48-bdc6-4bf0-9a94-ce3428e4d9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47f6d3d-6371-481a-add4-bb38eb80f58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96e0b91-5d7a-4c2c-a089-78871b90275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84451508-8f19-4557-9cd8-e4eb6168dbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61172164-9341-4f22-943e-26d41fe7b89a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ae7f25-9f4c-42f5-8e92-cc841b261fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a1e992f1-fcb2-4680-bbae-29143defa5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1fb810-7439-4924-a633-9e9c1a7cab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3496059-64d0-4a87-9d5c-1dcfc1648a3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "479f95a1-b222-4657-a6b1-502039c9b8fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f56c69e9-e28d-452f-afa2-a0bb03288e42",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df8ed99-bcfd-4e30-b9d3-c2ecfad91907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17691400-8392-4199-9dde-d8f3f2fc89a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af84102-8900-426c-ae83-eda3fb830eed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4b1d30e-e9d1-4a59-825a-265578899c2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b171e75-aa71-4a6e-8bb0-4093cd7f8996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68473304-5eaf-4eb9-b491-c7087b8e726f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ff60f6-0c84-4454-96eb-bcf1919c32eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6de0fc-f793-4b3e-b9ff-3dab9ae458a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e761e97-1de0-4045-8ef2-d95790206c3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de4d7caa-31e2-4070-83af-41e95656da4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "316bd9e0-285a-42ce-ba5b-d698abc94be0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3028f997-c87c-4186-8ee1-c6fbe15f6dbb"
                }
              }
            ]
          },
          {
            "id": "2faf7b6d-de40-4882-9471-92b53c2a9485",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e07eb736-1239-4fb0-87f2-8d737ad91224",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cfb9c83e-5a69-4cb4-aaa6-f4bbb5057ea1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e103543-337d-49ba-8231-c11711cdeaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8934e1a2-7238-4889-9896-a899a3e166a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fe97e5-b5fd-4e50-85af-8488e90a0783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642da96b-c691-41e3-8fe3-889c650984bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b4c7e66-f262-4b13-8af2-ca4711c1325e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60095da3-08d9-495a-82ad-0251b3b9b885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33f6a14b-27ec-42e6-a569-d34527d498c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e15cd771-fbcb-4fd7-ae7b-5719e259bbf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b321e98-36b2-4768-a7d3-915a80510a46"
                    }
                  }
                ]
              },
              {
                "id": "12535caf-abd4-4dbd-938d-8c66141323c2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab32de46-dd36-414f-afea-02e0ca51fb37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc7b8cb8-9de9-4580-8d77-ab9fb984af12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b2c2c6-141c-424c-a466-9743bdf861c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e66a8b14-cd5f-4fa1-95da-03aa16773320"
                    }
                  }
                ]
              },
              {
                "id": "725ca315-1217-4291-9dfc-e79d6de34729",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2c83f22-b8de-4eeb-ad5b-b136a853d15e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ab07030-5475-48e5-ab4f-be243417c05c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf5c2ecd-0363-49ae-b794-cf34942b48e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0782f89-c715-4cc6-aa96-177c98abeb59"
                    }
                  }
                ]
              },
              {
                "id": "5a0dfbdd-2a8c-49ae-b827-6995d57ee6b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6afd232b-1016-4e07-bf7f-b4a3e15f32bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26583899-380a-4c31-b7a0-7e28d4258426"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9f929a1-0907-4d51-a973-52aab584feb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "579038f9-82b9-43b4-aa77-bb668b56890d"
                    }
                  }
                ]
              },
              {
                "id": "e1420aa1-2d89-4a17-a248-3e8f421a3262",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c567a445-7e2c-427a-9707-6a1b57c8fdae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "220a3361-66e1-4cef-ae33-de11241c79d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33e9b7ed-9adb-49f1-93ea-4e08aa7a7017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ee43f77-3951-4b81-8216-a5a14ed2639c"
                    }
                  }
                ]
              },
              {
                "id": "c568ec40-a0fe-4df6-8a0e-f3bcdc27a7da",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5e4a2ea-b159-4ee0-a8dd-06575c2a497f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3bd3cc9-90eb-4fe3-9414-b5cf38661401"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5503fd5b-ab5f-4c04-b958-760eb888c4a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eab1176a-f605-4784-94b0-75714fc47dbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "542abc8f-03a7-423a-a0d0-79c1d7ac01af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29af6216-6add-4b75-855f-497b6c2b3e71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80d8d895-eeac-488f-97b7-2eed8c978e41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ee35fe1-1dbc-4124-86db-fc90f1f213bd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0ff42e3-1167-4be1-975c-34bc6fa4e19e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "94dd05a6-0578-4c18-b828-29d4581302d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3193dd5-14e0-45e8-a7a0-f3db991a28a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4c6c10c-58cd-487a-8277-b223147b8ed3"
            }
          }
        ]
      },
      {
        "id": "0f453eb8-0161-486f-b755-d6389d9698e8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5064b585-0eed-4ee5-8861-57fef536ccad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7deef19e-129e-407f-83bc-d663fa2a6f1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "792a2e21-a8d1-4f9a-abfc-c3cd0d0628bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447089b1-b02a-43a4-93f0-8ea445dfa455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b678b1e7-a379-40cb-ada9-9d5b4f43c0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ba9f29-002f-48a2-9938-28f97b26ddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de326fc-26d3-4b04-ba64-2c10eaa7bc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e027071a-a9e7-45dd-802b-942938d262a5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56348a16-87a6-4f95-8d40-1d63573f7ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6770c6-3133-44d8-b5fa-7a9f2cbc62cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ca91ce-c698-4134-bbb6-caf2d3b4505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "222cd1aa-2da1-4eef-80d2-a820cb78381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d109ce1-e79f-4f15-8e88-296a08157401",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a79219-f718-420f-befb-b4163a1e33f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89750c3-c540-43d7-9545-8f9e5301a189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6834c6d9-d5e3-4d8b-8473-b1a2c70b7683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c528ab57-a513-467d-b7e2-f49c25f4c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89efadcd-c338-4569-a091-79b372541e2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013fa6ce-009a-4418-9171-ee714ab1761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9faa108-d023-4c1d-8992-21e42e370542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fc7dd9-096b-418e-96c9-bfc8118f689a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19bc051-d995-499e-968f-b34d1864cb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf6b3dd-140e-4414-8442-370d35e06a5d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f001ff-ec2c-4291-af62-91af17ff896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7551bba-9445-4ec2-85a1-21e1969038bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfc2ae1-7e95-4de2-8ef2-e2760079d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5c288a-6135-41e2-991c-d69bf1bf3b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce14a48-7de9-4a85-8a91-9b9d48a6981b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a293b2d4-571e-4ee9-9b31-c8737973542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c094b5-6d76-41e7-8c59-82098dd07efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ea8108-1fe4-4394-9716-4e277082e6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bdf189-b4f6-400d-a1bf-b850f0bb679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5938966-324b-432a-b85a-77f1cb111adc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe38216-b2f6-4009-958f-de1c150c5f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa3299c-c0d3-4f5e-9ab4-ffaf8e253189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b81b0a1-37fa-4155-a906-73351891da5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f74b57-0b2e-440e-b169-3c086e41b773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d3abba-56e7-4d84-b64f-580569b542fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c7670b-0d89-4ac6-81a2-23b466beb93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396ff344-86c3-4928-bd27-578b66e36965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3373c5cc-7c3b-458e-9eee-228aa395829c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf8cf2e-d0cd-4a9b-a4c4-bce6f195cd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec13f8c9-fccf-47ea-a50c-9b8894ad2cb9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1242b68-c803-474c-b01c-c063d42d3d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e9192b-4314-4f66-a7ad-95b2592a411e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32ddfc2-958c-4413-9b6e-ed28fce2452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a51222-6b26-42e9-8253-b25d97929078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c54c3a-a652-481f-889c-b3601682d623",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9e5821-2fab-4594-91f5-c394b6cac46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95e101f-e849-46a6-9eac-0e13affa9a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aea743-2556-4b0d-924b-f1b522484196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "774791c9-b4f2-4449-a687-c987584bbdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af61774-5e58-4a54-8d38-92feb35c75a3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48303c43-0bd4-458f-b9b9-2fc8e1d6fec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9603a1b5-e776-41e6-b2f1-1f2b2b3cd8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88536ab-cfb0-405c-a3b7-e691f69f4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "495bcc53-973d-4598-9980-eddb98b01723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a105f4-60e5-41cc-80b8-9934d478b427",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b949983-b44a-4ab6-9885-a1b44336a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24410e19-0071-4bd8-8097-90fabd9db59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa48fcc-c581-4c1c-ac9d-c0b1e6a32478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35d972f6-0226-4622-8648-e837ba96a9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ca02e2-35bf-45c2-a020-9c4a1010adc9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f1e365-50ec-40c6-b9ba-8198267f7911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9552f98f-cbc6-41cf-b347-d3cb545d9f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2010a2-9833-412e-b9f5-b183d8b659b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2853b929-b496-437f-8552-f9a39e4adadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083e2740-77d4-431f-a5bf-3ae56f30f5ae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc9bc4c-60e4-4167-baaf-d7f8923426c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ace7c96-194b-472d-90b8-3258114920cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b04b47e-00f2-432e-96dc-a74a04076e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e699d1-9aad-4b4c-9d3f-215738d3362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42b21f5-298b-41dd-8a5b-806d4beba711",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8a4975-f3f2-4243-a9d6-f92d8a5832df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f932c4f-7313-4bc1-ad4f-3b7eea4bde45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9c8148-323b-42a8-a0f4-866c2b121ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fd9bea-cef5-42af-b8ea-3ff41c16af0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b107bf-44f4-4903-99ed-eb7c04c27be3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c504e05-5ee0-4fdb-8c05-35fd0486df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5ff531-4c56-4812-b0b1-9ef7acd1b01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0a6224-179d-4b0f-b8c9-4144e0c59b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c78e01b-10d2-453b-818e-91d0c1f510a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c0a7e2-7a2d-4aac-a10b-150c3064cb31",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27da714-7b69-4e7c-afc7-01b5ceb58d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72072b2-d4f8-409e-97e2-eb27a3398ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a21d5a2-cabf-4d6c-bdc5-9338595b2eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7761941b-cc02-4da3-9d3b-39dc3b3ef789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff30ee8a-0cbe-45fd-9f97-4b651806429a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76bd4a9-ea36-493a-98d4-006813a050b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f0dd6d-d260-4ab4-9fd9-3e490f16b2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4485979-ab2e-41dd-96d1-f6b81b5b4385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b5acbe-285e-4cb2-9731-f286f070b63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0c18f8-85f4-43a3-8179-e73d3c9689dc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b92b518-253f-49e1-b8b8-b0efa4d92bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c5a920-963d-48bd-8b79-041af34879e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d96ecdd-cfa1-4c72-b193-66887728cca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b4f878-1e3b-4ac7-856e-da927b07e5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa56618-c762-4633-826e-e09f5dc73c36",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cea49cd-7a2e-4829-b04d-18b3ec3d1cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a665c3-b04b-4943-bbdd-8509d9d7af22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875d2347-0ffc-40a3-8ee9-a21c17c4e5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "576ceced-2c60-4361-b810-197fe918896c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98accf32-f22d-45c3-b7bf-5d059d4a8fb4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd6bb2b-201a-48b3-943c-66e93f5e3418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ed1284-da2d-497e-97f1-eea833ee047b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debf6e53-d002-4712-93b3-b29b815bb85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb11093d-123d-49e6-ae6f-485b7daee786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe3acaa-8545-40ad-8361-8ed58b15827c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220d4488-71a8-41c0-8db4-1391e6b1b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ea25e0-c496-483b-9d8c-1c7dfce5417a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee377fb-09d5-40c4-a594-3fbc5026b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b115843-fa2d-4a1d-a3f3-692a0a99cc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7933f-cb27-462f-9b0d-036e458f5a2a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef8ea00-a8a0-4c3d-aba9-c5834395fe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2373a01-5b6b-46c1-9052-b1754c16254b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dd955e-588e-49c9-ac0a-7dfa54e0eac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730603d7-a4fc-4925-8b48-f158058d4371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d32522-5330-4815-ad75-d07b271bad2e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1314110-62c9-4081-94ff-ccf06bb569f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18743c24-8d12-4556-8aec-30df3170b91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5901f1ee-d960-4915-b9a6-f539cf23c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b480a4-4462-4c4e-b378-ef8ff5167732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9286ab02-168e-4ad1-adf1-8f140a17acb0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a758b2ad-1ee5-4170-9f9c-bd1872f8586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1b3bfb-8427-4302-832c-a04beef097ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42267204-3eeb-44ff-88cb-f4b660566cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "403ba001-efbc-41fb-affb-ad49f201a516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50413d34-9a4a-413d-960d-d6f5879b98f8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5016be0-ae98-4c67-8932-b820a32684f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d304fc1e-e851-49b6-b851-9019717d65cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ceaa48-00d4-4286-9fe7-9dc04708a95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1b165e-d5f0-4980-9250-736b2db4aff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef1d95c-1b53-47b4-9f33-faa6b62da68c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe34044-0c08-486e-b0f1-770ef220ee30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da876cd-2953-4fa7-9b14-20840b64095c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2d78fd-d380-4b55-9ec7-02fe100a02f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59aa8341-8f8a-4611-8cb8-137a10659f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a3fd2f-6269-45bd-9cb2-40e272717dde",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dce3d4d-a5e9-4925-af31-0472708926ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e22095b-946a-4d3b-8980-b9db52f59f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e5bcf5-5e79-4080-bfaa-cbd4d74312b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae17da19-b028-47cb-80f5-0e37f337a795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c478fd-a48d-4551-9a18-240e88847792",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de43646f-6488-4a7e-9b4c-daf9a9af01b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3fbec0-8ea2-4000-b2b5-aa6e78f88286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89415ee8-fea5-4c3a-9ff0-9539567d5983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2a7c5e-b132-4111-8da4-f9f64ca6bbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9de7be-8cb5-43e2-a41a-a35c25bbee33",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5e339-ad90-4092-99aa-9fc0a8b6dd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05200fde-2d6c-48df-8308-a7d6b1832b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405a2c05-4c20-4b5d-91f2-91096612fda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0f97ca-14e6-4678-b3df-5d7c3541124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1764b2b4-a89b-4bba-ac0d-9a777ee6559a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c31377-45a3-4d7f-99bb-e58ed675cc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14be24b9-b2ea-4ff0-beae-b25403fbc68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c543a4ad-82f8-45e7-ae25-94d12bb455bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4697d366-494f-4d40-8b0a-6fa6d2967f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a44047-2f11-40d6-9407-625fe38cdb89",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ae350a-cc4e-4005-b048-6df220f52d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae45a6c0-d67e-4cc7-ac71-6acf9a36f712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022d689a-1962-4036-a6ea-720221fb2089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a256da6-5173-4d2b-b6c6-bfdd257fe990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf39cd8-cc1e-4e1e-8adf-c1a9dd989b07",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558f17f4-e348-4601-bb13-f919cfe131c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfac84f-8f49-4db0-b6e3-be1ac063f9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24afcac5-e1de-4c7e-8b67-86c95d95bd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "982c1b1d-b407-4377-ba94-d5c04b451198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb29c8-bb6f-42b0-ac7d-abe5f9b0d7d6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0936902-86ef-4a09-b984-0dbf5548ddf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5ceebe-f6ec-4755-847f-5dc63f92811f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78f6534-a93e-44bc-91b6-c5489eebeb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb82ed00-0966-41b6-b40c-c4eb39440728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f011dc8-56e0-4183-8c2c-ab6e6bc50e14",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a11253-502b-449b-8202-a1e6c0ece402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1df4025-51c5-48b0-b0cf-9de80fd8ba64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b23e6-4665-4906-8bee-b7090f52a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1422124d-0995-4dfd-92e5-dffd9b423030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b615938d-3855-4645-ae7b-d702e400ed6f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be6bd76-6537-468f-b71b-4a85e13027e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be393c2-eb35-433f-a1fe-e3f23cb4097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db76ebc2-78c2-4927-a4f8-8328f225fd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de10d15e-abae-4bab-9d16-b1b4e267a2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf622e39-516c-434e-8b57-556fed103408",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78edcbf-e6cb-4eee-b49f-57a94fb55eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c564bd3f-1600-4250-8a01-6a8f2419b9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58767166-654b-41f5-be9c-d915cf0a7c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae629fd-8390-48d7-9ab4-0eb4281cc124"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78bae755-7f84-4adb-8008-ba6bbd02c2a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36038371-db4e-4d30-9fe8-62c887872ee0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807409a3-4ed4-4456-9d6e-4b82d50e2498",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "381b9eea-e0cb-40d9-be9b-17a480b72018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef30e0f8-c519-4a8d-9350-acc12168b004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e769345b-3616-47ab-87ea-3496affbe62d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b901e7ac-130c-45d5-a1d6-031f2001fd5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96cbb908-53ca-48c3-b1f2-fa2be16044a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71748ce0-17fd-40a8-aa66-7587642dc7f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca0b4f2-f5e2-458d-a0b9-f9c02e3303f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c905041d-2edb-43e9-87e6-b3223f2fbac3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28da4855-04c2-4fc0-94f6-04be67d6de51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf832eb8-5041-4b5a-b043-e27f5e46dc1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13a78a23-21b0-4392-89f1-1c1b992e67af"
            }
          }
        ]
      },
      {
        "id": "9575da05-a674-4f2c-b554-cfccb9560c3b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "68b3484d-20bf-4f6e-962d-3e68fa6d9d68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a303190a-2db7-49d7-9752-37bf25f7fea3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c7dbd0b-adab-455b-ae79-272394066d97",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f404e27c-b2b1-45fc-ba6a-4da6c549f22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc789795-52f3-4a51-a901-05bfb2f5a544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcf41de-3874-45a8-a789-e0eadbe79d1e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75b325c-6b4c-4d3e-a6f9-db2f444a52d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3120bd77-f5d6-4727-94fb-f9cf706d2ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c573f6e5-f66c-4461-9815-c50f52d67c10",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c1c25b-90da-4cf2-b015-bad36fc9880e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c319f1f6-a9de-40c2-82c9-dab415919095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cc9433-4060-49ad-bc00-e96dc396d42e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fb4a85-1b23-4cc1-a0b2-1696b053cf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983fa916-08f6-4a70-a1bb-b114aa66a10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e76d18-e005-499f-a65b-c09a151f5641",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a8200b-5b4e-4a59-a853-05927de1e319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a50f7d-13a6-42b5-b19f-4005e6bbfa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ed5f94-1a35-4950-8dcd-71da9513ba2c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f60099-f878-4bf6-842a-2325789e9d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253ba9f0-b3cf-4c58-95b9-850b85144be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4e855e-bcaf-4437-a14a-5c7e06a05fcc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff199e3-5857-4eb3-a2a9-77e6ed22c417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82acef84-189e-4973-af17-5ffa49bced09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282dba78-ffb0-4db0-9cb3-7502a0ba34d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d61a39-f636-4c92-9570-695ab89b975e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7153bd8-b657-4abf-b9f3-f6a293ec67d2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cd1d5b-f3a3-450c-aab3-3afa0cf4376c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012f842a-93d0-4d83-b2b4-269039d3cc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdafbd16-172b-45b9-9b98-3118583230f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95834b28-e3bf-41d7-8ff4-5ecd8dee61fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6f1620-0535-42d8-bc90-1ad3287a975e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab87da5-a364-4056-bec2-07aa738609a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e23e0e-614d-4325-81c2-5c793868d35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c73b69d-bbe4-4688-b625-ab96d5e7f3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9897d4-3a45-4f5e-b9f1-3b908dd18d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce92538c-eb4d-4607-864c-acd30b20320a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d0d0f-885a-4cc5-8aaf-7ab475463148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2641d6da-8b62-492d-a95b-2518f737cd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5ab2dd-9087-4f17-93fc-f17e4a1d8e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a0087f-3dad-4271-b3e4-e4403e8286a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bb9b35-ba34-420d-82bc-a6df8b4b78ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b094944-e1fd-44a7-a1cf-f508d6a13275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f1f8d7-32fd-4b1d-b142-4fb77266f03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e62b04-8937-4ec5-afb6-122e2e36b77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e2b325-88bc-4f89-b09d-5c01bf724046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c1e72-5d94-4b85-82cb-092566e16b53",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7629035e-f342-4886-bb5c-e84c65929760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc1d4cd-aea8-46d0-aab8-8108b4c3db2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca744fd-49b9-4c88-ad24-e3facae49dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826b61e3-4184-43c6-9bea-a1b29a41c579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c17c6f-190a-4e74-9597-d33b9db6b8ac",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaa53b6-4cd1-4ea3-9507-7b438404492c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756699fe-afa1-4ae9-9bec-3aa7c6437044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dd27ce-9d8d-4af8-8c99-0078a9fa3870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6998be37-a0ad-4e72-9f9a-cfb9c6f7a15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916e489c-077d-4f23-b055-42cf6562af5b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba01699-17cf-42d6-b7e8-439d375e999f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46633ee8-fdf0-4571-9395-4a96f6c6ac49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6074845a-cae6-4efc-a208-4996e053505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6e1e81-7263-453f-8bfd-c7bc885b50a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a630a13-d7a3-43f4-9bce-52fbc7a3668d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcb13e1-e446-4c79-871f-4181c21b7320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420ee1cb-2550-4e2a-92f7-900b0f37d01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5c249-b4fe-40df-9216-5b025045a3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5090d2a9-6da5-4616-b50b-cf9fdf57fe58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0923c73b-04f5-45ed-829d-e839e5a0dbe8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f44af6f-3d0b-4bb6-956a-94fa059fc4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1925bb74-18fb-4773-a2ac-dba3ead1b568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b604367b-4031-41a5-b847-0571dbc73912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6049880d-d136-4510-bf21-48889c597c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d0fd28-343e-49ea-8c00-d6c50de438ea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1efa3ad-8741-4a80-92ab-8686814ed996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbef9806-e116-4ba6-99b4-6ad309d4f733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124495b8-4a91-4379-a654-4e0f460cc0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a11972-f992-4ed3-92e8-4634dab88a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f808c3ca-a3b4-400f-bdbd-a4828622747a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098135b4-1006-4afa-9397-6f06a2bc7b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f833e28-b569-4e0c-8c9b-bd9acebc0ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8477a67c-1cee-472f-b736-ad96df5118cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bff4bf4-ae9b-4f85-826e-3a4a31ac8c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa6fc8-0ba1-45b3-9687-286254669618",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9b07ea-cc12-4415-992f-0a7aa2b9f9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7a144e-4674-4e04-9538-c8296d24f831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ac9a54-a442-4be5-8594-894cc233c816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0703c6d-2308-4cdc-abeb-3db6a1a859d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960ebb35-8c1b-40ee-96ff-a8af9eb6ba24",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61596cbc-3f7b-45f3-91e1-95111dfc1915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d090f1-7752-44cb-a340-a0dfcd7d0400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b076bd91-c035-40d4-bb6f-9cbe42a68752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb61557-5ca7-44a8-a051-a3d5a25bb0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ec5b58-84e3-4beb-9d6e-ac89c01d761f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab98221-f06c-4ea0-a901-71c18bcf329b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9530d625-61be-4afe-91a1-913513bbdb31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51c27aa-fdc2-47d7-b18c-bd91dfc45048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc21bb1f-bffe-4310-bb5d-bdd33f6edbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170c66da-3148-4e17-8f42-a06fbfc5908e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8d5dad-a657-4a9b-92af-6d24bdbe0577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433bbfdf-e633-4443-b858-6dc2b89f5283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abd2caa-9a56-4464-9caf-8e191b818992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ade0106-07f7-45b2-ae43-7fa32e077f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261d99ec-9faa-481b-831a-d3bcd2ec5208",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5545a1ea-8bdd-4498-8248-35bb80d38d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8909f470-40c7-426e-8921-337753b9dfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7efab74-844e-465d-a734-ab8fdc254f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77658d94-472c-4ed9-ac11-440ea6eee249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a6bb0-7afc-4555-86ac-599dc6ca5e32",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d1ee1-b833-407f-8487-79a08ce0b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879a042f-8442-4d36-9ba8-579ae066aa1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed667fdc-96b7-4ba0-9f22-d8fd1e84fdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2247cc90-1d60-4bc7-82d4-0dfc724a6bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3932be5c-bebd-44fe-ba07-94abe0865a0f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c07a0c-26ee-4be8-86be-db0beab82691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af2e835-ce1d-4267-8bb0-b47728b5854c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51f5c21-9d04-4874-82b9-7fc16cf1a8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755bb5ad-0674-4c24-aad1-9ecb03323cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811cdd87-adf4-497c-9820-03cb7c666d02",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c629572-e848-40e5-9cff-fae7d169b617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4865d80c-a732-4130-85d5-e4b7a1484084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f49c49e-5afa-4fd3-a417-2b644f5604a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae83ac0d-a4a7-431f-a90a-7ff0b14a8250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0b988d-bd4a-4739-84a7-72fecb439c14",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3904673-c87c-42c6-943c-aa42d69b0a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928879bf-5bc6-491c-bcda-6fa535ae93dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5972c89-aef9-4983-b5b2-278d611f6394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2735e47f-8f72-405f-8670-e16c76c1d264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f349e75-e3e5-4f23-95d8-f35ad84d685f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bdfcd2-5a48-4fd5-a283-7f8577557306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d271ead3-163b-4297-80ed-487bd1bb56b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaad6c1-f8e0-4a96-942c-427f1a085693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7188ced-8d82-425f-a3b2-af06f0aa9b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91981f0-3300-4811-9592-14812e6beb54",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86866146-9500-481f-b8ae-ce09744efa6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32fbd1a-eff6-4e60-a037-0ed6ed466473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6206860-3924-4026-876d-8fee35d351d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5133f3-ba12-48ee-8d4c-d96f78ac91eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a40743-32cd-4a32-96c0-adec802af7b5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1b48d6-34a4-4113-aa77-a71907bd7c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "042db6e8-289e-4ed2-b1b5-4febd3b5d60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d13447c-0af4-44a7-8fe0-ef35a706de4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e96a61-5ff2-4df4-a80c-1ed9879b90e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9ae9ef-7b7b-4198-acde-7333dba77ca8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9ea32c-0da5-47e6-a674-2f97d47ceb57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a872c0-38fd-4235-ad61-def11d42f5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55baf121-2d13-4dc3-aaa9-fa481e7701a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972422e1-77d2-448a-92ee-1602fceac8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69ce0d7-264c-46ed-a125-f60cf709adf3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17297c7b-b069-47ec-9e5d-08c37f2701f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc376d4-ddd3-4605-b380-bdd21d1f8059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c39497a-c91e-4ac2-82bd-dd99046f1e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47bb500-7064-4905-9907-8e5a79857c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91006f42-f5df-446a-a28b-c04e41a42262",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae21cd2-cc3f-498e-b9ce-3db4eecbeeb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11c1750-b1e4-4268-bd6c-1fd6d2f0239d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eda7be-917f-4343-91aa-936e4e94584d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9c131e-dfe5-44f4-95af-4648e73c4830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb41ac2-ebd6-4e7c-83f5-2a96bdf2b984",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ac0935-4a43-4f02-9222-1b4f6af6be55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ee2826-861b-489a-a995-655e2f96c745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec7579c-d7a3-4c6b-bc99-e84548154c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b33e267-729c-4811-9d69-5ca2d56570f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bb026d-73a2-4076-812d-9a5b37a2c619",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db48239-ff02-46b2-901a-4763f8c44d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91573079-709a-484f-87eb-243fe5cbb6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f4cf31-db76-4fb0-95e8-57ed8a131710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7693c94f-59d6-4f8d-9a55-7eb1e98a4be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41b3616-d4f9-4100-9824-678c20897fc1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4aaf93-a59c-4f16-86d1-6b9b3f54c2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54065d66-5850-4dba-9949-fb21e2c35275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c569372b-4efa-4b51-b70d-09d1f88eef20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4998534d-9160-4e9b-a2ab-36dfce54f9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ffd649-f8c3-4ee3-8ba0-17421dfba13e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cd885e-3e5c-4194-935d-cc801d655593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c38e80e-7a78-4cde-8500-1ebf82e8f35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d755bbb-2232-437a-84c4-7ffcde74750b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd883b7-a69c-4b72-898a-3bfa491702e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174d0c2e-468f-4b1e-b177-18e14338def3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261ba19b-958b-4138-874b-036173538dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4839a68-5c67-4d2d-b040-df249207ea8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c30f64e-f725-472d-bbb1-751d5f587428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f415b4-a573-4cbf-acc5-dd4a57edd903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185494a6-4557-4e41-b50f-523575014a99",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42357cc-7802-4690-bc49-8cdd2bc5dd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cded8e25-a398-44b4-bebc-879f7a17c6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c032d7-31fc-4e4c-8f52-039740f485ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895530c4-2a9c-45ed-ba44-d68ad9bca1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633f479f-82ba-486e-9466-8d10b4e0e4d0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70d068f-0fe9-428a-8dba-13b4cc1c9db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f270d156-f8c8-469e-ae8c-234f2b80a02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c2c78-32f8-4466-bd4c-9d75a5ed5f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a18a3c-b010-4541-ae70-bb49bc21643e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece0eb05-df2c-4ab8-bd14-18c29d4dc331",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6e4aa9-9373-4e51-b4e9-4296dd6d9882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271da35e-826f-4536-949b-1c9beda21dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fba653-849b-4b76-b992-a41e16f0b338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9988be36-08ab-4b3d-b479-cef34169884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6824821b-7bef-4879-9823-d6343df92fc1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaf5332-dc30-4791-a6fb-31bba6feaa90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82480400-87bd-4602-aebc-ca3190ece2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b8270-91b8-4c99-9b76-9c74efbf7e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db531a1-1121-4705-8952-0ba0edab6212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377aecf5-bd75-4ea5-b87c-b0e78e535737",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6794ecd-4591-41db-b04a-413e2e693774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0ded37-6f5a-44e2-8206-7d05a2d5652f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dff408e-5c28-4f6c-8218-f35895b8850d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0443a7-bd27-4908-bd85-1887064d3da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b3dd51-54c0-41e8-94cc-da471ac2e271",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7347146a-9ad9-4d9c-9b31-c9096b2c5337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b231e29b-3506-46d5-88c5-5d31ca22a090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ffc952-ab33-43ab-9b53-d253a3bbcf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f0cd32-8744-44d1-a827-9d73e9b36d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be63799a-7074-40b7-b12b-8067e2d42387",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f4159a-350d-45c3-8324-d4c24aac847f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b15313-0024-4c29-a609-8778c639a808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81104ba-bbdb-4bd9-998b-8dded6d79f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c7a76e-a4c8-421b-9e88-2de0b281a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c55f5-5bd9-4486-8858-3aa7bd173ef9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b805acc3-c965-44d2-a3df-acea7d798207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc9ef28-0142-4cae-a364-23014f9bd160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3ac597-75d5-4ce2-b580-8d9ea94c2bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad60c09-726d-4417-be49-fc7ef5fc0a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aaeab06-741d-4deb-a6f7-23521f44dc15",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5fa489-f988-4a24-80e8-ab3a634379ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd4d969-b7ea-40b8-a13e-cb0b175f8b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4afbbae-0a8f-4dee-8312-929062d9039e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6a5c3c-1900-4ecb-8deb-e389992e6daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c8e0d7-fed1-4e3e-9d07-285288d13d3b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caacbd0-82c4-42c0-909c-c3ca95a37b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d1205e-6827-4895-9d5e-076216647d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f6a247-c742-409b-a832-cfa923a8c928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433b6ade-b4a3-4308-a947-865cec3fc92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad1b85-5855-4d1f-8775-40ab9fdcbfb1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54f0808-b126-4f4c-b4f3-1f8a36b75938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da9e456-0273-4024-829c-6f666900d258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73bffff-dc58-4ce5-9400-84eaafd5e3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9391bdab-d0ab-4073-9575-6d667f69b99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94289d25-9e55-48bf-93be-879b9944bb7b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac478bd-0a74-46c3-9b78-f19632c6b942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d625f993-7940-4d90-8397-1f01033e78b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df0dc67-8566-453b-b25a-308d326de58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085c51c2-44b8-4ca7-8555-9f7e6110982a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221f901-3744-4e78-9710-9fb7545e8d60",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd3ea69-38e5-44ee-8f5a-5106dab4159b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cce046-c5e2-4a04-bd69-84f33dd17cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff6389-fd67-42da-8dfe-9b0fa0a79840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1767c5ac-4795-4dad-b67f-442998854e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e8ab4-bbbc-4586-aa63-450df0b62f02",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26368a8-de59-413d-9cef-fa5160cd4a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1440fb-b457-4ad0-85c6-30fdb30db3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1172a5bb-2a8f-4761-99a5-7cb5ff26407b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f49133-4d98-491b-b4c7-01e4830861c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c72971f-61e6-4604-ad3c-666a38e9d5d7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8891bd-4e97-4885-8e35-1b0f607a901f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad635cb-d221-476d-8996-6fdb4305d23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fd57ac-dfcc-4877-b4fe-180c08143670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240bfee4-d396-4046-9fd0-26f59f3b57b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9722f7ed-653c-40e7-af8f-01ec7e74e1d3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8c083f-2d62-4de8-8b92-7c597cfdb8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b037115b-28f4-44e6-b9c1-6ca81f0ba40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad124299-1ad9-4da3-9cd6-c6a344eba4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c9a59d-17f1-4ed5-8247-a6208fd47438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05794a2-9b90-4fef-84c8-62075b94bff9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee80731-2904-435d-9189-3fe311d31d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2cb29b-c0bf-4eb1-9c5e-0af5951661cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df317313-23e7-45d2-a0b9-f98085b98316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9b728e-0e56-46d0-9bd4-547791d08493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f9c95b-1624-452a-9e78-dad785d8c5f0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f0a130-c433-4ff2-8701-14555471cd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f548f81d-dd9f-4577-b8e6-39a09105c055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0883fab-0fdf-4499-ab9e-153e53312b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd197460-3793-433f-b771-1e6e0c14f9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc1a68b-efe7-4ef9-b9cc-6b38f4f14d3d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7902d9e9-1757-4812-a64c-c84bfa54f622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd5dece-ce84-46dd-a76c-5ccbeb1a2008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384b6c74-70be-47c6-be8b-6b04acebfeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfe4cb8-d0db-41c3-9c1f-4b9aee35e326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff020bc-d442-4cc8-8b92-52229e38e084",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ea06df-292b-470d-a5e4-044ac0584f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ad5bc4-32ff-499e-8952-9f9b34ac4c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66d6893-bb89-46dd-bf8a-206f23ce22b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3001e-582a-41e4-8ea9-8926f4d23942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a43fa00-73a2-44d6-8e77-ce43b4c3197f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9761fd18-45d5-4851-8301-48f2694fea74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db57d15-9681-4a4b-85fc-75e750ac69f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca548b3-e9e1-452b-b35c-69db7bb6a207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dd515b-9c7d-4596-bd58-0087952e0a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6af2cfe-d4c2-4c2b-9a16-b28c94256cfc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32725e1c-b059-4785-a9d5-69568860bb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2131039-e0cb-45f2-b584-03efc76a985d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c0abcb-1fa8-4b9e-8137-bfb9cb074792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b395b576-0cab-4fc7-893e-a5396662ef45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac29313-5fdc-4396-9712-61f030b03e5e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76277a1-a8ba-476d-90eb-26fb615ecac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58bf3fe-cdf1-49ff-88c9-ea56ac1dc1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a23c691-7fd7-476c-923c-cb573231407d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad058691-7105-4d41-a5e5-74d824064402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826988f-ee2a-425b-8cf0-a036c3f3aaf9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9c4377-498d-4eb9-a0c6-6e7ff8a1c3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7130ec-4ebd-477a-9d6f-c333b609407c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1096d17f-bb0c-422c-bb00-38cf5da1c0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564cc5c2-00b6-4af1-9c98-6de0cdb4ce06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab94df54-fe74-475b-966e-9b2682689bab",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8e4a02-c291-496a-8c4b-19638dd1cf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83c7a93-4aee-40f2-89f0-7ba03d540678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f860551-ed42-41ba-b967-7bf4bd90222f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbd7927-93b7-4768-a329-0caac1f877b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27562c7-b308-4834-baee-870bfca8ddc4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4e2e0c-cba1-4dc3-af00-25ad0d8cded5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd2f31a6-f670-49c0-9523-d0cdcf466793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a535f5d-d638-48de-b55d-5e68c2af9d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f95792-ba16-4e12-a812-8de8a4314328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196a9b49-52dc-4003-b3c4-38e4736b7cbf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab58afd-30a9-4cdf-9e5e-449d40177b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0aa5a4-60e1-4cd3-bf49-d9b5b7cacfa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfc7bf9-ce5c-4421-a506-9ace123b9759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c46909-d2d9-4c91-89b5-036fb0d47af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f33f46-5e7a-4cd8-9a79-d892756305fd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cccd72b-b4b7-413b-a850-7ff14675615f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1920da-5bf6-4b38-84f0-cd8633e6ea81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa622f3-3349-4028-abee-222cf7f17c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325bb21f-4640-419d-b871-a25b24a6a58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d299c5d-32cb-4457-bd4f-4affcfd705b8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d5cbb4-67c6-4e0d-9d9e-14644e711ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf54da3f-1b82-4bb0-b9fd-9acff59408d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934d2f43-fea0-4e8c-9bc8-53964c0d7a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e9b343-39ff-4f0b-ba41-16b91d435cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143676b8-192d-4777-b424-e0c8a0cebb5f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0366b6-536c-4123-8949-af76bf743d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6184682c-9b82-4f2c-a2a5-966cefc4f7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761bab90-cd36-4263-bf66-38bee0fd43fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806627da-657e-40e7-81b2-654be435a390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a7b6d1-9faa-48da-99f5-ecb5d9f0c148",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b920c378-dd30-473c-a00c-42d8e3df4884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b45d48e-82ff-47b1-9fcb-c29550e50586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36462deb-f46f-47cc-8ad0-1894f7accbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299f299a-8a69-4a8b-af08-d9536ea17657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e700db1b-ae9b-4253-ab43-a6e59502bd6f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06051e6-09f8-40b9-ac92-6629090414df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41c7533-af97-4d68-a22a-e3e95e47e1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7de4409-49df-4059-a794-01462cd9645c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db6126d-3424-4901-9d0f-cd2652dbfa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717563a4-485b-485c-952e-1a26ae910f84",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16258946-3f78-4e95-8018-a25ce72ff43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf67e15-8f2a-4dd5-97a0-77030ca71069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebee651-6c14-4d11-a571-f4495c4c0a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f3efa9-5ead-42d5-8a6c-ae5d8ea9f1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89c5172-ab88-4769-b1e1-331f5a18d336",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ffa7f5-6aac-4cdc-961b-e21200b4df1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d8a03b-dfa0-4c67-abe7-078fd2ae14ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6bd0e4-92e7-4dca-b361-96ace6ba9f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e0ba39-8299-4d3d-9f83-05d93d614491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468463f-75ab-47f6-94ec-8ba35c6fe434",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bfc659-f57b-43a4-b2d3-d7ff24f603dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234e19c2-6aa4-4e4c-abfb-2433724b210b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c32920-c93e-4531-8ef3-51f67103d527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6960f2ad-5426-48fa-833b-b6ad61bbc9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0017c640-7568-44fa-a6e7-11afeb3ce077",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013527b7-9c18-46aa-b72c-27fc973c838e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40fdbc4b-6298-4b56-ba20-57e6e6dadc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407bf03f-6efa-4158-8221-de915180339a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d68ca0-4c8e-47fb-9f07-4c9da58ffac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f371963-feef-420b-891c-79567b59213f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2756b6-abe7-4e1e-9c35-04bc28a4af1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af6194c-f9e8-4ca0-9e61-bf4f8b6886e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4987289a-d403-4008-9a65-69497b43f695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b1162c-e0cd-45a7-9035-39fd8dc89f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c09458-8382-45d9-a7c6-e9252083f288",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a4c9dc-b70a-4c01-b9dd-ef091c06a574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c085aa7e-7e53-44ad-9b0b-7af22c105aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3e5f75-695d-440e-9f28-66b5470b83de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf51902b-e087-434c-bde4-fa1477f295e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403f7784-c3c9-48db-bfdc-767c6bc2de08",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6552c-94b6-4e33-89c7-174189434838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "398666dc-1d1d-4873-b6ae-ec72f1312259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610aa5e-d08a-4eba-96ed-838fa3145feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64647677-2e35-412a-b697-9686eed9a56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b2dadd-e9aa-4435-9427-d4357270b044",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6fbee1-eeaa-4b2a-aac5-059a1ca8bd04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46aed449-d91e-4f76-bd96-05e1e04dc05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8349eb40-76e2-4503-a932-befc87ecfab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047ec48a-03bc-4037-9d4c-e683677987cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94588d7f-c26a-408b-a7ad-6fcd61e6f984",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf03e20-0e8d-461e-9d7d-59b7ab4afd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723161c9-8033-41eb-a0ff-bcecfe8f9000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d782a2-7fc2-4c2d-b7b1-042dddc8f0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6fdfab-81f7-4bfa-ab0b-6749cf92df9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea2ef87-9503-422a-b266-7f6cfa92f7b4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f8ebc0-fd74-46a5-9a5e-20b0a76c89d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73bd5bad-a4d1-46ee-ab38-c785aeee1ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd2b127-df59-482a-a80a-ca819db1b290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad7d9a3-f630-45da-a77e-156ca5ae9e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e82e220-115f-4648-a804-56034f77c707",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640051c3-4ea1-4621-81f0-7890c7de3df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2a0b0a-25fd-43ff-a5f9-d48116df6712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd6339-edb5-4d4d-a5c5-484ea827b4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599567aa-8e0e-4c6f-a5d8-360a6981c88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5460545-bf14-4553-a236-717ead9148e5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea95b3d3-8a87-43ef-860b-121ff062a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d51679-65f6-4b3e-9569-d018c8d3fff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3a5b1b-d713-4750-bbff-25a9b081bbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477d446f-09cb-4d02-9ff0-f036a18c3df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f850b113-e9c6-4651-bcd1-2b7eddceb214",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f14f5b4-7c53-4caa-8bf1-45ad39184de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8dac0ea-958d-47e7-885a-a7874e2a30e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957ebdcc-dccc-4b91-afad-5ec59d1fb38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec106530-dc47-4c61-aadf-001397be682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce3b4a0-b29e-40bd-b3ef-53976e46ba39",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb709cf0-9195-4ade-8de8-23c945c9c08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833d5b74-07c5-4407-a666-efe236ba1bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0676cabc-85ec-4c48-93b9-bf8004a733c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8d28dd-2657-4c5a-9dd7-6e83d70a45d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b14ef0-507f-4ee2-8a34-36d7b894c510",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c20c11-b020-4fdc-8503-cd4fbdb10030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75ea2f0-bf56-4a2e-b27c-30fbfc567d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69e251a-68bc-4a6d-9b59-a1ab777199c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d7b840-d30d-4aee-8d77-79ff2f70a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c071259-7e64-4946-9d75-953de8bd8c6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac54f49-3f1b-4c3a-b090-0dd928622f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaae0fde-90a4-422d-87ba-0c35a6398943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e770b561-b0e1-4bec-b561-5360b516b73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff47b19e-17c8-41fa-b657-624213fa7b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b38772-ecd2-4a62-b2fb-e0f636fc5bab",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9553b8-fbcb-404a-a7d0-2e7a34c2c158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d0f0ab-7afb-4b37-aa10-1f83b028b769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7e300f-4e9b-41bd-bdbf-107e0d277bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7426308-7ec5-4136-a96c-664fde7b27f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475e1135-3b21-43c8-b252-818382a7ab8a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c380b-baec-4acc-b64c-2c33f93f9afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79868032-42e9-49ca-a040-2fee44f1b82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11139d4b-73c2-4160-816e-4364d4294165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ec8370-2f05-4a9e-89d8-fb41310aeda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2430f675-847b-4ac4-bf7c-7e7976287111",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42646731-6435-4022-9024-278e81d63b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b269fe-c6cf-4a04-99b8-1b93605952ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d2134-8e21-4a6d-8381-46af4e945dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882833ce-65c4-4359-9e7c-ca857ec436db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f37bbaf-4c7b-4575-be8e-c4809cadf73b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fbedbb-0002-4bac-8ae3-d5c53bfaa12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367f190a-434d-465a-a1dc-81188612a422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa754c2-993c-4d88-abbf-207c6109f488",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245d84f8-d89d-4b41-95b2-db509e4269c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b13fe7-7a8b-4ab5-8596-b00bf92ea037",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36138ea5-2ccb-49bc-9c99-dd11f4553073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a99966e-8119-4e57-8dc9-502aab8f7eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38ea94e-48c1-46ca-9ad0-b72e13ab7dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324db1e1-5849-4447-ace1-4ca0a08a4c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5b3e33-353c-4cb1-a4e3-a7cae0e4bf1b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb58f9c6-9639-4471-9db8-fbb9a48b41a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533497c2-f565-4c27-aa77-adb64dee24ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6838c2-62ec-46f9-afd5-684f5c03933d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0de4067-3a93-4572-a95d-9cb3208b2633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716a7607-6fbf-427a-b8dd-4906ccfd4d96",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d17270-d8d3-4148-9679-152c71070821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d065c44-9b38-46fe-88a6-622cc63a5d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4f66e1-9d59-429c-8a9d-34d1440823d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f59381-3668-43f1-81bb-7b703d510379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbec497-1d01-44d9-9662-21c5a878809b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bc9b81-6bf0-4c09-9ddb-765a868371fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2498c1cf-ac7d-4073-b0d7-2072278468f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee66bc1-68c5-4c9e-a857-f8e2f7045788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4962e88c-da44-48d7-bc9b-5fd7e355cb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04ce1b0-ef14-4df9-bc1c-9946fbcf4d62",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced78f36-953f-4d0b-b4d0-66d976c26b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69914cd3-13c7-4505-8f61-81982f89d747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a07898-f588-4d73-969b-e29b6b8312eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22eec2f5-fbbd-412e-ab89-a95d5905c3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5c28b4-5bed-438b-846e-e1c7e461ffc3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33265f2c-247f-4a44-a92f-6ec1ae27bed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e43214d-b1c1-4157-8a70-3e7cdeef8b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2739d2-ec77-4825-9831-88575ac1b44e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b5b023-d3bd-427e-872f-4ee27e6602e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211471e9-d86e-459e-bb21-427b7ae5f549",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d940eb5-49f0-4434-bfc3-1cd331a1d9f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c5c768-94d1-474b-bf3a-e1a0e6f842f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e837e5-7024-411c-90cb-41d90ace40da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e528deea-c8fa-42ce-a3ef-0b9cfdebc6fd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "515f439e-1962-479a-8848-75c35f30aec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5af3360f-fc5a-458d-bffe-d61f10749f5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a4adf77-6f72-4790-a3dc-f92f24d594d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f781433-4b2c-40f7-b388-3a0161d67656"
                    }
                  }
                ]
              },
              {
                "id": "f49ddc1b-8342-4a08-b7b0-1f3ac8b2079b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8815dc1-ee22-489c-8a82-94130306ec8f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f4844c-a68d-4616-9b89-7f62f5dc249a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2801c69e-27dc-4493-9bf8-a1e9a476fb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b57796-0cb9-43bd-a61c-b5ab369367bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ea02f04-f18f-4d45-99c8-f12dc8ffc822"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "526b0154-8ecf-43ff-903d-3aea363d5a8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d520e89d-d62f-444d-b6e1-97eaa64ae6cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "885985ee-59e0-45a6-9582-f10cef5deca5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "366e829d-7655-4fb8-a2d8-9097ca260487"
                    }
                  }
                ]
              },
              {
                "id": "83c67609-2a5b-47b1-bb3f-6c67f0f99e32",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "db26536c-3169-4571-b7a1-0341c9e9fe8a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6512d470-39dd-44cc-b655-47561374eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "190634e8-e705-4979-992e-c117512739ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deac5ca-69f9-4f9d-87ca-b68cd6f4ac56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54e3571-fc0c-4dd2-ba50-81a3c641ba65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42cfbdb0-387a-4449-b425-5e4871d06f6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5efded75-c566-4765-9834-fb1fa0e485fe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d179ddd-0074-47c5-a2a4-162dff96f4b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a60a064a-1cf5-40e7-b9c3-32e480c207a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff11eddd-8c3a-4699-94e4-ccd9be288261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f40b12d2-9a00-4746-9c29-18fc80ae2a02"
                    }
                  }
                ]
              },
              {
                "id": "16c5d298-49f0-4e38-8806-1a6b4bb34872",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d641bba-620e-42c3-909d-6ce457d9a9dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c9de35a-e80c-4761-bb5a-d66e6ca2e499"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f98a535e-3420-438a-a706-bacccabb821e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3314d39-a8b1-45ab-9cff-4f5d1fa34dcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d7eef80-7fb0-4322-9158-a5121e9ca914",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "138d02fc-a900-4ead-88c6-b71973cb9076"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27a97e10-2c7f-4882-bb3f-1cf680935765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6f31694-19fb-4239-b641-31bfc4334992"
            }
          }
        ]
      },
      {
        "id": "e9f5e54f-8598-4f79-bbce-5be315de141e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "528e29d7-1dfa-4259-b19b-a4782e1921a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87642d73-c2f9-423c-9d68-d3825e98cc86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25a2e42d-e71c-4c0f-88bc-30aca5457b09",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52d84de-8d71-40ec-92b7-32eb1edcca40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bef78d0f-7339-4f26-bfcd-d5d880224978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a6273-9224-41b6-a15f-7311f1ce0235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a5f5b92-ce17-477c-8688-d69b8cdd1684"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e154a98-f8fe-402d-80f7-6515e992bf07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdf5089e-dc03-41bf-9aca-023313b0e247"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acc2ceed-214d-45fe-9d09-a3e3516a8411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5019b8a6-c6d6-4eac-a832-398204cddcdd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2cbc949-d9c3-4ea1-bbd9-f55fdb91d377",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "45044d56-d237-49ef-b400-bb7b3b34a640"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "061e652c-89a8-4822-987a-403feb2a1c10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59661b6f-9cf1-4cac-b276-f6cee29fed39"
            }
          }
        ]
      },
      {
        "id": "6d9ba342-f785-415a-8b5d-eb42cafa6b1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9b1a7842-b1c8-4bda-bf7c-d6fb3b463756",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12cc6d91-aaee-4d8d-9e52-fd6f1dda0d94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed4b01c0-ab9a-41b2-ba82-927c38e8035f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2727bd3d-0075-45f8-b76e-0afd43bd2b44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb41c203-0f67-4ec5-a786-8b8596c7bb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369cc957-715e-49f8-a085-5ec2fe5def00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "201bfba5-c6e7-4da1-9d14-604dc71bbce5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4e9e284-3a42-4e0b-b4bb-90dfa4ca756d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fac4a2a8-334e-4e80-b62c-ab6a4d7582f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cefe515-6342-44c1-9768-379d89d2dc5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b762bbcb-5c9f-4b3c-b6c5-c1179dc25228"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "458eb1b3-8921-4590-8240-a1201df712cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8fc2b558-7220-4655-931c-33fa3f0646e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73493c21-fb17-4a9b-a24a-4a59a802968b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe9385e2-2992-49ce-9336-9af3ffc76d20"
            }
          }
        ]
      },
      {
        "id": "6a00cf19-7bc3-4b76-af1c-57ce567f790b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0fb2a8d1-0863-44de-a98a-3a5f3decec61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69db7494-da81-4422-8d8f-e24231dedf64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39b8660e-ad2c-4309-96e6-9a81000b502e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933f75b6-88ae-4c69-a0b7-759d43c77a2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c5f51f8-e814-40a1-89ed-d8e56b2be738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80f6e37-88c9-49eb-bd3f-894488928683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff94af30-c71f-40b7-bdb5-a393cfb5458e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daf25814-689e-43a3-9f7c-c7ef44df7d94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb5716d7-7723-4e70-8987-fd219842e753"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef62cb8a-7f86-4f3c-bdde-55923ec1327b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e035a87c-a4a9-47a0-a7df-6c4e4738b687"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd9a5856-18a0-4b94-9d11-358fdcdeb5c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42b5d20a-3d9d-4c57-b069-fbc464a7e10e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c3e9cb6-9002-4cb0-b8b7-31bff91a9c98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1b02857-e797-4240-862b-02b090de9143"
            }
          }
        ]
      },
      {
        "id": "fb191b84-a384-4cca-b92e-c783175af144",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e28519f4-a850-4d35-91e4-79e5bdd13a2d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "247444fe-cd44-433f-b198-b2a5aced90ef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2a14f51c-1fe4-40db-a6a5-1867230c720c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dfd0a56-5f99-4ba9-814d-893faa2d8ed5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6e0d0b4-a67d-4a4b-8daf-968144d3a6ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 123.18650793650794,
      "responseMin": 7,
      "responseMax": 7473,
      "responseSd": 514.822446793772,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721435931821,
      "completed": 1721435970999
    },
    "executions": [
      {
        "id": "b172edb3-70ce-467d-87e2-29abb655791d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "66dd72e5-8ac6-4736-80fd-800842d3b6bb",
          "httpRequestId": "f4130633-b935-4595-81f2-3e21d3040aaf"
        },
        "item": {
          "id": "b172edb3-70ce-467d-87e2-29abb655791d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "713af2c3-0af5-40d5-a090-dc4faaa624fe",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "20f147c2-5e57-4e06-8535-246d98ee05a7",
        "cursor": {
          "ref": "565f50c0-45c1-435f-9391-1d084744b791",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "95dbe30d-c4b5-40bc-bc6c-7c7941a873b9"
        },
        "item": {
          "id": "20f147c2-5e57-4e06-8535-246d98ee05a7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d670e75-458c-494c-977b-1c8e2389ae08",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "5023fbc0-8d08-4e02-96d3-8956e55957ed",
        "cursor": {
          "ref": "96b1e4ac-0601-4dcf-b4da-1567be3cf8d1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1fc76521-f4bb-40e9-a957-e9d0214e59ac"
        },
        "item": {
          "id": "5023fbc0-8d08-4e02-96d3-8956e55957ed",
          "name": "did_json"
        },
        "response": {
          "id": "1faf5c48-e64e-4af0-922a-4333848808ca",
          "status": "OK",
          "code": 200,
          "responseTime": 267,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7460c1a7-114d-4ad1-8cad-87bba488bd52",
        "cursor": {
          "ref": "2f787ed7-d280-4a1c-a97d-0bec3891863f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26a6236c-e5a2-400b-88b1-08701dfcdb06"
        },
        "item": {
          "id": "7460c1a7-114d-4ad1-8cad-87bba488bd52",
          "name": "did:invalid"
        },
        "response": {
          "id": "4949a9ab-c840-4fd5-9607-e46af7e2fa26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 399,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7460c1a7-114d-4ad1-8cad-87bba488bd52",
        "cursor": {
          "ref": "2f787ed7-d280-4a1c-a97d-0bec3891863f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26a6236c-e5a2-400b-88b1-08701dfcdb06"
        },
        "item": {
          "id": "7460c1a7-114d-4ad1-8cad-87bba488bd52",
          "name": "did:invalid"
        },
        "response": {
          "id": "4949a9ab-c840-4fd5-9607-e46af7e2fa26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 399,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e63052-d9ae-406f-b745-4b5acc9cdcd3",
        "cursor": {
          "ref": "e437a687-c13d-4277-9a87-fc1a3fe50acf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c42d7bbe-08b4-4e11-a345-a3936b8a2d65"
        },
        "item": {
          "id": "65e63052-d9ae-406f-b745-4b5acc9cdcd3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6a4fb787-1d74-453f-b67e-c3629d8d56cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444eadda-41bb-4cec-9745-61e7a5821c98",
        "cursor": {
          "ref": "33d996c2-3b07-4433-be5b-dbcea9f2881f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0b2c36b9-55e2-448a-9e5e-aef91d968e41"
        },
        "item": {
          "id": "444eadda-41bb-4cec-9745-61e7a5821c98",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b79936fb-3bc5-4e01-9ea3-e05296e302cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e683e583-0dee-471e-b004-4ddee30bc889",
        "cursor": {
          "ref": "36648e3b-c07f-479f-bd0e-8193d2c51ab7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bbd9bce5-ffd8-43dd-bd3c-e84ed2dff485"
        },
        "item": {
          "id": "e683e583-0dee-471e-b004-4ddee30bc889",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0200770b-d00a-4bd2-9c02-e9f62858553b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a65bd9a-9f9b-4bc8-a397-265bb7c4a44b",
        "cursor": {
          "ref": "ddfeb18a-d14a-47a7-9250-2f5849134609",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f479bd61-171b-42f1-820f-2402d8ae9781"
        },
        "item": {
          "id": "0a65bd9a-9f9b-4bc8-a397-265bb7c4a44b",
          "name": "identifiers"
        },
        "response": {
          "id": "e9eeec55-dc3e-405e-9bdd-a88ee093a9c4",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cae1e49-0f08-433c-9f23-877831353bd6",
        "cursor": {
          "ref": "b00eea1f-6a9c-46f1-a245-ad01a5818fcb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d0b85c7f-dab0-4ca2-8f59-227ff0b52395"
        },
        "item": {
          "id": "4cae1e49-0f08-433c-9f23-877831353bd6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7227afeb-a376-43e6-88ac-b64738f4d5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08bbf1f-bc05-4074-afd6-4fa446497786",
        "cursor": {
          "ref": "262efdcb-e362-4eb2-bb53-dab924c8eddc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a18e3a5-3b3c-45e4-8a93-1e2bec1781d9"
        },
        "item": {
          "id": "b08bbf1f-bc05-4074-afd6-4fa446497786",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "977295c9-aefc-45f4-8eb2-a203433594e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ced421a-4668-45ea-abc1-731ff51d33ae",
        "cursor": {
          "ref": "1d38a889-3b04-4aee-ae92-9a873740576f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c61cbb23-e770-4764-8d5d-75813423b5ed"
        },
        "item": {
          "id": "1ced421a-4668-45ea-abc1-731ff51d33ae",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "04c66317-81be-4a00-a17a-6e7881379955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469e1222-712b-4f01-a109-301729fc7b54",
        "cursor": {
          "ref": "a0997d97-d16b-4d50-a325-32d37e5c5240",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "51dfdfc7-183c-461f-815a-302795602af6"
        },
        "item": {
          "id": "469e1222-712b-4f01-a109-301729fc7b54",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0ea7788b-8310-41af-a9e1-cacb025f8962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e39ac8-c152-4444-94b8-5be151c85978",
        "cursor": {
          "ref": "249858c6-0e59-468e-a519-db43042add16",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4faf1f36-cc9b-42a3-a87f-349c60ea5431"
        },
        "item": {
          "id": "c4e39ac8-c152-4444-94b8-5be151c85978",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4b01b4c9-380b-4040-abe3-a7808fee9636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe73513-5199-46b7-9608-b612505db17f",
        "cursor": {
          "ref": "c93d06c0-ef86-416c-8915-dd5f0fc0b7f7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2bbb96c7-b9b6-4fc2-9073-19fe87b8acfb"
        },
        "item": {
          "id": "9fe73513-5199-46b7-9608-b612505db17f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f798d3f-98f3-439b-aec2-f617af2bbb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792a40aa-3424-4241-986f-d84b26bf00d6",
        "cursor": {
          "ref": "65a58e91-895b-4e84-a116-46af3ca36758",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bba51d7f-3c0a-4aa1-8f17-9e57b48ced54"
        },
        "item": {
          "id": "792a40aa-3424-4241-986f-d84b26bf00d6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b2ac048-de5b-4b57-ab36-d0e960781654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62f2042-ddb6-4228-9a66-0347da5960cf",
        "cursor": {
          "ref": "3105462b-7013-40d2-981a-5998efa2404a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8982acf4-136a-49cf-ae0f-f82baf7a4499"
        },
        "item": {
          "id": "f62f2042-ddb6-4228-9a66-0347da5960cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "81c76d42-7126-451b-b963-ae85442d768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc89c3b-a5fb-4b8e-8b82-cfd718dbc809",
        "cursor": {
          "ref": "a6cbef56-1d71-4301-951e-d160bb7b9c17",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "67150724-240d-4bb2-8818-be2c1e275579"
        },
        "item": {
          "id": "edc89c3b-a5fb-4b8e-8b82-cfd718dbc809",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3d3df042-607e-479a-b357-f21f77e672c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd34a58f-2a86-4de7-88d6-ba5970153c8c",
        "cursor": {
          "ref": "f374ccaa-7d54-4877-a2f2-435f3c623b07",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1abd0527-039b-4efe-b0f0-e6b2c71a246b"
        },
        "item": {
          "id": "fd34a58f-2a86-4de7-88d6-ba5970153c8c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b1ac013f-d38b-451b-a81f-309685eb1c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b09ff89-587c-46f7-9d74-423eb65f6d48",
        "cursor": {
          "ref": "4d76593c-148e-46a0-b24f-b8e5ade4f9cd",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d3a22778-44de-4481-9765-c29e12b1da2d"
        },
        "item": {
          "id": "5b09ff89-587c-46f7-9d74-423eb65f6d48",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aeb6d341-d0f7-4d19-a10a-2605c96325e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021cea6-1f88-48e5-82dc-73abef229e8f",
        "cursor": {
          "ref": "27c4ce4e-3458-4234-8d8a-bc2f9140a1a6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0683d016-3725-4923-86c0-242dad656713"
        },
        "item": {
          "id": "1021cea6-1f88-48e5-82dc-73abef229e8f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "556027b1-b816-445c-93bf-57d093629b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ff6b64-0853-4a35-b773-3169fc84f14d",
        "cursor": {
          "ref": "f3e1f42a-0543-483f-9acd-87c376ee5a0b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "11369110-eadd-42b4-88d3-33ad5385f737"
        },
        "item": {
          "id": "e0ff6b64-0853-4a35-b773-3169fc84f14d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6c2af465-a2d2-404c-918a-b49f88a12b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c02a04-280c-496c-bec5-aae87d0d5262",
        "cursor": {
          "ref": "6e93b43d-fa5b-4fde-9e36-edcf300256ca",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8e2d965e-4804-41f2-b531-cdd98532813d"
        },
        "item": {
          "id": "f2c02a04-280c-496c-bec5-aae87d0d5262",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e3caa29f-c86b-46f0-a176-94a7e8d01657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc43129-4cdc-422d-a6c2-9cc6e7bdb41e",
        "cursor": {
          "ref": "550bfeb1-bcb7-48bf-a71d-c7fceb732c3f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0403ab19-282c-4b6b-8d96-644e4707a467"
        },
        "item": {
          "id": "bcc43129-4cdc-422d-a6c2-9cc6e7bdb41e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f4978eec-9612-4228-be4c-d7ef93eee0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216919d5-844d-4f47-bdf1-829d37863c87",
        "cursor": {
          "ref": "a08d9363-aefd-4090-8d93-38c2a07fbf3a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1ffecfef-2d88-45ca-a436-85343f19d67b"
        },
        "item": {
          "id": "216919d5-844d-4f47-bdf1-829d37863c87",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0fbbae56-f069-4bf8-b705-4c48028260b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a3ed9-d1c0-451c-81cf-74ed382e8b08",
        "cursor": {
          "ref": "4a4a0066-cd61-4d1f-9194-dd8d597949b2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f597873f-f152-40db-a0dc-e778ca72c218"
        },
        "item": {
          "id": "6a7a3ed9-d1c0-451c-81cf-74ed382e8b08",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e2e64c17-bd17-4df7-9fbc-7a02bc34c357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a2808a-70d2-49d1-ae5d-b8a4ecfb314f",
        "cursor": {
          "ref": "fca63e32-62aa-45c0-93a9-7629d5c3b726",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b7fd782b-e3fc-4364-afb5-90a60b5abfd4"
        },
        "item": {
          "id": "40a2808a-70d2-49d1-ae5d-b8a4ecfb314f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f6688c1d-7dcf-40bf-95f7-49e81a4ea711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd6f05c-b905-486f-98f8-f833e5b71d37",
        "cursor": {
          "ref": "8176d594-2859-412b-a5f3-a33516662b0b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ba0d451-da8f-497d-abba-beb15adb3e92"
        },
        "item": {
          "id": "3bd6f05c-b905-486f-98f8-f833e5b71d37",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "efec7623-7877-46ec-84fd-3668e7d3f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca6a59-3657-43a0-b223-f4bf25f6e7ea",
        "cursor": {
          "ref": "192daacb-872c-47b4-906d-cf3ac8d1c44b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e44011b8-1dd7-43f2-af18-5d0df0cdb2bf"
        },
        "item": {
          "id": "22ca6a59-3657-43a0-b223-f4bf25f6e7ea",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "59598df5-dcb9-4c77-8073-0cb6a2573d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203b0759-8e08-4bdd-82fe-d14c424dda91",
        "cursor": {
          "ref": "659bbd41-b8c2-4832-8539-b8f54beac17a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cc65e80c-e69d-46d8-b35a-1981f6f4690c"
        },
        "item": {
          "id": "203b0759-8e08-4bdd-82fe-d14c424dda91",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "edd12ad1-bff2-4213-8966-ad397a21c38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73435624-0f22-451d-a876-3eb4871f7e9f",
        "cursor": {
          "ref": "29312929-c753-4687-baba-7163c2b335d6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "04a5a1a5-737b-4feb-866c-2e24925a169d"
        },
        "item": {
          "id": "73435624-0f22-451d-a876-3eb4871f7e9f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3e0af123-4e72-4a8d-ba46-06c0f2a23a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318946d2-707e-4421-bd4d-3553ce9668da",
        "cursor": {
          "ref": "273b7ab1-61f5-44b7-830e-7303303e44fd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dac217d7-1106-4ef1-8988-bdf65a08be32"
        },
        "item": {
          "id": "318946d2-707e-4421-bd4d-3553ce9668da",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e6413949-573b-4f7b-81bd-1209d9fc641e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41cf1f9-55f5-4ebb-9116-62085fa2d438",
        "cursor": {
          "ref": "d934bd5a-a372-4189-87da-792ab7c7b99e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c87564e6-5811-403c-b41c-e25d8a371418"
        },
        "item": {
          "id": "f41cf1f9-55f5-4ebb-9116-62085fa2d438",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8c6fae5a-2c74-4422-b74b-2ba91c52308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8e5e14-91bb-4733-9d76-b3e591e3ff7f",
        "cursor": {
          "ref": "02c1bf00-d217-4bd6-92cf-b7f1e36f38ed",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d35a6e3e-425a-443f-bdd3-80dad5b5df9a"
        },
        "item": {
          "id": "1e8e5e14-91bb-4733-9d76-b3e591e3ff7f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78efece9-806d-4219-a0d8-0551cf36d22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f59d203-8f78-419d-8a98-e03a51218dcb",
        "cursor": {
          "ref": "8e17dc7e-6ec1-4700-9578-3bd1ee193459",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "03c74d4b-5aeb-4649-95ab-114b78313155"
        },
        "item": {
          "id": "3f59d203-8f78-419d-8a98-e03a51218dcb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e74e41b1-7703-4136-8181-b12a99d09051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ce5910-c75d-4da9-9457-4349b3c9c572",
        "cursor": {
          "ref": "f4d68a81-f3c7-48e6-8ad1-532ddddc0f15",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e24fa061-3f24-41aa-abfa-f15130a13e73"
        },
        "item": {
          "id": "58ce5910-c75d-4da9-9457-4349b3c9c572",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "102bfee5-3fd9-40be-a1b2-ff32e4f11ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eecacc-364a-4a70-b14e-409cea74aff5",
        "cursor": {
          "ref": "b27f89dc-26b5-411f-8821-5737db9a2095",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6e72f83c-d72c-43ad-b0ec-0ee89e257a89"
        },
        "item": {
          "id": "42eecacc-364a-4a70-b14e-409cea74aff5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e5e3d3a4-7b38-4edc-a9ff-223a74463412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b78c6e-44b1-4984-a689-d0051c1995e8",
        "cursor": {
          "ref": "077e2932-d525-4e27-af70-f4df4404aa3a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "063104ce-30ff-4f40-9d8f-a187ba6cf552"
        },
        "item": {
          "id": "e2b78c6e-44b1-4984-a689-d0051c1995e8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7da4eadb-de70-4497-a7e4-a281c72442aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e901984-857f-43ae-b19f-45044bafc27f",
        "cursor": {
          "ref": "5710748d-a3de-4773-89a3-3c5a904c80c2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9b36479d-1bee-45da-a01d-f9b895757874"
        },
        "item": {
          "id": "3e901984-857f-43ae-b19f-45044bafc27f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a2278a47-c240-4b17-b75d-d4e7e75afc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7da6c6b-9478-4d47-a547-73f26ef0404d",
        "cursor": {
          "ref": "8f5ddc6e-afbc-4f24-8474-b3358998bc3f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f685202e-7d43-4e95-a5e6-75718899a12e"
        },
        "item": {
          "id": "e7da6c6b-9478-4d47-a547-73f26ef0404d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8e6c3649-f6dc-4fe3-b40b-1c0dec617d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf3455b-c44e-4d54-b5dc-37355bf42992",
        "cursor": {
          "ref": "b3be631b-f111-41aa-833a-37ec30d2ae04",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13ee91ef-a317-4d56-9f1d-4ffadfa68da3"
        },
        "item": {
          "id": "8bf3455b-c44e-4d54-b5dc-37355bf42992",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d667a607-3646-4331-ae22-cb464346501d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9880ac-45c0-486b-a9b2-a69a4a8fc7ed",
        "cursor": {
          "ref": "d5a901a3-df42-4bac-ae8d-edab382603f5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "20f42d8e-47dd-486f-8ac0-f6c54860eb30"
        },
        "item": {
          "id": "5f9880ac-45c0-486b-a9b2-a69a4a8fc7ed",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "99013375-0a22-41dc-b231-8eb5df121c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95737279-c205-4381-8a37-5598e60617fc",
        "cursor": {
          "ref": "5e1a261b-c063-454f-aa8c-d10952fdb016",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "43f66d19-d6d3-4e74-91b4-3aa15e11db2a"
        },
        "item": {
          "id": "95737279-c205-4381-8a37-5598e60617fc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "64fceaff-3e4e-4921-9799-2f80afdc7a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7553e551-af42-425f-9e1f-f3f8c6ed7b67",
        "cursor": {
          "ref": "a7b142c0-3ec5-4a37-b3e8-dc4cb8e0e18e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9472cfcb-6a61-4292-8982-dad71161e8ae"
        },
        "item": {
          "id": "7553e551-af42-425f-9e1f-f3f8c6ed7b67",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "40dcfd8b-f6bf-47b5-9a7c-308cc1b30e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff84dab-6fe5-4ece-9e57-3c7332ba1ec4",
        "cursor": {
          "ref": "662e09cc-a728-4224-b036-040e4e6d5435",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "244b4b38-5ed7-4d6e-af1d-af23d91083c6"
        },
        "item": {
          "id": "bff84dab-6fe5-4ece-9e57-3c7332ba1ec4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "01a61e91-d9fe-403d-9f62-6b31a5336e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c8c472-ccce-4ff3-9e8d-d9d7f3b28859",
        "cursor": {
          "ref": "f448f0b3-4327-4303-8013-be20c41b8e10",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f5e515bd-4b56-42f9-8ad9-211ed04e6e9d"
        },
        "item": {
          "id": "44c8c472-ccce-4ff3-9e8d-d9d7f3b28859",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "834be565-84db-4d23-aa01-68c4959b7177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2726beb-3f31-4232-a4a7-927aae587ca6",
        "cursor": {
          "ref": "bf13dc32-7aa5-4033-93af-11488f642fd9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2da1c142-ca0e-4646-bcd1-da3b596157af"
        },
        "item": {
          "id": "c2726beb-3f31-4232-a4a7-927aae587ca6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ebc04b7f-1b35-4e40-bda3-2b36883aa53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a66b41b-3150-49e4-b7f1-b99d8e5442c8",
        "cursor": {
          "ref": "b41bddfe-b108-48f8-b79b-ac6d602398ac",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "95a11938-c2ba-4c66-ac95-905a70d864cd"
        },
        "item": {
          "id": "7a66b41b-3150-49e4-b7f1-b99d8e5442c8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "103ee076-6df9-46bf-82a4-c451ea90dd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e898a9f-6f54-4786-9597-1d97901ec6dd",
        "cursor": {
          "ref": "626b633a-9d9b-45b8-992e-d7e64bcb08da",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d395bf9b-0258-426c-a1b0-ccaefed82e24"
        },
        "item": {
          "id": "9e898a9f-6f54-4786-9597-1d97901ec6dd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fdeb06ee-6a46-45ba-a1a7-4929240dcb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fb97e6-f1ef-4c96-9fc3-c2e919dd7b8a",
        "cursor": {
          "ref": "6cfd3448-0f67-42d4-b710-465e5a938f39",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e9006c86-2bb4-4701-a40b-0d3d19a3880b"
        },
        "item": {
          "id": "d3fb97e6-f1ef-4c96-9fc3-c2e919dd7b8a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "93390542-5bed-464e-8d0b-d142fe102029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349276da-d2e7-4afd-96b4-2ca9a264d476",
        "cursor": {
          "ref": "9a4c7a02-26a5-42aa-a726-97c853501be8",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f0867b6c-705f-4c6e-a3ba-86a0f5216046"
        },
        "item": {
          "id": "349276da-d2e7-4afd-96b4-2ca9a264d476",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e599cb99-d122-4499-86cc-89ada328570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ce5524-54ab-45a9-96f1-39206177f884",
        "cursor": {
          "ref": "764b8570-fe3d-42b8-b2de-d03909354180",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b4ae4120-cde1-406d-829e-442af71b8ac7"
        },
        "item": {
          "id": "76ce5524-54ab-45a9-96f1-39206177f884",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e39a080d-3e51-4cbb-8e09-ec6ab85907a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0934f951-52dd-43dd-a0cd-7c94123d6910",
        "cursor": {
          "ref": "b3ae5e31-2bf2-4cd0-85fb-3cb174726122",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e301baf-a1e5-4fc8-b607-06af6d7df2e0"
        },
        "item": {
          "id": "0934f951-52dd-43dd-a0cd-7c94123d6910",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "293d0fc2-28e1-472f-9e6d-1bfcfd7995a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf95616-3d05-449e-87cd-59f56aba4bec",
        "cursor": {
          "ref": "51f1ff8d-06e4-43d5-b13b-037e73ab9ffb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f570b006-d13d-4e18-878f-ed747844156a"
        },
        "item": {
          "id": "ddf95616-3d05-449e-87cd-59f56aba4bec",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a2c034cc-76bc-4b64-a4aa-13087b2b35b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1f36d6-c4f6-4b56-bc49-ddba988dc5a0",
        "cursor": {
          "ref": "dc428845-1ff1-47d3-bc68-35410d856554",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fcf71ce2-0368-4cef-abab-9416b0fe4061"
        },
        "item": {
          "id": "4a1f36d6-c4f6-4b56-bc49-ddba988dc5a0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "54a3d546-0091-4bd2-9aa5-91cef033d8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9cf58c-e6af-48e2-8772-6d9ce3438f4e",
        "cursor": {
          "ref": "317a4a10-b32f-4354-b425-7c6bf1167f5e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bce6b3e6-844a-45a1-8310-d97f5bca44b9"
        },
        "item": {
          "id": "4d9cf58c-e6af-48e2-8772-6d9ce3438f4e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "718e8e68-b547-4543-9474-ef419751d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3faa226-e035-44ee-933e-129ac5cf320e",
        "cursor": {
          "ref": "528c893e-5465-42ad-9ac4-8c7050c51d18",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4361f18b-61fb-45d1-8c2e-f21a96978533"
        },
        "item": {
          "id": "c3faa226-e035-44ee-933e-129ac5cf320e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9896de06-ea20-4834-be5f-16fbcce67e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad41cb05-e692-4faa-92df-f110df273b2a",
        "cursor": {
          "ref": "72c13ef7-4176-466b-891b-927349bafadd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7a518844-94f1-4e18-9058-29f5d6d16ee2"
        },
        "item": {
          "id": "ad41cb05-e692-4faa-92df-f110df273b2a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9adfcb71-d8a1-47f1-8f76-c31c524e3b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671dc350-2cef-4ff1-9c87-bb0c1c8be4be",
        "cursor": {
          "ref": "ef1bdeb8-f80b-4c10-b478-0a452742dd9b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "14a5b8de-dfe3-41f2-8978-03f37358e44b"
        },
        "item": {
          "id": "671dc350-2cef-4ff1-9c87-bb0c1c8be4be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bd867c46-b815-46c8-ac00-cb7a06763309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775b77ef-9f01-4cef-96a2-d497d54dff95",
        "cursor": {
          "ref": "97e591cf-a4cc-45b2-a7a8-37c6e7b46eae",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "486ee9fb-5b82-4d0e-83c2-155c8371e958"
        },
        "item": {
          "id": "775b77ef-9f01-4cef-96a2-d497d54dff95",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "60102341-e454-4de3-b2e3-8d545c6d8c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553610aa-4cda-4e58-8bab-827f8aff4dab",
        "cursor": {
          "ref": "6343a646-b452-4a30-919d-943a821f415d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "25c000d0-38a0-4a15-befd-045ae21107bf"
        },
        "item": {
          "id": "553610aa-4cda-4e58-8bab-827f8aff4dab",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f428e93b-0431-4cb4-a040-f1ed6c55043a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923b9663-0f73-4442-9b99-2a24da94013f",
        "cursor": {
          "ref": "533770bb-bc62-4b87-bf3a-033c8291e2d9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8c42ebbb-f47f-45c4-8abe-acee497019b7"
        },
        "item": {
          "id": "923b9663-0f73-4442-9b99-2a24da94013f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "791142f0-3239-4bb2-8deb-615fed92edbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e659f6f8-116c-462a-b8de-3455b1875414",
        "cursor": {
          "ref": "0e83ac20-68c9-452f-b230-4ea00437b558",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b9aa0bb2-b05c-4922-a302-4766432349fa"
        },
        "item": {
          "id": "e659f6f8-116c-462a-b8de-3455b1875414",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "48ac4f57-5f93-44f7-acc7-9daf46046e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a380402-fcb9-41a9-baba-f66b36f06c6c",
        "cursor": {
          "ref": "697eda57-8457-41bd-87ae-da0aa40194b7",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "87059b3e-2424-4852-b1cd-ab6f8bb6c282"
        },
        "item": {
          "id": "4a380402-fcb9-41a9-baba-f66b36f06c6c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8fb35690-057e-4f71-b075-51c716792192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c75518-7341-40f6-b8be-0795da28d1bc",
        "cursor": {
          "ref": "a149e93f-2223-4506-823f-53f3615f94a1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "df048e05-41a6-4e1b-85b7-51a5a04f1123"
        },
        "item": {
          "id": "84c75518-7341-40f6-b8be-0795da28d1bc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7002b9c5-abca-4a9c-b27d-26da8652abfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb14a712-0805-4ced-a9a2-ccdbb289495a",
        "cursor": {
          "ref": "d6da658b-9b53-42e1-a746-3bcb1e5dc43b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3bc7a73b-8a02-46d2-925f-19fe4e0fee61"
        },
        "item": {
          "id": "cb14a712-0805-4ced-a9a2-ccdbb289495a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f7806ba7-c63d-46bd-a869-cf6ca90043fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1578823-b539-4572-9d05-17c8e91d01fe",
        "cursor": {
          "ref": "4fb471c0-8721-450b-a283-f245584dbcea",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7df897d5-166c-4fbf-b28c-24edb670fcd7"
        },
        "item": {
          "id": "c1578823-b539-4572-9d05-17c8e91d01fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4691f013-c3bb-4e19-be44-7edec53a37a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5f58a8-1eda-4527-bddf-93943777c31f",
        "cursor": {
          "ref": "ba63e4ab-06e8-46b5-a96d-06e8471c42cc",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a41d15f-e73b-45fc-9181-fbcda7dcb8c0"
        },
        "item": {
          "id": "7a5f58a8-1eda-4527-bddf-93943777c31f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f31563f-783f-429a-afea-7687edbbe801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f37ebf-b66d-49a1-a7ae-8d14882b8540",
        "cursor": {
          "ref": "0b2379ac-54ff-4b60-9baf-be9785bce123",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2b5d1de2-5dbf-46ff-a5de-572a2767c8d7"
        },
        "item": {
          "id": "00f37ebf-b66d-49a1-a7ae-8d14882b8540",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7623f4c8-3e2b-4f89-976d-78d9a9af9fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999d0a88-03e2-4222-bb8e-147bfb41b497",
        "cursor": {
          "ref": "dfd5e9a8-bfb8-4512-acc8-e017e4ee8aec",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7c8f304-100d-4115-a665-4bbd58a5315b"
        },
        "item": {
          "id": "999d0a88-03e2-4222-bb8e-147bfb41b497",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "caae972b-69d2-4df0-987b-c41bd46bfaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35d17c5-bf43-4f45-8943-8a3d27e1f3e9",
        "cursor": {
          "ref": "98b2e6e5-df1e-434e-903c-22d7437e6842",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e0efa829-9dd7-48ea-b6c3-2f50b36ceff4"
        },
        "item": {
          "id": "f35d17c5-bf43-4f45-8943-8a3d27e1f3e9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "04a88b17-f3a6-45fd-884d-3da8b4b696a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb6bf1c-67d6-4844-9f1f-fe23bd776a8d",
        "cursor": {
          "ref": "3115e6b2-d052-4b39-8a35-2751f39700de",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "45799249-d452-460e-8339-6611bd5f9790"
        },
        "item": {
          "id": "7cb6bf1c-67d6-4844-9f1f-fe23bd776a8d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d1eb85d3-328f-4cb2-af3e-7433ba6ff636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cd07b1-ef95-47cd-8581-7ee0ccc5b3e0",
        "cursor": {
          "ref": "208beaf9-e278-47c3-84e5-dd265513571f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d049b45a-1e08-4e58-809d-f06f3c96e478"
        },
        "item": {
          "id": "e0cd07b1-ef95-47cd-8581-7ee0ccc5b3e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c5d54783-75e6-4bee-a0c1-cb3dafe4c784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d43783-6ab5-46a1-ac96-edbf4d73d624",
        "cursor": {
          "ref": "9775d722-c315-4eca-a4ad-ce5e3683723a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6e3cb341-0679-4f70-85e1-01232a67d8a9"
        },
        "item": {
          "id": "61d43783-6ab5-46a1-ac96-edbf4d73d624",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ce6cc85f-315b-4eb6-ae86-a370bf63af9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc0347-a66a-4c33-ac91-d8167aa82326",
        "cursor": {
          "ref": "f5586152-7039-481c-868d-71472744d7d8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ed627a47-ec5e-4444-bf89-f7c7f353c7ca"
        },
        "item": {
          "id": "abbc0347-a66a-4c33-ac91-d8167aa82326",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "687b8aec-6071-4d9e-9676-8e6962be4522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14881bb8-404c-4abb-9fde-a93c1c80b0dc",
        "cursor": {
          "ref": "ea4bf59d-2a88-464b-9487-84d6e2006876",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "867cc0e0-c1fd-4c8f-8cbf-6263e6b42c52"
        },
        "item": {
          "id": "14881bb8-404c-4abb-9fde-a93c1c80b0dc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "159afea5-ece3-4bd1-b68c-474885d97298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c298cb5f-ab63-4d9a-860f-407be0062998",
        "cursor": {
          "ref": "066133e0-76fb-4463-a74c-682e2059cf37",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fce7aa49-7293-470b-b4d9-4d9b2322662f"
        },
        "item": {
          "id": "c298cb5f-ab63-4d9a-860f-407be0062998",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27b421c3-1fdf-44d4-b90a-aa9b730dcb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f5ac56-a388-423b-a539-a9def9a17eb9",
        "cursor": {
          "ref": "a9b00358-7b81-4e99-ac01-f1e352118621",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f15ac55a-0f41-4b2d-a576-9fa54e2ef385"
        },
        "item": {
          "id": "a9f5ac56-a388-423b-a539-a9def9a17eb9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c35ddc94-f8c1-4624-a7b1-17647c454972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b66eb0-f2a0-4e68-8f68-3d34b1309501",
        "cursor": {
          "ref": "b1445440-8007-49e1-bc57-d3837adba2e8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1dc55fcc-3a27-40ee-a954-6a1a55f6971b"
        },
        "item": {
          "id": "92b66eb0-f2a0-4e68-8f68-3d34b1309501",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d0af33e0-5a81-4302-9175-fc458b40e858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab875958-bf5e-4d54-aa71-c552831a3ab9",
        "cursor": {
          "ref": "fa743262-ccf3-422b-b3df-56b2bfa49637",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "29131398-f223-4378-b20d-d57c180da55c"
        },
        "item": {
          "id": "ab875958-bf5e-4d54-aa71-c552831a3ab9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dbdd01f0-0247-4933-a407-0d2fe8c4f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1626a8-7a0e-4d97-b856-75b5139089af",
        "cursor": {
          "ref": "5d480c5f-2d61-4785-9757-6b1fae946067",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "708656a9-a8e2-424c-8be7-1d9d8223ba13"
        },
        "item": {
          "id": "3d1626a8-7a0e-4d97-b856-75b5139089af",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f97f9705-36e4-4d81-9245-c3ab2a243715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c41bab1-27f6-42bd-942e-3e8b4d72bd10",
        "cursor": {
          "ref": "61a5b061-6a06-4362-a70f-74c1829103ef",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f2fd2a74-d332-4df5-ba93-ba45453645fa"
        },
        "item": {
          "id": "9c41bab1-27f6-42bd-942e-3e8b4d72bd10",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f2ac2d5c-7900-4e4a-960e-3b9c7ea17eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e9da51-927d-432c-89b8-ce17794473d2",
        "cursor": {
          "ref": "9d2eeb48-dea7-40f2-992e-df4c76324cf5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc4b6859-00ab-44a3-a289-3eed6cd1e2e2"
        },
        "item": {
          "id": "74e9da51-927d-432c-89b8-ce17794473d2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0fda52cc-803b-436e-b84d-cdc070dd7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb4e01d-a4e8-4c43-8d79-1fd7c2adac39",
        "cursor": {
          "ref": "94e2fdb0-1d12-4ae6-af34-03fd48bab068",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "01ea8cac-7785-4995-925f-70ac21bc1ba0"
        },
        "item": {
          "id": "3fb4e01d-a4e8-4c43-8d79-1fd7c2adac39",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a6a51d2d-ce7e-44e1-944e-9c0a7fb4b8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc13c81-3a70-4655-b39a-ad353f4f6874",
        "cursor": {
          "ref": "7655cdab-9824-4fb2-a489-bf0adbc583a1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "89dee046-8d83-4207-b451-62fbc87346a8"
        },
        "item": {
          "id": "7dc13c81-3a70-4655-b39a-ad353f4f6874",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "43ef34b4-c842-4103-816f-d262653f3c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b634fc-a065-439a-af84-dbddcff23c5e",
        "cursor": {
          "ref": "cd604c84-0f79-44db-bd44-1219f737fbeb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "84b3453b-a875-4fd0-8c92-81bdaec131d7"
        },
        "item": {
          "id": "d6b634fc-a065-439a-af84-dbddcff23c5e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "63f5ca94-4601-4cec-88be-a715acc3df83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdbdf03-5759-464d-a3c4-51f7963ac81a",
        "cursor": {
          "ref": "02ec2215-3020-4c16-a715-ee95056bd810",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b633adaf-397f-48cf-812a-314488c6a181"
        },
        "item": {
          "id": "0fdbdf03-5759-464d-a3c4-51f7963ac81a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c36382b5-335c-490d-8abc-295e100c463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb52cc95-46ca-455a-ad77-8750c5e68376",
        "cursor": {
          "ref": "c8d06f97-83e7-4568-b3e0-8f5177fb8fdd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e8ab45f6-2fc9-4a37-b72f-ffb31d398146"
        },
        "item": {
          "id": "eb52cc95-46ca-455a-ad77-8750c5e68376",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5dc307b0-447c-4f45-baac-1b31ff65f362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d6db5e-337b-49d0-9f10-837676119b31",
        "cursor": {
          "ref": "0a27bc1e-10fa-4bdb-8dd6-122a29c08a74",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f5a2c59e-0537-4bdc-86f8-3c895a40e698"
        },
        "item": {
          "id": "f6d6db5e-337b-49d0-9f10-837676119b31",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc3bb736-75d0-4d43-956e-ccd0a0ccef16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be07eee8-cfe3-44f7-a40d-8d3ec9060cb1",
        "cursor": {
          "ref": "cfa9be20-49bc-4516-8ddc-9899a0e5d4c7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "205f5181-cf79-4cd5-90d8-a04d46bdbeb9"
        },
        "item": {
          "id": "be07eee8-cfe3-44f7-a40d-8d3ec9060cb1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d9fb7c61-cba0-40a3-9841-6d18b3dad47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01ae526-a91e-4144-9e31-078d6c63d9da",
        "cursor": {
          "ref": "04343595-9b6a-4b75-af36-ededdb71d66f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b77e0990-3589-4cc5-8da8-9059c34da782"
        },
        "item": {
          "id": "a01ae526-a91e-4144-9e31-078d6c63d9da",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "adc04724-348d-492d-abdd-58849c1f8e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360c5ec9-428e-4d19-b6ff-522a4008a2d6",
        "cursor": {
          "ref": "ee52e4aa-d155-4d1c-beb8-9d2bcbcccbe5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "568415d7-77dd-436b-a3e2-d723a29e1ab9"
        },
        "item": {
          "id": "360c5ec9-428e-4d19-b6ff-522a4008a2d6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4dba30ac-f015-47dc-aaf1-7ebe159776ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eb9372-a759-44a7-9696-7a58a84a2ba1",
        "cursor": {
          "ref": "898f308c-920a-40f3-885d-b08d4aa952dd",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a31938e-2e79-4466-b528-799669dbd75f"
        },
        "item": {
          "id": "60eb9372-a759-44a7-9696-7a58a84a2ba1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f7e72aff-e4eb-4499-81a9-b574be3f47c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dfd336-01db-4bee-8590-1470d4fcbeb1",
        "cursor": {
          "ref": "926502a4-842f-4400-aefa-90ec1c200857",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "51df72b9-fd83-4f41-b3d4-519dda3f956f"
        },
        "item": {
          "id": "40dfd336-01db-4bee-8590-1470d4fcbeb1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "09a24a36-eb2b-415b-bbcd-e64bf4ffd6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2d095d-60a8-44a9-a7c2-85de12eb7c41",
        "cursor": {
          "ref": "b9b30e5a-1f39-4476-a56a-d7e39baa5612",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4cbdc5e3-6127-451b-8a00-573e5e8635fa"
        },
        "item": {
          "id": "6e2d095d-60a8-44a9-a7c2-85de12eb7c41",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3b73d6ca-e0e3-4f22-b80d-9358894b897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e90cd8c-5a98-46cb-9746-d8c16fc4d2b5",
        "cursor": {
          "ref": "05abb7cb-ac50-4da8-a23e-85c435dc4972",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1df0d96-a48c-4142-a115-70ed7db7dade"
        },
        "item": {
          "id": "4e90cd8c-5a98-46cb-9746-d8c16fc4d2b5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "328faf8a-8f0b-4e24-97d4-166392098386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f18c49-4177-4a33-ba65-e0c60a901c47",
        "cursor": {
          "ref": "29349608-8cfd-4535-966b-5ab91929479d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dff7320b-1716-4d9e-9010-db9e4f33a78f"
        },
        "item": {
          "id": "56f18c49-4177-4a33-ba65-e0c60a901c47",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ff0aab51-769d-46fb-864e-6401e3015ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fcb76d-42df-4c1d-a0a8-e4ca1613d2d8",
        "cursor": {
          "ref": "5b21c6d5-9bc5-4dbb-8ed5-884c08409f4c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bdf066e1-8307-4d86-a7e4-00dbc6ec3bea"
        },
        "item": {
          "id": "c9fcb76d-42df-4c1d-a0a8-e4ca1613d2d8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d0a790f-863a-411e-886c-587cca7e18e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e3fdea-ea58-40f2-97db-4310d3bc03a6",
        "cursor": {
          "ref": "05b1c4d2-442d-4495-8a43-ad70d48d93a1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9136bbf6-b1dd-4b8c-bcbf-91543250b906"
        },
        "item": {
          "id": "21e3fdea-ea58-40f2-97db-4310d3bc03a6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a58522bc-bbbb-4100-9541-85e2345101a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27513a4a-6db0-4730-8515-041132c1ce94",
        "cursor": {
          "ref": "f478665e-1970-4dd7-b0ea-37cf55e7fb8c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fc14247b-40d0-4407-9ef1-67d2ab8e397a"
        },
        "item": {
          "id": "27513a4a-6db0-4730-8515-041132c1ce94",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "af7dba79-5a88-41ee-b21a-f673be356cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61172164-9341-4f22-943e-26d41fe7b89a",
        "cursor": {
          "ref": "2690d331-a973-4c00-ac0b-89cdfb835839",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1b5ad0f0-17fb-4e75-ba3b-fa4226434549"
        },
        "item": {
          "id": "61172164-9341-4f22-943e-26d41fe7b89a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c5252952-843e-43f4-8897-15df64c03559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56c69e9-e28d-452f-afa2-a0bb03288e42",
        "cursor": {
          "ref": "0d99cda4-5bc1-4478-a1a0-1bfe0ea5d09f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "09e287f7-7784-43ac-a8bc-6508267f3e9b"
        },
        "item": {
          "id": "f56c69e9-e28d-452f-afa2-a0bb03288e42",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "655b35ce-1337-476f-a3c5-c6fd2d173741",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb9c83e-5a69-4cb4-aaa6-f4bbb5057ea1",
        "cursor": {
          "ref": "e17b7e9a-5b28-4443-b777-54f2604883f2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a9c6c185-977b-40df-a05a-977059707ddd"
        },
        "item": {
          "id": "cfb9c83e-5a69-4cb4-aaa6-f4bbb5057ea1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a8cbe850-a4da-4f16-9f20-d4a70c598b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6b4c7e66-f262-4b13-8af2-ca4711c1325e",
        "cursor": {
          "ref": "f2586d40-b7cb-428e-ace7-be79471ec812",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "745fe67a-5912-4e8f-8580-3b763d6e4ddf"
        },
        "item": {
          "id": "6b4c7e66-f262-4b13-8af2-ca4711c1325e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ddc04f3-eba4-4e03-ac4f-4fa54a141704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "12535caf-abd4-4dbd-938d-8c66141323c2",
        "cursor": {
          "ref": "557a7915-f0a2-4c8e-805e-bd9c056a2906",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f83bb2eb-538d-472b-a7ed-6c5142f5ff7e"
        },
        "item": {
          "id": "12535caf-abd4-4dbd-938d-8c66141323c2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "18556b2c-a603-448b-a2a7-12436721442d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "725ca315-1217-4291-9dfc-e79d6de34729",
        "cursor": {
          "ref": "b994745e-c710-4d37-b533-9c1fd9cfcb2d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "caeced4b-ebd6-4520-9062-015eac160746"
        },
        "item": {
          "id": "725ca315-1217-4291-9dfc-e79d6de34729",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f28e41d6-143d-455b-9898-58f1749726ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5a0dfbdd-2a8c-49ae-b827-6995d57ee6b8",
        "cursor": {
          "ref": "d166682d-e900-4cfb-80fb-82a09e2b9722",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ec9d7a51-5bc8-49db-b688-14bdf3f462c5"
        },
        "item": {
          "id": "5a0dfbdd-2a8c-49ae-b827-6995d57ee6b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "93ec4825-708d-42ad-b04a-cc2226940709",
          "status": "Created",
          "code": 201,
          "responseTime": 7473,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1420aa1-2d89-4a17-a248-3e8f421a3262",
        "cursor": {
          "ref": "a24257f8-f977-4852-aafc-333b296f7b06",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f66ba76e-0538-4078-93af-1b6c8d7a2b8b"
        },
        "item": {
          "id": "e1420aa1-2d89-4a17-a248-3e8f421a3262",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dc509dd0-cf21-418a-90a7-094d18c4675e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c568ec40-a0fe-4df6-8a0e-f3bcdc27a7da",
        "cursor": {
          "ref": "a2015554-903a-4f7b-a0ec-82d32013dbcf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "462b0bf6-19bc-4b94-a8d8-6eebfab1058c"
        },
        "item": {
          "id": "c568ec40-a0fe-4df6-8a0e-f3bcdc27a7da",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fa5d9279-ae92-42c7-9ec2-c3c81415bf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "792a2e21-a8d1-4f9a-abfc-c3cd0d0628bb",
        "cursor": {
          "ref": "a1e51994-c0ac-447e-ac7d-837dc848aa32",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fd0af01f-4b6b-4a53-88e7-c696d8b7fb97"
        },
        "item": {
          "id": "792a2e21-a8d1-4f9a-abfc-c3cd0d0628bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ef0752a2-f58f-4fe1-9d96-57c9e6378283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e027071a-a9e7-45dd-802b-942938d262a5",
        "cursor": {
          "ref": "83d278c7-b6c2-44e0-b5b2-fe5a52664d54",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e31fb1fa-7e79-494f-8b70-1b6d014ce419"
        },
        "item": {
          "id": "e027071a-a9e7-45dd-802b-942938d262a5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe0ee496-18f8-4242-be16-3ce132f975e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d109ce1-e79f-4f15-8e88-296a08157401",
        "cursor": {
          "ref": "eb18e808-c181-4060-a81d-5d183411ec92",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f20f841c-a4d7-4eb6-ad61-108e632fb0c2"
        },
        "item": {
          "id": "7d109ce1-e79f-4f15-8e88-296a08157401",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "afc6e15d-e22a-44a4-9e22-63b726b1b19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89efadcd-c338-4569-a091-79b372541e2b",
        "cursor": {
          "ref": "00c17add-ebd5-4b96-8082-8404c05dc4cf",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6b3349f6-d39e-4a32-92c3-b29826576ae5"
        },
        "item": {
          "id": "89efadcd-c338-4569-a091-79b372541e2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3cfad1e5-f6c8-4e9d-a449-2d346623beb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf6b3dd-140e-4414-8442-370d35e06a5d",
        "cursor": {
          "ref": "383aa616-a066-4d9e-ae6e-033c910d2571",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c583add6-d656-4808-8456-e094f6ee1588"
        },
        "item": {
          "id": "ebf6b3dd-140e-4414-8442-370d35e06a5d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b58789b2-fb87-4725-a579-01c48599a396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce14a48-7de9-4a85-8a91-9b9d48a6981b",
        "cursor": {
          "ref": "86e80751-1c79-4319-bfcd-d12e324fc622",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f704cc49-8eb7-4b2f-9d3e-63aac5436bc2"
        },
        "item": {
          "id": "0ce14a48-7de9-4a85-8a91-9b9d48a6981b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "17369a87-af5f-4d9e-a0fa-a18cb489fb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5938966-324b-432a-b85a-77f1cb111adc",
        "cursor": {
          "ref": "3bb21636-e732-4e50-9746-e1d76b55bb5b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa1f7d22-bfbe-4063-8061-9bdce0b9ccb7"
        },
        "item": {
          "id": "b5938966-324b-432a-b85a-77f1cb111adc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3e253e5-a002-41d1-b501-4f84e3cc63dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d3abba-56e7-4d84-b64f-580569b542fa",
        "cursor": {
          "ref": "97219d15-7e2e-4590-a930-8542ac90c5cc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fab17312-0640-4ba7-ab71-904126d87059"
        },
        "item": {
          "id": "35d3abba-56e7-4d84-b64f-580569b542fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c22f5c82-5f31-4d61-b841-fc60ec3213ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec13f8c9-fccf-47ea-a50c-9b8894ad2cb9",
        "cursor": {
          "ref": "73a85c57-dced-49b6-9dac-59f4d479bf36",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b5468783-3da3-4d41-99aa-6ac17e5a4421"
        },
        "item": {
          "id": "ec13f8c9-fccf-47ea-a50c-9b8894ad2cb9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a830da8c-cf59-4930-9f68-f82b29b2573e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c54c3a-a652-481f-889c-b3601682d623",
        "cursor": {
          "ref": "206d3af5-f1e1-4b48-9935-ac64e3a47e4e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "564ae04e-ddb2-4d83-b452-3762f4301bd3"
        },
        "item": {
          "id": "a3c54c3a-a652-481f-889c-b3601682d623",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "439a7fa8-2831-4699-bcb4-2f27f58b47b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af61774-5e58-4a54-8d38-92feb35c75a3",
        "cursor": {
          "ref": "30d3022c-05bf-4d98-9b4e-cbece3a7051e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "26a14cef-4521-4de1-8bd6-e92cf0f981fc"
        },
        "item": {
          "id": "8af61774-5e58-4a54-8d38-92feb35c75a3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "611e9922-9f75-4be3-bce8-3dddb695854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a105f4-60e5-41cc-80b8-9934d478b427",
        "cursor": {
          "ref": "d030d29b-c4c8-4acf-bb1f-182984958747",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "be8af9c5-12aa-4e07-8648-8ad49fcd348b"
        },
        "item": {
          "id": "e1a105f4-60e5-41cc-80b8-9934d478b427",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73f2e283-e3cd-4305-ba45-80529beff699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ca02e2-35bf-45c2-a020-9c4a1010adc9",
        "cursor": {
          "ref": "54129ace-cdf5-457f-b2b0-a9f734026ec0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3b3accb7-0dda-4aff-b0cf-ae4a5fc6769f"
        },
        "item": {
          "id": "50ca02e2-35bf-45c2-a020-9c4a1010adc9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "91b176f4-ca38-445f-b40b-3c1e748d3994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083e2740-77d4-431f-a5bf-3ae56f30f5ae",
        "cursor": {
          "ref": "73a066b4-cb71-4528-aa9b-e91f818f6e47",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3a5b3489-d7f6-4152-a503-e9b8d9cbf208"
        },
        "item": {
          "id": "083e2740-77d4-431f-a5bf-3ae56f30f5ae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a395cb7e-86d5-4296-9a59-428852773606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42b21f5-298b-41dd-8a5b-806d4beba711",
        "cursor": {
          "ref": "6f5f5a74-6af5-4f82-84cf-70b2b61761f4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b95c0e51-9bd3-497a-912c-e5dbc5a49627"
        },
        "item": {
          "id": "e42b21f5-298b-41dd-8a5b-806d4beba711",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2cd77a3e-d024-4e2d-a97e-b2539a636d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b107bf-44f4-4903-99ed-eb7c04c27be3",
        "cursor": {
          "ref": "15ab7fd6-88da-4be0-b06e-47ac8add0efb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56e3e7c3-3c8a-4ca9-b908-63aeb94d036e"
        },
        "item": {
          "id": "e7b107bf-44f4-4903-99ed-eb7c04c27be3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0858783e-8de7-442e-92e1-db2b1168d2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c0a7e2-7a2d-4aac-a10b-150c3064cb31",
        "cursor": {
          "ref": "5ec6d6b6-02d1-478a-a0aa-ceb1d091795c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5b7f7f7a-9bdc-4393-b385-859d4cd13abd"
        },
        "item": {
          "id": "19c0a7e2-7a2d-4aac-a10b-150c3064cb31",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a2062895-4022-4abb-86b8-5ab864dd8e72",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ff30ee8a-0cbe-45fd-9f97-4b651806429a",
        "cursor": {
          "ref": "16380301-9dba-49b3-b884-a9a1b639c037",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c369b9ce-20fa-4456-b2e3-767a35d0932d"
        },
        "item": {
          "id": "ff30ee8a-0cbe-45fd-9f97-4b651806429a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c12ad99d-582a-4b5e-9cf2-b6c32423a113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0c18f8-85f4-43a3-8179-e73d3c9689dc",
        "cursor": {
          "ref": "797186cc-f8e3-4de8-a7bd-993f59c2824b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "afa2a184-0d3c-4d2f-90bc-24f25b6f471f"
        },
        "item": {
          "id": "9e0c18f8-85f4-43a3-8179-e73d3c9689dc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "75e69a69-e352-4e45-b80f-2e1139d68813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa56618-c762-4633-826e-e09f5dc73c36",
        "cursor": {
          "ref": "994a4c4e-5370-473f-a35a-edcf082813cc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "61e11e8a-6be7-4585-8e08-d80edffcfabf"
        },
        "item": {
          "id": "dfa56618-c762-4633-826e-e09f5dc73c36",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "712d684b-8949-4989-8ecb-1ec2c81cdcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98accf32-f22d-45c3-b7bf-5d059d4a8fb4",
        "cursor": {
          "ref": "e327af77-dac7-420b-b1aa-84750496cd13",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5ca58c59-8066-416e-82f1-7c0d7ca09f47"
        },
        "item": {
          "id": "98accf32-f22d-45c3-b7bf-5d059d4a8fb4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "302e9441-8e27-4a36-81cf-d92da7a45484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe3acaa-8545-40ad-8361-8ed58b15827c",
        "cursor": {
          "ref": "6dab4f4c-89b3-4460-a314-7dbea1669e8a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "edad62ac-86a4-44ef-a79b-008a97760970"
        },
        "item": {
          "id": "bfe3acaa-8545-40ad-8361-8ed58b15827c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f0da49a-5e36-49bb-a7a8-9577aa8f98cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7933f-cb27-462f-9b0d-036e458f5a2a",
        "cursor": {
          "ref": "4eddc80e-3a4c-48ae-be5b-97f0a0fb0ca2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b346c18-836b-4785-b73b-d90574afea58"
        },
        "item": {
          "id": "97f7933f-cb27-462f-9b0d-036e458f5a2a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4a0bd17e-2ca8-4d5c-b3ff-3ea58207c87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d32522-5330-4815-ad75-d07b271bad2e",
        "cursor": {
          "ref": "c9832090-fd7f-4d7d-94d1-97ad4b9c77a9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dbf1bea8-67b4-451d-99b9-7e47eccb6778"
        },
        "item": {
          "id": "23d32522-5330-4815-ad75-d07b271bad2e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43f6607e-9941-452c-87d3-f5ef6073c34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9286ab02-168e-4ad1-adf1-8f140a17acb0",
        "cursor": {
          "ref": "0ce84763-9f87-40bb-be4c-4539b1201013",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc801fdd-9c9e-4585-9da3-b9ef756f297b"
        },
        "item": {
          "id": "9286ab02-168e-4ad1-adf1-8f140a17acb0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eec927fb-aeae-4b16-9ae4-0cd0f5b1884e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "50413d34-9a4a-413d-960d-d6f5879b98f8",
        "cursor": {
          "ref": "cf268825-cd96-4f28-91ba-021237c7673c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bed48489-1b84-4c17-b1ec-5b454390e51f"
        },
        "item": {
          "id": "50413d34-9a4a-413d-960d-d6f5879b98f8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7bf555ff-2806-43ca-8ca7-99b163735f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef1d95c-1b53-47b4-9f33-faa6b62da68c",
        "cursor": {
          "ref": "b9d52cbf-2597-4f13-b235-14a97166499c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b91f7b56-7352-4189-ae07-d11977132a7c"
        },
        "item": {
          "id": "9ef1d95c-1b53-47b4-9f33-faa6b62da68c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "38a829f8-5fb2-40d0-a53e-0f495759926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a3fd2f-6269-45bd-9cb2-40e272717dde",
        "cursor": {
          "ref": "90fb29e2-443c-4088-aee6-b3e3499a0d34",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e81734d5-d35c-4b1e-a4b2-bb32b0346918"
        },
        "item": {
          "id": "14a3fd2f-6269-45bd-9cb2-40e272717dde",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b50a364a-c21e-4188-a80d-3bf7d174d922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c478fd-a48d-4551-9a18-240e88847792",
        "cursor": {
          "ref": "f66a6192-4b9d-442b-905e-45b72a876d7a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e9dd8c36-d2f3-4591-8d01-36b6b8ebddd1"
        },
        "item": {
          "id": "b6c478fd-a48d-4551-9a18-240e88847792",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97d51897-2f40-4d34-a65a-b09f3efd5a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9de7be-8cb5-43e2-a41a-a35c25bbee33",
        "cursor": {
          "ref": "1cc7a8ee-3b0a-4aa1-a6ed-87075e060064",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c1df1093-d6f2-4d39-9d64-1e90a4d1d07e"
        },
        "item": {
          "id": "ee9de7be-8cb5-43e2-a41a-a35c25bbee33",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "948809fd-372e-4438-8771-bb3ab233e4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1764b2b4-a89b-4bba-ac0d-9a777ee6559a",
        "cursor": {
          "ref": "f98df9d1-2b9b-40fd-bd48-9bb9d65d1f84",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f829f365-2ab5-449f-966c-01e9596cc648"
        },
        "item": {
          "id": "1764b2b4-a89b-4bba-ac0d-9a777ee6559a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d7a4f666-3690-4f85-bb86-f77f0bb69399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a44047-2f11-40d6-9407-625fe38cdb89",
        "cursor": {
          "ref": "778ee8e3-4248-40e8-bdd5-d59933565203",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9f692670-ccc4-43e6-b709-762b226acded"
        },
        "item": {
          "id": "a2a44047-2f11-40d6-9407-625fe38cdb89",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6b084b8b-5f53-437c-920d-e646091e33b8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4bf39cd8-cc1e-4e1e-8adf-c1a9dd989b07",
        "cursor": {
          "ref": "365ffabb-3d83-47db-a231-3bce40244546",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "33917da8-4da9-431b-a978-a9db9663b1b3"
        },
        "item": {
          "id": "4bf39cd8-cc1e-4e1e-8adf-c1a9dd989b07",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2fc31925-76a9-4826-89fd-c6002d610edf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ffdb29c8-bb6f-42b0-ac7d-abe5f9b0d7d6",
        "cursor": {
          "ref": "d51db424-fac9-4095-b367-cf3ef23a5fd6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "58e76f84-1f75-4273-bc4a-c744612d34bf"
        },
        "item": {
          "id": "ffdb29c8-bb6f-42b0-ac7d-abe5f9b0d7d6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1bb5e13b-9731-4c9c-b44f-e3a7a051ef6f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0f011dc8-56e0-4183-8c2c-ab6e6bc50e14",
        "cursor": {
          "ref": "13272c91-099a-45a3-9441-28f91621b153",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "850d144e-5201-4848-9578-dde47fec1bcf"
        },
        "item": {
          "id": "0f011dc8-56e0-4183-8c2c-ab6e6bc50e14",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5f8fe6a2-eb75-45d4-b0c2-0f783ad1b4d4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b615938d-3855-4645-ae7b-d702e400ed6f",
        "cursor": {
          "ref": "5634c2b4-5952-43d4-b77e-2a22abe0092b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7f0932b0-3860-4cf9-80d5-c646a6335c42"
        },
        "item": {
          "id": "b615938d-3855-4645-ae7b-d702e400ed6f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5b6430af-9e90-4592-9ac2-aa6d9775f7b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "cf622e39-516c-434e-8b57-556fed103408",
        "cursor": {
          "ref": "45f0e097-a86c-437d-a9af-26e7cf776d2e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd3a30d0-a1fc-4b25-b7bd-7b0f3bfc8357"
        },
        "item": {
          "id": "cf622e39-516c-434e-8b57-556fed103408",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9fe72d04-f17d-4896-a8d2-38b8f172abd0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "36038371-db4e-4d30-9fe8-62c887872ee0",
        "cursor": {
          "ref": "d1db4b5b-f682-4794-aaec-6ea49c24d79d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2f3e93de-3c95-48cd-bc7e-589618c669f9"
        },
        "item": {
          "id": "36038371-db4e-4d30-9fe8-62c887872ee0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e66073af-f94d-45ed-a1bd-a871fcff1858",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7dbd0b-adab-455b-ae79-272394066d97",
        "cursor": {
          "ref": "a4d3e61e-fbb0-400c-b1be-bd6b83e60fdb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c6014eae-ed16-4972-95af-b9d15b85a214"
        },
        "item": {
          "id": "3c7dbd0b-adab-455b-ae79-272394066d97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ad0d2c22-8034-48d1-b860-24c6870200fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf41de-3874-45a8-a789-e0eadbe79d1e",
        "cursor": {
          "ref": "fe17ac82-3aec-4369-be5f-cc905938903f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0bf69ef4-94ac-4b74-bbe5-7be335640042"
        },
        "item": {
          "id": "0bcf41de-3874-45a8-a789-e0eadbe79d1e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ecaa104b-715d-40d7-b5a5-fa0e83ee9bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c573f6e5-f66c-4461-9815-c50f52d67c10",
        "cursor": {
          "ref": "95a2f159-e6e8-4468-a975-b261b4a04eff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "310c3ddb-ee5b-4f9d-bee3-a7dd33ac0fbf"
        },
        "item": {
          "id": "c573f6e5-f66c-4461-9815-c50f52d67c10",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "404d8820-271b-4d5e-b4cb-b43964e5e255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cc9433-4060-49ad-bc00-e96dc396d42e",
        "cursor": {
          "ref": "30cb3400-8749-4bf0-a5c2-d65d41871b9b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c6a2de2-e2b5-4fe5-b665-1ba33baae16d"
        },
        "item": {
          "id": "a7cc9433-4060-49ad-bc00-e96dc396d42e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aeaa1e26-c80a-47f1-8c64-a61d60e87505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e76d18-e005-499f-a65b-c09a151f5641",
        "cursor": {
          "ref": "b78b2eb4-8c5a-4b67-8ccd-53fe8df4c126",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a4cd14e2-bae1-43ad-87b3-f6bcbbc0f73f"
        },
        "item": {
          "id": "36e76d18-e005-499f-a65b-c09a151f5641",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d2af3c76-0e4d-4f77-9b32-7f88d9e6548c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ed5f94-1a35-4950-8dcd-71da9513ba2c",
        "cursor": {
          "ref": "249df065-8893-46b5-8151-237e02dd58a8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8f77ef7-a2a4-448e-9df5-04c6b07a2fe5"
        },
        "item": {
          "id": "21ed5f94-1a35-4950-8dcd-71da9513ba2c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "daea1f26-0376-4d58-9175-1b821204bdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4e855e-bcaf-4437-a14a-5c7e06a05fcc",
        "cursor": {
          "ref": "be5a3add-8083-4358-8411-d4fae5e7868a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "62d1958c-4a81-429c-8932-e8aa644a4ea2"
        },
        "item": {
          "id": "ab4e855e-bcaf-4437-a14a-5c7e06a05fcc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7aee408d-73c1-42a7-8e0f-a0f36bdbd9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7153bd8-b657-4abf-b9f3-f6a293ec67d2",
        "cursor": {
          "ref": "aa7df98b-633d-494b-a17b-6b074ab13643",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "573bd0c2-cef1-46bf-8627-6802fd25d8de"
        },
        "item": {
          "id": "d7153bd8-b657-4abf-b9f3-f6a293ec67d2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "086907a5-104e-4a7e-9fed-5ae99bf7ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6f1620-0535-42d8-bc90-1ad3287a975e",
        "cursor": {
          "ref": "675882f2-028b-44da-a8f6-39d25db4e4ca",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bc130acc-7315-443c-b6ed-46d3db57c640"
        },
        "item": {
          "id": "df6f1620-0535-42d8-bc90-1ad3287a975e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ced4146f-d954-4051-a020-f4c0b3cc1069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce92538c-eb4d-4607-864c-acd30b20320a",
        "cursor": {
          "ref": "7dd5a9c5-005b-40e9-bd15-ea1d2b087244",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c3985f92-f3bb-4505-9c8d-b556ffcd09b2"
        },
        "item": {
          "id": "ce92538c-eb4d-4607-864c-acd30b20320a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a0258d70-2fda-4dca-baac-9c4b33d75640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bb9b35-ba34-420d-82bc-a6df8b4b78ae",
        "cursor": {
          "ref": "22dcfd75-95d5-493d-b3b3-397bbeeaf647",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "954a09af-cc1e-4b34-9288-bbbf9b4ec175"
        },
        "item": {
          "id": "d2bb9b35-ba34-420d-82bc-a6df8b4b78ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eb6a9964-20c0-493c-8bb7-4b8bb6ac5cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c1e72-5d94-4b85-82cb-092566e16b53",
        "cursor": {
          "ref": "ef0198a6-3323-41f8-9b5a-4c68c02c3491",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6623ecc2-1a3a-4acf-a113-7ebdfe817f8c"
        },
        "item": {
          "id": "bf6c1e72-5d94-4b85-82cb-092566e16b53",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aa7af6da-87c8-4170-b0c3-3f58250dbb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c17c6f-190a-4e74-9597-d33b9db6b8ac",
        "cursor": {
          "ref": "12eeb714-69b3-40e1-886f-43e9289e7b9e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42116169-ae90-4022-aa13-fe380f82335d"
        },
        "item": {
          "id": "66c17c6f-190a-4e74-9597-d33b9db6b8ac",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be02c20a-b047-4a45-92a8-de656281b8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916e489c-077d-4f23-b055-42cf6562af5b",
        "cursor": {
          "ref": "8f279c13-ab20-4801-8904-86a0c74f1b79",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ba8ad280-44fa-47bd-84a9-0b9fe996007f"
        },
        "item": {
          "id": "916e489c-077d-4f23-b055-42cf6562af5b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f33f4401-268b-4479-9a55-a535c07224e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a630a13-d7a3-43f4-9bce-52fbc7a3668d",
        "cursor": {
          "ref": "db43f3a0-e218-4794-bf2e-aef24b95297c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8a54bdbc-301c-40c6-b843-c641cf0b96a2"
        },
        "item": {
          "id": "0a630a13-d7a3-43f4-9bce-52fbc7a3668d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f7e745e7-9622-4633-8aa7-d811aec6e043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0923c73b-04f5-45ed-829d-e839e5a0dbe8",
        "cursor": {
          "ref": "f032b606-f68c-4c95-b844-4dc14472fdb5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "42fdc8b4-3ce6-487f-911e-cca99f90d351"
        },
        "item": {
          "id": "0923c73b-04f5-45ed-829d-e839e5a0dbe8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f9ed8bae-c431-4acb-a4b8-34e6ec84c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d0fd28-343e-49ea-8c00-d6c50de438ea",
        "cursor": {
          "ref": "6bfde44a-26ac-42c6-94d6-884e04b5968a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cb4b4750-eb05-420a-b825-fbffd4472870"
        },
        "item": {
          "id": "16d0fd28-343e-49ea-8c00-d6c50de438ea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b048decf-9498-45f8-8310-a304e99ceb04",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "f808c3ca-a3b4-400f-bdbd-a4828622747a",
        "cursor": {
          "ref": "391e9f6d-55a0-450a-833c-81d147fadce3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9875ef83-2e9e-431a-a2ed-d0f71dfcd2e1"
        },
        "item": {
          "id": "f808c3ca-a3b4-400f-bdbd-a4828622747a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "62fc898b-0ee7-422d-82e6-0045057b621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa6fc8-0ba1-45b3-9687-286254669618",
        "cursor": {
          "ref": "70ed064d-e726-4eb9-b564-88fe83878163",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ea38cffb-aaeb-4772-af74-a3dacd82bc49"
        },
        "item": {
          "id": "cdaa6fc8-0ba1-45b3-9687-286254669618",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39983aaf-0c1f-4cb9-ad59-0318c3bb7c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960ebb35-8c1b-40ee-96ff-a8af9eb6ba24",
        "cursor": {
          "ref": "46b21480-d5eb-4f9c-9d53-9336934b485f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8c7059ba-b19d-46b4-9742-4bb6b76348ba"
        },
        "item": {
          "id": "960ebb35-8c1b-40ee-96ff-a8af9eb6ba24",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6e23b49e-2737-46e2-b500-b7ffad750245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ec5b58-84e3-4beb-9d6e-ac89c01d761f",
        "cursor": {
          "ref": "1fd45a05-f034-4c9b-a41f-e458127758bd",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a09fb6ad-54df-4653-9bbf-c441bfa778bd"
        },
        "item": {
          "id": "93ec5b58-84e3-4beb-9d6e-ac89c01d761f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1faa1f5c-3f53-4905-903b-5b7bd7c9cc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170c66da-3148-4e17-8f42-a06fbfc5908e",
        "cursor": {
          "ref": "b17943c6-1ac7-4344-8588-51324f46254e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cc900a39-f50f-44e9-b211-2503db672d1f"
        },
        "item": {
          "id": "170c66da-3148-4e17-8f42-a06fbfc5908e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e1c4a4f4-6e0b-4395-b930-422189877a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d99ec-9faa-481b-831a-d3bcd2ec5208",
        "cursor": {
          "ref": "040ab385-1cbd-48d1-a08a-efb2603b739e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5199fe41-5098-4ab5-ad57-c6c0bc4b5948"
        },
        "item": {
          "id": "261d99ec-9faa-481b-831a-d3bcd2ec5208",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "891d126a-ac99-42a4-9232-f6593f9a9f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a6bb0-7afc-4555-86ac-599dc6ca5e32",
        "cursor": {
          "ref": "47625075-5e44-48be-8bad-2c813310e34c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3570ae88-7940-4bc8-8712-a2509f637e96"
        },
        "item": {
          "id": "630a6bb0-7afc-4555-86ac-599dc6ca5e32",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "79fa4028-3096-4e2a-91fc-f1ea7114cacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3932be5c-bebd-44fe-ba07-94abe0865a0f",
        "cursor": {
          "ref": "5070e0f6-0eb7-4e5c-8eaa-a980ab075cc2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3b55ffe0-f984-4368-b8ec-2718bab99501"
        },
        "item": {
          "id": "3932be5c-bebd-44fe-ba07-94abe0865a0f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7294fae1-36a6-49ee-b7af-cedd8b670ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811cdd87-adf4-497c-9820-03cb7c666d02",
        "cursor": {
          "ref": "0b42d21f-4cef-4686-81fa-c5fe31c3abf5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9bbbb8fb-9c13-4f0c-81eb-858aac0abc6c"
        },
        "item": {
          "id": "811cdd87-adf4-497c-9820-03cb7c666d02",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "06d73fa3-e837-40c5-a391-ee0b6d30131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0b988d-bd4a-4739-84a7-72fecb439c14",
        "cursor": {
          "ref": "434e97ed-06fe-4ccd-883d-860e2c2b977c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2fba8e8d-4d69-4179-bebc-492d34402288"
        },
        "item": {
          "id": "7d0b988d-bd4a-4739-84a7-72fecb439c14",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "acfbc861-2cc0-4e55-ae1d-c58a0c78d73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f349e75-e3e5-4f23-95d8-f35ad84d685f",
        "cursor": {
          "ref": "a226c1d7-3b42-4382-bfa5-f060a4872303",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6a35d72e-a54d-4ccd-9010-4a2220508a96"
        },
        "item": {
          "id": "1f349e75-e3e5-4f23-95d8-f35ad84d685f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0e5ad026-5b3a-4d03-9664-1d8d0e839760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91981f0-3300-4811-9592-14812e6beb54",
        "cursor": {
          "ref": "7e8ccfc5-1461-40cd-adbf-1b7d2c9ea56f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "722c5bf5-831b-4b9d-9c0d-b44e46b4c9f4"
        },
        "item": {
          "id": "d91981f0-3300-4811-9592-14812e6beb54",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1b4fcb16-f38e-4a19-9452-d5e0d0cc46fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a40743-32cd-4a32-96c0-adec802af7b5",
        "cursor": {
          "ref": "49963e3e-b49b-40b8-8c1f-7728f67dc94e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e2f19bd0-c95e-4aca-b5ff-b06031178051"
        },
        "item": {
          "id": "d0a40743-32cd-4a32-96c0-adec802af7b5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d2ee3e74-7628-4ec4-b359-1dce922b79e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9ae9ef-7b7b-4198-acde-7333dba77ca8",
        "cursor": {
          "ref": "0141ccc9-f906-4336-9619-e99514e9b60b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3d51630f-dc90-46ae-919a-e834bfffc9d3"
        },
        "item": {
          "id": "dc9ae9ef-7b7b-4198-acde-7333dba77ca8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "31ad86c6-d7ca-4e44-b1f2-f746cd3127ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69ce0d7-264c-46ed-a125-f60cf709adf3",
        "cursor": {
          "ref": "4e7dec06-b821-4167-8df5-c19b91e7f35d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3618f453-7bd2-4310-8f45-dd2b31e06d70"
        },
        "item": {
          "id": "a69ce0d7-264c-46ed-a125-f60cf709adf3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "335a2c47-afbd-4c66-b2de-baef31bef5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91006f42-f5df-446a-a28b-c04e41a42262",
        "cursor": {
          "ref": "81ea74d4-836b-4031-b708-76a0999621c1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4e242d22-7b5f-4410-98e3-8036699f2a31"
        },
        "item": {
          "id": "91006f42-f5df-446a-a28b-c04e41a42262",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "faf718c6-8be9-494e-92cb-16dd52856434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb41ac2-ebd6-4e7c-83f5-2a96bdf2b984",
        "cursor": {
          "ref": "40edbd2a-01d7-4156-ae2b-85fe1cb6ad9e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "28a0618c-5bd5-4476-b837-e55c9871ddf9"
        },
        "item": {
          "id": "ebb41ac2-ebd6-4e7c-83f5-2a96bdf2b984",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "99ed49ff-d57d-4db8-8962-dc5d965d723c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bb026d-73a2-4076-812d-9a5b37a2c619",
        "cursor": {
          "ref": "75ebd8b0-af0e-46f5-bc93-f3a57d2baae5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "14bbf2d4-cee6-4fda-8c03-45f14bf5b0f9"
        },
        "item": {
          "id": "72bb026d-73a2-4076-812d-9a5b37a2c619",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f8dd32a9-2b3a-4fee-ab18-77728a19bb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41b3616-d4f9-4100-9824-678c20897fc1",
        "cursor": {
          "ref": "c980841c-708a-4a1d-a2b2-34b5cd8cd576",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8ca462fe-3897-4b3f-856d-00b18953c310"
        },
        "item": {
          "id": "c41b3616-d4f9-4100-9824-678c20897fc1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a950e698-603a-43e8-bba4-d5f4d55f07e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ffd649-f8c3-4ee3-8ba0-17421dfba13e",
        "cursor": {
          "ref": "355bde90-b3b8-493f-87a6-f2c828052e0b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e3f63bdb-91a4-45c0-9711-0bdb7d96b42c"
        },
        "item": {
          "id": "26ffd649-f8c3-4ee3-8ba0-17421dfba13e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "61636479-ec65-44b9-95c6-fa9d05992565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174d0c2e-468f-4b1e-b177-18e14338def3",
        "cursor": {
          "ref": "653a159b-403c-4487-961d-2d908ce2d1f9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "97226269-8423-4838-9135-dbbd1316c614"
        },
        "item": {
          "id": "174d0c2e-468f-4b1e-b177-18e14338def3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5fd51e67-a21c-48e9-b0a9-70f7b881a809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185494a6-4557-4e41-b50f-523575014a99",
        "cursor": {
          "ref": "b1877dc4-c410-440d-8dba-c0ed651c18f8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1eb95108-0574-40c4-9044-88ecfc320d7a"
        },
        "item": {
          "id": "185494a6-4557-4e41-b50f-523575014a99",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "30fefa7a-86b4-4e36-901d-e90dc59cad2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633f479f-82ba-486e-9466-8d10b4e0e4d0",
        "cursor": {
          "ref": "787a85db-6ca9-4373-9be8-657a49e6625b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1fc23f4b-10e1-4d2a-acdc-7da91302b112"
        },
        "item": {
          "id": "633f479f-82ba-486e-9466-8d10b4e0e4d0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "80833993-0fe0-495f-8b33-eef53032194c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece0eb05-df2c-4ab8-bd14-18c29d4dc331",
        "cursor": {
          "ref": "25344098-37d1-4b8b-b5d4-26f5d733e247",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5d5c9a8d-1ee6-43ef-af10-7a027a582b31"
        },
        "item": {
          "id": "ece0eb05-df2c-4ab8-bd14-18c29d4dc331",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2f0d5b7d-9946-408a-a7de-e8579af39e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6824821b-7bef-4879-9823-d6343df92fc1",
        "cursor": {
          "ref": "2ec7de32-b387-4e7b-b3a1-9289ad37d224",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "66eaefdd-eae0-485b-9d77-810eb008c7cb"
        },
        "item": {
          "id": "6824821b-7bef-4879-9823-d6343df92fc1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7934138c-176f-4414-88b9-91f09b954937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377aecf5-bd75-4ea5-b87c-b0e78e535737",
        "cursor": {
          "ref": "4e77f1d8-17cb-4500-92fe-c8e44a3dabf6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ef6704fd-0ec0-4702-bb77-6600acb03934"
        },
        "item": {
          "id": "377aecf5-bd75-4ea5-b87c-b0e78e535737",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2ce2c41e-0b9b-41bc-9513-29d32ff37aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b3dd51-54c0-41e8-94cc-da471ac2e271",
        "cursor": {
          "ref": "7ba1749b-fc50-4278-a740-99d4ac3060d9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aebddec4-d15f-4c4c-b5f5-94a2808615ee"
        },
        "item": {
          "id": "44b3dd51-54c0-41e8-94cc-da471ac2e271",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8c5a6e9d-4a3c-45ef-80d3-1f7f6883cc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be63799a-7074-40b7-b12b-8067e2d42387",
        "cursor": {
          "ref": "c2de9e28-5b34-4fea-8163-c0a8d00b590e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "95969315-4cb4-4831-8d3b-7e2399c098bf"
        },
        "item": {
          "id": "be63799a-7074-40b7-b12b-8067e2d42387",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9945fbe2-435e-4cac-beef-7b4fa6181b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c55f5-5bd9-4486-8858-3aa7bd173ef9",
        "cursor": {
          "ref": "194f379f-339b-4909-a2fb-1192494a6775",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f2c195d1-9e9a-4feb-88b4-6b9483b3d512"
        },
        "item": {
          "id": "801c55f5-5bd9-4486-8858-3aa7bd173ef9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d2c156de-1c70-47f0-acbc-2fd8930b69c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaeab06-741d-4deb-a6f7-23521f44dc15",
        "cursor": {
          "ref": "5ae3d483-e05d-42ad-a417-710f1c967400",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88d6977f-de85-4e1b-aec0-82ec9cd3b4c2"
        },
        "item": {
          "id": "1aaeab06-741d-4deb-a6f7-23521f44dc15",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "501c5a8e-dd2d-4850-8a9a-6689b7929fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c8e0d7-fed1-4e3e-9d07-285288d13d3b",
        "cursor": {
          "ref": "c7f1d39b-71bc-45bd-889f-01fb86998147",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bad26f8e-cfd0-4caf-a77a-28e50f2d0a6f"
        },
        "item": {
          "id": "93c8e0d7-fed1-4e3e-9d07-285288d13d3b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "43fac9c1-96bb-42b8-b497-60163eb850f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad1b85-5855-4d1f-8775-40ab9fdcbfb1",
        "cursor": {
          "ref": "56bcf6f1-51d4-4a47-986f-e813717d8a17",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1e1ec7ba-5894-4348-b5a9-56bebbe2f7d1"
        },
        "item": {
          "id": "16ad1b85-5855-4d1f-8775-40ab9fdcbfb1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "00145bd3-bc0b-4341-ab18-4f01852798a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94289d25-9e55-48bf-93be-879b9944bb7b",
        "cursor": {
          "ref": "3b792525-93a8-4f3a-817c-b838f3198aa3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4e530314-1bf8-4ab7-9360-cbadb33b90a2"
        },
        "item": {
          "id": "94289d25-9e55-48bf-93be-879b9944bb7b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "74dd8d40-2e74-45f1-8e05-ec037e390412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221f901-3744-4e78-9710-9fb7545e8d60",
        "cursor": {
          "ref": "c8e478cc-885d-45d3-b862-9c95e5210c30",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "07d38f82-e799-4a73-82b7-5c86e9a44fff"
        },
        "item": {
          "id": "d221f901-3744-4e78-9710-9fb7545e8d60",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "646d4e91-0d56-4175-8bfb-1328b2ca02dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e8ab4-bbbc-4586-aa63-450df0b62f02",
        "cursor": {
          "ref": "ae0d2013-1a82-46e9-b9ab-805b60afe1c3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4992fb7c-403c-44d2-87d6-5b8cd0d9ddea"
        },
        "item": {
          "id": "204e8ab4-bbbc-4586-aa63-450df0b62f02",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "df9434e0-d78c-4b87-829c-8b1dea8db3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c72971f-61e6-4604-ad3c-666a38e9d5d7",
        "cursor": {
          "ref": "c1a76aac-c2f6-45b6-a7f1-686c1b599790",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fef57e3d-2533-4a15-a9a5-d76e932febcd"
        },
        "item": {
          "id": "2c72971f-61e6-4604-ad3c-666a38e9d5d7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed2eb420-6853-4434-8507-42def950a30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9722f7ed-653c-40e7-af8f-01ec7e74e1d3",
        "cursor": {
          "ref": "6e38646e-1c9d-4f45-bfc7-1ff4ae09d12b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "91a68db1-cea6-4a36-ad99-21000358e412"
        },
        "item": {
          "id": "9722f7ed-653c-40e7-af8f-01ec7e74e1d3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c03113cf-a733-42d3-95ff-4998f24e85b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05794a2-9b90-4fef-84c8-62075b94bff9",
        "cursor": {
          "ref": "d61c73ee-8d63-4757-b218-28f231982a3e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5c4457e9-1e60-419c-8948-1f7a6c56bc3b"
        },
        "item": {
          "id": "c05794a2-9b90-4fef-84c8-62075b94bff9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8a8c5cfa-ea34-4bc2-87ff-117412d63056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f9c95b-1624-452a-9e78-dad785d8c5f0",
        "cursor": {
          "ref": "327698bb-a028-43d2-a8a6-321333cad02d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b29ceb83-864c-4078-9d59-780cd30857df"
        },
        "item": {
          "id": "64f9c95b-1624-452a-9e78-dad785d8c5f0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "94f9bde4-c501-41eb-a758-e8ea047bf0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc1a68b-efe7-4ef9-b9cc-6b38f4f14d3d",
        "cursor": {
          "ref": "5c973ef8-82f8-41f8-9b4b-7f3891f1f380",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c6d576c1-343c-440c-b469-03847fec5cdc"
        },
        "item": {
          "id": "9cc1a68b-efe7-4ef9-b9cc-6b38f4f14d3d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "045b537d-1bf8-4995-91b2-018d6e795989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff020bc-d442-4cc8-8b92-52229e38e084",
        "cursor": {
          "ref": "0b99344b-abe3-4485-b15b-deea3f05794b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8ff01d6b-0c4b-4db9-b4e5-1b1391dd86bc"
        },
        "item": {
          "id": "3ff020bc-d442-4cc8-8b92-52229e38e084",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f18c8bf2-f614-4ad1-bf4a-202b1f460a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a43fa00-73a2-44d6-8e77-ce43b4c3197f",
        "cursor": {
          "ref": "d24aff3e-d622-4c52-a9bf-0662d8544252",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "14082839-c2ef-4493-a169-6874ee982e9d"
        },
        "item": {
          "id": "7a43fa00-73a2-44d6-8e77-ce43b4c3197f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "81be6f2b-04cc-4697-a0bf-a732d73afbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6af2cfe-d4c2-4c2b-9a16-b28c94256cfc",
        "cursor": {
          "ref": "5860ef63-9ee0-4066-9eef-93fb2d26998b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0e640c92-2a06-4f6b-a12f-a8fe0edba7f3"
        },
        "item": {
          "id": "a6af2cfe-d4c2-4c2b-9a16-b28c94256cfc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1bfccba7-40f9-4f50-9063-6058b75876df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac29313-5fdc-4396-9712-61f030b03e5e",
        "cursor": {
          "ref": "02245d52-95a5-43c3-a521-8d225728929d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d62a9ac5-2d2b-4691-baf3-3b1620373982"
        },
        "item": {
          "id": "dac29313-5fdc-4396-9712-61f030b03e5e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9e3cfc8b-f744-44bd-aa38-ba64065a5994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826988f-ee2a-425b-8cf0-a036c3f3aaf9",
        "cursor": {
          "ref": "763f26a4-5667-41e7-95b2-871f54dce365",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d11e517f-1029-478c-9c95-6693641c1491"
        },
        "item": {
          "id": "7826988f-ee2a-425b-8cf0-a036c3f3aaf9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ae0bfaaa-0fa1-499c-a353-a53623b86d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab94df54-fe74-475b-966e-9b2682689bab",
        "cursor": {
          "ref": "97595b4b-6474-4ae0-8bc3-e73f60f128d5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e14cb14c-e6c5-4399-b1c3-f94cd5b20be8"
        },
        "item": {
          "id": "ab94df54-fe74-475b-966e-9b2682689bab",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2e593b84-afab-460f-ab25-c0b02bd76de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27562c7-b308-4834-baee-870bfca8ddc4",
        "cursor": {
          "ref": "1fdcb606-be10-4f35-8150-b8c0543c48c8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d0da9feb-a781-4781-a107-58a20279fdb4"
        },
        "item": {
          "id": "e27562c7-b308-4834-baee-870bfca8ddc4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "07ea7559-dc15-4f6b-84b3-9448f146e73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196a9b49-52dc-4003-b3c4-38e4736b7cbf",
        "cursor": {
          "ref": "cbecdf47-4c13-4b50-8333-2092d4c943ec",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d6b5eb18-6d51-4831-88d5-a9916f326f6e"
        },
        "item": {
          "id": "196a9b49-52dc-4003-b3c4-38e4736b7cbf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "632b29e5-ba89-41c4-a349-207f6c3f0b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f33f46-5e7a-4cd8-9a79-d892756305fd",
        "cursor": {
          "ref": "503c6a8b-be97-4171-99be-d84e882a033c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a1065a84-e0d4-4f80-bfaa-df071c410bd3"
        },
        "item": {
          "id": "02f33f46-5e7a-4cd8-9a79-d892756305fd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "401fef22-fcbd-4b58-97b7-dd84bc182d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d299c5d-32cb-4457-bd4f-4affcfd705b8",
        "cursor": {
          "ref": "29e0ce01-516e-48ca-aa8f-066329506f75",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8730bd86-53da-458d-a52f-cdc6c50a248a"
        },
        "item": {
          "id": "2d299c5d-32cb-4457-bd4f-4affcfd705b8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5a0f7aa5-0dc9-4cba-b8db-916298ff84f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143676b8-192d-4777-b424-e0c8a0cebb5f",
        "cursor": {
          "ref": "bc022185-80ab-4291-aa11-a1fc4a6e9dd9",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5aee580e-8d6c-4e11-9cdf-f2359f69c048"
        },
        "item": {
          "id": "143676b8-192d-4777-b424-e0c8a0cebb5f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "810ddbbe-e902-4ff7-a1d1-d3511268b822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a7b6d1-9faa-48da-99f5-ecb5d9f0c148",
        "cursor": {
          "ref": "d1386171-c963-483f-b8a2-b7d44b765829",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ad650295-6276-4f8a-8532-1866d16bfef6"
        },
        "item": {
          "id": "64a7b6d1-9faa-48da-99f5-ecb5d9f0c148",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f715c572-3f34-4014-8310-0fc7e00b8e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e700db1b-ae9b-4253-ab43-a6e59502bd6f",
        "cursor": {
          "ref": "8077db06-d3e2-4b75-9ad9-e0a303d56100",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d4f3432b-dd54-450f-9152-d6ffd82e3c50"
        },
        "item": {
          "id": "e700db1b-ae9b-4253-ab43-a6e59502bd6f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e08b4d2f-1c75-4600-8fa8-07582fe979d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717563a4-485b-485c-952e-1a26ae910f84",
        "cursor": {
          "ref": "7c0f2c04-6ec0-4e40-9854-7d01e6013cad",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0e63a052-e737-4fe0-9add-ee45463c8f81"
        },
        "item": {
          "id": "717563a4-485b-485c-952e-1a26ae910f84",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "81149868-bd30-4865-a3a1-cc5d59e65e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89c5172-ab88-4769-b1e1-331f5a18d336",
        "cursor": {
          "ref": "5cad0d3d-4de2-4546-952c-083a6ce1ebca",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d7bc5613-0a7c-4d9a-a722-2927c64f131a"
        },
        "item": {
          "id": "a89c5172-ab88-4769-b1e1-331f5a18d336",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3864fd7d-1271-4f49-adbf-a5fd511643a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468463f-75ab-47f6-94ec-8ba35c6fe434",
        "cursor": {
          "ref": "a138034e-fb92-4f50-b7e3-b6a90eef0764",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b5a50a46-0d19-485a-a447-c96d2ab2ce1c"
        },
        "item": {
          "id": "7468463f-75ab-47f6-94ec-8ba35c6fe434",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1dde0620-7b9d-42ba-b1ae-e7cf818066ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0017c640-7568-44fa-a6e7-11afeb3ce077",
        "cursor": {
          "ref": "bc5a9575-2b27-427f-938b-922e434b7e65",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4c42a906-0d79-4fa7-8d74-816a822c0ac7"
        },
        "item": {
          "id": "0017c640-7568-44fa-a6e7-11afeb3ce077",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6eafbc66-f581-452c-bb64-16c0ab9963f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f371963-feef-420b-891c-79567b59213f",
        "cursor": {
          "ref": "e8ae4248-32b4-4bfa-8079-03c3cb6bac20",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b4c1d6c8-6b6d-4150-b5f2-98588b8e22d5"
        },
        "item": {
          "id": "2f371963-feef-420b-891c-79567b59213f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7e47826b-f6e3-4818-8a96-551c40df946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c09458-8382-45d9-a7c6-e9252083f288",
        "cursor": {
          "ref": "c48ecf3f-5afd-4330-ae32-1c2593720802",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "07c310c9-8376-400a-a158-8404adcc06fa"
        },
        "item": {
          "id": "96c09458-8382-45d9-a7c6-e9252083f288",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "24c90317-7763-4937-8cfc-e82aa825d538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403f7784-c3c9-48db-bfdc-767c6bc2de08",
        "cursor": {
          "ref": "9a9df988-622a-486b-a759-8f854c4ca64a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5da343af-2a5d-4cb6-8984-89ca9f11b289"
        },
        "item": {
          "id": "403f7784-c3c9-48db-bfdc-767c6bc2de08",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "feb089f2-7e76-4fad-a061-b11e32199a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b2dadd-e9aa-4435-9427-d4357270b044",
        "cursor": {
          "ref": "4fab6846-1223-41b3-9be9-ff301a1b3f2b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "32dd97f2-aa93-45e2-b8bb-9232a6cbc0a6"
        },
        "item": {
          "id": "43b2dadd-e9aa-4435-9427-d4357270b044",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9e516875-a68a-4080-b27d-10b982ac2005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94588d7f-c26a-408b-a7ad-6fcd61e6f984",
        "cursor": {
          "ref": "aa1743c9-5933-45ea-b80f-9043981604d1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dc3d8c8f-865b-41ac-9ee5-99e38139faa4"
        },
        "item": {
          "id": "94588d7f-c26a-408b-a7ad-6fcd61e6f984",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "897d99c9-14e6-4ab7-b20b-6052f9d38a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea2ef87-9503-422a-b266-7f6cfa92f7b4",
        "cursor": {
          "ref": "eeb1839a-d257-4c92-9af5-65ac19d2b130",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fe9f68c9-1ed7-48d4-9f01-a2f46e25a92b"
        },
        "item": {
          "id": "9ea2ef87-9503-422a-b266-7f6cfa92f7b4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89581221-59ab-42dc-a960-7ace56c85e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e82e220-115f-4648-a804-56034f77c707",
        "cursor": {
          "ref": "5a9bc7bf-2e1f-42da-b850-c2cc90591de9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cc938c51-af05-43b3-8e08-3f2f570aceab"
        },
        "item": {
          "id": "2e82e220-115f-4648-a804-56034f77c707",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1655b1a1-d5ce-4194-80ea-2eb068a0d8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5460545-bf14-4553-a236-717ead9148e5",
        "cursor": {
          "ref": "b2618af5-848f-45aa-a0db-c6d6acf662ab",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "83523966-022b-4ec8-a464-5065cda0ea3e"
        },
        "item": {
          "id": "b5460545-bf14-4553-a236-717ead9148e5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ec68ebfb-bba8-4071-8580-4e86c83ee35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f850b113-e9c6-4651-bcd1-2b7eddceb214",
        "cursor": {
          "ref": "01733c21-4674-4113-9251-1a5a45a967c3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "82579336-badb-48c5-a835-7ef48efaf2e4"
        },
        "item": {
          "id": "f850b113-e9c6-4651-bcd1-2b7eddceb214",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a3d60a76-66f9-48bd-91be-5af9ccc631db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce3b4a0-b29e-40bd-b3ef-53976e46ba39",
        "cursor": {
          "ref": "dc64b36e-1808-4a99-9f53-319c5ce1d7b3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9f8c69a1-cd8b-4238-ab03-1a76320f2b69"
        },
        "item": {
          "id": "bce3b4a0-b29e-40bd-b3ef-53976e46ba39",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "871f92a8-7a71-4e5b-aeab-b740a9c6daa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b14ef0-507f-4ee2-8a34-36d7b894c510",
        "cursor": {
          "ref": "46ca778e-f452-4ced-9569-09d79832476f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6d222338-ef44-4e5e-aea0-424f50c485a0"
        },
        "item": {
          "id": "d7b14ef0-507f-4ee2-8a34-36d7b894c510",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "53d1ae1c-db8c-4c84-905c-536e0cb18cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c071259-7e64-4946-9d75-953de8bd8c6d",
        "cursor": {
          "ref": "4b85c253-9cef-4088-9ce6-755666204c5b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "14167ae2-029a-48d3-b323-d60d38f4e268"
        },
        "item": {
          "id": "4c071259-7e64-4946-9d75-953de8bd8c6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fdccebd4-1fba-4589-893d-002621478e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b38772-ecd2-4a62-b2fb-e0f636fc5bab",
        "cursor": {
          "ref": "f28acbf5-3df8-4815-a7ac-3926c5814eac",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e5948df9-a457-48c6-b52e-c6409d371a13"
        },
        "item": {
          "id": "b5b38772-ecd2-4a62-b2fb-e0f636fc5bab",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "321b10f1-1231-42d9-abbf-8544cfa1e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475e1135-3b21-43c8-b252-818382a7ab8a",
        "cursor": {
          "ref": "2f92f637-091e-4a63-96b3-df4c9e3203ba",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "243f12ee-2542-4082-9d4e-97794795ffeb"
        },
        "item": {
          "id": "475e1135-3b21-43c8-b252-818382a7ab8a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "85e9fba8-e8bc-429e-8ebf-f1190ae28046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2430f675-847b-4ac4-bf7c-7e7976287111",
        "cursor": {
          "ref": "8ec1eb71-0ff6-454b-b5c5-ed4d03048137",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3aa56b0a-5634-4054-936f-877a4797f0bd"
        },
        "item": {
          "id": "2430f675-847b-4ac4-bf7c-7e7976287111",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bcf6f8ac-a9b9-4333-a9fd-542b0454fc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f37bbaf-4c7b-4575-be8e-c4809cadf73b",
        "cursor": {
          "ref": "5100e60f-7ed2-4f00-b8af-bba7c8e06a15",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "54a6ceb2-aa2d-41bd-ab5e-54f756ae97d2"
        },
        "item": {
          "id": "6f37bbaf-4c7b-4575-be8e-c4809cadf73b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d7cdda60-1c30-4ba7-8bc5-cfd9ab8f2be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b13fe7-7a8b-4ab5-8596-b00bf92ea037",
        "cursor": {
          "ref": "4c277b7e-0211-487e-bdb4-f42a2e545974",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "69f423d5-45eb-484e-930f-7e6f3f1425f4"
        },
        "item": {
          "id": "81b13fe7-7a8b-4ab5-8596-b00bf92ea037",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d70eac02-16c4-4603-a411-fa6e675ffa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5b3e33-353c-4cb1-a4e3-a7cae0e4bf1b",
        "cursor": {
          "ref": "98958010-a9a9-4bc6-bc73-aaacd0485595",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f62d825a-3358-484c-9786-0551a4f4ac48"
        },
        "item": {
          "id": "ce5b3e33-353c-4cb1-a4e3-a7cae0e4bf1b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "02d0de27-addc-4444-af0b-f44c20c3164b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716a7607-6fbf-427a-b8dd-4906ccfd4d96",
        "cursor": {
          "ref": "329637d8-f10b-40d2-ab0f-d11f83c28868",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf56c84c-ea4e-4364-95e3-6d8c8506fdde"
        },
        "item": {
          "id": "716a7607-6fbf-427a-b8dd-4906ccfd4d96",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ffcc2720-ae1a-4836-8811-a30e6bfd8715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbec497-1d01-44d9-9662-21c5a878809b",
        "cursor": {
          "ref": "e580d9bb-b0ce-4921-bb27-5a1cbe665875",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4ffdfade-b1b1-4d5c-890f-f954811d19af"
        },
        "item": {
          "id": "4bbec497-1d01-44d9-9662-21c5a878809b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5872abd3-352a-4eae-8f89-ebca50826f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04ce1b0-ef14-4df9-bc1c-9946fbcf4d62",
        "cursor": {
          "ref": "08f1904f-b2cf-461d-8972-cbba84d85414",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7528b815-e5bb-4fec-9982-3b8cef68b363"
        },
        "item": {
          "id": "d04ce1b0-ef14-4df9-bc1c-9946fbcf4d62",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ddbf5844-f8a3-4f52-a57f-cef336a97f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5c28b4-5bed-438b-846e-e1c7e461ffc3",
        "cursor": {
          "ref": "68a4aadf-9373-43e5-b51d-02f3881756a6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bca82ca9-08b7-4890-912b-578ba755c107"
        },
        "item": {
          "id": "8b5c28b4-5bed-438b-846e-e1c7e461ffc3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c5dc9272-6a38-44ea-a85c-75655a92c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211471e9-d86e-459e-bb21-427b7ae5f549",
        "cursor": {
          "ref": "67bccfbc-df58-425e-aaa6-5d6dbef43228",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d5f97c7c-8820-4d6c-9ba8-32dfcc004b25"
        },
        "item": {
          "id": "211471e9-d86e-459e-bb21-427b7ae5f549",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "db9109e0-9132-4819-959e-71604fb641b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8815dc1-ee22-489c-8a82-94130306ec8f",
        "cursor": {
          "ref": "31d8d501-c6d4-4f5d-8633-ff89265bbe37",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5a834a58-1d1c-47b6-adf3-b24ab18d6c0b"
        },
        "item": {
          "id": "a8815dc1-ee22-489c-8a82-94130306ec8f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "50ec4fd4-48b6-4a9d-8169-55adaebd2fc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db26536c-3169-4571-b7a1-0341c9e9fe8a",
        "cursor": {
          "ref": "e4cb9a8f-e221-4d1c-947c-dee4fcd97600",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2adb806d-3d74-4bbf-94d7-8dfbb66e4a9b"
        },
        "item": {
          "id": "db26536c-3169-4571-b7a1-0341c9e9fe8a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "101bac4a-3bc2-4f4a-8b09-36ff99f0dedd",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efded75-c566-4765-9834-fb1fa0e485fe",
        "cursor": {
          "ref": "ae130d0d-cd28-4828-a392-10f78181ace1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "54e304c0-7062-4361-8b18-6ad7fa0a4b2e"
        },
        "item": {
          "id": "5efded75-c566-4765-9834-fb1fa0e485fe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d151a33a-6daf-4380-9e81-57b6a7bb2320",
          "status": "OK",
          "code": 200,
          "responseTime": 2402,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c5d298-49f0-4e38-8806-1a6b4bb34872",
        "cursor": {
          "ref": "e081d55c-a1d9-40f6-8ebb-5b2956a13455",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6519d409-d4dd-4c3e-b32a-222c257e464c"
        },
        "item": {
          "id": "16c5d298-49f0-4e38-8806-1a6b4bb34872",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e6a1e800-33e7-45f7-af28-5bb534647e38",
          "status": "OK",
          "code": 200,
          "responseTime": 2540,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2e42d-e71c-4c0f-88bc-30aca5457b09",
        "cursor": {
          "ref": "f1cf8cf9-8f05-4fda-a12e-3bad654118ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70e3d010-3af0-40d8-b8a5-ac7145dd71f7"
        },
        "item": {
          "id": "25a2e42d-e71c-4c0f-88bc-30aca5457b09",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bc84131-0a79-45e9-a7cd-4e16a2c93f99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2e42d-e71c-4c0f-88bc-30aca5457b09",
        "cursor": {
          "ref": "f1cf8cf9-8f05-4fda-a12e-3bad654118ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70e3d010-3af0-40d8-b8a5-ac7145dd71f7"
        },
        "item": {
          "id": "25a2e42d-e71c-4c0f-88bc-30aca5457b09",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bc84131-0a79-45e9-a7cd-4e16a2c93f99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4b01c0-ab9a-41b2-ba82-927c38e8035f",
        "cursor": {
          "ref": "9378353d-385d-4589-b359-bf7f98a63fef",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bd02aaaf-c1d9-4e6f-b0fb-5d2648ee4b0c"
        },
        "item": {
          "id": "ed4b01c0-ab9a-41b2-ba82-927c38e8035f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7971f15a-efae-4761-be86-efdfaa7d0d44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b8660e-ad2c-4309-96e6-9a81000b502e",
        "cursor": {
          "ref": "03b9e4e9-71b6-4be0-8c34-3a311b5cc819",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "228359e5-c335-4181-b84f-6fd715689ed2"
        },
        "item": {
          "id": "39b8660e-ad2c-4309-96e6-9a81000b502e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "814a7ac7-5180-4e37-a765-921af5b24013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}