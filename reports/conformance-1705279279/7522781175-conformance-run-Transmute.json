{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "64473255-913c-4780-83c3-c7c21b53e6e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b26d12e6-a610-472e-addc-ae29e7b4edc3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e39f68b-3d82-4666-8efd-018366fa1308",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "acaff713-6092-4402-993c-35e492a42df6"
                }
              }
            ]
          },
          {
            "id": "c82f46ee-2187-4f3f-99db-294e23a078ee",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "886585f3-5cd6-4bef-9d47-5478624d1091",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "102c78aa-5ec2-4498-8d42-144c81c64ef0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "baf92803-fa42-4615-a593-8d44244bbb0e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "61ecfd85-ae6d-4418-ac0a-85577ab082af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d8db66d-715a-4259-b18b-1257e42c6791",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3593160-ad55-45f4-b3e9-262816133f3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5c84036-3785-41a4-89fc-b7141f70d2f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73892727-0131-469c-96cf-162ffcea71b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a2e8ccd-5964-425c-b68a-ce6305dc1ba0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d641c91-ee6c-4ce2-97ed-e69475d2f998",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98bc0193-1200-4a33-b4d7-d41baabfd072"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e40af8ed-fd77-4cf8-aba9-e7f9840e319f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a17d51bc-dc3a-44cc-b3e2-ede67ffbe03d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8b02a65-21d1-4a35-93a6-e1d4211c913e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4213aaa-802d-4220-80aa-a6033aacddc9"
            }
          }
        ]
      },
      {
        "id": "931368d5-82b7-49b0-b831-afee117e621c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "59ab3674-9403-43d2-af10-dccb0b57441f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29f1015a-b71a-4882-bee5-e5559b031796",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d90aae0c-af7a-4687-88c1-1cdc6eb81afb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c0eae2-bd65-47f1-8c04-85a8535f6f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85093920-d4ca-4ae9-a6cb-7ae3f878ec7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa04dd5-e466-4356-9121-271e26f2e5b8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83a6769-a3d4-405b-8feb-dec45d9a4a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47c2961d-73d6-4c74-a6a7-9b4a88d86d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e889ee8-5a87-4f51-8da8-6fb51cd1843d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622d4329-3882-4fa1-af00-2f5509ef231f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51a52fe6-feee-429c-bd93-78c68df6b492"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9d7e8f2-9b09-457e-8355-19981720157a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc368730-89b7-4ca7-bac2-46b9d1cf88be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0efa974-0165-44f6-a063-035e12a5ef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b895dc3c-6720-4dde-ba98-ca0400a68bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efa0149-193d-4e86-92cd-5cfe8f15aa36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e4c47d-6bbb-4af8-a6ee-2216df815b90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd56513b-c365-4dbc-a96a-0c7ca51a6be7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "930f3a6e-135e-4f24-b1d3-072af81d9a09",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d244c0b8-dd99-48b3-b7cd-9e4e9879185d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b54c3bdf-0bd9-401c-bf1b-2875d3447aa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc622eb1-018d-4c6c-acf1-751d830f9761",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0be647f4-f43e-436e-a7b4-c601a10ec592"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d06e5a2-acc0-4608-803a-018e9e478dec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3237c0f1-fab5-4375-8319-2c8c280903e4"
            }
          }
        ]
      },
      {
        "id": "5be68cd4-6921-4e77-9d9d-bd8972c2f3c0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "eadd02bc-50de-4ee4-84e5-4ea94aa9fb58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "986b7314-c727-4379-af18-fe1cbaa0495b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b099f9de-5da2-4360-b8b8-3af405da048b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abe9382-6ac8-4343-bbe7-57954f6c8779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95187758-332c-4ab9-b4e9-3e00a4a4d2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5aecf2-5f57-4f61-8bef-d065d616c6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3d97449-5559-41d3-ac50-0f48ca7b748d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebba4c7-76ba-43ee-8dee-4655e3387d62",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b5795e-7656-411c-a540-7900da0c1652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9dbae2-5073-4b4d-b0ee-e7945b924865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646f0856-b14b-4814-83e5-8f80537ab9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e41a26cf-6304-443a-957b-a95b220a27e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39db1651-335f-40ca-8a3e-e577f1b4acda",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d6a24c-8f1b-4b10-80bb-1f5f7e837769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c13c11f-5b45-458f-aadc-25bdb144e755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c14644-e01a-4f18-ae7c-259de393d3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8105fdd-9c93-42f8-bc82-74e4867eed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8955c1-0ddf-4a42-a47b-d93b04e428a4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f09220-f278-4d66-91af-e09ad1344874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f57ee77-a26d-45ed-9004-7bdb585a13a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6dace9-2a5b-4cc8-89ee-a5cc7cff26cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a79f00ae-59bf-457b-a7fb-180d264bce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cb3597-fed8-45b6-9877-4b35d08cd579",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a2fc02-567f-466e-8d55-70f8f5aaba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4d5e29-da3f-4de4-be61-fc14e53d1337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57659d3e-6a8b-4632-979b-bad29eba5adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c955690-4656-443a-9ee4-8a6f8662bdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47000b65-9e37-411e-88d5-a671991aacaa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097dfae3-d95a-40f5-9d52-88f42dd43cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ebc7a8-9f79-476e-a770-f19c8922bfec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6db1ce-9f45-4c9c-8196-ee15fa00998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dacb56f7-b77c-4210-9cc8-c0c18c3f0dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef229a3-9d4f-4cc2-8dec-902b226b4ae5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56da2ec-171d-4e12-9ee4-ce27077c00d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07de53fd-64b2-4da4-bf76-2d86cc524edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d08669b-9f0a-4c13-af8c-4a31465add8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c487e6f-5b5c-443b-a6ec-f6d54d136a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eaa529-0d1f-49a6-830b-42578e18b8b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd688fc-7e1e-4b1f-be0f-733fb3209507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fb2420-1fde-4d60-9e92-f3e398e6143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3ad9f6-f82f-4028-8979-2645554ec01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e053954-ed8c-4dc1-b058-5e794abbafdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243a5865-9ff6-45c2-b282-6551bd80d761",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdd4ca2-5288-43e0-9412-55bcbaa3aa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69c3297-e536-4d2a-8d88-017a2adecd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cc0c5d-c830-4983-a4ec-fcacf2e1dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80a52564-17de-4281-b8f6-746b7225cb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56eb3c9-2acb-4425-81f8-de153e1c0e90",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15039544-9e3b-40ea-9c6f-4f0027e3cf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd880953-9a04-4e89-9a15-3cf8c50ed55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0aa181-77f2-4d80-9304-4640fc2817e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceecab83-2399-4b4a-b216-6df6924566aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535487c0-b1b0-40c4-bf46-d835d326c042",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dde0506-3a47-4398-acdd-bfedaad5af5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cdb2dc-8311-49d7-bafb-0ad1e246002c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0717ad0-57f8-4fe3-936d-eeb18b663ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46a70d84-56bf-44c7-8ead-f5e08dc02b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b371d41-a0e5-49c5-9d7c-36c8356119a8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e066dd-5a08-4e27-8ac5-b54025aef691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba03ba0-6beb-4920-9b99-feda8c6a80b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b1cbf-ca02-499b-ab42-e16c174f76ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36575f55-5fe7-4f53-a0c6-03d7512d741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503091ef-a1ba-4ad0-8242-10c0e3f719df",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454de2b7-009c-415c-ae39-d3c74ad035e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965d7167-ad46-4d0b-aac3-c7c4240509e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11d8129-0b52-4657-9a17-caf853a999a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8f9283e-711b-43a8-ace7-6a5335a246e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38620f14-c737-47e8-83d5-4e2ce1a4f7a9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bb5584-eb5d-4b29-8f2b-8b20e7c68ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2496e2e-36c4-4eb6-90da-991c3105ab6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f45e041-1887-4160-a6d5-c1502d08e352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbdb157e-dd90-4488-afd3-ed04f2e7ecfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf4d0d1-eb45-44ff-8737-b38513f7f157",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb34e34c-277d-465c-9492-e22c406d80db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb84d96-0d5c-4836-9b10-c99607a95e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f8cca-d17f-499a-82b1-4d9f96591f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "771bda50-11ea-4a92-b119-42e42970ad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b89e16-420d-4d7e-8f59-0c61dd0c9bfb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d883d6b-9827-4110-b45c-f6d0e7a9a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d4f7f0-0ba8-4e2e-a58b-83497a0cb638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39a05e1-5a01-43ee-920f-d8a43d6f46b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a311b0-2dd0-45bc-89ea-4ccae99ec76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616ea66d-c609-4788-abcb-96d7ef6c57a2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b0227f-0aae-4a34-b612-130cfcdc55e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817352aa-6206-4c7b-9a35-c46f3774d403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9eadaea-ab97-4ce9-9086-6628b76f1bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ff125a9-5872-4e50-b107-400463e674b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dc4f5a-714d-458b-9098-12fb6ea5ee23",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57720090-4f9f-4de9-9fbd-84d8da4c2f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3876b6-3e34-4bbc-9700-a7970a81da27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e908c8-91ab-44c2-8a5e-e9bd84dd1cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e050be06-58fb-4178-8bd4-7075add90027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42bd9d3-c8ee-4f36-8508-67cf2bd5385b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fd6a75-2612-4850-8592-70a53d7466d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95295dba-5d55-4093-a2d2-0e36f2cfaf56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22606787-d57f-4dfc-b1de-0fffd8f98150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fce1d6-50d9-4c52-8d29-9397070d27e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c72e00a-d0cd-4085-a9a8-70e25963096d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f0698e-c855-4eaa-bd01-459dce3ad37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738acb14-28c5-4fbf-8400-002410d77c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb313e9-feef-4359-83e8-15626af7835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbe7700-8f02-4932-afe1-1c2c3345fe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ba3ac6-079d-43b2-a4a0-86fc61dd74f3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d28a1-3da2-44e3-9b43-a2de170b0696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f7c7b3-3ea4-4b6f-830f-15ef5614bb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6870bcdb-a5d0-470f-b0ae-8e8010f1d1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "274e9717-6b89-45b1-a9dc-853fbf818030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426b0fd2-d1db-4e62-8087-415358919a08",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b136789a-e7bf-4864-8d31-43d4d899048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d28a53-9f0c-49d1-9c25-9c3582829bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06865bfd-f0a0-4d80-86b0-6171e361cf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4355aef4-0a27-4df5-a91e-3079296c5e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b787a4-7c2d-46dc-9ddb-933e92343f08",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd701a5-645c-43fe-9f3d-1f6cb775abcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd234174-f5eb-4985-b010-fd8c445e8c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c3e024-fa72-4467-9967-d8907be3dda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebaa7a63-e4e2-43a9-9a4b-d7e2d20c25c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327ada7-f563-43ee-80b4-1cffb6a8ab5b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622a0d96-c372-4b38-bf43-11d6de982dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb754a7-aa41-4590-9791-3829659bebf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5188468-91de-4d41-b256-e09ad8cbcde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46c95fc-1e20-4250-addb-3e1f21d64ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5237fb-4092-4850-af9f-2002ec398769",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c8ed3f-5869-4dd6-bab1-5eaafa472349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea2e626-bae5-4467-819c-bd8974accdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da04a2eb-a6e5-414b-9687-4fdac8aedfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d51d3895-b367-4b1d-83dd-f4b599e8424e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798d1bc0-fa5a-4bcf-aecc-3690b459519d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03e2897-aa74-4070-ad19-909fab5a35a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18177c1-5776-4d48-9c7a-b39687bb1a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaa1585-24d5-41ae-8c11-65bddcd64fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c054ef42-77ed-44e4-8738-e12a5a140b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642551d0-38cd-4854-aeff-3f64037c1ba1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d3eb02-3101-4497-8613-6d1cc2563d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fef0c2-0bcc-495e-9518-c8c874519841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365f26c4-bad7-46e8-a95e-ea7ec01821cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "993355fc-8ea2-493b-8c77-a0bda14f5bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5f34fd-e8d0-4f56-bf20-7d76a6ebe4aa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c766cf-5e00-4bef-835d-b78ec36d58b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d64b2c-c0d1-410a-bcd4-5dec14578b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6832e178-efb7-4d20-ad0f-b9307748d17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b7dcf1-0b0a-4348-af13-a4a68d165b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414724b3-f08c-46fe-bd1e-c497181b1912",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606e577-7c82-4a44-b67b-fa9d6857d8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a32e85-9d54-40fa-86ed-6a27d663b6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3105b37a-11f7-4376-b7eb-5bddd88b687a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e296260-7eac-45cf-98a8-ce95d0dd8983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecfeaa8-636f-475b-9280-bc5418000086",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b69bf7b-3cdd-4a71-9b20-75b1b67e7266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2878323c-2cc3-409a-83a8-ee56e4c00ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b82f1e3-4ef6-4fa3-9c51-92bd55290c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2deae2ce-f9c8-4e6a-bb95-ecf1d5411497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678ba5b9-525c-4861-8a23-d45732de9282",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b6590-531f-4128-9f7b-bb15832b8d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d1ac77-bba8-4bfa-b2ac-a3ecd9d913de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d761d592-047c-4d49-a10c-243d51c4dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24c8ad2-8f1f-4f04-9f34-2cad5c742b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c16096-041d-42fc-b717-d8a7def87cff",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45a9599-923b-47c8-9396-9d83d64c0d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4870764d-0729-46da-90ef-56edb7aa1ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7186c4-a09b-4b08-bd39-26bace54360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6b2b59-0147-4abd-a178-ad67af1a7aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20943e1-31b6-4c43-85a7-096e37a2229d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aa489e-a94e-412f-8a86-610e3f3c2608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cd9a36-bd2a-488a-ba8c-6722c3ccc482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db5309-b227-4c68-a559-ad8f27634bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91daef0b-c250-4144-8db2-5e77f50323d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e763ef91-b830-445c-96d1-166cacb6c5e9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e51ca5-ea58-47b7-a487-fe9a0c2afdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44fbbf0-8828-4494-ba73-690907bf0724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a49acb8-8972-4fb5-92ae-51d95e0e8230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc839dc6-14d2-4d06-a890-7d2d46a6e797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec9cd1b-fe4b-41d1-84c7-0e76690e8078",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ad4aa9-e749-4689-8a90-9aee9ba11ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8324091b-48df-4774-9f45-5b2a4690501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ff741a-7436-4d3d-b6e7-c21d7aa26833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7a2ae8-6b95-4330-a96e-931452130b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30f7998-af92-4201-9550-7c530b16e48e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca4d643-0caa-4d21-bdf7-09d920a875b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56c3c677-fa63-4ec9-a3e3-83a6c15cb9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc539fa7-55f1-46cd-9578-cf9d5f38a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2f374e-de37-46f5-b5ed-55234851ac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6455255-3813-4a3b-961f-65e58b9bf641",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956b827b-c9c8-4ddd-b075-a54bd21a22a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb6fa54-fc3b-4f91-8713-7d8cc73f0716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbbc123-084d-4c87-94ec-b8012ea505f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b8dd47-9c90-4b72-b8af-b0237ebb0854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c9e83a-d7aa-40f1-a00d-1eead88255ba",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2ecca5-fbaa-47ba-8ea4-db60409de927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c351935-7e6d-46f2-9625-03b1c4404ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a04986-a245-4fd8-90d3-96251966f7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d72b602-fc1a-4b57-8e24-5925bedc3cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78274efa-b137-4b63-836e-7bee8b430cc7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a107b5d8-983f-4d72-899e-678b1aa5c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b686f7-cdea-4318-b04e-f273e5da61e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23fc353-f2df-49a6-8e08-7cb6031a0e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "efbb39e5-e02e-42d1-8995-c0156997789b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7401e1-dd98-42d2-92db-a027d001cd3f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3003f6-0d5d-467f-8d8c-41cf5b55ff56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bea1d1-589a-4884-8e78-3f3d0c3fe91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d48de3-8248-45da-a734-8c80137abfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6e333e-fb87-432e-a6ec-2339657f97e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc94300-a77f-4be9-a4f1-6ea5d244abfa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bcc38b-e53a-44d9-acfe-8ae7ca829f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408e4eae-ebf4-4087-a0b7-4087b4d24007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2158a9-8da7-4964-b3f6-8347cf31ddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0290620-63a2-4584-b98a-aff8928c5d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df734369-aae8-43c5-8d9e-c978630b8d21",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada534b5-7343-472a-a578-aa61fcc7dcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee5e175-aa01-4997-891f-4646cf2bb927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d085693-c60b-45be-8c47-8dad791653e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "88713cb5-49db-4451-9b09-3458a8388695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a23c4e3-84f5-48ed-8060-db1a798b45a1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8492b8-8796-4b20-8f52-6c5166af916a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1371f109-d9b1-438f-bef6-49f0ad5faa84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a02d8f7-606e-4ad8-b470-ee96bc585dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f85be51-5cb6-4b44-b105-2560b0237cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b0427d-03f1-4754-8125-49bef5c761f8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f42a747-47ac-4b40-a76b-283b8881ac2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de6285c-0170-4454-9e63-fb6d92411249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c447bfc-2586-4b38-809b-a85af528a691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f9ea5e-dcc0-4b98-a1c3-7a7315d2e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2fb8af-0220-497e-a448-71a9c1d941eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96eb1553-29aa-4a1e-9d24-44129539a394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087c54f5-c4bf-409a-b4e1-ed83343f074c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe06ac2-a28b-485f-92ca-1bbb7df4464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df4706e-b2e0-493a-89ee-7f6b2383fc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4321ab3e-adb6-4775-b2ce-138cedac54c9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da889418-3c32-4deb-8fd4-55626f74c374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81dc119-68ad-4edf-8bc0-1b8a6ee6f86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c28b7-ef06-4ddd-a998-5f2e22af05d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7c8f00-b390-496c-9594-7835a2d98d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86037047-c1ac-4cae-a107-78651e509b93",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b98e6-e233-4dad-93e3-eb31e4eed01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6feb8179-8b95-419e-8567-34e43f7d5f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45b1c17-db86-4b0f-89e3-2a04912756e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a410232-6d46-4252-bcb2-8e0f85f1ac4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3845a78c-46b2-437c-ad0c-0e44c1d1e0c9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd9cde-1e52-4f97-8790-2d3aac76a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9fe2e9-cae7-4168-b26b-c1a8baa396a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138130e6-144a-4242-9995-f0bf3841010f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d04929-8b5d-4688-ada8-01ea614632f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e05e8-598f-4adc-b39a-e704097eefd0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6851ebce-6b9e-4377-ad52-cc43432ddea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731793cd-217e-4b03-9b3a-bfae7d701b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2790cff7-9f4a-4e1f-b092-2008dfffc0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e19e04-909f-4294-9d63-e65c9946e0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d54194-dcbe-4ba8-a405-0ad30ebafb48",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b146ae1c-fd8d-4986-bbf6-c75efd902ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce2f16d-d310-44bf-9f73-140c8c0c4ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e2c342-2ffe-4ad7-a6a9-e88912251e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7966f3-28f8-4708-a578-c7b1e8bf6cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da8aac0-91e7-433c-bb4f-f0c0c7a04466",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b037b61c-4600-4df8-bda5-a1227b25a6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847f35fa-6a27-440e-a285-422a0f87f17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc8c768-153c-44fa-a5ad-147692c499ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab06375-5aa4-4e94-8d89-17147e0b2f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600a1913-43b0-43e3-bc26-8e88761b7b11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d2b41d-4a19-4d2c-8021-181d67e3a9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5e16f3-f27c-4b6c-b63e-c0322bf67994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f846fa20-8b05-4f1c-986d-3b26709dd531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ccc883-48f4-4882-8a76-b4e8b5239af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061da80b-a201-4eb3-8afc-8cd8b054c499",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73032598-9c98-49ba-aa48-2d493f596d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0aa448-6dc2-454e-b8a0-ecd486923a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e06f663-8807-4233-b9be-9f22815c6d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da4d7a1-adfe-42e3-a144-0d06403f1f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893a27e6-be1d-4bfd-9b6d-445199e4518f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e26b77-066a-4c50-9ebc-26d0697f8b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab573ab-2276-4963-8fd8-58fb92181b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3fefe5-583d-4573-a017-e5023241233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb4d34e-13ec-47c7-8a2f-71c48dbcbee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2026da85-9456-4dbc-bfa8-fca4619051e9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534e9ff3-6a44-4686-a206-44e5eca5bd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f37e5f-4f13-4477-9246-b2c6a9246034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf57359-3b3c-471c-ab84-6ec15e4084ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4d5186-258d-4564-a088-844c80fff2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac060351-4bfe-45b5-b4b7-79194e44aedf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3ded1a-c355-425a-9081-5406e92a8f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a053fe-2c9f-4983-86b2-24c680470778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f7f093-d717-4469-b55a-644e8dadbe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d124d895-e1c2-438c-b88b-785cc0ea5744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1436bec9-3ed8-482e-adf5-06f0b534fa24",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19c8753-aa57-453d-bf93-b029a35861a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b053bb3-03ee-4035-8607-617405d2defd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1f861a-ee73-4fd9-a8ed-59dc39d1e0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "551d7cbb-0ad0-4142-a155-1f817c90c862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52df5c24-fa7e-46ff-ad38-4d3c1c245a42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27d8da5-ebc1-46e7-93ef-ee59443d714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881ec716-19ad-4a57-baa6-ec4685d43ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b95fce0-39f4-4ec1-bdbf-f6afcc0057e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9538665-5888-49eb-a1df-bc98880d86f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526e1cc2-098d-4d92-aab3-f559c549555e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0c37c6-50b1-4f3a-9f4a-3c5ef86e7f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fffb7f-ed45-4e8f-ab7b-a1e027ff1500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64903f6-08fa-4b02-93ed-ee738589d45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d12c9fa6-0b43-4bff-8276-a9a05085884c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5b79c2-6ca9-4990-b452-a5855b81872a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b537e-45d5-452d-b4e1-efb650849df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef5b153-db7a-44ed-81c1-ea53e1a1fbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e502f0e-ef55-4d8c-ab16-5bfb9fe5a291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c35072-d0d8-4af6-8180-34d67629088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5209be81-d457-4838-8251-0d598eca4d40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f556e4cb-d520-4231-b470-7b65d641b6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b9e21-22ff-457c-bef5-de427373b5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5186f10e-558d-469d-bccc-f276799f2feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c71f066f-6bb9-4f10-8b01-45dc7c7a49ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e16e3-893a-45da-828b-c26e9730a995",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b41c7f5-7707-4feb-9cda-1960fc15a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf6ebba-94b4-4044-a93d-cc02c82cf170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cabca5-87ab-4662-bb42-f0c4a196b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aac2875-c80d-4a08-b893-306c21cdee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363f849c-9e41-497e-93e6-f0a926921b71",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54929312-e0dd-41ca-b543-41ecd7b3e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005b6b65-cc00-4f1c-ad47-825f0c5a1632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b322d6-123d-4750-bcee-cfa895eae4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdca8a7a-ac00-4da3-ba89-4e58600fd2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567972ca-a725-4654-b25e-c34f4735717f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533da820-c834-40a3-8b69-1d32b73d6ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00c34bb-ea1c-41cd-992b-4b472269008c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787bd45-610e-4213-b53d-3b5ec2d70160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25c5e39-260f-499f-9efa-79a836eb86b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cbe2eb-e753-4498-8351-6a929bb12bf8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5388e3c-0656-4d7f-9262-aadae0a5a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264d3ba9-f4b8-4303-9d5c-750ce7460b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b4247d-6c2e-42fb-9f23-52b49c13d15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eebc841-1cae-4129-bd06-7eeb59eb09f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bcca5a-2b8f-49b1-aed5-a8cc8b3b8e96",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68716258-1b44-4503-8bc6-4edd5cb8026a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e939424-1686-4796-b9ed-920e7654d484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5065cb0-f21a-4bd2-9a38-1143d42ed74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1978294-1149-4835-a35c-f6321451f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96834757-463a-4d9e-80ea-491cce937c6d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ea446-c533-40ac-8fd6-ce444a29a536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf6e509-8a2c-4151-ab3e-09fba1be51b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e6186a-6b0c-445d-b5d5-5c84186dab1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f5b22f-646d-4f8d-9cfb-490f950e0456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d356ac-d763-4e71-b466-8efd933059b3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1da6b44-9869-40ea-a5ab-0a5f6c9329c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85094fbc-5332-4576-8f4f-17fefa2c3dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308a47d1-38f3-40ee-8d74-5b99ba07f7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "178ffc37-2525-4ee5-8c19-8d2007395724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb0e03d-db59-4ee7-bf1e-5b02cf4acdf1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df903dc-d3a5-4fb7-84dc-273f91952c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39703851-3d82-4d47-9f6c-21fc0e5b3426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57a67ea-718e-4616-9e98-94ca21ce4bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c888c281-c217-485e-944c-9b9bbd7aecf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e2936-3682-488e-8417-4dbaf1ea54e7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d4db1f-0e4b-49ae-9e72-9015e58e442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc502e55-9cc4-4821-b6ef-5c53ae83bee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2395d43b-d947-4db5-b280-5a79d12c063b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe1712d-f610-45fb-a859-11c869b1f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfeefce-e8f3-401c-be23-e430191bfd7c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81387bdd-40b5-4b4d-bc12-614917866dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edca768-75aa-4719-be1f-8fe7190daf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb0a183-461e-4a43-a829-9de471e1e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c940599-80d7-4b10-a03c-16719d795f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3bd2f9-a84b-4ea2-97d6-6ccf57aefe32",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce504aad-9108-40aa-bb10-868b8c75c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc50859-cdba-46f6-aea0-d3154cede007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d43414-6e64-491d-acfc-1274c268cac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b05253-c3eb-43e5-9e91-82a313805e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd882ab-487d-4ac4-b0de-4e9a93d48e8a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544f4589-cb97-4f02-a624-6864533a4900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b187961b-46a0-46fa-a326-d68e0dbf7d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f0eead-9ff5-49cc-9f3f-ead5d8b11264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9153c5-f212-4212-938e-6c262126d2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5cd73e-315d-4d5b-b59e-392530fe6d14",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b70384b-0100-40ee-810d-3ef8bc1c7818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f4c48b-56fe-47eb-ab9b-ecd8be4a711b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357e1b5c-3b74-44d5-b9ea-ceace39bbb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bfe373-43d8-40c8-8993-37a62b14e5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a485b98-4be9-4a7f-add3-61b13b834fd2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e0153-3a3d-41f0-b272-1314159c1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c233953b-4e93-4c73-aacb-fccdb4bbdb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52b5cfa-5d87-4106-94ed-516321c122ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26745e1-f55a-420d-b71a-4dbc297fd2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e724ec-06a9-4fba-b926-5c2f9dd5474f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19a3f07-080e-45d8-9259-c2e59a394ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150fa7c8-68d0-43a8-a3e2-d6f5e4812c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6b6dc0-32e9-42c2-af5f-49a9b95e32aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1a78ab-5a6a-4bb9-8031-a5b4e44483d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2895f342-e40e-4adb-b0b1-c74bc4586fe6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d2c579-8e08-43bc-8368-a950858db09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b74502-9a60-4d47-8bae-b016620dffa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae1987-f9d3-454a-8a4c-67d061b2076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9d3c8e-d518-421b-8332-6a0c3d3ebe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84f3845-f6a9-41b1-9bd9-f73bd694467b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5168c76-3fd3-4a58-a620-b225a34110e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af3644b-42f9-4592-b61a-4fa0c2421b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264292e0-4d36-49d5-90ce-2b97bdecdd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f0ef18-228d-4fba-9c43-a8605cbfeb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240dd109-605d-4d21-9331-4a04483bc8ac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c8b09c-3145-4fef-a945-160dd670863a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c3c62a-03c3-4d8a-8497-5783cb0d7a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e8dc0-52d6-4a87-97bf-4e28a181b49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b2c2cd-e327-45da-b7e9-5c15ac65a9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e6033f-4245-42c6-a9fb-7bba00efdc89",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e9c7c1-2e23-4370-a643-8b8f6e7fce45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c6b158-e2d3-404c-a934-76db705b6cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8a35fe-1e37-476f-a2b5-7a727e884934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cce633c7-fdc2-4338-8d01-32818c2ed770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2e11cd-35b4-4f4c-a024-0876c609b114",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26bce9d-6458-4332-8e8e-ea670671ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5695104d-37ec-4e79-a469-3b89b5a568a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d204687-9c1d-4dda-a272-c4f142cecc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a573fb82-8e31-4fc2-84d5-0fa34db1b96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c93971-4ee6-470e-8461-e40f0b1b5242",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d87b14-677d-46e0-b623-2bc80b218bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1a55f7-c078-4d48-ba6f-4f7f368099be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b23da4-659c-4439-92b4-a4b4449e36da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "525fe80b-4efd-4a0e-839a-491ff2f63e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afec9f4f-c1f1-4dfa-a3bb-87e60b8c2f7a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2b747c-3468-4f9c-8a9a-1a613113886a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048729cc-2488-46c2-9a1d-56621a115476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ab8c4a-1f0a-434b-a1b1-a548c36fd590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efbf9f5c-f3e6-46c3-a10c-06a6f4efe1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf67b829-fb96-4581-97b1-27992109d0fb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265b36ef-3475-4ce5-8eb1-dc561f28c966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c43e6f-4d8b-4173-b219-9c84165683d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627471b7-71f3-4106-8af0-e2e2374f3370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a37a85-d2d7-4398-95e6-eb5edff0fc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2181f508-8829-4a11-8d91-c54e1e996d69",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92675171-c488-431b-b7e4-5844583107f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae815d3-d4f7-477b-9efc-194e71a05053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e103465e-aac8-46d1-b997-7f6648b20677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c45517f-5e04-4c4d-9968-54e09ad22775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1641ff81-4f6a-4d85-8555-55cbce078e79",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118cd7c-50d1-440d-9337-401211e051d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75839d3-eede-4028-8295-cf5c9b4800f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4ee69e-a8b5-41a4-97c1-919faf1c0159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "634b7f4d-0a6b-4460-b401-f7aa7d58a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a0e683-5cac-4c27-9f80-d2c3c0ca8f69",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462d3e41-a9d1-4213-9cce-1c84117d2279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a410fc24-24a9-48c2-a986-1b96a305da1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65428d2-c9ac-4785-99e3-8e9e1877bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aedeab73-7ec3-412d-8df1-a5447f984ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7f4ee5-7f15-4d92-bace-6530fce00a65",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0bdb1f-da92-4d12-a968-93317b9af99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50902b41-5db5-4bbd-b997-3ecc52c41227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79ca66f-5b51-4a2f-a56b-579eef0919fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "346113cc-4309-4c53-9615-58e2cff9cece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ba8c6b-1e43-4368-aef2-aa704fa1d9f0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0696e65c-29de-488c-a66c-8fcee8d6bae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23076cb8-54c7-4189-806a-cc33a547cc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24e8793-838e-41e9-94af-ccaa44557665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4976295b-6235-408d-ac98-ad6464b7ba9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff00925d-f5a0-4a4d-af6e-9f9d0508b0ea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f028c623-9654-41aa-b462-83a7704168be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cac922a-f6d0-435e-8635-c3b704ac2ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab94ce6-710e-42c1-ae11-5d52256ea407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c558c849-ef96-4a34-af32-464cd67aeb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0112eff0-cc38-4859-8884-b5f4d696a139",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af309a08-eb85-430e-ad51-432acfd0f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc13d64f-1a01-42a3-a37b-3aad89eefe85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d6e671-6d38-4e9e-8534-1b4ba8ee29b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "064f086a-c1b6-4043-a745-f4f33d8e5eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5949e57e-a07c-4c52-a9f2-d6d8f563df7f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9d025c-d21c-4ff2-a87a-aa86c27b67d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d4b2ef12-45a9-4f2a-b218-1852cde57265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c7485-ea17-4b09-9750-aa91b4d5ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "287852e4-b9ce-4e61-83ed-70338e9bf2a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f64fde39-b211-4df0-9719-7da544e5322b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec6bc492-4811-4c46-9ea6-178b020826ce",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b74866-b688-470a-8711-a31c23c6338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64b218cc-d336-48ed-a131-ca8071d69aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfe9310-3bd3-4c78-80ff-7d582e1483fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dcf0a23-7039-41cb-be11-56be5f977bec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cd528f0-20b9-4627-a61a-9ae00fdf3765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9adbc6c0-9ce9-401e-b6af-2d49cba1ddc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e6d6665-78ee-4a47-ad3b-6c63bbd9bdca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9753c43-56f9-49b3-bd49-079fc881d552"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "947044d5-2216-4a67-9d9e-35b02697f72b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99bd77e4-16cd-47d6-a875-326a51ebb78e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "500da74c-e6d1-45bb-9993-b99d1e5235ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "889cdca6-0912-4ebe-aa60-80abc56bb857"
                }
              }
            ]
          },
          {
            "id": "95988bd9-0a16-4ff4-9acb-bbca0349d1f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8d806a3-b0b8-4542-b9a1-c51e772c515e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1f95e18d-09ce-4f2d-aab5-7e9df5d19d93",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b3e1f3-eace-470e-aba4-741261a46c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "891778a5-58f8-4b18-a2dd-6a57cb3cbd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a756ee-adba-4e59-8a92-af91cfef9553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c4c94f-0e39-488b-9986-138a9e0e957f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "daa893cb-b393-4e0e-8be4-2d0a3b3babb5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3880f133-07b5-44e9-8075-dfda4b3121a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "215dd1fe-0ea0-4594-9430-3d85cfb12d18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87278fd4-03d8-486e-9bb0-21a55e2b4804",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5549cd75-3d46-4a1c-998e-d33b9119e6ae"
                    }
                  }
                ]
              },
              {
                "id": "2de037da-9a7b-47a9-b5e2-2836e1c42d52",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8fab926-fbf2-4024-ae5e-9307ea4cbaa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2bf9def-791a-4ca7-9b81-efe353f16ee9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10fec9a9-c60c-4d13-8bed-44560df74a12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52a3546c-f6cd-45ef-85eb-667ab57356a7"
                    }
                  }
                ]
              },
              {
                "id": "2511c56f-48ec-4a6c-8110-f83c8ef7e672",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "744154e2-88ed-4488-9bfa-0437a8a69a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ead764c-5b8c-4c49-897e-c0cbcc0f471c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a99b86-adc5-47f8-9311-4ac16dd1fa5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "942e3802-883a-4fab-a61f-348b2c6ecc92"
                    }
                  }
                ]
              },
              {
                "id": "d5f569aa-ae17-4829-8963-4656b8590af5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0847fbd4-cc86-4158-ace8-35ab07f47187",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4060f8a-f879-4f6c-b3c1-426e570c4c48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8596897-f1ed-4be7-894b-2c1ac10703ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "06a3eaef-0e9d-499a-9647-6c020e0ddf82"
                    }
                  }
                ]
              },
              {
                "id": "46d7f75a-f740-4f44-bb84-9a5cccc8092d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c011499d-2f16-4cf2-bf3e-b8c79d673681",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f7f63ab-5ec5-4a24-840c-ce83533a1f63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcb9848c-09cd-42c6-95e7-9bd996d31b70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d4dc474c-4601-412a-bee2-4802536972be"
                    }
                  }
                ]
              },
              {
                "id": "f555d937-4887-4401-bd0a-2f2df528343c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f45acb3b-096b-410e-8ae1-119afb6d2eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eafa430-f213-437a-9f0e-fd1a48bb46b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5286b58b-50b7-4f84-8898-632b310ba18e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c52c1684-afe9-41a1-bddb-0c197f59ee1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66240c58-3d94-4601-8e7e-4bd52e2d3239",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0269ab37-607c-42fc-b981-204bcda520cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1dc9f6ec-88a3-4530-be22-49d54f1108fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5aeeb585-7d89-4616-af99-2074f8bc5b68"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9afb4f08-fd5b-40d9-a9ff-6ccf6e90c0f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "826bc785-dbce-4b3f-9ac7-c49d99551afc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8289bd1a-68e5-44c9-9672-06124ea215fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c533f20-fe8d-47eb-967f-411ea8fdaee4"
            }
          }
        ]
      },
      {
        "id": "1b8e087e-72e1-4deb-9d59-407739999ca0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "83b3880f-4ec9-487a-baa9-d04b0f3d72ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c674dc6-b152-47f1-b851-cf53b148a204",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04432309-c7cc-4d3a-8a6a-88151bc8ccaf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eff9e8a-0dcc-47b1-924a-39c273eab1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9beb825b-3b59-4be8-b9bd-75fe5833fe23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dabbd06-31e8-48bb-94cb-68f9400f156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "77cd65aa-1d53-4bec-8ba7-43f546317a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2445e94c-c649-4918-a6f2-e12d626a13ee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d1f683-bb95-4200-a3ea-5a9fd2e4033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc33011-9698-4075-8fac-bdbc301cb26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b018c-f8be-4c7c-8800-4432ef03f04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52452184-e819-40ef-aa87-9a867d4087fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2ea256-2f59-4a07-b84e-587542061e9b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a7960f-1555-4228-abea-ec3ebbdbd0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252a4ecb-90be-42fe-9824-9c4b94b406cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f423353-fc6f-4016-9658-82b0dd448a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "888ec99b-9a6c-461d-ba33-71cd93ddd524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f89da6-2052-4237-a1e7-d3fad38acfe9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb9122a-3bbe-4b7f-af58-efaef4d6e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda0a7d7-44c1-40d1-8b6a-f61c5012680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d89acc-24d8-4d9b-8ac1-3f399e9d0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ee7207-2c70-4e72-973c-73667135d7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d53f9f2-23ff-4e78-b272-2df143031b5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdb5c5d-ed46-482d-b4a9-b4e451e6e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c64783-241b-42dc-ad5b-618d3f5cf3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef6bc05-d396-4005-b5d0-a60e66afdca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "724de6cc-cba0-4493-b17d-1a1d82b22926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506c92e8-d62b-4986-a6ef-53717ab84bc5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86eeda1-e040-40ab-9179-6b6574b79fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b269e9d8-90df-425f-9022-8be30dfaca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfc54b6-571b-4b7b-ae28-d2fcfbeeb7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ff6546-9cfe-49cd-bf0c-dce7d7ab9bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dd5603-b3b0-41ac-b0c8-b197228822ab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f4b3b-4be1-4a8f-b5ed-07b1817e772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef63b2b6-d67c-4714-b8fc-8e91b3e69055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ffe8d9-27ca-4ee8-af90-ecde5ef79941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4750a6-dc6f-4367-9a16-1757ba6088e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f64d48-aa73-41cb-812c-ddeffffa17d6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a82b3eb-2a14-478e-9154-4de4dbb70b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb39495-1eec-4560-9c80-3c52bd888bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf23fac-36cc-4025-8885-501659dc88c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb33d3ea-7580-40d7-8581-37cfd211354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397c5c9d-4b3e-45a6-ab40-afb20ff9682a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e402da3e-2ac3-48cb-acac-c682a5a45d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f80c1df-264c-43f4-b212-27496227c87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f043d4-462a-4775-b0db-5c7e09c84bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86377a3f-aecc-42ab-bd7b-193219069086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007d47b7-2523-46d3-818e-dee5fc1b64ec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fd9575-fe9e-4734-82df-f5acdedb7ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dcc0b1-be43-49a5-a139-2c6b7073eb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b6df6b-d1f8-4669-bc6a-099b0267a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7736d06c-b261-4413-a131-a04812206642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e6cca0-cd82-4c24-902e-7f9fa7ab97fe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13777a2a-5075-4d02-9a80-075ebf01036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed99ecf0-d4f5-46f8-b215-65ef18290a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353a9a16-efc4-468f-907e-e5cd4d132c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "be866067-383c-4bb7-b427-2aa4934fd2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b167ff-77a4-4766-a86c-78061737f55b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5614bb-880e-490f-acb2-6d156271d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab94527-d229-4e35-8bed-3cc77c885572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e4ec7-63af-4dca-a0e5-45f2ef844fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1cc27d-ae02-4636-89e7-6b6cc8f6c960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b356f5-0a99-4287-8ea8-c5cfe4868d0b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee0049e-56e5-426a-bc8e-fe7c1f3cd6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c3bb0b-46d3-439c-aad9-7c21e48f034d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94db4957-f081-4bfc-9152-b1691e6b21f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85c223b-85fe-4f8f-a472-071a4cfc16cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173e3026-63d9-48f3-b25a-9625cbb01605",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d51c8dd-1b36-4b77-87d9-8369287b602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d4cf58-1869-41ac-b517-f38047291a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686262b-3521-4a66-9775-2cc684894828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74cdff12-412d-4f00-ba35-b14aa41b1849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a3b113-33a2-4671-b39e-0ec5d7f73b07",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abcbe1c-0342-4057-9d2f-3384cfe3bb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0d5fba-9508-4a3c-aad6-1db9db3a16fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302e866e-ef1e-4fe8-8a6e-b750b9211235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be384bf-d840-42e2-9b63-507e8b8816c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f508a9-8692-4164-a000-5c4126337f90",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37586dc0-fda5-4bbd-bf66-4270d026e106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56525024-a9b1-42bd-aa0b-0ba5fa0a2b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af81f885-033f-4be3-b226-f0ef8a986cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e66ac0a-2346-4f36-9ae8-6c44bd5ddce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a09f2aa-11fd-4dbb-bb15-a1abd63fa3e1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08309938-a16a-45d9-9410-899ef4f66dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3145040a-86c0-41a9-84b1-19823542ca8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2e8666-2670-41ee-84d4-203e163da392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7664644-8102-4dd2-ba8e-58123e451d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4f780a-973b-4e92-be55-4acb0bd8bf89",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd58dfc5-c5d1-4c38-b29a-bf9f143fdc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561c4cc2-4dd9-4dce-b3ba-85d39d3a0536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8fe6ac-3e68-4d78-bf93-2bbbc8e1906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11677ea0-a2a8-4805-b9f4-b568862203af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d501c84a-43ec-4619-b4fa-acd973f0f7d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96f7c6f-354e-4f64-bb19-ddb9450c7525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cb0ce5-10d6-4c19-b5b9-666e01e61e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba2da35-59bd-4b6e-a406-f3036f9e2f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d91e5a-c131-44a5-a79f-ff0d6700c502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fc5125-be4f-4e03-b5e0-303b2fd08c02",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadd1af0-70f1-4918-8469-3114e418c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d65b87c-9520-498b-b38c-7c6314759b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30ca42e-623e-4acf-a613-bd720d984567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5b158b-6ba2-4786-bf40-db369d78623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adfc7ba-c9f9-463e-96bc-4e2388351a71",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46af8f57-8249-440e-b8bf-5eba906b778e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7653f012-7bd3-434e-bb56-b55747211fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e872d909-3463-4439-af3d-83f4a7bf175a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e510900d-7589-4562-afde-362d066e66e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ac2a0d-5acd-4f41-9dd3-2d33939eacd8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0b885-eccc-4e0e-beda-7e11a41052e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd41df98-ece2-4b5e-8bf3-1c671695c520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afadb46a-538e-48ff-9ff0-411319cf531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "415f1756-b014-4d2a-859a-c1af92a7d87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3e260c-8845-4e93-a70b-6c30cad7688f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99769358-fd7d-4f20-bb54-5a0a17ae3d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe90b07-f453-4ce2-8f98-88316844f15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172d4af4-233d-4c45-a81e-19a056ef9961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc397dab-a96d-402a-8f2f-6f5bb2404834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e10c8e-5e7e-485d-a8bc-ed441eb6faa6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beb55c6-c5e6-40c8-9c58-60e4bffff882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc984252-179d-4433-99e9-1b365e70b2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d52e36-f7c2-465b-bd27-66abbc63715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be815e5-224f-491e-a601-3dc0b879588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4258a8-63b9-4d87-be5d-cce0734508ac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3675f889-dbbd-4989-8f0d-f4f1f827a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3608c708-7d47-4bd6-aeb7-83e345d5e936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2057edbf-0fa6-438d-b948-5cc62d992e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d710c15-9515-45c6-8838-4eef5a8028e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b73888a-7991-4f8d-8689-c0a06a91dd5b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba69fa8-daee-4431-960d-fccf2bc2224e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e36f1d3-8d18-4c2c-b3a6-928498cdbbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9506c5d0-96be-4e21-a847-24f9cfb6efb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48681137-f08a-4236-99e4-5783029ccd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98045c3f-e5b0-498c-a560-76e3a07b0d05",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8ae741-7a91-4670-9887-67cd653936f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cb2f5b-a285-4a0d-9813-cd59ecf56a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e6d594-9478-42bc-8e59-435c75e7c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f136fbe2-6ae0-4b94-82be-d3d5e693c3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87474cf9-06db-4d35-8e27-684811cfa82b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950aa73f-ef7e-4c60-83b2-069b700c2844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da066c3-549c-4767-8213-d389bd00fcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b7c855-7548-470e-a300-84b6b5194394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d996993-fb9d-499a-b0d3-d2f79827101c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da2abe5-496e-4aa2-8eca-47c025ea7bf5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845f8cda-5265-4fd9-aa72-ebddf37fe63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da79edce-565b-4a41-bbb5-0e29da3d1abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd35274-a860-4b0f-9460-4dab5dec0427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f235af63-ceac-42ec-93d6-a58d650e52f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ec56d5-4e48-4d8f-8dea-973d24cc1a7f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862ea183-0d19-44fe-a734-84a82e572d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2099613-036a-40ba-903d-438bc79a365a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7795ac14-dde5-4668-b001-34bfb5fa1e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e489fd30-931c-4f3d-86d0-41ba82cc4d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f868608f-58fc-45b3-b7a4-f63ecaef5584",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991a264e-8cbe-43f0-a4b1-ba397bbbe241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fa4df4-6484-40fc-b68f-4d7d522c037e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952cb9e-2bec-42ad-817b-b5acd3de10f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecd0b02-c9c4-4fa9-b875-85e69e48a89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465991ca-200d-4743-920e-fdfd843aec7c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b46ad4-305d-4e62-8953-2e3dc7071fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43e07a0-0bf2-419a-8477-4d48085d5f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e07e3ce-6e13-4820-9b61-05dd552d7ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7ab3e4-e3f0-4be9-8ee6-7fdb315edc6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67ec8f24-f769-401b-a56b-6f4cd0d6cb0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e54a47db-3000-4da7-b349-52ea4f935556",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7969c-5e87-4e5e-beb9-70cf29e58651",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aec5dc51-7f2c-48b1-9c59-9e5b3eeeab0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103dedaf-9199-4dd0-ad5d-c9cbe4a69039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c3a3bfe-83e5-4ff9-bf96-17b7a8d05d2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4efd17c-a537-4468-a06b-0308a9a729c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "620419bf-4603-43f7-93d5-55380dea1d3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75f75191-e1d1-4b54-8bfb-8acd9268b3b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37d820a8-87e9-4475-b666-482e98e63015"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b96b8b21-0743-499e-b031-39034a04ade6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3567a94-714e-44d9-8094-ec02007c4e33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e3d12de-4ebc-4a59-908a-40050ea019c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2cf6227-4345-49c4-ae9f-7b2c859cc7d6"
            }
          }
        ]
      },
      {
        "id": "5555bf43-caa0-4432-9a8e-0f6a069e4ade",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5254b73f-5c04-46fb-b379-26ed4242e50f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c89cc76d-221f-4804-9df8-0209dc2bbd0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6418479-66da-45b0-89cd-868784208aa5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9e9e0a-fb5b-4a73-b38c-b24b0762c727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eb98e5-0267-4b0e-8c24-dd206ddcc478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e51f8ad-04ac-44cc-aaf3-e08f4dbb0969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c178daaf-44ae-45f4-8aad-e53f96511a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e127c5af-541d-4ed2-8f3e-fa875020d859",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71769954-1dc6-4e58-8272-cf4659eabfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7566fd7d-fa5f-454a-a280-2b332b6b088a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bebedd-9835-48b6-b172-7d685cf74d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d6bbf1-2964-440c-a85f-b4865fd86b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aa2d39-b823-4150-9fb3-07a272f30b62",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948b1a5-546d-46c1-8ca9-81e781c3d073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7abd72c-f1bd-4a44-b3b8-94c8be1d2246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42d63ea-cfbc-49ac-b6b3-fdffc6ece8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcf4d1f-19e4-4869-9f9d-8858003eda30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8ad137-5989-4312-b1bf-8c36615cf853",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdfd9a3-d025-4672-b210-1c0fcdaf5fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6a7df4-4bba-44c6-9c5b-83710dc27ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb0ebba-e837-45ff-a33e-2a969bcf89b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa1f72d-dfa4-4c2d-9bd0-870350028e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c8673b-0de3-4069-9efd-7bd795ddb14a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99e915b-493a-43f2-b338-fb133135554c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bb0676-111c-4c12-8072-fb7f77bff5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2dcd86-dec6-4b93-a0bb-b44ded01f81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f68017d-2787-4436-b018-d21211e8fba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8479104b-c5b2-4242-94be-60c0e80358d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a6f26-65eb-4c2f-b4cc-3002df087c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781e9aed-4627-442e-a91a-d0af8b923263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29329f36-ce5e-45aa-8d96-d663232ace37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "089dae5d-fc37-4884-8d9b-a30e4fd80db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb451d81-d90f-45b7-93eb-2de2cf8ce6e3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b2395a-aa4e-47b6-8cb5-83b4bde2fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950b9f7d-3e2c-4d42-9264-4a2b7cf9d797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200749c7-3dcc-4c10-b1ca-67fda711b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a935169a-aace-4d96-9de4-e7cc9365823f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d600f8d7-d357-4b1f-936f-eed7e8b0a231",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54741f84-00db-49de-ad3d-132619fedbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dc627b-6321-4b16-98e0-3612a856c7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57e11c4-4232-4af7-8c63-b574746e91f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02fdf2a-d483-4aea-89d2-6d357667dcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1a5979-1e4d-4f28-bf77-38af2a0d265e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82b7934-78ba-4cb1-9fb7-61e2d086cde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b33398-9907-4514-9192-52a211f76f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d8774e-c52b-49a7-852a-8940b91727c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3591f480-c2e9-43e7-8389-f6ef0bedd5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89211b2-476a-46ac-a341-cffb1018eca5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645358e1-ee7e-42c4-82e9-cca75e0c71b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af627a9-bd5a-447d-b61f-99d598d71c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9dcaaa-ed97-4c94-890f-8b36c8bac140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d74b1fee-ba86-48e4-8358-37a683fe1092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f710bc7-a21b-4226-bc4f-aaf0607155a3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3873d3b8-a8d8-4c7e-97a4-0d400f92f06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1755e7-1b0f-4dab-a315-1041fba4c5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543503f1-e2e6-406d-9788-d564e2fb9dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f31a906-9ea3-4e2c-9251-59a448a52b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24b328d-6cd5-4375-896d-9b023d343fc8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec27b4b8-835c-4eda-a7e3-71216beb2470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e20998-d93e-402e-94db-2d132737f759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d16d75a-b4d2-4fa2-97c3-df13ebd0005d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "711aa269-7658-4f87-9b69-60cb888be759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22252792-f896-4957-94a8-16b03e3e5303",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e32a54-bb23-4fe0-b828-fa7633e3a78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9145de8-6de6-4efd-a706-96ddf9f91563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b8c114-22ca-4a96-ad68-4e85e2d13ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7ca8fe-ffb4-4d14-a7db-cacd0a3b5bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8253952b-ea0d-4281-aa88-0eb425ccab35",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12c32bc-14c0-4310-9a9f-543d712b1206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6296d48b-1dee-4df3-ba4a-01c7bef8e514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e8b85e-110e-4e60-81a1-c2d1b0074ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b37127-9673-489f-ada3-0a0611fe1b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8643de5e-b818-420a-94ee-8ba9a3b4bcaa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf54a60-75a3-49d7-b196-8f3c2902d105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6d4312-72c0-49c8-aa6d-e3546e38f169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798e4503-55cf-49f0-9f56-5ab55a9d9d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b2e840-b3b3-49d4-90b0-c924d220bcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5358cad-d547-40ec-88e3-8397e8ebf3b3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34d0450-1632-4d69-8781-2f1398677fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486aab59-898b-46a8-8eb5-6cfd1568daea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b6e6fc-149f-4ed5-a54b-f4167345bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaee700-6ec2-4c67-b46b-6e1560232b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7309dfcc-5553-4a78-b4f3-4d53ac295605",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a79172-abd4-4fe8-8392-625b2806dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d7a786-c813-410b-a97e-f8daaa9a9b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d5c57-4429-4d50-bc3d-356854245e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5b7094-6586-4f69-8703-5fff444abae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5c8c93-b98a-47d6-855f-109467ff560d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403bdc70-182b-4419-9153-98853da0f41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef4622e-bd8e-4a80-a83d-4161da9ff23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179a3a96-3b6b-432b-acd5-addd50bdc379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ac1dab-f61e-4837-a36d-33af526baf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f022020-4670-41eb-b80e-ae05ade108fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d36958-3558-468b-9792-67b3aafac939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3ea0e4-9243-438e-a29c-eb114f64d4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdf8d78-573b-4857-864f-02d447966170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f344940-fc10-48a2-9e12-94602b2ce930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d28311-9cf7-4357-b1d7-3a42fceadac9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edda910-a0bd-4605-a007-85515deac514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0849af7-4d23-4f83-9e8e-2e2b4fa77198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be197d23-71fe-4f29-9870-fb9736c56768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d1aa1a-d214-49a6-acee-bf54b16b8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87188d7f-cbd0-44a3-a59e-c50974b2f223",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c58c51-b28e-407a-857e-16e389466b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6028642f-83e8-4089-891a-5333ba8103c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85cb049-df17-44c0-ba49-ff6358a6fa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c007830e-0852-43f5-89f0-f5787f66e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da77b140-2ce4-4c58-8b10-3edbe06b2afe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc04f46-5b2a-4f80-9202-bff7dfa0b961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5478ed4-ee6c-4378-afe6-5774eef271b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851fdcb6-20c3-4f37-98f9-a3957396b821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e7b688-6366-4121-a8f8-63e374b2490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d410a8fe-384a-45e3-b931-34c21964eb68",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1428a45-93ad-4a21-ab6c-84527dd6e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8321d31-4a42-447c-884c-11ae789266f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee1eb51-f64b-4509-bbb7-97d3a297db7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "840461f9-6016-490e-8a3d-8583ef483f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae924da4-4525-4b1b-9a5a-96a02c141a63",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7e2a19-dc3b-48cb-9d46-a350729cd6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1140f0c6-d563-4896-8675-53d9fcacee43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7748f5-8617-4877-b3a6-abf3de1f569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25191d3e-4d5c-4238-bbad-e1a428ee0702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5513d72f-90d4-4f4e-bc36-61c913258ee0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28e6d5-0aa1-4cd4-ab39-cb6739380986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b918310-afd0-42f7-a01f-1e5344ec93ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5aed1-44dd-49ef-8703-a5a29cae1422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "886833e4-a889-484f-ab01-a891dfa624cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28065a5-c60a-423f-8d5b-dd139863db11",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d26e178-a28a-4815-9ef3-b6fc7c714f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a092c5c9-c2d4-4b55-a04b-d584a5d7c34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbb6f3-b507-44da-82e2-dc1fe58d93e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043491c9-91a9-4426-a2ef-216d4ebf51d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97033aa-eae3-4088-82b3-010fba1a752a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37de3b2b-a803-4796-b79c-bdb881e0315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c2b095-24be-4aaf-8b05-1e60e586c9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25641fc3-99e1-4994-9b25-0fde21c5b265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd5f35a-5c49-424c-bc50-f80813a63dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf96455c-f4b0-4643-a286-3f5b6bb9fc51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2c64f-89cc-46f6-a499-12a90f4c2351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece2d5d0-73b5-4926-aff9-b61c3e6e6954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e832c13d-7fe6-47ce-b24a-ac8577420409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee91737-3478-4c28-b74a-6c8b933068d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8652d363-f393-4546-8a96-8404bd9e16f8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683c67cf-92f8-48ae-bdec-3526f0fccf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71efb56c-7b76-4fb0-9e12-c8b316feb674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb92fe9-f958-4547-b709-7f72b1b34e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad2687d-51ae-4a80-a082-5b71d29405d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5895636-f604-44fb-8428-0a19ddee026c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b87f8d-d579-4a8c-82ed-fb8281bac272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cbd1bd-42e2-44a0-8220-b494aec28d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e788e77-b23f-402c-b876-735be2a5d165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af90b5bb-7e13-43ff-b8ca-f1414b349a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64ff12b-6263-4966-90f7-d772b0c3d6f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aa7ef9-d16e-4152-aad8-ef17694e5741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69c6da4-99f2-42f6-b968-05870a4948aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbcb3ba-837d-4ce6-86ba-4fb5d179d6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a6e08e-e992-4c9a-923a-bc76882c9f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae49713-9c59-4c00-858f-b5f8292c5ea8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93e15db-63e1-4f23-824b-60fd69a8d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990a278e-98dc-4d93-b495-1044a6737d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb34970-4b9f-4fa8-a77c-496b3edf2203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0f80a3-a09c-4b81-8c26-ff79bb92dd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414bf3de-2404-450d-b493-4e8d90dfceba",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d9e1f-8c7a-43d1-af5c-97233e0dc8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc40821e-e800-417a-82e8-df9bc3e5ad06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781e2861-7d9c-43b0-b1e7-2064b2f4f078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b67364-4908-40df-a5f5-a39010bcfdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28f2d0-8481-4008-8462-2e406784d83a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed4203-23da-4943-ad55-fa60bbd50af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf190923-3c11-4fdb-9cac-a07ae40d6e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945a2b53-8579-449d-99b6-417bfc54db6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df5688b-c6c5-477b-8eb4-037b4f6f281e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e5356c-1192-4e67-8c78-9dc99307bf9f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ebb2b2-5347-43d0-9f3f-bb2f7ee2e29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11d0e1b-e094-4e22-8f85-2343d501a06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b1d977-57aa-4441-aca0-eb2cb9852a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cee32c2e-0b13-4c25-b7e5-f4f77e145d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc34bc85-c774-4610-bfa8-86ab8adefa4d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0050b803-70bc-451b-96a6-35a0007ce45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e391ad02-17d7-4382-9263-aca364dab4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea62fab-7c7e-43a8-86d5-46c4501843a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8783129-ea46-419b-90e6-b2db45b68a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a46d68f-e1e0-458b-b1ae-c34b4af461dc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39395143-f451-4259-a230-2b1a6afc5dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8d8484-03c6-4885-86c6-c1158a895f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f48316-ec3d-4de0-acc4-c98bde939e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "041ae4bf-fef8-4714-b7bf-7ee885c072e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a4ab5d2-eb15-4e24-a573-d84d1ef88dc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6e33121-ede4-404b-a549-90b1ebc7a4c0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d85f2f-8919-4bab-b0a0-98f1a8ae84ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b98c0668-e10e-4223-8ef0-46aea341b661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866c8654-3b25-4543-951b-c4e9679714db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f927be2a-4287-4fc5-b6d0-71dd907365df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc3c208-3ba3-4bb7-b420-9e391dcc5aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29f64390-d2d5-4a58-b408-39c0a4e2c226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7d6c45-23c6-48d8-bad8-f38d22dda43e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a00a26c6-b50d-4ba9-a897-23e707dfd154"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e9a4ba-d64d-4e92-9966-5ac5a03100f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65f41470-c0ee-451d-955c-921c8fc76d58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ef45232-2262-48ab-b47e-93f8473cc8b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3969e39-348d-4f6a-a076-3ff3b579d9e3"
            }
          }
        ]
      },
      {
        "id": "aa41490b-164f-4ec3-8cbf-99d1bc5fe8c1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "876ac703-e5e1-4eb0-9e4c-af8f400103eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b60f0f2-3aea-4b3b-ab3e-86dcba906f19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0875e5e2-a9b8-43de-8d15-cf4cc01ec1ac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1fa151-5d28-48f7-b2db-b1591d35a141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe56019-9474-4c9c-81b0-f2152960fecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2394a79-1856-42aa-a5bf-41945b03226c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2470175d-0d1b-450c-b648-be5fce519967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4c1039-01b8-49be-94e4-e00a81b2189e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0229fe-6bcf-4c16-a840-dd17cddd7c4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58230619-e2eb-492b-8da9-5a759bd996f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb6db47-b314-4369-a0e3-72d330c2be2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0ba381-33a5-43c6-893a-166748fc7244",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc374ca-7dbd-4035-9d13-0701090353c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a7c72f-c768-4491-8fd8-b1ce27dc0ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522e999a-fa81-4a17-aadb-3b681310978e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38f3dc1-f14a-48f8-a5f8-3b75b717e523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73871805-d667-4acf-92b1-9079bab00309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eba919d-a47c-43d3-81c7-b1cc796a76cd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff3975-e2bc-4caf-a9a1-366e9798632d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a113df7-3a25-4d84-82e9-25f1527503bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c02c465-e6a5-4ffb-ada4-bc6dd2f828cd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd504c4-86ec-49ea-a959-3bbff97d9578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243eb270-3975-4605-9cb3-379aae073402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cdd2af-02e9-4386-915b-9ed9666d8df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fde455d-d085-4338-b134-f292fe005323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15afd3f6-db48-4087-a71d-207fe6e99fb7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4289d7-8349-461e-8d05-b38036da3232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b194af3f-7965-49a6-8ac7-6d71d5c4ff3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa7f50e-08cc-4a35-937d-e47690cfb29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f5db18-7ca7-4d3c-a2b8-0f66d260e771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb53892-8e06-4d02-abc5-c048cd6ea08d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7cff9e-f3d3-4c28-9062-5e68336c7fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2170135e-9ab0-4110-a37c-19db3111cbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec505041-1810-4045-b8c0-d7d9417d54b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b8e024-c57c-4650-8bec-b75fa2a0dc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129435d1-49cf-4376-b1d4-7e7588fc84b6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf77406d-e897-4ab2-8467-9664a7ed8166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671338a9-fd4f-4990-b51d-eec636b193c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41114a0-2460-469d-845f-e386afc08fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8187ad-c0ca-4e44-92e9-2c97e6897196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c970900-d759-43f1-b727-044aa772345c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1dba3b-858d-41ad-977e-7f6c4b6e7aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dbfee7-1da0-485c-90c7-8c98e3eaf570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc13a52-a6b8-41d8-bbff-69f4f5356079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b248d2e2-de4f-4b84-aec6-dd5a8fc8538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467163b8-285e-4599-9a9a-6c7ec2fe670a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064c6d4f-2108-4bdb-a0e9-58070d5ac6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eab3e3-a956-444f-b79d-5c196e2caece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24a91d8-d858-4717-9f60-06d5f6b852bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e1efb6-1352-48e5-bb17-f66db04be647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58984eb2-dbcc-4de3-a331-4ad3348dbbb3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0ced82-c6ba-44e5-ad7a-bfd49506f255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2938dea3-b473-48dc-bf32-e7fc402e22f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f115e-fb4a-4c79-b330-f72d2e1ec381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c33971-a240-40ec-93db-b4baac52db43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d360c11-837e-4265-a730-8be916ec235a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4a4e53-4b58-485f-aadd-0e3ac426858f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf467a3-07f6-4e08-859b-3f1e14da7f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9d4464-21f4-46bd-9036-9ea0f118351c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06a808b-e4c2-4332-a2a8-33add6feba8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad12c4f-1f7d-4750-84c8-b5aca94865a1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc3078a-ae95-4869-9cea-2c144bea071f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd59af1-cedd-4d83-8ccf-15aee5655c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e1b863-5f51-4a2a-9f9c-c64b21c3c732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7c2f71-2aee-4460-bcb6-9059c6e4e28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e59906-dbae-4787-8a42-872b09dd4334",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29c2756-162d-4f61-a9ea-b5535ca15454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6df3003-a1af-44c8-bad0-9de249e299b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0a8ca1-55b8-42bc-a0e1-bbaf85651014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77341183-79cc-4600-a648-be12cd52a52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7138daa-b2dc-4679-a846-67b07bcf1f85",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40202e63-1cb2-4f3d-a317-4790766bd687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2314e296-1415-48b9-b07d-a2695278ba50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e648be1-ff76-48c6-9a0a-0cb23b93d9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99ee161-04c8-4b23-aeb5-b10992a03281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac92c3a-ef13-4d54-a036-17b33f5f2c8b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d5641e-41f9-4470-bfa9-7da8e9c3dbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc9784f-aad7-4533-b6ec-7ef2f151ce85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3fa957-3c77-407e-a422-318328c687c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337220d9-5278-4042-ac63-8d7051508ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a996a845-ca40-431e-92ab-571800a50071",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391535df-e58a-4d4f-bb3b-d86a90a9a635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110b2d9d-01db-4667-9e63-6b4648692355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f40fde3-c749-48f7-96f3-312864eb691e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5d07b1-57d9-477f-bb59-fe4d386f34a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436fb1f3-c6f9-471a-ad78-270abb4f3c7a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb3ef77-1060-4c35-8d76-ce2d3b51f628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32b07f3-37fb-4a85-9a5f-58865e15005c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03499593-322d-40b3-8540-6907f3190e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70d5523-34e5-4c92-bf48-31554208a3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7f6012-dcac-4bfe-adab-82a97b7043cd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56db5b2b-59c1-445c-8ac5-bfcb01eaeb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd02e6d1-b574-4f85-9f96-5c47f1d26309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaf5305-749f-4848-9642-fa03e33acdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e603ac-5802-486e-ab3c-04ad0c9383fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79414b1b-c782-4fb7-b4d9-edea01d2ce02",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a2fb6-0dce-45ff-894e-3abceb9dcb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e865ac0-0fd8-415a-a8e1-dd502ad93773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b1b4bd-51eb-4a89-8172-f47cda4df764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e05c6d-113d-4419-898f-831987fd9b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5d2433-ee94-4944-bcc4-cd680f29041d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f309321c-5c45-4160-835c-6666f4d61678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c7a208-2b60-4489-8f5a-7979b7aa172b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4d1829-7830-49c2-9f47-cd8acf51b6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e69827-5408-4ac0-83f7-10bd3350c58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30d19aa-c0eb-4023-8123-0bb35a71fd84",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a50e4-928a-460b-aef3-e2d444830c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70306221-0e45-4918-a6a0-69ad21e409cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69155221-bf1a-4ff0-bad1-1a9c1848e304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b42922-d236-44fc-8409-939e89913d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1bfbc6-81c1-42e8-bc90-e7655ff79204",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2118966-99c3-48cf-ab92-43d992e4f51a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a157f5ef-09f0-4d43-91c1-f4148d564f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed4112b-8da2-4bfd-a997-56e95ff3db83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bf732d-5841-40f8-bece-b266f1e4c28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1995f82d-854b-4516-8b1b-9574a50b7be7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a8d9b1-58ff-4511-a2d8-c0b31598e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4117228c-a527-4591-a297-0bc082a6cf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48f534f-2bcc-4103-9ced-ce0b6930f1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabeb77d-4d29-41c6-a2c3-880c06329e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2ef334-ad1c-48e0-8c97-8a39e85c44cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52642011-bb44-4d20-b17e-8e7e4d579097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ccddd15-7b5d-477b-8018-1d80a77a7aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa51f6-50a4-4502-aebe-ed238f9b0aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb20aa36-50bf-4931-bdf1-9491553a27be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cc3b4b-06dc-4ef6-acd9-6a42347a41da",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3cd49a-3be9-486f-89f7-b1f1c6ffa900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d34b465-1edd-4e63-a4d4-c81f65313236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0bb214-a40c-4a00-8682-181846012b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810fa3b6-d80b-43a4-87fe-93087f5bf6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4a27b8-470c-45e3-8011-16d1b8acac5f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404cba8d-26bd-40ae-a081-2e9941948451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a286e94-d4a6-48e7-9f64-8f007b54608f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c874a16-7424-40df-90fa-030594577be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c01910e-6281-445c-b334-622d9fd8e0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3bee0f-842c-4d09-b0bc-e394557d4271",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234b5ae6-108d-44c4-b390-5e71bf3ec7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0a2e38-943f-4de8-9394-96bcbcc97039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbe2239-c835-47f1-84c6-cdc8d2833976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb271e51-9624-4c80-a9c9-4c41b8dd0a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f06e4e-efbd-4f52-87ba-f713cbca5a4c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f7cce8-4d9b-48b6-8318-2f08f817621e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19306cb-3fcf-40aa-b521-16b41d4ce7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4df344-53b2-48ae-890d-ec92f93f5c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ca9b98-723a-4380-aea9-6f04042641b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598ab519-92a4-44cf-8e54-55e101508fb0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a47783-ad3f-412f-bb31-71f0cd04721e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4f275a-6a69-4fd9-a975-73aab3f412e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bb3f08-7d18-4ac5-816f-ee7302d0bf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc131a77-6712-4718-9700-32d5da3315a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88416b55-265f-4208-8b2d-3886ef10cec4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1ebbcb-6926-49e2-9da6-ead6505bc448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318498c6-7525-4a0b-a9e8-1e35d8be660a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b246ff54-4ad8-40c8-bffb-4e5182c9b6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a86bd0e-4270-458f-8b8e-10cedd7d89c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd143e8-a2fd-4adb-b6ef-506fd020968b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ae4cf0-4148-418e-a982-2754313b19ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93db8a6c-9282-4377-8ba5-85f81187745d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b26d90-0f28-4363-83cf-8984c5ae2bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b83148-bd38-4d39-b214-51c1530cf391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69055088-8e4a-403f-807f-5d9cbdca4786",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0c589d-791e-4255-8486-9f4fdb20d07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af1a653-c896-4d45-ac63-f8a5305e2aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fabff67-c463-4e34-8d03-c9de804e3b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afbfee2-9304-424f-be7d-0d9a9c67d091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95bc01b-16e1-4910-a230-85943ed86689",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1c1cd9-a616-4874-a868-c4cb2df1537e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24b8bb1-6812-403d-8bca-5e351b2b980e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef99181-b24f-4b0d-ba17-f6d687a8fe39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65452a2a-5212-41c8-a997-8b8cf676a51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b3f4c9-e9c4-4d23-b8c3-76c7550b6f48",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525a2fb1-c092-4dfe-a9a7-e2fbffa523ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8518775-e376-4865-89f1-3ae28ee59a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1474da-73bf-4933-af20-83ce040eb5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eac428d-0231-45b4-ac0a-40a40f839ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f095632b-4f1d-4d3a-ab85-cdec0e63c904",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821bb18a-fee3-4247-aa31-7e039a743733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a73534-1d15-47ce-9254-977447d63a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232879fb-8787-494f-9113-6b510289dec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb06ff1-5cd6-43bd-9e96-6e887b26e1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37051fe3-3c89-49de-88a9-1c0cfb8becb5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845ac9d3-300b-4912-8bcb-7346add3bd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69eb519-79d7-4eea-978b-12c6b6dab28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4675fd-9ad4-47fc-95e8-f11dcb10f704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e53a6e6-2863-4a49-bbb0-9e5c3802ecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd1e436-33c3-46ec-82c8-02a63b8aea69",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1367411-c2e0-4be9-8aa0-0171168e52b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f7ced6-eb5c-4220-a0cd-e8b83541afd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51ac963-839a-4a97-92a1-78420e1d7e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fead3e00-b1d2-4c99-8757-1c45dfdea6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9b0d47-acd7-4342-925c-63a8e0db1be1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8f33a8-5897-4eb1-a356-4a775778f4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32f1af4-4e1d-418e-899d-4cc4d1f24942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a18ca0-0c49-4028-a000-c2c2b5e5486c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef14c0e-5613-43f1-b97f-06d3e3a9362a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749ab0fc-b067-4e8c-a3b2-5af4c2485de8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2163ca40-b232-4094-9892-eba1030bf192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8891bd80-db5e-4d0f-976a-805d7eea499f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f816ca0-8f0c-41e7-a561-e97e062c033c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14771a2-54b7-47d0-9059-cf99f82307a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024c3747-687c-40ba-8b2c-2184945d373a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87a8498-bfa0-401e-9125-60471110b3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a481df0-4efe-4f8e-a2ad-9073c059acce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4879f4b-6aaa-4bd4-ab90-023954d8ce79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf9bcf1-4d42-47c6-af14-ef53030476cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceae658-0ccb-4680-862c-b9318503475b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44971304-c89e-43ee-87ae-892081f24ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e99cc8-48e1-4b56-ba17-a9a85fc4e138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8889de-ee4f-4c71-b88b-0cedbf94af57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5946754f-0ce5-4c0b-adf3-a2eb1e3fae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6591c4-27ad-431a-b704-f79e345dac56",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4190dc0c-e2b8-4d02-b2ac-543d04842639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0074e42b-5903-458d-aaf3-a34c672a4273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941f3b17-6ce9-4a68-a040-da9177d8e199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f3fb61-8da1-4386-aed0-8cd94015d824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc257c8-ccba-42cf-b230-6d17b962ec7f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48645b3c-8aac-4cc2-bea1-3240b07dfbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace9184c-e3f5-4393-9988-718df9f9b80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe7f42f-600e-473e-9f91-4a75533d5b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181655a9-0b18-40e4-b629-fbcbffe61680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a5d0c3-0d6c-4792-bbfc-cbde11c46297",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8744c8-317d-4ab1-902a-d4985b82e65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378e988b-a81f-4a5e-ae05-ea7aeae81780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61bd3c2-7a9d-43dd-b560-4e6e342da647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6047aca-4c5d-4e14-a5de-bbeb09295c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111a3b15-3b33-4159-9674-4f9f1fa518a0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768de465-712f-4236-9c83-b1e6fec6732d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a6a881-ad26-457c-90e5-e9bf8d4cdc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62507035-9681-4960-8cd3-769a5d5b04db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77461c3-521f-49ad-9dc7-e6108e574076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceb50dd-71ef-4641-9089-eeac81b22acd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b1c94a-46e1-4d12-8c53-2a3fba370493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028b3442-0cba-4666-976a-c54337cc9a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb52a9a-9248-4106-ac8c-5f4102e087ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03db117-79d7-4ba1-a107-ba473c80a394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd167d8-87a0-4da2-9ca5-9a8b75369955",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72f5c1a-8ff9-4848-b19d-a241e744b282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde83060-874e-408c-bc77-9f50e29b9a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5777d9b0-1ecc-4ffe-8f74-ae0b0f1f4518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b49f2f-1183-43c8-b6eb-2025c3517dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5ec79e-e769-42fc-ba97-051b3f50ad76",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285cc4b6-ba5a-4c57-8a12-4d2b5d27b81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6b3a42-caa4-490e-9fed-3a9780f17abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593a3070-4ca9-45fe-a3ff-b39c36296eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9290205b-8d29-448b-bd96-a853d93d2873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90411ea3-6aeb-432b-b0e3-bb0210f543f2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ced1d-5c44-4bba-9aa7-dddc752976fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edb9069-a512-45c1-9552-778d2df3a1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942344f-8dde-452a-846b-37215a221918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ec2f6e-0747-4ef9-aba1-064669374119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f3d741-b5a7-4065-8939-d5ac93d9f092",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e1bf89-79e6-4d94-8681-11b243d7cf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a76e4e3-7e09-40a2-b522-1eda324f39e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee609228-d02c-4eb6-b2ce-b7ad6df47637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da900df1-1ca0-48da-b9be-e7ff8ee38741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fce5e05-21dd-40c5-94c2-bcaadca6f2af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4863dd-e44f-4fc2-8e0b-a7a14e4d798e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f8c5b0-12bd-4e18-a4b4-6f37cdd14283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5652c14-50dd-4e2e-a995-ac5f48c97c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c39069f-5d5f-4b09-975b-925d6e1dbbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93527473-8b9e-41e7-8a63-0db0a6ddf054",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6f5ff1-e5d0-4346-879d-594168cdbcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325c2af4-b3cb-47ab-97d7-178d36a79bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dffae28-c662-4acb-82a3-91478e1cbde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca85ac2a-f6c6-4879-bbbd-941b2214fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f124cb-56de-430f-be94-8ee2b152ce52",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d9c459-00d6-4439-877f-32e06092c8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568f4126-c908-449d-a996-d10c40b8fbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871ad56c-04aa-4214-bcaa-30f44bde4087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17e9ce6-6c07-404b-bab0-d84223cded73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8f4f5-13e9-4366-a02b-c7a5b544c974",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eba382-dcac-46e9-a73f-bf768e3329db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f18748-0393-4eaf-9a32-c52c6c8f3202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cac9479-7626-4e52-983d-3ecea8e45c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da582372-80af-440c-a34b-8bf942fe8648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac39b13-34e9-44c1-aac2-d93f8cc38aa6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02604bc-ffd6-4501-a81b-e4aa3fad3885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668486ad-befb-4c5a-ba8c-fc52b9e2ba75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266fddd7-7d60-40cd-b60b-ae83c656b3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0917e5a8-59b3-462c-b351-3c6795990eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aa7154-e8f8-4649-883c-cb712529a024",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3187b3f3-1a12-4052-ae75-137dec1380bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af9ff9a-110c-43ec-a049-e36a1c840419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc24b8ae-11cd-4e9a-b03f-a4285cd28b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb5115f-0f3b-4d8b-9127-b7958270594d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c222aae6-736c-44be-8d0c-c32addbefc82",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d418b01-1904-40e4-a90b-fb2942695e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb20ba1-68d8-44a7-972d-8d088f52bc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5483f7-f475-45df-90b7-3eb668d9cf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a17f6e-47d0-4795-9c02-ba42dedd88fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043610d6-aefc-4ed9-8fc3-07fdb303c5f5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5d893-1b57-44ba-a2ac-c240742d0feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44315cd8-1c69-472b-a3af-bdefcb934810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723665eb-519d-446f-9dbc-1325d9b783bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffe3b31-3028-4d44-90a8-9929491f3cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32fae0a-3dcc-4420-9736-2fb443967fda",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95451b98-2f98-4f2c-860b-38b3a8dc1d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4247eecf-c5b2-4cf3-968f-1c8f38d53a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aba2dec-37fa-42b6-9847-ab46a6b0e493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4051845-9d38-407a-ac44-25724a06044a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d2ed27-30d8-49a5-aba5-1b2d25b10462",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c452c0-15e5-4563-84d9-c55d017b402e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1feaf85-4c63-4f39-baaa-4a815c384b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afb0021-ecef-48d5-95d6-1b4384b406e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a14e7e1-a146-45eb-9227-6a069db447e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccf2e7a-c923-4c26-8c14-2c1962187868",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e84d00-1e14-4c6b-8296-8a80ba0f4e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b870320c-746d-47c0-a3a4-afdc547ca4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18357e9a-e647-4673-9e65-0ac698e397a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85513f7-c1c3-4a87-b0b4-d33d09fa4732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3bb0bf-5ec7-47f9-83be-00dbddc3d7e8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fce837f-2a89-4ad0-abda-831cea137578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd553f53-4e25-4036-88f1-10f3446c0447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0d4933-32a2-422f-8f42-9651b961237b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f840b4-cfe2-45e9-9b57-313d8ff610c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca14eaaa-8a7d-4cfa-a7fd-76db070239d6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53807ff-6743-4310-a0cf-87212f2437e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e008fb73-1a9e-4592-aedd-6d7b06ce7a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffa300e-ec1b-4fa2-a2d6-51fcdb81739d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a8662c-1ac8-4b3c-9c0a-e0fed038de20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4ba6e-9a49-4929-a97c-9b0243a07f4e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd316a2-e8be-46e8-b881-e8dd520438db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef3079f-e6ff-4c8e-9e37-cd7222f8cd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6724fe-bff2-4ef2-926b-f91bd242a947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc80a9b-a0f5-4af6-8bcd-4b1fcc0687c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5be0045-2f3e-4456-ac81-ec410aa66a5b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0470786a-56b2-4970-99a3-a9e6448e5324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ed48b6-09fb-4b6e-a915-2f1672dc6c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f48f85-ff30-4a6a-8a3c-e09d0ed528ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c21056-e625-4489-b4bb-5cc24b6dbf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9ec648-ce0d-423a-b086-741c491e5088",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b6fd41-7791-4246-93dd-d1c6beec4d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc77aa8d-0eda-4b81-b785-a01aada9e49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3df05-2860-4b8a-a95d-e1cefdd13762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212cb937-fd9b-4f50-8588-e71dcd28408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dc8f03-baf4-48b1-9012-418e1fccf118",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cbda5b-c479-48f7-afe4-0f2a6569a84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f829cf25-6c08-47cf-a92a-ec0ceda25cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a806cb93-53da-4c33-a27d-e53cc6c5eaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa69b026-955c-43a4-b73d-e84d8d643b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692afc1-ecfa-4c5c-8d38-e8d6d6cf560b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14365e23-53f2-4ccb-986a-b0131fb506dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b838b619-1f08-4f84-88b9-f76746106df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8bda08-a2d0-4000-94ba-ff8970ff0034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437a6ecc-e2d7-4657-b32a-d70f38b7a1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386398a0-e9d0-4836-b3e7-71bd794f63d5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdc2af8-d73d-4dab-9f94-6a4e6c35052f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67bcc79d-0fbc-4608-8fad-d64cd4a6cf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e47cdc-e8e2-4b62-9708-61cad591fbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f19231-35fc-46a4-858b-13f9e2c91d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab13926-6a1c-447e-a6f0-96a238b4b4a9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea99dbb-a1cf-4469-a8da-b8211b69eaa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad988f73-ac20-429b-beb8-05b28cf770d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88148bf-4dd9-4b45-95b4-4d4d8a200a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649b0220-cfe6-448c-bf42-019405e329b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da357ab1-f958-463c-a1a8-807e1bec353c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d70fc85-225a-4d23-b9a4-71aee33e5f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56941c5e-4bda-433f-8fc3-bc55e7f0a0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e80c3e-e080-4ea8-b018-27c31c071c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a52f03-f441-45aa-adce-b7cdf108ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1558bcf1-3259-45b6-89a7-5ef949ab1fdc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf1683d-d6ba-43c9-8769-97f412a56540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3efb4220-25f5-4152-986a-38bed72ab22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34546100-52d2-4d3f-a3bb-94b3274195fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec38a56-3a86-48d0-bc8e-edc65c7342a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06c7dfc-52cc-4ece-bfcf-508370bc7f31",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c545a52-7087-4d6a-8270-a0249ef6bcfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c113c8-b02d-48f2-a175-4eba402f7c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df02f2-38f7-4534-9eb0-11d36558120d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff716c88-4bf4-4347-b411-6809699b834e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1082b8e4-66ae-4383-bf98-0905e1715ec2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a512cc72-e181-43b7-9074-1d4a0879fa51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22424dcf-e7b3-46b1-8c30-a876f7a6084e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67438dd-4418-4dfc-b52f-5a650438af8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22a2753-1075-46d8-b6fc-88defec05ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e62123-036c-4b1e-bd16-4dff8524fa93",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c71e4d-58a3-4f62-b7cd-67ce13601a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3e9bfa-8899-4808-ad53-3245adcdd034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1854cff5-74d1-499b-a6f8-f30c37503a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7199ac76-28fe-493f-8191-292802964931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feff973-af4a-4c3a-85de-7607c62603cb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad39072b-28cc-4604-be7f-22a8ef14252f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b81261a-2af5-4ff5-89f8-954c79cfe354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47a83cf-3839-4c00-bbb2-295870689755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f35b7eb-ae9b-49ae-853e-ef9b6d6f0c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f6f2b1-bd64-4f1e-a1bc-8daac4747344",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0406106-d19b-4346-ad08-3a0ddefe8066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f503a4c5-b3ae-4a1f-9b61-159741ee3870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aed58e-d6f8-4a03-bcb1-ea22d6840e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f91038a-23be-4af7-ada3-5164ae564066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f444391-c351-4384-88bb-6fa667c01004",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6684e7-557f-49a4-8c29-f1fc633e5413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4d21c1-b0ac-4d41-a990-5c062fc10e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a777db-d93d-47b6-b3f7-b48cfaef5eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09795aa1-9055-4e66-ab98-dedd55d42c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c8ab70-c213-42e3-83ac-f9abc15651b2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fb0bff-b118-4491-850c-8639741d3d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cadfdf-8bde-42e8-bf9c-b48c44d39389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06bd205-a2cd-4db3-ad5e-4fb6fe1a017f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c401527e-aba9-4a95-a433-e43801a661aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62815c4d-3980-484f-8c13-d4290f4a26c9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63f88ed-3f44-4330-a8b3-271a2e22487f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a3ee809-d1ab-4a51-b6fd-6ca78a4fa99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c93ac25-4ec7-4a40-b798-c18e3f22ac8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03991466-6fb0-4def-a93b-00c46d1ae78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f039c86a-2e59-4c72-8510-342fa70fe976",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b06193a-276a-46f2-9a42-fafbc82a18f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a326b3a-5fc8-428e-88fa-4fdc7d3575f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0829c9-2890-49a1-b11f-c523da930afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7946d397-cb90-46d3-8651-3c1993739784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca3297f-693f-40f3-94ad-bab1e3e482bc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341fea02-bc1f-4205-bad2-5d18b9430eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2568d6d-1b4c-4160-bf13-7a79e893dd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d3d2b2-6360-433d-8af0-de60d8505e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b95b6d-575b-4eec-8922-4ff46ce39a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224acfa1-6101-4fe2-8e41-2c46237aeb6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc032b6c-b50d-4f17-9f42-897bb6ead1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e8cbd1-f308-47dd-8cce-4a0e526b8d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b962628c-751a-481e-a79d-2903a8b98734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434deb06-9b78-4f14-b52b-86aa6bec6768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089d92f2-8c6f-4b2b-a05a-1325d82b98b2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2194f29e-289d-40e8-9b07-a321ff091227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebdd0467-68b8-463d-8f46-7b344e46d587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd9adb1-e933-4077-800d-95c4b9900296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39107c7b-05fc-4df5-8717-3f07f30796ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea8eca9-c7fb-4217-8d53-a9ed2b577ddc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b284eb87-e753-45e4-b205-ba33b67ca6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96b9250-d48d-4f98-9c64-4c1613665ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7952a31a-7453-4aff-9176-8ac747e68282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020a3910-3c82-4ccd-8cb4-e92a0395d615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa0cc36-6cf0-4e56-b463-f1f25d798c85",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974e5ce4-1818-4cd8-ba4e-16122eb35a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59597483-1eb7-4345-9ef8-aefecefe27c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38552fc3-1767-4f0b-93d3-467c3dd11453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7307c8-ef76-40d2-b4d2-b1fdd97ac881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9590d762-85e8-48d8-9ee6-a202c1ad6eff",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e8ec0a-1a87-474b-9b06-69a1ddfd0bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de778f6-94ce-4d81-ad81-05f44e5d006c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd71ee14-3b05-4aa3-9bd7-772843cb20dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26364793-eda4-4334-ad10-23f47e5c5a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a26576-f3ac-4780-a91c-9d836d9ece3a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b8b079-10b0-4434-87fc-0722873a6808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2622df47-02c6-4a99-913f-0cfa41c22aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a3cbf7-1a48-4d5a-8e3e-b31833d889e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8f6c24-3838-409a-aea3-d3621bf6d16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0adf6a7-77da-43e3-8f37-0c5d13c65fa1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1633f10-432b-43a8-8a78-7a6efac854b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a670bc1-9ad6-42ab-afb3-d3e363cc0bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad706fd-d8e4-482d-9819-d8e622fe7a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebd5986-a090-4d40-ad27-132db2c499f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c005f078-1e7d-44f5-9d9a-0741a10d8f15",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d73c07-4011-49b2-94ab-323c6da4be70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26ef418-c1c4-451f-88ae-e3eec6d5a545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0419ac-9107-4d08-9ad3-4f5ce2055a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdbad25-91a4-404b-a660-44f50880e960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67df58e3-3dea-4d87-bced-1e45f7b223bd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8478e80c-c9e9-4880-ac0c-2babcaaa05e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2688358-cdc0-4742-8668-03f947f8092e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe5d91f-c431-4e38-ae73-1aa20160d5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a91e7a4-af1c-479d-b107-129a31acc053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bc3017-3c43-443b-ab19-147802ea578f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a28784-daee-4fb1-b8b1-dfa96ee5205e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0eba5f8-b54c-46a7-a166-b745be97e091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb08738f-5b17-4449-b2b4-5c8acc32606d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546b6919-9625-4dd0-b657-681ce6b70790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1368ad62-e5a1-4ef6-aa0a-2c9d8ecb7e7b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca81e6e-989d-4cb4-b2f8-74201e266d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f6d311-2717-4506-888a-cda037107813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6b4b26-d59d-445a-9bbe-30fd586706a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62e1d29-d606-4180-8e33-6e03f9fbc25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c35748-fe58-497e-9c44-dbe3651199bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea007203-2c8f-4217-baeb-00f178d200b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c222759d-aa24-448e-94dc-860b1db2ae33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882acb55-affc-4dc8-938f-c765f3862483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c719c57c-e8ab-4071-8a91-06d5d0d3b114"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b9c3b4b-3909-46e7-9166-8d274cb2523b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32d03a9f-72bb-40b2-a58f-e2cb59deeff4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81045c22-bbae-4bb3-abff-c97566e178bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f9f742-42e5-42c2-82b0-e4e52b843a92"
                    }
                  }
                ]
              },
              {
                "id": "ad84a5ce-bced-4463-983a-1b19072a3f1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14d31513-0fe0-47a0-8550-45ff3f841cb7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba72655-7cad-4e2b-a641-ab4b5c692e3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0ede13a-4b76-46e7-bbf4-b6105e9eac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b30864e-8900-45c7-ade1-117d69dcbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f416ec3-2995-4922-970e-a477cbf862c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85917e5e-23dc-406f-8f06-de8848eb4974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aac68b3-0359-492d-996d-ebe19f9a9b06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b56fe70-4f5b-46c9-a520-ca4e3ffb463c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51abf3ee-87e9-4e9e-8211-c74de9b0368d"
                    }
                  }
                ]
              },
              {
                "id": "e00bce4d-177c-4146-8f30-a9064a61421f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "19d76ecf-f2f6-4acf-98c6-55de45363874",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e8d68-5a4d-45cb-a1e3-1108d1576246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3d9586bd-066b-43cc-bb11-fd4df38ad9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cc7202-3784-4043-8d89-5c41cc2b328b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641fbeb2-ecdd-4826-8739-e37082f2557a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f45c7ca-2246-48ff-87b1-322b5c35dbbb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a265a147-5a07-4c0e-a47a-d38107fd3ae2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fe117be-26e3-4c60-95b4-c769c5f28123",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bd2bb862-043a-4b4f-8537-30544d70692b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3990d6a-758d-4103-8a54-bf66e1d4a471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7e4049a-2aca-4a7a-9cc9-ed0dfd609d22"
                    }
                  }
                ]
              },
              {
                "id": "5960c557-ace5-4968-8e17-9b9a6d8c41c4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1de0c89a-4396-43f1-8df3-69f527d34c75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3dd3e42-3a1f-49b2-be81-ac7d8600124e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e294aa9-5c7d-4de0-bf90-bec5d32c895e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0445973c-be90-4c8f-8a89-996ac2784798"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09823024-2d3d-460d-a881-2b6f6d920a29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d04018f-d7ff-48da-bed5-5949af077e6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1bf8e06-2b59-4812-9a13-d9467f4f3982",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a4f87f9-bf04-471d-8b7d-801b089eb737"
            }
          }
        ]
      },
      {
        "id": "e0334128-5653-43f8-b8a2-b99db729c460",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "30a5750f-ac2e-4402-83cd-6a489282c210",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4946e8ec-d8f6-494c-845f-6668ec9ec834",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b725a1c1-d3db-4ce8-924b-c4273d442354",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131bf991-de70-4a4e-8080-b6b9a427aa3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2a29f612-13cc-49fb-960d-1cce761e2cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857b8543-474c-4db3-af08-e9091bfe8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c536ce9f-c751-4124-b3c7-6ad20c389e18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "619534a6-2de6-4cb2-bc00-568e9113e099",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ac400d-1efb-4d72-a802-f6b8640e4d86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dc010f5-2ca1-402c-a91d-877e90ec010a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ded0afd3-bdcf-4d0e-be60-e946d178739f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "923fe8ba-9d0c-4e9f-a1c9-f03a3ee78c87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4c64636f-ce19-465d-b097-e50512192af4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd357476-5b2a-49d9-9718-153469690e43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98034b75-b4ac-4b51-bdef-3bb82ac82629"
            }
          }
        ]
      },
      {
        "id": "10598f5a-b4ac-45e1-9d6e-03825ba8aa2a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "18caa6aa-97ff-4a22-8dda-b6ae7032e9b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2916a512-caba-4f24-8bdf-4952097ff91d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5b57c4d-54e3-4242-9792-4710b3cb7b10",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fae52b-781b-48df-868c-ef9d23d998b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d20286c-7f11-4ca3-a949-38144a56efe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0ed4c-b9e1-48a5-9526-a0439f816e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84995855-30fa-478d-b02f-b2f3881ee572"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8d7c22d-2036-4e16-ad1c-3163a1bd23af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff7ad46f-695b-48de-9f54-763d9d205776"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e6cda90-b4e9-4bb6-8b7a-5bdc984c363a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e46286a5-406b-43e4-80ab-bd9f86e100ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6af971b2-b231-4f19-8744-59abb8da5158",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccfba669-3acc-4ccb-8c31-33bd78ff992f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "702acbff-66e6-4e73-bb56-88f13455cace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edda602d-9c30-4a76-99ba-9a0200836689"
            }
          }
        ]
      },
      {
        "id": "3ea2524e-2378-44f6-ba95-3f55eb3bb8d2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1f54172f-acdd-47d8-99fc-b22664f01b71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf1108bf-7733-4729-b0f3-a78f9d0fd495",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a00eff9-ff86-4f10-8970-0cf0f7c4eca2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df932ab-e817-49d3-abcf-0f73b783663c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96aae97b-e99d-43d2-8234-5576871a6741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9d66fa-0f8e-4cb4-bc95-fd9c3e6c9796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "108123b0-7169-440b-878e-a8c69905a5ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5756ecc9-336d-44e5-bb8c-6bccb940a900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bca9491f-f4f6-483a-8b2c-4911c44d0040"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5185c2f-64cc-4dbd-a4a6-22f11ebe15b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "919f8235-6a28-4a97-9930-f0e3541c395f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b821e2d-14b0-4691-af7b-ae69795540c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1f4f062-9dd5-4530-9977-dd34e7d3bcf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dca6c15-184b-4985-bca9-2559ddc4cb19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd742122-d4d0-4fcf-b1f7-ef99665d3534"
            }
          }
        ]
      },
      {
        "id": "3a0081b2-07e0-479f-8e21-444188cc15c6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cd5a0ad-4cc7-4553-aff0-83a763430c58",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec7eae00-2994-416d-a5ad-076c7823e623",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "82536c93-2c13-4564-b933-35a98c70cbcc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51e2627a-4332-4971-b341-f762d295082d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5320847-2ace-4ef4-80ed-60e7704cad47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 123.22105263157894,
      "responseMin": 9,
      "responseMax": 3180,
      "responseSd": 360.1167796637409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705279082923,
      "completed": 1705279127419
    },
    "executions": [
      {
        "id": "b26d12e6-a610-472e-addc-ae29e7b4edc3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2a8ef888-f82c-479b-8453-9197a44e4260",
          "httpRequestId": "6c7e9612-6d9f-4e83-aa98-52811299a5fd"
        },
        "item": {
          "id": "b26d12e6-a610-472e-addc-ae29e7b4edc3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6e119a3f-2fa6-43e4-a652-27aec7639fbf",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "c82f46ee-2187-4f3f-99db-294e23a078ee",
        "cursor": {
          "ref": "12d5531d-d5a1-4996-b696-00c47f5d1194",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19603ff5-ce08-4f7d-8c23-527ea93f7c9f"
        },
        "item": {
          "id": "c82f46ee-2187-4f3f-99db-294e23a078ee",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fd5cd154-bd4f-47c3-a2a9-8b00633ae03e",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "1d8db66d-715a-4259-b18b-1257e42c6791",
        "cursor": {
          "ref": "990b50c2-3ceb-41ff-b334-f50f8ee0cdad",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cdb728c7-6bfb-4952-803b-93cea62e99a6"
        },
        "item": {
          "id": "1d8db66d-715a-4259-b18b-1257e42c6791",
          "name": "did_json"
        },
        "response": {
          "id": "727d2b33-4320-4f29-91ba-ad5fa862d513",
          "status": "OK",
          "code": 200,
          "responseTime": 1174,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90aae0c-af7a-4687-88c1-1cdc6eb81afb",
        "cursor": {
          "ref": "592da7c8-1690-4951-a4f0-619c678965c2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2246925e-8dac-4cbd-944c-77e91869dcfa"
        },
        "item": {
          "id": "d90aae0c-af7a-4687-88c1-1cdc6eb81afb",
          "name": "did:invalid"
        },
        "response": {
          "id": "50c83850-87a6-4ee3-9632-259b029327ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90aae0c-af7a-4687-88c1-1cdc6eb81afb",
        "cursor": {
          "ref": "592da7c8-1690-4951-a4f0-619c678965c2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2246925e-8dac-4cbd-944c-77e91869dcfa"
        },
        "item": {
          "id": "d90aae0c-af7a-4687-88c1-1cdc6eb81afb",
          "name": "did:invalid"
        },
        "response": {
          "id": "50c83850-87a6-4ee3-9632-259b029327ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa04dd5-e466-4356-9121-271e26f2e5b8",
        "cursor": {
          "ref": "c700df64-1295-4716-956b-775540c29cc9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "24fbd78e-afa5-4678-8abb-d69bd23a56c2"
        },
        "item": {
          "id": "8fa04dd5-e466-4356-9121-271e26f2e5b8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21c61040-6b63-4690-81e7-f7ae814780ed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 578,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e889ee8-5a87-4f51-8da8-6fb51cd1843d",
        "cursor": {
          "ref": "91a2cd7f-747c-4d30-8b85-f0b44c4f446d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1790df8-a962-4814-8c1b-9778f2df1a77"
        },
        "item": {
          "id": "7e889ee8-5a87-4f51-8da8-6fb51cd1843d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1e1f5d53-0d2e-4e77-969f-0d4b064dd592",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc368730-89b7-4ca7-bac2-46b9d1cf88be",
        "cursor": {
          "ref": "8872880d-64a6-4de0-83b2-ca6494e10e81",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "259cc707-e548-4b2a-ab01-f3692fc84498"
        },
        "item": {
          "id": "dc368730-89b7-4ca7-bac2-46b9d1cf88be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2831d39e-ebd0-474d-ab9e-642df74712f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f3a6e-135e-4f24-b1d3-072af81d9a09",
        "cursor": {
          "ref": "10e58040-b6fd-40db-8909-83e857b1a4cc",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "461d68c7-defb-4247-8035-47be1737ba2f"
        },
        "item": {
          "id": "930f3a6e-135e-4f24-b1d3-072af81d9a09",
          "name": "identifiers"
        },
        "response": {
          "id": "2f95a8da-5652-46a6-a6b0-6356db3115e4",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b099f9de-5da2-4360-b8b8-3af405da048b",
        "cursor": {
          "ref": "d71db86f-83da-42ff-be68-683517ca880d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "37e3b472-8573-4e8c-be07-0dac41b67dcf"
        },
        "item": {
          "id": "b099f9de-5da2-4360-b8b8-3af405da048b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "295a09dc-72af-4ef7-963c-6ad34b5c94b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebba4c7-76ba-43ee-8dee-4655e3387d62",
        "cursor": {
          "ref": "d16d0b78-0776-4a4b-a2c4-0c73d9fb0452",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7495b35e-c6bc-4f04-a411-cd6f40eafd57"
        },
        "item": {
          "id": "2ebba4c7-76ba-43ee-8dee-4655e3387d62",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d8e0e093-5296-4b86-a4ad-d93cebe5c3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39db1651-335f-40ca-8a3e-e577f1b4acda",
        "cursor": {
          "ref": "b5a4f000-0f60-41bc-b9d3-ea53d7de00a7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b6113e8d-9027-41d0-b1b1-adb99995b170"
        },
        "item": {
          "id": "39db1651-335f-40ca-8a3e-e577f1b4acda",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "afea32fb-324a-4d09-be03-a96f90dd0f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8955c1-0ddf-4a42-a47b-d93b04e428a4",
        "cursor": {
          "ref": "8a2fdc93-6d34-49e6-8957-422714fc14d8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "543c829d-7a0b-46ed-97fc-84b8759dc6a7"
        },
        "item": {
          "id": "2d8955c1-0ddf-4a42-a47b-d93b04e428a4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7df72a32-0405-4540-9cef-4f90378ec532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cb3597-fed8-45b6-9877-4b35d08cd579",
        "cursor": {
          "ref": "f430f7a0-2de9-49c5-a3db-b839336ba4d2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b69ae4ac-9e61-4693-8bb9-b08d5cb28955"
        },
        "item": {
          "id": "42cb3597-fed8-45b6-9877-4b35d08cd579",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a57cae71-6797-4071-9a80-687d993caa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47000b65-9e37-411e-88d5-a671991aacaa",
        "cursor": {
          "ref": "f67ca504-3f27-49ca-936f-72aa2bc3d117",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "69c9ef7d-37a8-4fdf-a48c-93bd84e479f4"
        },
        "item": {
          "id": "47000b65-9e37-411e-88d5-a671991aacaa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6bdbc26a-4867-45e5-9466-a18ca222a196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef229a3-9d4f-4cc2-8dec-902b226b4ae5",
        "cursor": {
          "ref": "6c4e3d04-ad49-4a59-a73a-abcf66bbc994",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "93df0bb9-ba61-4be3-93cf-8fa7810b6174"
        },
        "item": {
          "id": "fef229a3-9d4f-4cc2-8dec-902b226b4ae5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a70d1ae6-3302-407b-a934-cc1bbd5043b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eaa529-0d1f-49a6-830b-42578e18b8b2",
        "cursor": {
          "ref": "a0740d70-5571-418b-8c3e-3ac79067e5e5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dabb9351-4654-4170-84a1-b7f33c403fa3"
        },
        "item": {
          "id": "16eaa529-0d1f-49a6-830b-42578e18b8b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "623a2bff-3f5d-480b-a3ad-481137f0aa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243a5865-9ff6-45c2-b282-6551bd80d761",
        "cursor": {
          "ref": "e4c55866-8a39-4c2a-ae81-8b35429b064d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4c720946-d42e-4dde-916f-b65eb5c9755d"
        },
        "item": {
          "id": "243a5865-9ff6-45c2-b282-6551bd80d761",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c6a858dc-cae8-450e-b7d9-dbd3258cb0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56eb3c9-2acb-4425-81f8-de153e1c0e90",
        "cursor": {
          "ref": "43d3cedc-48d3-4c4e-bc0f-b47569381e78",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9a0fd5c5-cada-437a-9333-1c043d8be69b"
        },
        "item": {
          "id": "f56eb3c9-2acb-4425-81f8-de153e1c0e90",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fe923acc-478f-47a6-aa62-a9493124afd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535487c0-b1b0-40c4-bf46-d835d326c042",
        "cursor": {
          "ref": "920d073b-31c6-4f34-80ce-784b447d0da3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8372e1d6-b3cf-4d1d-ac7a-07f5a1e3b86d"
        },
        "item": {
          "id": "535487c0-b1b0-40c4-bf46-d835d326c042",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "559834d8-92de-47c4-a6f5-12f4858103c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b371d41-a0e5-49c5-9d7c-36c8356119a8",
        "cursor": {
          "ref": "2af37607-256a-4e55-9f63-7793564b00db",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3928a9f3-b725-4990-85a2-0557d19d0810"
        },
        "item": {
          "id": "0b371d41-a0e5-49c5-9d7c-36c8356119a8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9fb0ba87-069d-4df2-bc75-d354c5e20a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503091ef-a1ba-4ad0-8242-10c0e3f719df",
        "cursor": {
          "ref": "9442c2d9-17a1-4975-8db3-816611ca0989",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "98ca10e2-ab0b-4de5-b86b-f188db0bf915"
        },
        "item": {
          "id": "503091ef-a1ba-4ad0-8242-10c0e3f719df",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12d5ad6b-a502-4d44-8e25-e44012a7d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38620f14-c737-47e8-83d5-4e2ce1a4f7a9",
        "cursor": {
          "ref": "77afaa48-df87-40ab-acd4-9564e40798f4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ff752352-796b-4aa8-8bec-7be195ed2b0d"
        },
        "item": {
          "id": "38620f14-c737-47e8-83d5-4e2ce1a4f7a9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "db2d703c-7eac-450a-a8d4-12c7d1ac0308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf4d0d1-eb45-44ff-8737-b38513f7f157",
        "cursor": {
          "ref": "6671222a-bbd8-45ab-b050-ec7dba7b1437",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d3f2a12-9956-40bd-9399-79f92c47d66f"
        },
        "item": {
          "id": "5bf4d0d1-eb45-44ff-8737-b38513f7f157",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cc019c21-4854-4a0d-bb62-a5cb662905fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b89e16-420d-4d7e-8f59-0c61dd0c9bfb",
        "cursor": {
          "ref": "32c12da5-853e-4e81-b259-bd155e506af9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c6dc488-6a31-4f89-8a1e-e1ab55555b83"
        },
        "item": {
          "id": "01b89e16-420d-4d7e-8f59-0c61dd0c9bfb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "09533602-fdbe-431c-8c55-fb9fcd086414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616ea66d-c609-4788-abcb-96d7ef6c57a2",
        "cursor": {
          "ref": "d8c669dd-1b0b-4d27-a003-2617e332e442",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bc803cd5-4c4c-436b-96fe-aba5bce9035f"
        },
        "item": {
          "id": "616ea66d-c609-4788-abcb-96d7ef6c57a2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4efe32eb-a034-4927-ba80-e9fe5e778886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dc4f5a-714d-458b-9098-12fb6ea5ee23",
        "cursor": {
          "ref": "614d99bf-810e-4a08-a6e2-4649403ac0d9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0d391909-eee2-4558-86c0-895aa261f050"
        },
        "item": {
          "id": "a2dc4f5a-714d-458b-9098-12fb6ea5ee23",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7dccd131-4c73-4b1d-8b74-856ba6bbf64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42bd9d3-c8ee-4f36-8508-67cf2bd5385b",
        "cursor": {
          "ref": "df5462f6-4d13-4fbd-b38d-39708f414bf2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fe844f67-f5e8-4220-a8e5-74073155da1a"
        },
        "item": {
          "id": "d42bd9d3-c8ee-4f36-8508-67cf2bd5385b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ea6a9ef-9d3b-420e-b9e2-146b5b508fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c72e00a-d0cd-4085-a9a8-70e25963096d",
        "cursor": {
          "ref": "63cdfd6a-8633-44a2-a3bf-41a282611a22",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b3762672-5e5a-4dea-a9b5-472edd18757e"
        },
        "item": {
          "id": "2c72e00a-d0cd-4085-a9a8-70e25963096d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7186ba76-3818-4d6b-854b-d3681950745a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ba3ac6-079d-43b2-a4a0-86fc61dd74f3",
        "cursor": {
          "ref": "f9e27131-2e74-4603-b49b-2492bc02cb4d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4630b1e9-fbd1-40a4-9efc-d005553f9a47"
        },
        "item": {
          "id": "34ba3ac6-079d-43b2-a4a0-86fc61dd74f3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aae85575-afc3-4a5b-868b-0b45bf7443e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426b0fd2-d1db-4e62-8087-415358919a08",
        "cursor": {
          "ref": "210d6e59-3803-4690-b9ea-6ceebbbc6d04",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb744eec-9de2-4f31-a238-66519fc17f3a"
        },
        "item": {
          "id": "426b0fd2-d1db-4e62-8087-415358919a08",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b9e939d-8d71-4c28-a350-7c1b0173a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b787a4-7c2d-46dc-9ddb-933e92343f08",
        "cursor": {
          "ref": "9349deca-78ad-49be-955b-d3dfa1e9fe19",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "797317b5-b04c-4ea2-808f-663a2752818d"
        },
        "item": {
          "id": "39b787a4-7c2d-46dc-9ddb-933e92343f08",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f522fd69-6045-4b67-be03-5fed1b8207e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327ada7-f563-43ee-80b4-1cffb6a8ab5b",
        "cursor": {
          "ref": "b566f60c-5566-499c-b27f-c25dfc4b8371",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3243f3e6-f862-49d8-8925-e736e747a9e8"
        },
        "item": {
          "id": "5327ada7-f563-43ee-80b4-1cffb6a8ab5b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2e585d16-0ddd-4b26-a243-ef6f029ce916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5237fb-4092-4850-af9f-2002ec398769",
        "cursor": {
          "ref": "ae3f17b7-1723-483d-92b1-a02aebf2fc5c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b85d363-a226-42a7-80fb-46f22c3674d0"
        },
        "item": {
          "id": "6a5237fb-4092-4850-af9f-2002ec398769",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4f9ca029-0a5a-43db-b023-2e0eb9e07099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798d1bc0-fa5a-4bcf-aecc-3690b459519d",
        "cursor": {
          "ref": "e0e49dd2-22c6-4fb4-a5a4-8fd0fc185669",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3eea84e4-bcc9-4ed8-bfec-8433fe8de46f"
        },
        "item": {
          "id": "798d1bc0-fa5a-4bcf-aecc-3690b459519d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "62075136-3e26-4609-bb6a-192c311a24c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642551d0-38cd-4854-aeff-3f64037c1ba1",
        "cursor": {
          "ref": "6aff3404-a974-4760-88fb-68d442b8d234",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c31a0d84-6bf9-4b56-b4e4-6058c17ec0ab"
        },
        "item": {
          "id": "642551d0-38cd-4854-aeff-3f64037c1ba1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2653b1bb-7f85-4fef-b5ef-6544e1b8ff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5f34fd-e8d0-4f56-bf20-7d76a6ebe4aa",
        "cursor": {
          "ref": "edf8605f-50f5-45e9-94ca-d3fb872b2646",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3902ae28-da6a-4482-b756-bf0fdbda3f9d"
        },
        "item": {
          "id": "6a5f34fd-e8d0-4f56-bf20-7d76a6ebe4aa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d4852c81-79af-415d-a631-9c9e0c9e522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414724b3-f08c-46fe-bd1e-c497181b1912",
        "cursor": {
          "ref": "1112d99f-2bdc-4288-9851-2cfe635803f3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3129e4d-79fe-40fc-a08b-cc5c4bc78bea"
        },
        "item": {
          "id": "414724b3-f08c-46fe-bd1e-c497181b1912",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fb2e4237-5c33-4599-8f8c-a1208f7e5d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecfeaa8-636f-475b-9280-bc5418000086",
        "cursor": {
          "ref": "d6983288-4246-4bfd-962c-d8809d822dfc",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "af995835-f4ec-4aa8-a72a-b95e80b912db"
        },
        "item": {
          "id": "eecfeaa8-636f-475b-9280-bc5418000086",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1c8b2ec0-8c5d-47d7-ac14-db21067a099f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678ba5b9-525c-4861-8a23-d45732de9282",
        "cursor": {
          "ref": "13c6c67a-4aef-4762-8f9a-165026ce7f64",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e7bb421a-40e7-4f43-afae-104b0d91648b"
        },
        "item": {
          "id": "678ba5b9-525c-4861-8a23-d45732de9282",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c71321b3-6df0-4838-8043-833de2d011de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c16096-041d-42fc-b717-d8a7def87cff",
        "cursor": {
          "ref": "6ec3cd27-a333-4f58-9ee4-539a6c2af7e2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "478d150b-ad74-4886-9683-81413e409a70"
        },
        "item": {
          "id": "d3c16096-041d-42fc-b717-d8a7def87cff",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2cfaa85b-7cdf-467f-82c0-8452634aef9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20943e1-31b6-4c43-85a7-096e37a2229d",
        "cursor": {
          "ref": "13254f62-5541-472b-be44-ce0fc661440f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a834ae6d-c893-474e-aed7-c362fa4718e1"
        },
        "item": {
          "id": "c20943e1-31b6-4c43-85a7-096e37a2229d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "63e3dc41-0291-41c1-aff0-2e87fca212c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e763ef91-b830-445c-96d1-166cacb6c5e9",
        "cursor": {
          "ref": "a256f994-10d9-4b3f-b77d-975d69c37491",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "741a28a0-0061-4cf6-82cc-c215a48ec64e"
        },
        "item": {
          "id": "e763ef91-b830-445c-96d1-166cacb6c5e9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c40efc7b-6ffe-4523-a4f2-4de5211eca56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec9cd1b-fe4b-41d1-84c7-0e76690e8078",
        "cursor": {
          "ref": "2760060f-2b31-4099-bb22-a2cc3ca828a9",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "533a456e-b465-43c2-a327-722346bbb5b2"
        },
        "item": {
          "id": "1ec9cd1b-fe4b-41d1-84c7-0e76690e8078",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4e5be8a9-46eb-4ba4-afa7-8eb1efdb2059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30f7998-af92-4201-9550-7c530b16e48e",
        "cursor": {
          "ref": "8213106f-567e-4f46-a87c-223face696c1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "493ef605-12d5-4e82-b85c-1fcbbfb66543"
        },
        "item": {
          "id": "d30f7998-af92-4201-9550-7c530b16e48e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ab562ebb-1404-4a39-b203-de68f875160b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 334,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6455255-3813-4a3b-961f-65e58b9bf641",
        "cursor": {
          "ref": "36585230-9899-4dbb-a03e-b58011cd66d1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "773e2163-a491-4a68-a0d0-7e22d7c91b74"
        },
        "item": {
          "id": "e6455255-3813-4a3b-961f-65e58b9bf641",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c0579611-a5f4-4379-831d-d6a51054b1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c9e83a-d7aa-40f1-a00d-1eead88255ba",
        "cursor": {
          "ref": "0d4fd9bb-4e6f-4b1c-a1b9-1c64ebe159da",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "871df795-17fe-4254-9e50-3fbd4ec352ff"
        },
        "item": {
          "id": "34c9e83a-d7aa-40f1-a00d-1eead88255ba",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "facd5435-03f0-4efa-a044-69a6b0dca75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78274efa-b137-4b63-836e-7bee8b430cc7",
        "cursor": {
          "ref": "79730bdc-2f0c-4f24-a23e-17a0cff46612",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "86fd3a4a-3d0e-4dd3-8964-d7ade19372a7"
        },
        "item": {
          "id": "78274efa-b137-4b63-836e-7bee8b430cc7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4e211f75-71b5-48c5-a989-5264d57ec02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7401e1-dd98-42d2-92db-a027d001cd3f",
        "cursor": {
          "ref": "beafb191-7d16-41db-ab5e-1df2ad1424dd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5acc2ed0-aecf-4656-82b9-50a2913993a1"
        },
        "item": {
          "id": "9b7401e1-dd98-42d2-92db-a027d001cd3f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bee1f030-7df3-42b0-bb7b-d1936c7621cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc94300-a77f-4be9-a4f1-6ea5d244abfa",
        "cursor": {
          "ref": "f81729d2-b79b-4b98-9dc0-d8e74faca24f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "935b54d5-3df4-4c97-8f63-726fbbe0f8fd"
        },
        "item": {
          "id": "ccc94300-a77f-4be9-a4f1-6ea5d244abfa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "812acaf7-2f78-49d9-bd56-1dd6443b3bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df734369-aae8-43c5-8d9e-c978630b8d21",
        "cursor": {
          "ref": "8a039b30-2145-420d-b4d3-9a90f5080f12",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8b58decc-b50d-4000-8792-c9d0d3037142"
        },
        "item": {
          "id": "df734369-aae8-43c5-8d9e-c978630b8d21",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1fe1bd6c-0523-4858-84fd-b1bd5c7ed700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a23c4e3-84f5-48ed-8060-db1a798b45a1",
        "cursor": {
          "ref": "bcc149d5-6570-4c27-85e9-87c4830b58fe",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ea9c0a46-9367-4678-ba99-bf959433211c"
        },
        "item": {
          "id": "0a23c4e3-84f5-48ed-8060-db1a798b45a1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "303485ca-5378-4d81-9943-adaef04605d9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 349,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b0427d-03f1-4754-8125-49bef5c761f8",
        "cursor": {
          "ref": "792b26af-a304-473e-8368-0d1353e4929a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0a11bd70-9541-464f-a8a5-50c0d4031a7f"
        },
        "item": {
          "id": "a1b0427d-03f1-4754-8125-49bef5c761f8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fb41c75c-4b7f-4853-9529-de4f101cce76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2fb8af-0220-497e-a448-71a9c1d941eb",
        "cursor": {
          "ref": "bad6fe51-87fd-4e71-8c00-0493803fae98",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9db6b3e9-455c-4bfa-87bf-fb920f135fac"
        },
        "item": {
          "id": "bb2fb8af-0220-497e-a448-71a9c1d941eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22507d08-8b11-4455-b464-8ecf30f3741c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4321ab3e-adb6-4775-b2ce-138cedac54c9",
        "cursor": {
          "ref": "9f872ea5-8cfd-44c8-8737-caef86b1d499",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8ac141aa-8c5d-4019-83cb-6b2424f2f3d4"
        },
        "item": {
          "id": "4321ab3e-adb6-4775-b2ce-138cedac54c9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ca409f1c-2715-4004-b859-94022e90f243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86037047-c1ac-4cae-a107-78651e509b93",
        "cursor": {
          "ref": "339e012a-d625-4ac3-b617-26f57d8214f3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89c61469-6372-46d3-af6f-da5d4ebcf383"
        },
        "item": {
          "id": "86037047-c1ac-4cae-a107-78651e509b93",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d1678437-c715-44e2-9b6b-32ecf500f7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3845a78c-46b2-437c-ad0c-0e44c1d1e0c9",
        "cursor": {
          "ref": "e1c81604-578f-4635-99df-5c1689be7585",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4dce5a10-646e-47e3-9aa0-71dbbabaa479"
        },
        "item": {
          "id": "3845a78c-46b2-437c-ad0c-0e44c1d1e0c9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3614e6a2-8f57-4135-8fea-9a09ff244135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e05e8-598f-4adc-b39a-e704097eefd0",
        "cursor": {
          "ref": "1739841a-c5c3-4923-a399-aa8807c616a8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2f69f36-b76c-4b65-b663-f8880f7b3865"
        },
        "item": {
          "id": "176e05e8-598f-4adc-b39a-e704097eefd0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7edd8f9f-9b8f-4597-936a-5ba7acb76a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d54194-dcbe-4ba8-a405-0ad30ebafb48",
        "cursor": {
          "ref": "f7e020e9-7e57-4bfa-a99a-1848098b6d14",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8d48b5da-548e-461f-8107-1ef17977286a"
        },
        "item": {
          "id": "c9d54194-dcbe-4ba8-a405-0ad30ebafb48",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "62a70aa8-7a3a-4baa-acfa-11e9491aa664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da8aac0-91e7-433c-bb4f-f0c0c7a04466",
        "cursor": {
          "ref": "75ee1bd6-1c6c-418b-8452-6d035c4bfcc2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3b1120d9-5bea-4e93-9638-1450f0d69046"
        },
        "item": {
          "id": "0da8aac0-91e7-433c-bb4f-f0c0c7a04466",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3ffa2bb1-bcde-4bba-a434-9db72835df0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600a1913-43b0-43e3-bc26-8e88761b7b11",
        "cursor": {
          "ref": "82ca42e1-2f8b-40a1-ad3f-2d757947220c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "77db7022-ff35-4e70-adc7-92f54e9d8e3c"
        },
        "item": {
          "id": "600a1913-43b0-43e3-bc26-8e88761b7b11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "512cab12-1984-4efe-b5ef-2047b33d0c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061da80b-a201-4eb3-8afc-8cd8b054c499",
        "cursor": {
          "ref": "606cff51-d217-4c3f-ab6e-08bd71227057",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3cc917a4-544d-4ae0-8445-87cbc71b1094"
        },
        "item": {
          "id": "061da80b-a201-4eb3-8afc-8cd8b054c499",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8fd61afe-847b-4808-a8f3-b4f9b6268ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893a27e6-be1d-4bfd-9b6d-445199e4518f",
        "cursor": {
          "ref": "5ce83f49-c723-4e25-b5fb-93508a9b9df3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0a7796c0-ad7c-4ebe-8273-272a0093b52b"
        },
        "item": {
          "id": "893a27e6-be1d-4bfd-9b6d-445199e4518f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "94613678-a275-4e8f-b3a0-27a1a14b06b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2026da85-9456-4dbc-bfa8-fca4619051e9",
        "cursor": {
          "ref": "64e2544f-0402-489b-8352-9e434b86e983",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "90137c4e-80c5-4f3c-81a1-9d57d18071a8"
        },
        "item": {
          "id": "2026da85-9456-4dbc-bfa8-fca4619051e9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "01d9c00d-7fb8-4ecf-a520-27f5cce4f24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac060351-4bfe-45b5-b4b7-79194e44aedf",
        "cursor": {
          "ref": "8d885887-e645-40d0-904b-aa4e50528103",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4fe8d872-4b90-4bcc-9891-fc2b483e6897"
        },
        "item": {
          "id": "ac060351-4bfe-45b5-b4b7-79194e44aedf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6e11a253-8fbe-4871-b0bc-7a92a92a96af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1436bec9-3ed8-482e-adf5-06f0b534fa24",
        "cursor": {
          "ref": "a942a2cf-e97d-421c-a580-7cb1c1533e99",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "034ed05b-8c8a-4162-83f4-eee56c91fc31"
        },
        "item": {
          "id": "1436bec9-3ed8-482e-adf5-06f0b534fa24",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "22f3d090-2d55-48f8-a99d-e0feb50d1697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52df5c24-fa7e-46ff-ad38-4d3c1c245a42",
        "cursor": {
          "ref": "0e4e29a1-2a29-4249-8d97-273b01166f18",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2f76899a-31ff-4467-866e-65ea95b26da7"
        },
        "item": {
          "id": "52df5c24-fa7e-46ff-ad38-4d3c1c245a42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c653d58-b97c-4eac-a3a7-10bbb217a970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526e1cc2-098d-4d92-aab3-f559c549555e",
        "cursor": {
          "ref": "edd4840e-7a6e-45ab-8a3b-09c0722bb67e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c7e5eea3-c86e-42a4-9549-86081950bab3"
        },
        "item": {
          "id": "526e1cc2-098d-4d92-aab3-f559c549555e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cc44b4ee-9d16-4f07-b913-2e664c4191e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5b79c2-6ca9-4990-b452-a5855b81872a",
        "cursor": {
          "ref": "47d1693b-cb0a-4299-8de1-a8a593b0668c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c7309bdf-e01e-4e9a-9ba6-2bca471a8e17"
        },
        "item": {
          "id": "8a5b79c2-6ca9-4990-b452-a5855b81872a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9ad67249-878c-4196-b18e-304babcbe4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5209be81-d457-4838-8251-0d598eca4d40",
        "cursor": {
          "ref": "4f3bda86-3e1e-490e-8ab4-c01728bc9bac",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1ff34b74-080e-490e-a8e2-b035e0d2ba7e"
        },
        "item": {
          "id": "5209be81-d457-4838-8251-0d598eca4d40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "575a259f-53e8-4ff1-a0b9-f3f3e882a4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e16e3-893a-45da-828b-c26e9730a995",
        "cursor": {
          "ref": "d2c8f4da-70e0-4fe2-8be5-9c1fcc67705e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3c2fefeb-0187-4886-975d-ced76394ca5b"
        },
        "item": {
          "id": "f63e16e3-893a-45da-828b-c26e9730a995",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "03df0131-22bb-4623-95ac-2291bd9d5c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363f849c-9e41-497e-93e6-f0a926921b71",
        "cursor": {
          "ref": "6eccbc28-5238-4d44-ad3c-7f3d91e14600",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3cc52efa-9548-4ca6-9b20-c727d0d49a71"
        },
        "item": {
          "id": "363f849c-9e41-497e-93e6-f0a926921b71",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b8c566e-3d94-4bb9-b377-26d2c222030f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567972ca-a725-4654-b25e-c34f4735717f",
        "cursor": {
          "ref": "b1642a03-8356-42e0-af31-2927e8c59797",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9efedbd7-8d2a-4381-bff8-54bcbba74f2c"
        },
        "item": {
          "id": "567972ca-a725-4654-b25e-c34f4735717f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "29453f3f-9a4e-436d-8a86-fbe9bb8fda8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cbe2eb-e753-4498-8351-6a929bb12bf8",
        "cursor": {
          "ref": "b9fc6d8b-086d-4bfa-8452-87b835573c91",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4a4afaed-e515-4e17-bbd2-69f84752c106"
        },
        "item": {
          "id": "23cbe2eb-e753-4498-8351-6a929bb12bf8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48279681-5209-4054-9639-31b8a012ddf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bcca5a-2b8f-49b1-aed5-a8cc8b3b8e96",
        "cursor": {
          "ref": "39fc9f09-1053-4570-be40-fd7d103cdac5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f751b51f-fc6f-4410-ba01-949922927d8e"
        },
        "item": {
          "id": "22bcca5a-2b8f-49b1-aed5-a8cc8b3b8e96",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "874d8c9a-b588-4418-9c7d-6e939490731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96834757-463a-4d9e-80ea-491cce937c6d",
        "cursor": {
          "ref": "3b8df97f-f3cd-4bbb-b81a-e2f82aedc058",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6b18e55-c30c-4f1c-8c38-775e1b6a4dad"
        },
        "item": {
          "id": "96834757-463a-4d9e-80ea-491cce937c6d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "797ce050-d063-4181-8109-77c0ac724b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d356ac-d763-4e71-b466-8efd933059b3",
        "cursor": {
          "ref": "ef69deab-d7f1-4729-8056-08a1c9cc6f93",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "de6a49e3-7211-4ad5-b6ba-ba4838edb334"
        },
        "item": {
          "id": "44d356ac-d763-4e71-b466-8efd933059b3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "561ebc02-f61a-4284-954c-ce8fc094d325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb0e03d-db59-4ee7-bf1e-5b02cf4acdf1",
        "cursor": {
          "ref": "30f37188-2b29-41f6-99d6-711ddfda0764",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0f76e2ac-2eb3-4be4-abc1-0da6ad4b10c0"
        },
        "item": {
          "id": "dfb0e03d-db59-4ee7-bf1e-5b02cf4acdf1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "815ac9a9-b634-45d2-ab68-9e18dda818c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e2936-3682-488e-8417-4dbaf1ea54e7",
        "cursor": {
          "ref": "0934855d-33b6-4038-8186-2e5b5d816a5b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0da9e9f6-85ab-4b78-af6f-7217a6ad06dc"
        },
        "item": {
          "id": "821e2936-3682-488e-8417-4dbaf1ea54e7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bbbc0a77-9b6d-4058-ba22-00b16c107bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfeefce-e8f3-401c-be23-e430191bfd7c",
        "cursor": {
          "ref": "36041dc0-ae09-4093-a0d9-4d97bfe5fab0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8f23c9ec-4137-40fe-b2cb-c6807945ea21"
        },
        "item": {
          "id": "8bfeefce-e8f3-401c-be23-e430191bfd7c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2f4cdd69-9d0d-4eab-81ed-a170d8a8c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3bd2f9-a84b-4ea2-97d6-6ccf57aefe32",
        "cursor": {
          "ref": "2f273457-c76f-46c9-8dd0-e2f12b7b7a02",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac35e20c-755b-49c3-974c-8554630ef8dd"
        },
        "item": {
          "id": "6e3bd2f9-a84b-4ea2-97d6-6ccf57aefe32",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "edc0e8ba-e4c5-4e61-9f3b-9656c532d048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd882ab-487d-4ac4-b0de-4e9a93d48e8a",
        "cursor": {
          "ref": "5cbcd732-519b-4c13-af49-3c6ec282fd8b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eb48c473-6d47-4267-9253-3c60c1a1bab4"
        },
        "item": {
          "id": "cfd882ab-487d-4ac4-b0de-4e9a93d48e8a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8ac1c5a3-2151-4a61-8984-f818a719069d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5cd73e-315d-4d5b-b59e-392530fe6d14",
        "cursor": {
          "ref": "98fe6f1b-2267-4824-a903-cebde613c10b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "52d38da7-1427-4bc1-b441-00c810e43de6"
        },
        "item": {
          "id": "8b5cd73e-315d-4d5b-b59e-392530fe6d14",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "93dcd80c-5ab4-4e02-8e39-2ce817f741b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a485b98-4be9-4a7f-add3-61b13b834fd2",
        "cursor": {
          "ref": "1145034d-402d-4d21-a6d7-a53c58aadd56",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b6b540e4-ac94-4d40-a26d-23d832a2b89f"
        },
        "item": {
          "id": "9a485b98-4be9-4a7f-add3-61b13b834fd2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4103d330-025a-462d-ab4c-681aa6623eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e724ec-06a9-4fba-b926-5c2f9dd5474f",
        "cursor": {
          "ref": "ea8c0ed9-3578-498e-a550-3592e622d160",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "99cc2901-6a9b-4c7d-a97d-48c296152323"
        },
        "item": {
          "id": "89e724ec-06a9-4fba-b926-5c2f9dd5474f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b22f0350-075a-4a09-8ebc-88e31ae55f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2895f342-e40e-4adb-b0b1-c74bc4586fe6",
        "cursor": {
          "ref": "67c06c11-264c-4508-9df1-c4b786efe254",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1c0b713a-5901-408a-8506-ace10a8455a4"
        },
        "item": {
          "id": "2895f342-e40e-4adb-b0b1-c74bc4586fe6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0d270bab-48de-4797-bea0-d1e0695c10ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84f3845-f6a9-41b1-9bd9-f73bd694467b",
        "cursor": {
          "ref": "d653a301-b6e9-4426-9d05-d3d9fb5e6113",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b2e18bc7-72ea-4261-8459-8fded8ed657e"
        },
        "item": {
          "id": "a84f3845-f6a9-41b1-9bd9-f73bd694467b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b49f4693-2fd1-4455-9742-a53862b1130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240dd109-605d-4d21-9331-4a04483bc8ac",
        "cursor": {
          "ref": "43af7b47-4452-490e-a125-104c1f448718",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ea128cc8-ca8a-4cc3-a4e2-f75878991da8"
        },
        "item": {
          "id": "240dd109-605d-4d21-9331-4a04483bc8ac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2b90ad3e-7ff0-4bb8-9e7b-92cc44e976ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e6033f-4245-42c6-a9fb-7bba00efdc89",
        "cursor": {
          "ref": "8d5145b9-ab8b-4148-a4cc-dc410442e899",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "852578cc-e136-4b8c-a4f0-ff36a5ba6fce"
        },
        "item": {
          "id": "52e6033f-4245-42c6-a9fb-7bba00efdc89",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "893abc86-2e27-4dc8-aa9d-ebcee8417dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2e11cd-35b4-4f4c-a024-0876c609b114",
        "cursor": {
          "ref": "a7f524b3-e931-4c8b-96d5-8c42e3f7b1bc",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98225ed6-7a13-482f-91c7-f7c549ae266e"
        },
        "item": {
          "id": "9b2e11cd-35b4-4f4c-a024-0876c609b114",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "42678e53-51cd-481d-90a3-515dc12db970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c93971-4ee6-470e-8461-e40f0b1b5242",
        "cursor": {
          "ref": "ae680c45-9780-4fc7-b604-5e04bfb14425",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b4c7f6b8-37b2-4495-aea8-23d801467401"
        },
        "item": {
          "id": "e8c93971-4ee6-470e-8461-e40f0b1b5242",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "39ea64d4-0034-4985-be8b-b663e11cb391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afec9f4f-c1f1-4dfa-a3bb-87e60b8c2f7a",
        "cursor": {
          "ref": "e36e526f-a1de-48d0-8f17-3156d96bd340",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "32e8162e-b6f0-4f25-b2d8-941b61935379"
        },
        "item": {
          "id": "afec9f4f-c1f1-4dfa-a3bb-87e60b8c2f7a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "abb13a72-3894-4cef-826f-7e6e6d8f8c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf67b829-fb96-4581-97b1-27992109d0fb",
        "cursor": {
          "ref": "57fda39e-9d5b-4653-83be-ee59f47b2bde",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ffd6d848-2273-4453-9112-5bffe13e34ae"
        },
        "item": {
          "id": "bf67b829-fb96-4581-97b1-27992109d0fb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7f628c04-fafc-48c0-b15a-eab16afcb71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2181f508-8829-4a11-8d91-c54e1e996d69",
        "cursor": {
          "ref": "490d8210-aeaf-44bb-a1bb-3aae8b752938",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0404a48d-b18f-4d87-81b3-3d8a04ffa9c9"
        },
        "item": {
          "id": "2181f508-8829-4a11-8d91-c54e1e996d69",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6cbdcdf9-e0f8-4c6a-a18b-097a31cd19e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1641ff81-4f6a-4d85-8555-55cbce078e79",
        "cursor": {
          "ref": "1ab947c9-3558-492f-89cb-02d03ece0996",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "70cd5aa5-97d2-4424-91e8-ab0e52348c7c"
        },
        "item": {
          "id": "1641ff81-4f6a-4d85-8555-55cbce078e79",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "343f6879-33ba-468a-bd8c-cbec94b73973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a0e683-5cac-4c27-9f80-d2c3c0ca8f69",
        "cursor": {
          "ref": "d139416e-d078-4d91-9dad-36a3e8da3143",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6075a83e-c674-48a1-b5d8-3c038e7045bc"
        },
        "item": {
          "id": "03a0e683-5cac-4c27-9f80-d2c3c0ca8f69",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d8bb84de-0d95-4393-9970-fd86894495a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7f4ee5-7f15-4d92-bace-6530fce00a65",
        "cursor": {
          "ref": "b454f12f-b02b-411f-9099-ebdcaae5a409",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ace628a0-be36-4a8d-9649-1b0ae82ef620"
        },
        "item": {
          "id": "3d7f4ee5-7f15-4d92-bace-6530fce00a65",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0424c020-f13f-42d2-b084-2d4211397cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ba8c6b-1e43-4368-aef2-aa704fa1d9f0",
        "cursor": {
          "ref": "748b7023-4853-4ecc-b5c8-197f89e38772",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b1adcb72-29ba-42d0-9ae8-82f06922c24c"
        },
        "item": {
          "id": "71ba8c6b-1e43-4368-aef2-aa704fa1d9f0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "52f6744c-4737-4585-b4e2-bc306d225062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff00925d-f5a0-4a4d-af6e-9f9d0508b0ea",
        "cursor": {
          "ref": "66868797-a21f-46f7-bda0-acbb04a09fba",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7c0c6d4b-c82a-40d5-9491-a5d40e5b71eb"
        },
        "item": {
          "id": "ff00925d-f5a0-4a4d-af6e-9f9d0508b0ea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6d5430f2-1dd1-4b87-b63c-7327c24cffa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0112eff0-cc38-4859-8884-b5f4d696a139",
        "cursor": {
          "ref": "a027f67f-22c3-43ea-adc8-a8d58246ce57",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "30f7fb54-92cd-4387-93bb-1b40d72341b5"
        },
        "item": {
          "id": "0112eff0-cc38-4859-8884-b5f4d696a139",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f1bf6ff-450f-4173-bab5-3ba4f7589201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5949e57e-a07c-4c52-a9f2-d6d8f563df7f",
        "cursor": {
          "ref": "26b0ce28-dbf5-4971-a32d-7f9931eb57e1",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "343357c7-6619-4ad9-9544-221913e5eeb1"
        },
        "item": {
          "id": "5949e57e-a07c-4c52-a9f2-d6d8f563df7f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "321e5f14-ec0f-4526-9d4b-82b03ad12d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6bc492-4811-4c46-9ea6-178b020826ce",
        "cursor": {
          "ref": "23897561-95f1-4e25-b32d-e15809889482",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d5594130-1909-4578-8d85-a821ca713944"
        },
        "item": {
          "id": "ec6bc492-4811-4c46-9ea6-178b020826ce",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "893b9d75-3c91-486c-b2da-910b8fc85f53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f95e18d-09ce-4f2d-aab5-7e9df5d19d93",
        "cursor": {
          "ref": "d2f8aff3-d5cc-40aa-8a19-f664699f461e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9f843fa4-59ac-4ff5-9eba-5dc139317fe3"
        },
        "item": {
          "id": "1f95e18d-09ce-4f2d-aab5-7e9df5d19d93",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7b04ed7a-e3c3-402d-94d0-21fea0d747ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "daa893cb-b393-4e0e-8be4-2d0a3b3babb5",
        "cursor": {
          "ref": "1af700f5-8f39-4033-b6fe-25e9b6da3668",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "992a6238-208d-4e2b-a384-7e3df35da8d8"
        },
        "item": {
          "id": "daa893cb-b393-4e0e-8be4-2d0a3b3babb5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a91b6601-a909-4fcc-9e5f-568d57fec2ca",
          "status": "Created",
          "code": 201,
          "responseTime": 3180,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de037da-9a7b-47a9-b5e2-2836e1c42d52",
        "cursor": {
          "ref": "21cddeb4-0473-4661-914e-a5bf3e170bd9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "318b09be-bcc6-455d-b97f-6b56b496d6b3"
        },
        "item": {
          "id": "2de037da-9a7b-47a9-b5e2-2836e1c42d52",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f0a642e-a679-4f64-9819-50641ac3f599",
          "status": "Created",
          "code": 201,
          "responseTime": 3146,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2511c56f-48ec-4a6c-8110-f83c8ef7e672",
        "cursor": {
          "ref": "2a9ff386-7578-40f9-b130-dca6b595da44",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b571419c-8fc1-415c-b669-25673aebe12b"
        },
        "item": {
          "id": "2511c56f-48ec-4a6c-8110-f83c8ef7e672",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "60ed675e-a833-499b-b5bf-a5c2c07f2853",
          "status": "Created",
          "code": 201,
          "responseTime": 2029,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f569aa-ae17-4829-8963-4656b8590af5",
        "cursor": {
          "ref": "3779131b-08bd-48b4-9188-47bebca6b1c5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ae4323a4-c547-4a4f-9858-56873dc14ff3"
        },
        "item": {
          "id": "d5f569aa-ae17-4829-8963-4656b8590af5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fd809bab-c267-4149-a9b8-facabb9537b7",
          "status": "Created",
          "code": 201,
          "responseTime": 2388,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d7f75a-f740-4f44-bb84-9a5cccc8092d",
        "cursor": {
          "ref": "b6135754-2106-42bb-a152-04d16150a606",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb0dcf19-0fcb-48b9-91dc-a0bdf13f6535"
        },
        "item": {
          "id": "46d7f75a-f740-4f44-bb84-9a5cccc8092d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "37cf0690-70e8-4ad2-9ad9-e5794025aa78",
          "status": "Created",
          "code": 201,
          "responseTime": 2048,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f555d937-4887-4401-bd0a-2f2df528343c",
        "cursor": {
          "ref": "23005d9a-e56a-4e2a-97a7-304628011a13",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca10ac8c-6965-4bd3-8474-ccc6b61b69dc"
        },
        "item": {
          "id": "f555d937-4887-4401-bd0a-2f2df528343c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d409f78f-8d0c-4232-b32d-f12eb81646a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "04432309-c7cc-4d3a-8a6a-88151bc8ccaf",
        "cursor": {
          "ref": "a27f4ceb-de3d-49ce-82dc-a45294f9b9d9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1a6db7d5-f487-4674-9274-b680df5804d8"
        },
        "item": {
          "id": "04432309-c7cc-4d3a-8a6a-88151bc8ccaf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e1b8893a-632a-4a9a-8226-33b465930b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2445e94c-c649-4918-a6f2-e12d626a13ee",
        "cursor": {
          "ref": "db4d0921-a6ad-4453-8ae5-8029b427e032",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f78093e8-78fb-4f1a-9997-f512ee0be4e1"
        },
        "item": {
          "id": "2445e94c-c649-4918-a6f2-e12d626a13ee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cfa09298-4470-42d1-ade4-ed97cdfca3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2ea256-2f59-4a07-b84e-587542061e9b",
        "cursor": {
          "ref": "eefa53ea-d4e2-4b50-aa7a-dfdc2c42c132",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7439b540-3ca6-4e59-8015-879d5473eeaf"
        },
        "item": {
          "id": "2f2ea256-2f59-4a07-b84e-587542061e9b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1760ab4e-83ff-48c4-86e9-236fa063522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f89da6-2052-4237-a1e7-d3fad38acfe9",
        "cursor": {
          "ref": "b7921827-7cbe-47b2-92dd-f4d0134577cf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a70796d7-a4d1-433c-97ab-e8ae980db74b"
        },
        "item": {
          "id": "f6f89da6-2052-4237-a1e7-d3fad38acfe9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5da41ecd-98d6-407d-9e68-6984143aa1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d53f9f2-23ff-4e78-b272-2df143031b5f",
        "cursor": {
          "ref": "fc1ea187-7f62-4448-bc5e-781e8815399a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b9a106af-f1c8-48bf-acc9-2efdb41f6064"
        },
        "item": {
          "id": "9d53f9f2-23ff-4e78-b272-2df143031b5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14bb4506-5b60-4b35-ae87-dafaea16d510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506c92e8-d62b-4986-a6ef-53717ab84bc5",
        "cursor": {
          "ref": "9eb46cd9-7e3d-4ccf-876b-bfa9a9caeb55",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "82cdbdba-336b-4071-bbca-bfd4659b2416"
        },
        "item": {
          "id": "506c92e8-d62b-4986-a6ef-53717ab84bc5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1cf25290-e200-49e9-b1d8-6fd4fbbbd9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dd5603-b3b0-41ac-b0c8-b197228822ab",
        "cursor": {
          "ref": "e9d70f21-7f62-4768-8334-f1c1b2b65237",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63d4210c-8ad6-4684-9d4b-bd58a595f0a9"
        },
        "item": {
          "id": "81dd5603-b3b0-41ac-b0c8-b197228822ab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b4c41f5-9a8c-4f8e-a916-35533591e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f64d48-aa73-41cb-812c-ddeffffa17d6",
        "cursor": {
          "ref": "8dae8eb7-79a0-44aa-b641-d2613fa0d67c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0e2b3aac-056c-445e-b60c-ae06c68ad431"
        },
        "item": {
          "id": "76f64d48-aa73-41cb-812c-ddeffffa17d6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4f4e051-c91c-4a87-bca4-fdd48f772c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397c5c9d-4b3e-45a6-ab40-afb20ff9682a",
        "cursor": {
          "ref": "27282360-a3d9-4f54-918e-aba998b8d802",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "10170d96-d274-4f76-acfb-0b0e79fbdd1e"
        },
        "item": {
          "id": "397c5c9d-4b3e-45a6-ab40-afb20ff9682a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "13d04c93-3728-4fee-bab0-01e21b19454e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007d47b7-2523-46d3-818e-dee5fc1b64ec",
        "cursor": {
          "ref": "6659fbb2-1e56-4497-9bed-cce78361a238",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c8b4cf09-68e6-4f1f-ab0d-c33d24817980"
        },
        "item": {
          "id": "007d47b7-2523-46d3-818e-dee5fc1b64ec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "622116be-04c4-4575-9d01-a36bd37ba24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e6cca0-cd82-4c24-902e-7f9fa7ab97fe",
        "cursor": {
          "ref": "2e9ecd7c-0317-4ad2-a022-fea18d3ac20f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0cf7b2a3-5936-4da0-ad1c-7476cf93a76d"
        },
        "item": {
          "id": "07e6cca0-cd82-4c24-902e-7f9fa7ab97fe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a3fdc260-9a54-42b8-88ad-82d75013de5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b167ff-77a4-4766-a86c-78061737f55b",
        "cursor": {
          "ref": "8d0c72ef-7e6e-41d2-9199-c86a8b91abeb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cca74bce-675d-4033-b7bf-53b7b0b581fe"
        },
        "item": {
          "id": "86b167ff-77a4-4766-a86c-78061737f55b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2553471d-8fc6-483b-aa89-23df5013f98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b356f5-0a99-4287-8ea8-c5cfe4868d0b",
        "cursor": {
          "ref": "9c91523f-b8bc-4ec8-a504-e7843950f21d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "130d3fc7-4f92-4001-90d0-bb4c19432ac1"
        },
        "item": {
          "id": "92b356f5-0a99-4287-8ea8-c5cfe4868d0b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68e80c00-56e1-404c-8de1-e7b020b865db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 119,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173e3026-63d9-48f3-b25a-9625cbb01605",
        "cursor": {
          "ref": "173064d3-050a-462e-be66-923f05e1d347",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "39a56d30-29c5-446b-a9aa-7bffe9471d71"
        },
        "item": {
          "id": "173e3026-63d9-48f3-b25a-9625cbb01605",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bcb7f2dc-4575-4fe2-b4cf-8a84fcb77b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a3b113-33a2-4671-b39e-0ec5d7f73b07",
        "cursor": {
          "ref": "9cfe066c-7790-4ec0-b474-8d9fa6e403a9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "820b328b-a265-45fa-a555-1df49dc123ed"
        },
        "item": {
          "id": "24a3b113-33a2-4671-b39e-0ec5d7f73b07",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e8963a8b-587c-4d54-8c65-c3ab5fe72565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f508a9-8692-4164-a000-5c4126337f90",
        "cursor": {
          "ref": "f6f40517-eed9-446c-ae7e-1cfbfed4ae14",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3085d2ca-a497-458d-88b7-37104694db2d"
        },
        "item": {
          "id": "30f508a9-8692-4164-a000-5c4126337f90",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "933909de-49cd-4231-b5e6-81f15c5818bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a09f2aa-11fd-4dbb-bb15-a1abd63fa3e1",
        "cursor": {
          "ref": "adc13096-96ed-4189-8d7c-65b889f16f2c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f6eab5fd-45e1-4188-8177-188fec81093b"
        },
        "item": {
          "id": "6a09f2aa-11fd-4dbb-bb15-a1abd63fa3e1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d761a64a-36ad-40cb-a806-eca20a1a90d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4f780a-973b-4e92-be55-4acb0bd8bf89",
        "cursor": {
          "ref": "8ce23727-2b75-437e-b9d0-b46ea7918540",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b3f1e1f2-9a08-468b-812a-1be1ee4d95e8"
        },
        "item": {
          "id": "5d4f780a-973b-4e92-be55-4acb0bd8bf89",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df3555bc-7b37-4ace-bfa6-0f4657f2496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d501c84a-43ec-4619-b4fa-acd973f0f7d4",
        "cursor": {
          "ref": "7e37db89-bc81-4be6-af48-83c4a03144b4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1d9d7f80-6a72-4530-ab68-b94ecaa720fe"
        },
        "item": {
          "id": "d501c84a-43ec-4619-b4fa-acd973f0f7d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a701a4eb-9d74-4216-83bb-8d8cf3c709c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc5125-be4f-4e03-b5e0-303b2fd08c02",
        "cursor": {
          "ref": "732c787c-2d75-4e7b-b657-c3d7e753361f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ffcf786a-f160-4b3f-937e-38fd2147f6a6"
        },
        "item": {
          "id": "67fc5125-be4f-4e03-b5e0-303b2fd08c02",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f8adbc6-2489-4b5c-92ef-253f375c70fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adfc7ba-c9f9-463e-96bc-4e2388351a71",
        "cursor": {
          "ref": "8cd637ed-2854-4cad-a589-86164267ede9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5a618dbd-c268-4100-9759-c37446eff03b"
        },
        "item": {
          "id": "6adfc7ba-c9f9-463e-96bc-4e2388351a71",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ca2a2fa-c5a8-465a-b7e7-d079c3d1780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ac2a0d-5acd-4f41-9dd3-2d33939eacd8",
        "cursor": {
          "ref": "7db42c1c-bb3b-4fd9-9c58-fcd8b811f3d9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "683f2a63-5c60-4e24-91de-015eca1056bf"
        },
        "item": {
          "id": "26ac2a0d-5acd-4f41-9dd3-2d33939eacd8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "111228ad-1227-447d-9ff3-bf1feb83a346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3e260c-8845-4e93-a70b-6c30cad7688f",
        "cursor": {
          "ref": "dfb2d3d8-aa00-49c4-8978-24f027a8b266",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c2a4f234-7fca-4230-9478-1ca6bfd6e1ef"
        },
        "item": {
          "id": "3e3e260c-8845-4e93-a70b-6c30cad7688f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b6ef045-974d-4853-8685-bc6df1fafeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e10c8e-5e7e-485d-a8bc-ed441eb6faa6",
        "cursor": {
          "ref": "b866cfdd-37fd-447e-b744-0f1ddfdefc93",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0e66f75-ee5a-4f4f-ad6c-7fd0a4943949"
        },
        "item": {
          "id": "80e10c8e-5e7e-485d-a8bc-ed441eb6faa6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ee77ea9f-39ae-44d6-a906-2a577815fae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4258a8-63b9-4d87-be5d-cce0734508ac",
        "cursor": {
          "ref": "7114cdf3-7629-4f4a-a869-9fe7fe649e0c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5d4cf553-bf83-4710-bb0c-beb190508f13"
        },
        "item": {
          "id": "bf4258a8-63b9-4d87-be5d-cce0734508ac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c28b3b91-f744-4899-80cb-d18bcad22048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b73888a-7991-4f8d-8689-c0a06a91dd5b",
        "cursor": {
          "ref": "f94d5e6c-8299-46d0-b827-053820669e19",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2b92525b-2824-44cd-9720-fdaa6a8899e6"
        },
        "item": {
          "id": "0b73888a-7991-4f8d-8689-c0a06a91dd5b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "98539c17-68b2-4d3e-acc9-c9d97329e2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98045c3f-e5b0-498c-a560-76e3a07b0d05",
        "cursor": {
          "ref": "a601d434-df53-420d-a934-cbbf8624f57a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3acf8b8f-a10a-4340-a1a6-903c20d85ddb"
        },
        "item": {
          "id": "98045c3f-e5b0-498c-a560-76e3a07b0d05",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9691c4ce-170d-4cd3-84b2-6bf330402d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87474cf9-06db-4d35-8e27-684811cfa82b",
        "cursor": {
          "ref": "de20687a-8aed-4706-94f5-058f668f4bc2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "85575506-0545-469a-aff3-66b04b0f6524"
        },
        "item": {
          "id": "87474cf9-06db-4d35-8e27-684811cfa82b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72fc6f19-0c10-4951-8516-eb66c7ba3483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da2abe5-496e-4aa2-8eca-47c025ea7bf5",
        "cursor": {
          "ref": "735e7c9a-ad09-4aa9-9164-035f5e88608d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c71ad56e-6b6a-4615-af4e-b98879402d8e"
        },
        "item": {
          "id": "3da2abe5-496e-4aa2-8eca-47c025ea7bf5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97a2908c-0f65-476d-b9df-50e988b29c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ec56d5-4e48-4d8f-8dea-973d24cc1a7f",
        "cursor": {
          "ref": "87f6b23e-b6d8-45a1-9f94-643e8f533d19",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ce49cd35-d416-4b10-a5f6-488c1f0b3bd0"
        },
        "item": {
          "id": "28ec56d5-4e48-4d8f-8dea-973d24cc1a7f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ca030851-c1a2-4bd9-b03f-abead92a4ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f868608f-58fc-45b3-b7a4-f63ecaef5584",
        "cursor": {
          "ref": "97e0901c-728f-463f-95b6-c44e005ab6f5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d43b93e9-120c-4f70-bd6a-3917f70cb79f"
        },
        "item": {
          "id": "f868608f-58fc-45b3-b7a4-f63ecaef5584",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4c65aa50-7f0e-40fd-8ead-6ac19e15195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465991ca-200d-4743-920e-fdfd843aec7c",
        "cursor": {
          "ref": "0a0d1a5c-c348-4734-8c32-c43762e1a542",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d36093c-b331-403d-bd13-6e1a63ea3644"
        },
        "item": {
          "id": "465991ca-200d-4743-920e-fdfd843aec7c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f3e12123-56a1-4817-b7a3-4e13c1eb26ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54a47db-3000-4da7-b349-52ea4f935556",
        "cursor": {
          "ref": "95dad144-c8e8-423b-8281-1c4de76c5022",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9c50cf7c-de35-4d8c-8e16-5c560dd630de"
        },
        "item": {
          "id": "e54a47db-3000-4da7-b349-52ea4f935556",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dec1ba0a-cec7-4b3f-a26e-9dae9990aa23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6418479-66da-45b0-89cd-868784208aa5",
        "cursor": {
          "ref": "16c3e8c9-2e9f-4ff3-8630-4566530bc959",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1e68eeea-9ad4-41bf-a9a2-1e98c3ada4fa"
        },
        "item": {
          "id": "d6418479-66da-45b0-89cd-868784208aa5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cde0e691-f51f-4c7b-ac3f-f1d4944836cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e127c5af-541d-4ed2-8f3e-fa875020d859",
        "cursor": {
          "ref": "20275692-4e0d-445c-acb7-da991132cde9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9f3fe717-881f-40c7-9bf0-ced0e96bc5eb"
        },
        "item": {
          "id": "e127c5af-541d-4ed2-8f3e-fa875020d859",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8ac1ba7b-8d69-4a50-82a1-69d82b481943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aa2d39-b823-4150-9fb3-07a272f30b62",
        "cursor": {
          "ref": "8c7271db-fccb-4dbd-8b9d-4cd8a2f81b3c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6efce81d-3a62-4549-9485-a54a7cf0e11f"
        },
        "item": {
          "id": "c7aa2d39-b823-4150-9fb3-07a272f30b62",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bba0811c-0bef-4cec-bc73-22d18b27f4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8ad137-5989-4312-b1bf-8c36615cf853",
        "cursor": {
          "ref": "f9607796-0944-4590-a905-4defb96d71e3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cac11304-88f8-463d-bd44-510473485e28"
        },
        "item": {
          "id": "5d8ad137-5989-4312-b1bf-8c36615cf853",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "33d6c3fa-bdd0-401f-a8a0-7f4364306073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c8673b-0de3-4069-9efd-7bd795ddb14a",
        "cursor": {
          "ref": "b64f0613-a000-4fa8-85ea-d40131dfc91d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6916071-32e4-4602-80bc-21d395d63a6a"
        },
        "item": {
          "id": "58c8673b-0de3-4069-9efd-7bd795ddb14a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "97b6d7ae-4658-4629-aab2-bbb29ea00603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8479104b-c5b2-4242-94be-60c0e80358d7",
        "cursor": {
          "ref": "85223a64-2cf6-44c4-8f37-bb301df1a97c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "53f93315-c97e-4786-a8f0-0dbf9d6ec24a"
        },
        "item": {
          "id": "8479104b-c5b2-4242-94be-60c0e80358d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3f7b3f49-c414-4548-9be1-456645a79c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb451d81-d90f-45b7-93eb-2de2cf8ce6e3",
        "cursor": {
          "ref": "a43ffd40-1395-4209-a152-0bf136ff6c8f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "37fd622e-8d68-4f61-9ea1-439ac8579f16"
        },
        "item": {
          "id": "fb451d81-d90f-45b7-93eb-2de2cf8ce6e3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e373981f-3146-470d-9d73-83fd531a20bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d600f8d7-d357-4b1f-936f-eed7e8b0a231",
        "cursor": {
          "ref": "d52171c2-cf1d-4fcb-847f-3c653e8e2738",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "30860ff7-4e55-4f40-a064-ff4431d44d22"
        },
        "item": {
          "id": "d600f8d7-d357-4b1f-936f-eed7e8b0a231",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce588343-d529-4b6c-8b58-a942ce9e316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1a5979-1e4d-4f28-bf77-38af2a0d265e",
        "cursor": {
          "ref": "5b0df65d-f44c-48cd-bdc5-adb0378de60c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5dea55ba-cca7-4d33-bb13-b7c014d951b9"
        },
        "item": {
          "id": "5e1a5979-1e4d-4f28-bf77-38af2a0d265e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e422cea-bf29-4f88-8c2d-693ebed67c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89211b2-476a-46ac-a341-cffb1018eca5",
        "cursor": {
          "ref": "7adddd91-30ef-498d-ad9e-4825d3c39b7c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "99d7ae35-fdc8-40dc-97c2-abd6df867eb0"
        },
        "item": {
          "id": "d89211b2-476a-46ac-a341-cffb1018eca5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "78f8667f-1b82-4618-987f-ec1e868a1b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f710bc7-a21b-4226-bc4f-aaf0607155a3",
        "cursor": {
          "ref": "c94a17b0-d667-4f28-b2ff-1de03b58c048",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3b3326b0-97df-47f7-b860-65ec8e5b762f"
        },
        "item": {
          "id": "7f710bc7-a21b-4226-bc4f-aaf0607155a3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ccfc4b3-3cb8-4066-82dc-6a22d8f15cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24b328d-6cd5-4375-896d-9b023d343fc8",
        "cursor": {
          "ref": "fa0f86a3-ef9a-47c4-b5b0-de264f3831f6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1138c375-fb4f-4b42-855c-b14b401bb2c9"
        },
        "item": {
          "id": "f24b328d-6cd5-4375-896d-9b023d343fc8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "82d96dc5-3861-4666-948f-953fe1f244a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22252792-f896-4957-94a8-16b03e3e5303",
        "cursor": {
          "ref": "5e82a7b3-1ad4-49e2-ade3-f97083d6bff7",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d7c7eb2-6413-4528-ade5-673ba6df0bce"
        },
        "item": {
          "id": "22252792-f896-4957-94a8-16b03e3e5303",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01c8915a-0ea7-4ae5-b6e5-91e0f60a3740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253952b-ea0d-4281-aa88-0eb425ccab35",
        "cursor": {
          "ref": "c8646573-bea1-49bc-907e-4dbf225bd29c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31e2a982-a510-41cc-9aff-2adfb1e6b50c"
        },
        "item": {
          "id": "8253952b-ea0d-4281-aa88-0eb425ccab35",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5226d235-2c0b-470d-b1f9-1432d7afd373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8643de5e-b818-420a-94ee-8ba9a3b4bcaa",
        "cursor": {
          "ref": "8f85ddcc-3c9c-455c-a600-4e135b3bc2e5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d5983b68-77e5-4d0c-81ac-01f6f30fc523"
        },
        "item": {
          "id": "8643de5e-b818-420a-94ee-8ba9a3b4bcaa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0c186319-bed9-4817-b5ba-550a179ed8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5358cad-d547-40ec-88e3-8397e8ebf3b3",
        "cursor": {
          "ref": "1e3f49e8-ef19-4544-ae0c-b6620a7c9a3b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3816eb07-e4af-4c66-9341-30a9f856b4e4"
        },
        "item": {
          "id": "a5358cad-d547-40ec-88e3-8397e8ebf3b3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8459153d-ca38-4d83-8862-e7929d95e371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7309dfcc-5553-4a78-b4f3-4d53ac295605",
        "cursor": {
          "ref": "c99e754e-cb93-4bb6-9592-e6d1f0d8ab25",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dba1cf43-22ec-40ad-b1b8-95f388472405"
        },
        "item": {
          "id": "7309dfcc-5553-4a78-b4f3-4d53ac295605",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8bc614b-6707-4266-8fd7-56cc7bc3a8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5c8c93-b98a-47d6-855f-109467ff560d",
        "cursor": {
          "ref": "f4226c52-0508-4173-953c-366918866900",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1c3a33f3-cbfe-47b3-a692-1c2071e3446b"
        },
        "item": {
          "id": "bc5c8c93-b98a-47d6-855f-109467ff560d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc927ada-d5e9-4da5-b9e0-81b3a64aac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f022020-4670-41eb-b80e-ae05ade108fa",
        "cursor": {
          "ref": "4ecf13e9-f09a-4a59-a172-dd330fd36fac",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0366f93b-42d2-4fb4-8985-8dc0d3e47bd5"
        },
        "item": {
          "id": "2f022020-4670-41eb-b80e-ae05ade108fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8dc4fcdc-0f59-4f64-9f68-4473e4210c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d28311-9cf7-4357-b1d7-3a42fceadac9",
        "cursor": {
          "ref": "4f36fbaa-dead-486e-893a-279a9cb5d2aa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a52a6acc-bf9c-4808-971e-efec8ae160b2"
        },
        "item": {
          "id": "05d28311-9cf7-4357-b1d7-3a42fceadac9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9cc05a2b-eefd-4895-ba55-5cdfe655cebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87188d7f-cbd0-44a3-a59e-c50974b2f223",
        "cursor": {
          "ref": "13d85f82-2477-4e84-8350-339a283d4568",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "edb5fca4-2145-4373-aeb7-f438b81fd221"
        },
        "item": {
          "id": "87188d7f-cbd0-44a3-a59e-c50974b2f223",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d6a21672-1744-492f-ad4c-c42489d4f61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da77b140-2ce4-4c58-8b10-3edbe06b2afe",
        "cursor": {
          "ref": "be1bedcc-f113-4939-97b7-2dc3fdd03d63",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "71e701cd-ded2-42d0-9ab4-679efc183341"
        },
        "item": {
          "id": "da77b140-2ce4-4c58-8b10-3edbe06b2afe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "84a2f773-089f-4c87-b4df-97d7e64c6c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d410a8fe-384a-45e3-b931-34c21964eb68",
        "cursor": {
          "ref": "c6b279c8-37bc-4fb9-a74e-66ac0c5b00c1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f6c04387-d265-4a14-a7f7-92b750556e29"
        },
        "item": {
          "id": "d410a8fe-384a-45e3-b931-34c21964eb68",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "03b9c30f-e00c-4690-851a-7166c073a401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae924da4-4525-4b1b-9a5a-96a02c141a63",
        "cursor": {
          "ref": "84d5fbd1-2d20-4ad5-9ae3-6e6485bb2635",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f51eb662-2916-482f-a010-85a8d6e0a3f2"
        },
        "item": {
          "id": "ae924da4-4525-4b1b-9a5a-96a02c141a63",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f90d7204-9ebc-469d-8bf6-fd3c5edbfc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5513d72f-90d4-4f4e-bc36-61c913258ee0",
        "cursor": {
          "ref": "f25539c8-8a6c-4079-9952-0b291770e4f5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b761c0f-733c-4120-a62f-ded287e69889"
        },
        "item": {
          "id": "5513d72f-90d4-4f4e-bc36-61c913258ee0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2c6fc6a4-0a7b-482f-b15b-2d4321d59cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28065a5-c60a-423f-8d5b-dd139863db11",
        "cursor": {
          "ref": "b92bddc0-fa88-460c-8894-064272751195",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7d590529-ffeb-4e9a-a94f-b3490acc17e9"
        },
        "item": {
          "id": "a28065a5-c60a-423f-8d5b-dd139863db11",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1cfacb90-1a6b-43d3-88fc-31cda8a1910b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97033aa-eae3-4088-82b3-010fba1a752a",
        "cursor": {
          "ref": "6b82059a-db65-40dd-935b-1f8b27501c2b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e6cf2072-ae7a-4d5c-bb7f-bf7534d5fdcc"
        },
        "item": {
          "id": "d97033aa-eae3-4088-82b3-010fba1a752a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5417e0b3-6f60-4c20-aeb0-cdc0946d65ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf96455c-f4b0-4643-a286-3f5b6bb9fc51",
        "cursor": {
          "ref": "71b42172-e438-44c7-b4ea-2de6e3ead508",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "063b2c52-33cb-469e-8408-698867e07f9d"
        },
        "item": {
          "id": "cf96455c-f4b0-4643-a286-3f5b6bb9fc51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "63797d2f-bb60-4858-b576-c168fdef2fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8652d363-f393-4546-8a96-8404bd9e16f8",
        "cursor": {
          "ref": "52d65007-d64d-4edf-a323-62347180f304",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "935332c9-8c23-41f5-9ff5-0e51a8928d44"
        },
        "item": {
          "id": "8652d363-f393-4546-8a96-8404bd9e16f8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5945fb76-f67a-4282-8d17-85d738043222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5895636-f604-44fb-8428-0a19ddee026c",
        "cursor": {
          "ref": "fa2f116c-ab9b-4ffa-962d-24e6d764a93e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "42c06fd1-4c44-4f97-b7d8-a86d0d78450a"
        },
        "item": {
          "id": "d5895636-f604-44fb-8428-0a19ddee026c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab9e0965-d8df-42b7-8cee-5f1d8f239390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64ff12b-6263-4966-90f7-d772b0c3d6f2",
        "cursor": {
          "ref": "6a267efe-24d9-4876-bdee-449cae8ff835",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "46bb9793-3205-462b-aa04-b0d175be417a"
        },
        "item": {
          "id": "d64ff12b-6263-4966-90f7-d772b0c3d6f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2df392ee-7c42-42ff-8c15-1c324269148e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae49713-9c59-4c00-858f-b5f8292c5ea8",
        "cursor": {
          "ref": "6309acbf-6059-48da-94a0-164c7d6dc401",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1cf86d2a-de1f-4bfe-8b1a-f8b753703352"
        },
        "item": {
          "id": "aae49713-9c59-4c00-858f-b5f8292c5ea8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "156429e0-ce59-44c1-9a51-73004731dca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414bf3de-2404-450d-b493-4e8d90dfceba",
        "cursor": {
          "ref": "ef185feb-84d6-4b67-81a5-ea5a2f9787ab",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d9e54112-98b2-44a0-b71e-944d0802be6b"
        },
        "item": {
          "id": "414bf3de-2404-450d-b493-4e8d90dfceba",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8b8fa4db-f4d9-490d-b0b9-b85273a0a6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28f2d0-8481-4008-8462-2e406784d83a",
        "cursor": {
          "ref": "c70fae10-1a9f-40b3-83c7-fc9085470eb9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2fce804a-5931-4f7f-a924-1987e8b42174"
        },
        "item": {
          "id": "dd28f2d0-8481-4008-8462-2e406784d83a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e50e441d-6204-4d03-b564-e71aedb91c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e5356c-1192-4e67-8c78-9dc99307bf9f",
        "cursor": {
          "ref": "9ed3c0d2-0f6f-44a4-b165-c33ec34bf7e9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3130ced4-d8aa-4a29-932e-3112a1e17149"
        },
        "item": {
          "id": "a7e5356c-1192-4e67-8c78-9dc99307bf9f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "516b1ee3-3dee-47b7-a00b-fc1b1592dd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34bc85-c774-4610-bfa8-86ab8adefa4d",
        "cursor": {
          "ref": "6ecb0cb0-28aa-4cc3-910c-7e4600587132",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "434e5cec-fafe-421e-8092-9a9e84ed26fe"
        },
        "item": {
          "id": "bc34bc85-c774-4610-bfa8-86ab8adefa4d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6be42357-f366-4869-a690-bf50acdd3cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a46d68f-e1e0-458b-b1ae-c34b4af461dc",
        "cursor": {
          "ref": "46f6e523-6519-4936-9a6a-503377ca4f8b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "39029ea1-03bf-4ea1-91d9-b5a4e735db95"
        },
        "item": {
          "id": "4a46d68f-e1e0-458b-b1ae-c34b4af461dc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0063c0b6-d2ff-444b-bcce-b91491d33681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e33121-ede4-404b-a549-90b1ebc7a4c0",
        "cursor": {
          "ref": "04208436-d426-4ed5-b738-56df2d570830",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2241a561-3725-4573-aba1-585f48c20b85"
        },
        "item": {
          "id": "e6e33121-ede4-404b-a549-90b1ebc7a4c0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d25bc135-7233-4c71-a972-79652819d341",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0875e5e2-a9b8-43de-8d15-cf4cc01ec1ac",
        "cursor": {
          "ref": "113f352d-c037-466b-9217-a808af7dc3f6",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f83b71c5-b1b8-4ee9-b6eb-d4d2287022c5"
        },
        "item": {
          "id": "0875e5e2-a9b8-43de-8d15-cf4cc01ec1ac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7bc7cbd0-98ba-4c77-85e1-dbc5bde862c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2394a79-1856-42aa-a5bf-41945b03226c",
        "cursor": {
          "ref": "533e8b81-c7e4-49fa-80c6-dd4026dd4cfa",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "24850bf1-b21e-423c-8864-c84199e787dd"
        },
        "item": {
          "id": "f2394a79-1856-42aa-a5bf-41945b03226c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "10b34952-f3cf-488c-975c-66438783dd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0229fe-6bcf-4c16-a840-dd17cddd7c4b",
        "cursor": {
          "ref": "4d22d43d-ee11-48dc-af54-5e5536bee4da",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "862b577e-231e-4e94-89d5-6d8bfecd4f38"
        },
        "item": {
          "id": "6b0229fe-6bcf-4c16-a840-dd17cddd7c4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0d0f8fcf-df53-4d66-adf1-1a7c7b1867fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0ba381-33a5-43c6-893a-166748fc7244",
        "cursor": {
          "ref": "09fc9717-0ff6-49c4-8102-a491571f5e8e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "24b5deca-49b6-496d-9f27-99fc7b7bef59"
        },
        "item": {
          "id": "fb0ba381-33a5-43c6-893a-166748fc7244",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6595f33f-eb6e-499a-9e84-edfad04603bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522e999a-fa81-4a17-aadb-3b681310978e",
        "cursor": {
          "ref": "db5d9482-59d4-4c4c-81d1-3fc22b3484f7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "89688466-7aae-40d4-9ff4-0c9d2f40ea4f"
        },
        "item": {
          "id": "522e999a-fa81-4a17-aadb-3b681310978e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f795388c-f520-4805-a7d9-5930e089a0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eba919d-a47c-43d3-81c7-b1cc796a76cd",
        "cursor": {
          "ref": "28e8b114-07d8-487d-9676-b135798f72d1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e9c3727c-c0c0-4903-8710-568876ac114d"
        },
        "item": {
          "id": "0eba919d-a47c-43d3-81c7-b1cc796a76cd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "86e927f5-6b70-467e-b563-f2fda1a3e9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c02c465-e6a5-4ffb-ada4-bc6dd2f828cd",
        "cursor": {
          "ref": "156b0753-cd96-4de8-8ca5-b19097b91e1b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f38b10d-251c-45d7-81b1-3e5da7842af2"
        },
        "item": {
          "id": "7c02c465-e6a5-4ffb-ada4-bc6dd2f828cd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ef9db3e6-dfe3-413f-805d-dc5484f5a38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15afd3f6-db48-4087-a71d-207fe6e99fb7",
        "cursor": {
          "ref": "b991a1f1-78f7-4d74-932b-ae02148e42bb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ac893557-1566-49c9-a862-604412051b2d"
        },
        "item": {
          "id": "15afd3f6-db48-4087-a71d-207fe6e99fb7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e4aebd8b-4023-4939-8a30-36c2cd13d8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb53892-8e06-4d02-abc5-c048cd6ea08d",
        "cursor": {
          "ref": "2c6b427a-9bee-440a-b583-183c02fe8152",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7ae3dfe4-d414-4be2-bb83-baa7c5b52a73"
        },
        "item": {
          "id": "9eb53892-8e06-4d02-abc5-c048cd6ea08d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a7087d17-03e2-4fc6-99c3-b1554137edaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129435d1-49cf-4376-b1d4-7e7588fc84b6",
        "cursor": {
          "ref": "adb28411-966c-402d-b557-ca2d4ba8572b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "485d4581-51df-406a-85fd-cc8b66d101ff"
        },
        "item": {
          "id": "129435d1-49cf-4376-b1d4-7e7588fc84b6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1eb3a270-ec49-49b5-a4be-66a73f202248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c970900-d759-43f1-b727-044aa772345c",
        "cursor": {
          "ref": "7176e875-5a40-4ed4-b9fa-3de41c8e762f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "00c99d0c-1b56-4ebf-b67c-b32af91f7c55"
        },
        "item": {
          "id": "3c970900-d759-43f1-b727-044aa772345c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a30adfd5-56eb-4de4-af27-e0d45a788334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467163b8-285e-4599-9a9a-6c7ec2fe670a",
        "cursor": {
          "ref": "e74c2bd6-d001-4e3b-acb7-2dbac7e4c91b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "74bbce93-789b-4ac3-8d42-820e7173d884"
        },
        "item": {
          "id": "467163b8-285e-4599-9a9a-6c7ec2fe670a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "35d61961-8489-43ff-aea8-d724dc63530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58984eb2-dbcc-4de3-a331-4ad3348dbbb3",
        "cursor": {
          "ref": "6aa92da4-c2f0-4874-a1aa-49f1b42cb788",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f523601e-2dc3-4d4f-b811-dbc4c0bafeaf"
        },
        "item": {
          "id": "58984eb2-dbcc-4de3-a331-4ad3348dbbb3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8ead229a-d896-47a3-bb44-6555ee9bb4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d360c11-837e-4265-a730-8be916ec235a",
        "cursor": {
          "ref": "02801118-8989-4571-9c69-aa947333f3b4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a0091768-cbf9-42ea-9b6f-644571c4b1cb"
        },
        "item": {
          "id": "7d360c11-837e-4265-a730-8be916ec235a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c21e93ab-eda8-4ebe-b8cb-f15165782c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad12c4f-1f7d-4750-84c8-b5aca94865a1",
        "cursor": {
          "ref": "15a2f1db-b5aa-472b-b05a-7929e0f42e40",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b5393ff3-1b54-4a11-953b-8fef1e17e122"
        },
        "item": {
          "id": "9ad12c4f-1f7d-4750-84c8-b5aca94865a1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "24db5d25-b98a-40ec-aa8c-3ff566465897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e59906-dbae-4787-8a42-872b09dd4334",
        "cursor": {
          "ref": "e1ed587f-0e6a-48ae-b5ac-c5d943b0f3bb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "379c7634-0a09-4908-8cf6-d114ecaac36a"
        },
        "item": {
          "id": "32e59906-dbae-4787-8a42-872b09dd4334",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "990854b9-e261-4e3b-a698-e1941c3db1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7138daa-b2dc-4679-a846-67b07bcf1f85",
        "cursor": {
          "ref": "20c1ed81-00b3-49c0-8eac-82561d6ab1d0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6a7b8a19-3ba1-46d6-98cc-7923626afe7f"
        },
        "item": {
          "id": "f7138daa-b2dc-4679-a846-67b07bcf1f85",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e334afac-9e55-4d82-a365-9e80cee7182b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac92c3a-ef13-4d54-a036-17b33f5f2c8b",
        "cursor": {
          "ref": "e7e10074-185d-43e4-a182-ff68fc1009fb",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fbd7d64c-df98-4a7f-9928-9bc5f68e43d1"
        },
        "item": {
          "id": "eac92c3a-ef13-4d54-a036-17b33f5f2c8b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "08f788f0-dce6-42a1-8071-8ba497eace40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a996a845-ca40-431e-92ab-571800a50071",
        "cursor": {
          "ref": "bd9f5eb9-6a77-4798-9dd9-19517591492c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c727bd27-126c-4466-9309-db8c301ee567"
        },
        "item": {
          "id": "a996a845-ca40-431e-92ab-571800a50071",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "82f60267-3de9-444a-8cd4-49e93704e26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436fb1f3-c6f9-471a-ad78-270abb4f3c7a",
        "cursor": {
          "ref": "bc9cf9eb-a16d-4b74-b1bd-fcd2430b2765",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2049f2f9-e2f7-400d-ae93-5e7cc9fa1c5c"
        },
        "item": {
          "id": "436fb1f3-c6f9-471a-ad78-270abb4f3c7a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c1c11f7c-b4ea-42dc-9fdf-26fd3d64f92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7f6012-dcac-4bfe-adab-82a97b7043cd",
        "cursor": {
          "ref": "19d57e4e-3869-4ebf-96bb-02aa5a8d5e7e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "beba8fa3-4c1d-4f30-9db0-7bbc3c1db6b1"
        },
        "item": {
          "id": "4f7f6012-dcac-4bfe-adab-82a97b7043cd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fbf187cb-1fcf-4604-bbaf-9040e5fdfe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79414b1b-c782-4fb7-b4d9-edea01d2ce02",
        "cursor": {
          "ref": "5fc10b38-32fb-43e3-b1aa-4e3af656ca89",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ac8abae1-210c-4acd-8154-f2618d8d6c78"
        },
        "item": {
          "id": "79414b1b-c782-4fb7-b4d9-edea01d2ce02",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7088268b-6778-4d69-86f4-37018b914ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5d2433-ee94-4944-bcc4-cd680f29041d",
        "cursor": {
          "ref": "50a1f358-ba01-4f41-b280-97969aa4930b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "82ec4021-d083-4066-9355-edaf269b47b8"
        },
        "item": {
          "id": "3e5d2433-ee94-4944-bcc4-cd680f29041d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "39aaff5b-8d7e-4ee6-ad01-0f69be94e637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30d19aa-c0eb-4023-8123-0bb35a71fd84",
        "cursor": {
          "ref": "e4fc2849-ff77-4c01-a63a-0219d2e8cb46",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f40e67eb-79be-4e55-9cb1-c8d6d4ae90c5"
        },
        "item": {
          "id": "c30d19aa-c0eb-4023-8123-0bb35a71fd84",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "31020d58-66a8-4038-8015-1c2746936d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1bfbc6-81c1-42e8-bc90-e7655ff79204",
        "cursor": {
          "ref": "dfabd806-aea5-4567-8307-06af85d83655",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "39bffc4c-4945-4884-94eb-93cff432a790"
        },
        "item": {
          "id": "9e1bfbc6-81c1-42e8-bc90-e7655ff79204",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "07f0bf4e-3b5b-43db-89eb-81b9ce32500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1995f82d-854b-4516-8b1b-9574a50b7be7",
        "cursor": {
          "ref": "935c450e-14a1-4857-94ce-714be7e2c6a1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "32bd4bac-3a3b-42e1-8f41-39da94f1db2c"
        },
        "item": {
          "id": "1995f82d-854b-4516-8b1b-9574a50b7be7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c6d5316c-ba1e-48cd-a64d-06d5bdbec312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2ef334-ad1c-48e0-8c97-8a39e85c44cf",
        "cursor": {
          "ref": "013dda49-b991-4d1f-959d-5d8228dc41fb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4047eb37-87ff-45a6-870a-5cfd26871418"
        },
        "item": {
          "id": "ca2ef334-ad1c-48e0-8c97-8a39e85c44cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a292ecec-d2fd-4b89-aa5e-94ff42fb7514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cc3b4b-06dc-4ef6-acd9-6a42347a41da",
        "cursor": {
          "ref": "3e114db9-323f-46f3-a0e3-6a88a5ec9f24",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2f1333d7-d3d7-4435-b216-58a0ef6d27fd"
        },
        "item": {
          "id": "56cc3b4b-06dc-4ef6-acd9-6a42347a41da",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bc0bc42a-4c0f-4f21-ab3b-35e1105cddef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4a27b8-470c-45e3-8011-16d1b8acac5f",
        "cursor": {
          "ref": "784f0e31-b6b9-47cf-8015-b1df866ca51d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7028d2d7-34b2-4493-b8a1-9fe2c19befdb"
        },
        "item": {
          "id": "3c4a27b8-470c-45e3-8011-16d1b8acac5f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d575b0c0-50fb-4140-aff3-707eb0778059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3bee0f-842c-4d09-b0bc-e394557d4271",
        "cursor": {
          "ref": "edadd158-2db3-4d9c-9570-b6a067dd2020",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eec964e9-3450-40ec-ad7d-80cd0179fcef"
        },
        "item": {
          "id": "2a3bee0f-842c-4d09-b0bc-e394557d4271",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "962746df-5268-4201-874f-ca12f0447e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f06e4e-efbd-4f52-87ba-f713cbca5a4c",
        "cursor": {
          "ref": "c125b6b1-0fda-4a1c-87ac-1319fe1ce701",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cacc8a4a-22d3-400a-97b7-e9a5c363492c"
        },
        "item": {
          "id": "92f06e4e-efbd-4f52-87ba-f713cbca5a4c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "23ff3d90-f8ec-42bd-ac83-4c8af040c4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598ab519-92a4-44cf-8e54-55e101508fb0",
        "cursor": {
          "ref": "a09ed20d-9654-4616-8163-787c44a2b998",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "28ffedfc-3049-4b9b-b353-3a762e3c2d58"
        },
        "item": {
          "id": "598ab519-92a4-44cf-8e54-55e101508fb0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ec91db37-3c2e-473f-9784-4ff79b3632af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88416b55-265f-4208-8b2d-3886ef10cec4",
        "cursor": {
          "ref": "222e8e06-c7e8-488a-919d-0b0563ffb2c0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5b1cb6f3-4f1f-479f-8bfb-71675e15fb8b"
        },
        "item": {
          "id": "88416b55-265f-4208-8b2d-3886ef10cec4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ef640701-06c0-483f-b259-54f16319b92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd143e8-a2fd-4adb-b6ef-506fd020968b",
        "cursor": {
          "ref": "31cc35b2-c57c-40ac-aea8-e8cd8f957bfc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "eeaa7e33-b2c4-486c-aa9a-c80d6a9e6f09"
        },
        "item": {
          "id": "dbd143e8-a2fd-4adb-b6ef-506fd020968b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "318cead4-78a4-4b71-82e0-bd85d7fc8f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69055088-8e4a-403f-807f-5d9cbdca4786",
        "cursor": {
          "ref": "aff5d3ca-9ccc-4cd5-8431-9aa42df58744",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5d21be4f-8db8-4578-b639-5c32b5a9559b"
        },
        "item": {
          "id": "69055088-8e4a-403f-807f-5d9cbdca4786",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c83d4595-c7e1-4f76-b214-13c8a9717c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95bc01b-16e1-4910-a230-85943ed86689",
        "cursor": {
          "ref": "9a64d6f2-a52c-48a4-82c2-8464b7a38ba9",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "426c38ea-633b-40c4-aa4c-231cd07164ba"
        },
        "item": {
          "id": "b95bc01b-16e1-4910-a230-85943ed86689",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "479fd639-8a6d-41ef-b1c3-e5dfcdffd4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b3f4c9-e9c4-4d23-b8c3-76c7550b6f48",
        "cursor": {
          "ref": "2ddcb3c6-620c-4281-94c1-6ee2d5333a86",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aa249b15-1b3a-438d-9329-b5f5983c237d"
        },
        "item": {
          "id": "a9b3f4c9-e9c4-4d23-b8c3-76c7550b6f48",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "99de9084-929b-454a-b225-f81d9c9c8583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f095632b-4f1d-4d3a-ab85-cdec0e63c904",
        "cursor": {
          "ref": "c28361d2-4f83-44b2-9a77-97997eaac798",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a011b721-5ab0-4678-a359-8ec1e98ee105"
        },
        "item": {
          "id": "f095632b-4f1d-4d3a-ab85-cdec0e63c904",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1dd9a6e0-00a7-4af2-bbfd-8742819ba784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37051fe3-3c89-49de-88a9-1c0cfb8becb5",
        "cursor": {
          "ref": "93cb819f-fa28-4846-b94d-48c71a770bb0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "740b5508-20e3-40f5-bead-cd0d96ad748d"
        },
        "item": {
          "id": "37051fe3-3c89-49de-88a9-1c0cfb8becb5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5cba4f76-925b-46a2-8953-96be88402a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd1e436-33c3-46ec-82c8-02a63b8aea69",
        "cursor": {
          "ref": "a80706f5-fac3-453f-b2a9-476e960563a5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "928c7210-e415-4dba-b9f3-802c0e4d80fc"
        },
        "item": {
          "id": "ddd1e436-33c3-46ec-82c8-02a63b8aea69",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1d6d21b1-ff95-49a9-8f27-a2a368b6cf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9b0d47-acd7-4342-925c-63a8e0db1be1",
        "cursor": {
          "ref": "f3f0af26-a876-4e87-b78b-718415c198b0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "483242ec-dcc5-426f-b8f1-7f287d4550fd"
        },
        "item": {
          "id": "5a9b0d47-acd7-4342-925c-63a8e0db1be1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "601b89df-b2ad-4eed-a047-c3f156659645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749ab0fc-b067-4e8c-a3b2-5af4c2485de8",
        "cursor": {
          "ref": "10ce1022-9703-4fc2-a0af-6a8a34ffcaff",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "56bb1cf6-8ff3-4c1d-981b-4d079e26bf43"
        },
        "item": {
          "id": "749ab0fc-b067-4e8c-a3b2-5af4c2485de8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6b3e1eee-7948-4889-952e-afdbb889f030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024c3747-687c-40ba-8b2c-2184945d373a",
        "cursor": {
          "ref": "860089a0-717a-41f5-845c-291859689eb3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a4d67179-f460-4226-a5b4-d0577a0e566c"
        },
        "item": {
          "id": "024c3747-687c-40ba-8b2c-2184945d373a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8f83f597-2bba-48dd-ba0b-be1b316de111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceae658-0ccb-4680-862c-b9318503475b",
        "cursor": {
          "ref": "19ddbdaf-5718-4fe9-a6fc-c6fe45a3c040",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "24d51421-aae1-4dcd-8e17-697884231495"
        },
        "item": {
          "id": "0ceae658-0ccb-4680-862c-b9318503475b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cfd67c1d-90be-43b9-a900-f70af70c6e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6591c4-27ad-431a-b704-f79e345dac56",
        "cursor": {
          "ref": "3aa940f9-9d35-4d65-bf0c-d12f00cb669b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f8e0a447-0831-4f13-aeab-c7640c2e7bc5"
        },
        "item": {
          "id": "7f6591c4-27ad-431a-b704-f79e345dac56",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fb929876-5e6b-41de-9f41-4eb179560be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc257c8-ccba-42cf-b230-6d17b962ec7f",
        "cursor": {
          "ref": "6d4f4c25-cdf9-4420-8477-e2eb0a2b4449",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "530730f6-9352-4d5c-b12c-61d38e0e9aa1"
        },
        "item": {
          "id": "1dc257c8-ccba-42cf-b230-6d17b962ec7f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "627c54ec-9200-43f3-81c3-f3690f446ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a5d0c3-0d6c-4792-bbfc-cbde11c46297",
        "cursor": {
          "ref": "37cb8746-34b2-42d7-8299-411eb0ee4025",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f2676eff-133e-43c8-ad63-f35a9e9e20da"
        },
        "item": {
          "id": "e0a5d0c3-0d6c-4792-bbfc-cbde11c46297",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "37e7b426-19c4-46dc-b157-26c94cd2c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111a3b15-3b33-4159-9674-4f9f1fa518a0",
        "cursor": {
          "ref": "d5b0713f-9121-439b-b172-57e3956b5f05",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "106f06cd-f507-4d43-af06-a334d9b8d7cf"
        },
        "item": {
          "id": "111a3b15-3b33-4159-9674-4f9f1fa518a0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "637d43ad-0f87-4c13-892f-ed501bf07472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceb50dd-71ef-4641-9089-eeac81b22acd",
        "cursor": {
          "ref": "db3032b8-7675-4be5-86a7-5ab1649f1be5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7f2d18b1-d40e-46c3-8856-e3a53f3fa4fa"
        },
        "item": {
          "id": "fceb50dd-71ef-4641-9089-eeac81b22acd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d9bceef-a512-41ad-a582-ee9ab2b80b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd167d8-87a0-4da2-9ca5-9a8b75369955",
        "cursor": {
          "ref": "2f69efe5-c2f9-4cd2-9d11-b9096dd47364",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ad5451f1-fb76-47a0-b480-90b6410a2427"
        },
        "item": {
          "id": "cbd167d8-87a0-4da2-9ca5-9a8b75369955",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c3f2b212-fea2-4bd0-be30-e85326a6cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ec79e-e769-42fc-ba97-051b3f50ad76",
        "cursor": {
          "ref": "b8731273-ce30-4419-b684-731931e0c692",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eafbff59-8570-4076-84a6-1d2dde4b0742"
        },
        "item": {
          "id": "bc5ec79e-e769-42fc-ba97-051b3f50ad76",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3d06d1a6-0ea1-4279-8361-68affd170353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90411ea3-6aeb-432b-b0e3-bb0210f543f2",
        "cursor": {
          "ref": "87452be3-f128-435a-894c-1ac3a3f17b6f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5723195c-3495-4396-903b-19d25d11b47f"
        },
        "item": {
          "id": "90411ea3-6aeb-432b-b0e3-bb0210f543f2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "432f6213-6463-49d6-8afd-e253476de68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3d741-b5a7-4065-8939-d5ac93d9f092",
        "cursor": {
          "ref": "a0cc2f54-7bd9-45e2-85ce-eeb15d3f79eb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "301b1bb6-86b7-408b-879b-ca4a554422ff"
        },
        "item": {
          "id": "77f3d741-b5a7-4065-8939-d5ac93d9f092",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "79a1bbe1-7dd6-4a4d-9256-06a480972898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fce5e05-21dd-40c5-94c2-bcaadca6f2af",
        "cursor": {
          "ref": "3fcdd067-c078-45ca-815f-4312c3b876a5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eb00fca5-16e4-409e-b6ae-c45f6e7a2d2e"
        },
        "item": {
          "id": "0fce5e05-21dd-40c5-94c2-bcaadca6f2af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f53090c4-e45f-4f65-83ef-df1c99adbe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93527473-8b9e-41e7-8a63-0db0a6ddf054",
        "cursor": {
          "ref": "c247069f-5e83-44d3-ad49-2b6b52087c4c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "944c5a2f-a7f4-4c36-aaf2-a0eddb76146c"
        },
        "item": {
          "id": "93527473-8b9e-41e7-8a63-0db0a6ddf054",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "53d1df3d-bfcb-4e2c-8688-3ddfcf876829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f124cb-56de-430f-be94-8ee2b152ce52",
        "cursor": {
          "ref": "42754ef3-f006-453b-b4d7-8d8d89230fdd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7a201bbe-0785-48b4-883c-f21f778c47a0"
        },
        "item": {
          "id": "09f124cb-56de-430f-be94-8ee2b152ce52",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "446f5a93-e82c-4301-bf75-f97faca0625d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8f4f5-13e9-4366-a02b-c7a5b544c974",
        "cursor": {
          "ref": "90ebd6a0-0a66-474f-bc9c-a05a8aee8524",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f1c8132e-39d6-42a8-8be7-800e38fbdacc"
        },
        "item": {
          "id": "eaf8f4f5-13e9-4366-a02b-c7a5b544c974",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "893d4da0-08b3-49eb-9491-4ebc69d3a531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac39b13-34e9-44c1-aac2-d93f8cc38aa6",
        "cursor": {
          "ref": "5820a013-f082-41d8-aa5c-576ddaaf1c53",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4b64c580-cb14-4a99-983c-e55d32cdb4cc"
        },
        "item": {
          "id": "3ac39b13-34e9-44c1-aac2-d93f8cc38aa6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5f54d796-e883-40af-abdb-89ed77a1f7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aa7154-e8f8-4649-883c-cb712529a024",
        "cursor": {
          "ref": "65a55b89-f35a-4b0a-97f0-ce944858504f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "caeda47a-60c2-439d-96af-39e329eb11f9"
        },
        "item": {
          "id": "a0aa7154-e8f8-4649-883c-cb712529a024",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "82919a3f-63d6-48ef-9771-3804f3302f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c222aae6-736c-44be-8d0c-c32addbefc82",
        "cursor": {
          "ref": "890009c2-02bd-4efb-9fa7-f35e0860eb1f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "90aea5bc-ca59-4c72-b1f4-6dc53392a8d2"
        },
        "item": {
          "id": "c222aae6-736c-44be-8d0c-c32addbefc82",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8613b955-b527-4b6e-82bf-a7d1e789ab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043610d6-aefc-4ed9-8fc3-07fdb303c5f5",
        "cursor": {
          "ref": "b9856665-b66a-48d1-92a9-335bada7a620",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3adfeeee-e436-4fe3-9216-3952d59dbb6c"
        },
        "item": {
          "id": "043610d6-aefc-4ed9-8fc3-07fdb303c5f5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1862ad90-fa1b-4432-832e-a6db6bdbe59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32fae0a-3dcc-4420-9736-2fb443967fda",
        "cursor": {
          "ref": "bc4a2434-af13-4de3-80fd-8677595a282c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "51ff88d2-a3d7-4d3d-8ffd-58179ae35eb4"
        },
        "item": {
          "id": "c32fae0a-3dcc-4420-9736-2fb443967fda",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f5ab6d54-4641-4521-888b-0ff199f80ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d2ed27-30d8-49a5-aba5-1b2d25b10462",
        "cursor": {
          "ref": "66273e0b-40e8-41ff-ac43-b7c7a41417a2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ba58c5fc-6b12-49cf-9b0b-c21ecf14d0ae"
        },
        "item": {
          "id": "53d2ed27-30d8-49a5-aba5-1b2d25b10462",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e6ece50-3a95-49bd-9e91-123e429092b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccf2e7a-c923-4c26-8c14-2c1962187868",
        "cursor": {
          "ref": "91586f9f-0114-41eb-bbbc-1d7559031ef2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "262d8c1d-2ba8-42c9-8caa-445295899ff7"
        },
        "item": {
          "id": "6ccf2e7a-c923-4c26-8c14-2c1962187868",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b206d549-d82f-4c23-b82c-14e519692d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3bb0bf-5ec7-47f9-83be-00dbddc3d7e8",
        "cursor": {
          "ref": "157194ea-42d9-406e-bcee-f5d92c6bdf6a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b716857e-d00a-4890-afa9-2ef53a8d863c"
        },
        "item": {
          "id": "6d3bb0bf-5ec7-47f9-83be-00dbddc3d7e8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "44a41ed8-41d3-47df-bd60-0b273f863dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca14eaaa-8a7d-4cfa-a7fd-76db070239d6",
        "cursor": {
          "ref": "2fed7553-ec92-49a0-8aff-634cb615b4a6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d16dfa09-e8c0-4c5a-9b29-b18d7bdac5f1"
        },
        "item": {
          "id": "ca14eaaa-8a7d-4cfa-a7fd-76db070239d6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "17ebd1b3-f4a0-44d7-9bc0-e2dad8163f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4ba6e-9a49-4929-a97c-9b0243a07f4e",
        "cursor": {
          "ref": "29b37026-7e80-4c50-8c9d-d2f4e6212f06",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0dc4d3ba-2471-4a9f-9f87-e37b635aaa92"
        },
        "item": {
          "id": "d1d4ba6e-9a49-4929-a97c-9b0243a07f4e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "541719af-cd4e-4093-b7f1-eb70bb230f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5be0045-2f3e-4456-ac81-ec410aa66a5b",
        "cursor": {
          "ref": "a4ca20bf-060b-4311-8746-9583751acad7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b5025925-6a89-40d2-a151-102f766dac47"
        },
        "item": {
          "id": "e5be0045-2f3e-4456-ac81-ec410aa66a5b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4506a31d-02fe-45da-8734-5620f8f19460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9ec648-ce0d-423a-b086-741c491e5088",
        "cursor": {
          "ref": "b030b34a-55d4-4695-bacc-b074e4b88618",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cf52bc78-ca74-4f23-a763-e6daa200cdbf"
        },
        "item": {
          "id": "1c9ec648-ce0d-423a-b086-741c491e5088",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "237ca92d-34b4-4373-a0e5-434f13601096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dc8f03-baf4-48b1-9012-418e1fccf118",
        "cursor": {
          "ref": "45fc81a4-ff63-44c2-84e7-7141345e9b09",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "126f564a-2ce1-47fa-b7ec-18a48e62fd28"
        },
        "item": {
          "id": "77dc8f03-baf4-48b1-9012-418e1fccf118",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c181408f-1c57-4d29-9330-424f4daefd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692afc1-ecfa-4c5c-8d38-e8d6d6cf560b",
        "cursor": {
          "ref": "ca6983a2-d2ab-4876-9b2e-b07ffb44e93f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a2f21712-fd2a-4a56-99bb-0c34303dd7ea"
        },
        "item": {
          "id": "4692afc1-ecfa-4c5c-8d38-e8d6d6cf560b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "97442d58-1812-40d4-8094-26f31ca256e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386398a0-e9d0-4836-b3e7-71bd794f63d5",
        "cursor": {
          "ref": "619ca2f4-792d-4966-bbd9-c41e6b9796e0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "47da261d-528e-41b6-8f10-fb2a63f53051"
        },
        "item": {
          "id": "386398a0-e9d0-4836-b3e7-71bd794f63d5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eb64666f-60f2-4d9e-a700-cebc5f0c8aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab13926-6a1c-447e-a6f0-96a238b4b4a9",
        "cursor": {
          "ref": "f78a9e18-d3f2-4961-ac50-0724d591817b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a1a1f7d5-2622-4c1b-aa95-bb2ff50139c2"
        },
        "item": {
          "id": "1ab13926-6a1c-447e-a6f0-96a238b4b4a9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "93260bdf-9ba1-46f3-89d8-12f27f0bc480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da357ab1-f958-463c-a1a8-807e1bec353c",
        "cursor": {
          "ref": "b4b5c7d8-9ee2-464c-a5ee-460ce5ffa8d6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "26691f19-2ca4-4dd7-b440-cacedd3cb951"
        },
        "item": {
          "id": "da357ab1-f958-463c-a1a8-807e1bec353c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "84386fb9-2829-464e-96ee-9a494b5c0b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1558bcf1-3259-45b6-89a7-5ef949ab1fdc",
        "cursor": {
          "ref": "131d5b52-d50b-4ef5-92ba-f9f21860b820",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a95d9d5f-5066-4e2c-9dde-f839d404a565"
        },
        "item": {
          "id": "1558bcf1-3259-45b6-89a7-5ef949ab1fdc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ee9c5137-d1cc-4e6f-8371-22ef25727c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06c7dfc-52cc-4ece-bfcf-508370bc7f31",
        "cursor": {
          "ref": "bb337aba-f482-4d70-b859-383b4196ab2c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "49f667f3-6e10-46e9-88ed-a10e1ee65078"
        },
        "item": {
          "id": "d06c7dfc-52cc-4ece-bfcf-508370bc7f31",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "41526e00-eaea-475a-afbe-83634b359967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1082b8e4-66ae-4383-bf98-0905e1715ec2",
        "cursor": {
          "ref": "807fdc40-bbd5-4b0c-a003-6530212f51f8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f7921b62-0e77-4f7a-8c6b-c02b10df7f63"
        },
        "item": {
          "id": "1082b8e4-66ae-4383-bf98-0905e1715ec2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b51cf3b0-6451-46ba-8583-0095cc0cd7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e62123-036c-4b1e-bd16-4dff8524fa93",
        "cursor": {
          "ref": "cea79c56-668b-4cb8-a673-b245f4dad83c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a7656c09-549b-4cb0-bf12-cfd417e75a14"
        },
        "item": {
          "id": "b7e62123-036c-4b1e-bd16-4dff8524fa93",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "db6e4d6e-8dd7-4fbb-b40c-9cf11b4cefdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feff973-af4a-4c3a-85de-7607c62603cb",
        "cursor": {
          "ref": "2d98a7d7-35bc-49b7-86a5-b265d383b7f6",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "aecca1be-36f1-4ce2-b6a4-8d8f1032d872"
        },
        "item": {
          "id": "1feff973-af4a-4c3a-85de-7607c62603cb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "92233dfb-8981-4081-a0d7-c917f6859b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f6f2b1-bd64-4f1e-a1bc-8daac4747344",
        "cursor": {
          "ref": "4bc21726-92a0-4f69-bd09-de052cf46fe0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c0ce20b7-9b65-46ba-95d9-406c3c0db7e9"
        },
        "item": {
          "id": "e9f6f2b1-bd64-4f1e-a1bc-8daac4747344",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1f67c05f-6b39-47eb-b3c3-580e835e86cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f444391-c351-4384-88bb-6fa667c01004",
        "cursor": {
          "ref": "987f6330-845a-4bc3-8de6-6cd39c62179d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a00f59a0-84a9-409a-a09e-ee3e0f33f50a"
        },
        "item": {
          "id": "5f444391-c351-4384-88bb-6fa667c01004",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "296fe1d3-947d-4875-99ca-4b0659229a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c8ab70-c213-42e3-83ac-f9abc15651b2",
        "cursor": {
          "ref": "43409078-c13f-46be-9a5a-fddbce0f5afd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "87d5db8f-cc36-4eb8-9b05-cb833da9f835"
        },
        "item": {
          "id": "e3c8ab70-c213-42e3-83ac-f9abc15651b2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a4cb7b26-0041-4bed-aaf2-bfaf6fa6cee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62815c4d-3980-484f-8c13-d4290f4a26c9",
        "cursor": {
          "ref": "ee6c5d13-8451-4bcb-b8e6-0f4c002bc072",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "04aaad50-ff5c-4fdc-8bb3-79d4b7617249"
        },
        "item": {
          "id": "62815c4d-3980-484f-8c13-d4290f4a26c9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b5b84167-5d58-459c-8239-79f6db03a180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f039c86a-2e59-4c72-8510-342fa70fe976",
        "cursor": {
          "ref": "27c997a8-33f4-4907-b23f-23c58a51b446",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8933635e-7e3a-4d4a-b6b4-4c67264113b0"
        },
        "item": {
          "id": "f039c86a-2e59-4c72-8510-342fa70fe976",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "53989d15-a097-4c19-bf99-a3481ed9009a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca3297f-693f-40f3-94ad-bab1e3e482bc",
        "cursor": {
          "ref": "3d02ebff-5e56-4202-a975-6be0468a2c45",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f2ec8259-f5a2-4c2c-9529-72d18ff70fee"
        },
        "item": {
          "id": "eca3297f-693f-40f3-94ad-bab1e3e482bc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "777eb787-83a0-4ed8-ae68-720fa67739ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224acfa1-6101-4fe2-8e41-2c46237aeb6d",
        "cursor": {
          "ref": "36ceba88-9e17-4bb8-8b65-51da476aa4f7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "206c2763-d6d6-40bf-b389-0a314656f6bd"
        },
        "item": {
          "id": "224acfa1-6101-4fe2-8e41-2c46237aeb6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "76e686e0-7d67-4b13-9d8b-326007480e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089d92f2-8c6f-4b2b-a05a-1325d82b98b2",
        "cursor": {
          "ref": "33e97b00-e4be-4b14-9edc-090b411f18ec",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "07145214-4b92-4579-b203-4b3aea95e4e7"
        },
        "item": {
          "id": "089d92f2-8c6f-4b2b-a05a-1325d82b98b2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "55b13a91-e2e2-4e49-b442-e00dc4f8c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea8eca9-c7fb-4217-8d53-a9ed2b577ddc",
        "cursor": {
          "ref": "951d39a9-1cf6-4237-84f7-e03b9e27d75c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3621e28d-f5f4-4c41-9438-7482e983067d"
        },
        "item": {
          "id": "5ea8eca9-c7fb-4217-8d53-a9ed2b577ddc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fcfe95c9-e2f8-455d-add4-559904cf1def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa0cc36-6cf0-4e56-b463-f1f25d798c85",
        "cursor": {
          "ref": "fe6f9b6d-d391-4e6c-98d1-c4fb40287d03",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ea96f65b-5a85-40f5-bc6d-d29c6faf30c2"
        },
        "item": {
          "id": "9fa0cc36-6cf0-4e56-b463-f1f25d798c85",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ffe0b6a5-d5ef-40dd-9af7-ba4d8a8fff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9590d762-85e8-48d8-9ee6-a202c1ad6eff",
        "cursor": {
          "ref": "0405c608-62ad-4570-a727-fd9a66f11300",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7f06acc3-3ebb-4d3f-b4d7-8848deded2a4"
        },
        "item": {
          "id": "9590d762-85e8-48d8-9ee6-a202c1ad6eff",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3a7204cc-2e37-4438-b71a-2f32fd3a562e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a26576-f3ac-4780-a91c-9d836d9ece3a",
        "cursor": {
          "ref": "dcd0ac14-6ff5-4e32-b2d7-53edc2992bb9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0bb1edef-8472-4ac4-8260-dad0ab044764"
        },
        "item": {
          "id": "c5a26576-f3ac-4780-a91c-9d836d9ece3a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "db8e2d9e-e75f-4144-81bc-7f6a5dbbb1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0adf6a7-77da-43e3-8f37-0c5d13c65fa1",
        "cursor": {
          "ref": "ce8e104e-bcf2-4bd0-aca1-8c7784815155",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7be528ff-4327-42df-9eed-96681d02c1ea"
        },
        "item": {
          "id": "b0adf6a7-77da-43e3-8f37-0c5d13c65fa1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fa5f898c-8c27-4515-84f8-86c321f155c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c005f078-1e7d-44f5-9d9a-0741a10d8f15",
        "cursor": {
          "ref": "8a01b741-7e3f-453f-b71d-da77a02b6ec3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "13855820-8fd8-47b1-bff5-5760eca94ff4"
        },
        "item": {
          "id": "c005f078-1e7d-44f5-9d9a-0741a10d8f15",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c817065e-7734-403e-a5b1-9a87f872d046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67df58e3-3dea-4d87-bced-1e45f7b223bd",
        "cursor": {
          "ref": "039983b5-69b5-4596-b592-6f7fd5b21209",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3f4f7481-c9c4-41e4-9a10-b526c7e566b9"
        },
        "item": {
          "id": "67df58e3-3dea-4d87-bced-1e45f7b223bd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4b23dc65-fdc3-499d-ba5a-7bce09f42657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc3017-3c43-443b-ab19-147802ea578f",
        "cursor": {
          "ref": "230d93b1-5ae8-4756-9a51-7219f461520a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4ce11e34-4d8a-43ea-93a4-6016968a55dc"
        },
        "item": {
          "id": "72bc3017-3c43-443b-ab19-147802ea578f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "02dcfbbc-6a28-4570-9075-cd6377046136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1368ad62-e5a1-4ef6-aa0a-2c9d8ecb7e7b",
        "cursor": {
          "ref": "0051e47e-50fe-45d2-b958-6ab36f8b2fbd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2e159d7a-c1a8-4107-a9f2-227942df4c36"
        },
        "item": {
          "id": "1368ad62-e5a1-4ef6-aa0a-2c9d8ecb7e7b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af2804a6-b399-4c07-ba30-2e843fdf71f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c35748-fe58-497e-9c44-dbe3651199bf",
        "cursor": {
          "ref": "372cb82b-67f6-40ec-85d3-d5023193bf64",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e55e1314-0d51-4d14-b61d-5d7f465760eb"
        },
        "item": {
          "id": "77c35748-fe58-497e-9c44-dbe3651199bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1bcb1042-63f6-460a-bfab-4a7047adb2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d31513-0fe0-47a0-8550-45ff3f841cb7",
        "cursor": {
          "ref": "5bcaac1c-ee93-4baa-bc06-10436a666e6d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e98f5e30-f626-4f54-a1b5-e5386dc8d488"
        },
        "item": {
          "id": "14d31513-0fe0-47a0-8550-45ff3f841cb7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e0959c8f-f90c-4497-bace-3a24ba86ceed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d76ecf-f2f6-4acf-98c6-55de45363874",
        "cursor": {
          "ref": "4ade65dd-7254-4ae5-a4e3-87d361cb2ee2",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c5b8f18b-7371-4417-9093-6e17a7555caf"
        },
        "item": {
          "id": "19d76ecf-f2f6-4acf-98c6-55de45363874",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55b7de9c-a30e-4cdf-a530-b80971bd6775",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a265a147-5a07-4c0e-a47a-d38107fd3ae2",
        "cursor": {
          "ref": "ee1104d1-86c2-4f10-bb87-73f0a5822cd6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dd62a5b5-203f-41b5-9969-c29c85a0e996"
        },
        "item": {
          "id": "a265a147-5a07-4c0e-a47a-d38107fd3ae2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9e9bafc0-3e2f-4e89-a253-457dd496276d",
          "status": "OK",
          "code": 200,
          "responseTime": 1454,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5960c557-ace5-4968-8e17-9b9a6d8c41c4",
        "cursor": {
          "ref": "8a257514-b535-4eda-a85e-0fd0723cf54b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b0cf69dc-07db-4704-8ef0-305a00b169b0"
        },
        "item": {
          "id": "5960c557-ace5-4968-8e17-9b9a6d8c41c4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a74cc17b-ec1b-4fb0-af17-3b900dd97ca1",
          "status": "OK",
          "code": 200,
          "responseTime": 1330,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725a1c1-d3db-4ce8-924b-c4273d442354",
        "cursor": {
          "ref": "89fb5dd4-b2df-478c-93c4-d7dca97cf0d0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3ccefa11-cfd1-43c8-93bc-5aed265fe38c"
        },
        "item": {
          "id": "b725a1c1-d3db-4ce8-924b-c4273d442354",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e6b5eb12-c1e7-473b-948a-a56f417f2f6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725a1c1-d3db-4ce8-924b-c4273d442354",
        "cursor": {
          "ref": "89fb5dd4-b2df-478c-93c4-d7dca97cf0d0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3ccefa11-cfd1-43c8-93bc-5aed265fe38c"
        },
        "item": {
          "id": "b725a1c1-d3db-4ce8-924b-c4273d442354",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e6b5eb12-c1e7-473b-948a-a56f417f2f6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b57c4d-54e3-4242-9792-4710b3cb7b10",
        "cursor": {
          "ref": "2d0f4157-9d98-4c76-a32c-94a10c88de9e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "733bf539-0aa8-472f-8757-ebe16752fee2"
        },
        "item": {
          "id": "e5b57c4d-54e3-4242-9792-4710b3cb7b10",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5d5ad1c3-349e-4353-90b2-f245e61eebf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a00eff9-ff86-4f10-8970-0cf0f7c4eca2",
        "cursor": {
          "ref": "a315fafb-d833-4297-9d69-c7ae8ae62cc8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "20256bbe-04e7-4fb5-887f-e56fcc1134a0"
        },
        "item": {
          "id": "7a00eff9-ff86-4f10-8970-0cf0f7c4eca2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "300d6d4a-bd5f-4615-9a39-9a7fbdec34ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}