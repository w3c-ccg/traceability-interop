{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "336064e3-a87f-4753-9b74-132f7d5b1997",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fec6f6b6-3234-44f2-bb81-7c643972ec83",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a4dad5d-2be8-4bc8-ad08-0222804147cd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84279643-13dc-40ac-b8cc-27e94474e08a"
                }
              }
            ]
          },
          {
            "id": "b0ebfb38-56d1-4d23-a340-c87d71600320",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54c46d43-7331-4d7c-b4a3-eff425e9d8c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ce7d4c3-7147-4ed3-85e2-de8ad0f0a8a8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "209d1df8-7899-40ed-be36-c1d0f08baa68",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "24b280ed-8f1c-459c-95dc-332e74b14968",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13dec50d-2e48-433e-8589-6140bcc3941e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4bbe9c9-e6aa-4de0-b0f8-71f0a82fb299",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9ba75b1-833c-4d70-b4cb-c1927ce1b49c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6415d5a9-2402-482f-bcd1-b24853e21d93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3aa6802-3f40-4402-a69a-b9575d1ac57a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "727f8d88-741c-4619-9b89-07e70a7fa3cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e4c7281-8118-4cc5-b17b-56ec3b116416"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d7d8175-d679-4dea-a06f-ff5b26617bc3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e7820eb9-c90f-400d-92c7-737a6643c20c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d727dc4-9302-4733-8672-cac314a356aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ac09337-7e94-47a3-8ae1-9d8db13456db"
            }
          }
        ]
      },
      {
        "id": "d6188872-9ba6-4e65-ace1-1a8c2afdeff3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75290fad-92e9-4547-86cc-19d95a25ba19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a8453e3-4f0e-4240-a612-0aba246fc586",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "648d1a15-5f4a-418f-97d4-efb0e43458f5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bbdf18-470e-4a0f-86d3-6b5c8d9b5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0cd3626-b8a9-4be7-8a8b-7333866d4c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b1bbfe-e729-4469-89b1-702b083544d9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55ed702-f273-4ea9-b5f8-a64162d7d506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d38f30f-1067-44fd-9638-f09fb16611fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc216a0-69ec-40a6-af00-b6866ca14d04",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9399ce-c2d2-4ec8-8d28-c62a715ef3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "089c11d7-ac9a-487e-8d5f-3066f7b22328"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52c49c67-d726-4336-bc91-4fbce384a5d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19a626ee-9d88-4a30-a878-4ebd67110150",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9124e886-d346-47ed-9cf5-09df1f79b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee503713-2e84-4561-ac81-43666ef5232e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30e4c45-de59-4a8b-b4b3-2df41a6b6cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8b5393-e1dc-4155-9622-810718a83cbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07e1d73e-5a25-4315-ba5a-34429b72c781",
            "name": "Positive Testing",
            "item": [
              {
                "id": "548b0c6b-654c-4a1a-b7c5-3ac531250f69",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69367805-b384-416b-8bd2-5c80cba3cb44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6858ce90-ac65-479b-90e1-0af4bfcd6fde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d8c4a6d-90fe-4db7-a711-fd763c8e67ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ac6ea6bd-c3e8-4783-bf6c-ba4e231e53ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26aacc20-3f3e-4b65-a093-54132d1acef7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f90a8d3-db63-4254-b52c-821d4bbb9a2a"
            }
          }
        ]
      },
      {
        "id": "b538dc8f-2c5e-4bce-96cd-c4f6f7f6ce9f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b821e299-be7e-45e9-b214-ac8f5d17a06e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b19ecf1f-9de3-433c-8a9c-19dd8dc4ccd7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f71f359a-ff7d-422f-a1dc-d454f7400d12",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b81a50c-7288-4139-997a-d8d3d6099033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdcb59f-56ae-4002-838c-d5eec5046f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ffaa48-2d3b-4ec5-87d9-ed3a2df47592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e014704-4215-45fe-877d-769fe41d2751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b88965f-58af-4bd8-9eb1-35e8ca63ef83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba95dac9-cd1b-422e-827b-be972ef46864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cff9f8-1441-4abd-a260-29d1526c306f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b9e3fa-d054-4b95-9cb0-4a2a8b8b9207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ebf5a63-8477-4f8c-990a-79ce098c96dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63a53bf-5df5-4c6c-a01b-b06db37b70f7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc67340-7ef8-43ef-b5e3-5f52bd6a40d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc8e308-26f1-4619-a03d-1047c170c2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36203e44-2131-4cf1-8d37-e2ee7a92f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57fe071d-6937-40bb-8c59-50bb8c8f4778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c3c3d6-7884-4481-9c89-76e968a3a128",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7739d40c-6496-4f38-9743-a208361e0a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d591253-09de-440c-9db3-53ff534da5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011168eb-460c-497b-9bef-a5bf9ac4cf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71e2ff3b-fadc-42ff-ad8f-e02e62b86f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28f5031-a2c2-4548-9e8c-a14d51cdd35e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484eeadb-feae-4be7-bd54-43e3d604738c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56eb5f5-3415-440b-990c-da7bc77b1c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681be5bb-cf85-4f90-952f-e0636561ea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d4475a2-5896-40b0-8cc3-e06a5ff4b18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b35380-3616-43e0-9154-8578423209ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f78ac9f-ea27-4553-ab05-8112bd9c7570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a05606a-d95d-49d5-8eba-344c587f4e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3842af62-3e63-4a74-b617-01d8e7df0424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43829c40-a2b5-4c66-aa44-0f34a9238087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50e02d3-0211-465c-a3d5-d9e690f82729",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c612b5-170d-4047-8d9f-7299fdd876f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492f0826-90ab-4032-a7c4-6e26b6c0dbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c329f2-5ae2-445b-8960-c039896cdf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2250c2a-3ad4-4c6c-bce4-0fea5ec71511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b08af-4df4-4924-b6ac-2b01ee0dd2a5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7495967-194a-4719-9d04-c23cea9b34d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51899e81-fb7c-4fb8-a8b9-97582829a0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5f580a-4988-49f7-b916-c377d5f76794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48d7ef7f-5548-4468-91fd-f037ff394b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c27a79-b8e3-40c5-8a29-da27ec898d9a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ce035c-fbc2-4dca-926b-abea06261057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0ec476-390d-4aed-b6c8-6cebce2d8276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e225513-7284-4b7e-9f40-778894fc4a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7cfa589-ea7c-4202-b9db-634c06856e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1658054-c307-4df9-8863-d2be9a461532",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f0bbb5-b62a-47ab-9d32-7f1a8f829fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9057a9c7-4a6c-4d53-8ec4-10d4c511df72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848922f-2856-48fb-8319-9282d075604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "020b43ec-2931-4f97-ac19-86a328ab3967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17b2f38-bdb4-4d7b-996f-7f6929c46c2f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28b6952-9cdc-43a5-86ee-6bf7357c138f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d25ce36-d5fd-42e5-8ac5-27118ee4e3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7435f351-bd75-4d09-98eb-7897619489d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41521aae-d6cd-4547-b521-c698937429bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bef7104-14cc-40d9-987b-1ef14a3a6bea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ca0764-ffa1-4b64-b9a1-a2eff24a69d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c0bc35-f559-4cbf-94d4-47fa1cd559e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773cc162-a964-43ab-856d-a7a46fd15fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36ed6c91-d64c-4815-81ab-a6568468a0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de43c3a2-c20f-4b14-890a-ad87848d8c52",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46417a9-567f-480c-b4f7-bed257ee5ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c01c8e6-206f-4e7d-b4d3-34a5841f0ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4feaa68-5ede-4790-8cf1-23b554af2090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20bc38eb-ccc2-46e4-9988-7da683fca60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec75484-a5b8-426a-a7ed-faaeb2247d07",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06266ef3-6aa8-4d40-8959-ff62cb2e20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9adb38-4992-4ae0-9888-f03ccc1003c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e007a98-1820-4844-943d-995b66a39fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86c0b5cd-6dc3-465f-b54a-34b0932e638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97595d6c-0485-411c-9cc3-a043f89d07e3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6be1d01-6892-48ef-9d40-0baccb5b8457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53678bff-a991-473a-8d9c-b407147c41c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe79a3c-3eaf-4288-9026-78cbf649d82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98582d08-8714-4ef0-9fcd-af374f8bd5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d1c4a1-f4aa-4b35-82ef-6886a8e6a28b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f23ef9f-d09f-483f-b70a-433768e07f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f6d4b5-693f-46cd-93ce-2c64c14d5bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b34eb25-d2fb-40c2-8e99-9f19019b68bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3664e77-601f-4a6c-bf63-b8b506af903a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e484a83-f936-4ce6-b63e-85f18776bff6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94fb855-5650-4b4b-b04a-5f5fe800126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfba3c99-05e0-47df-8aeb-8604963e1fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87d6003-9ead-468e-948d-fd0f0a82446c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8779a4b-fec6-410e-894e-a8acdc95e4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e76628-b304-4576-8286-2f6a2644e74f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb2ccd4-11e8-4cc3-a671-f643d9740724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fa1cab-2f25-47e8-a5c2-c207c34b1c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d500ed-52c2-4950-be89-3c7a23a88f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb456c0b-4466-4dcd-a532-a874ed907bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb48592-63aa-4845-8c1c-54264957103b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65acd7dd-72ab-4975-9f2f-3006a24c0b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d85ae10-c558-460e-93cf-2cd8a27e8fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d5533c-5eb6-4d97-af95-e67f3bf09554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a20e015-d6ad-4f64-a22f-4c7b7d4310eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ede15cd-e135-40ca-9f8d-f0c748009be7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e6005a-91f1-4994-9284-a23dcebd9f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d9558c-8ef9-4f22-8789-50be955ee1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7748f67-060b-4da5-b675-9c763a0991b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47cdaa5e-4dba-4f0e-9b2a-a299a83b63fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3984f9c-27d6-4902-9ca4-2a4b59e63d3e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a59723-fb07-4d37-99f1-7f897cb16ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69df9383-c8d5-4af8-9aed-8f8183e05f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8085c8c5-af20-4bbc-88a5-405a7653ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b265e7-6986-4c22-88d4-4e8545c4dc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc033872-8543-4584-acbd-5411c0da5250",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7c63d3-971f-4940-a906-4cfbe6db3205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8c8a08-2b07-408d-b560-bb1be2fcddd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0883ee-4c52-4887-b748-db5985e85833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6289f86-765d-4021-908d-afd697bc1e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9a8b83-c1bc-4c3a-bc3d-ac74933f045c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8fa9ea-bb59-43ef-9e8b-b146c1b3e452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b88c37-b941-4916-a077-e07c231c2fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd6ea7b-0bb9-45d2-bce3-c76fc123843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b260713-2dc3-475e-8dae-34aba9011053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a146d66b-f001-4f1e-a14c-3feee63f8e74",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97636eb5-64c4-4f1b-8956-5fc38c76aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c03b261-5b75-494d-82c6-04bd2f73ae54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7740d6-dbf4-44cc-a162-56180b282d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "342c0e6e-5922-44c1-ba80-c1a308d559b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea49d8e-b1e8-443a-9387-0aaf6fac4656",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438fd985-e4b1-477a-823d-9fdf0ddb5002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e646eb5-546a-44c9-9482-f991720fa1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0923f8f-ece9-4e4e-a927-a08e506deb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df01dc1-d3cc-4e0b-afae-e5dc0c810f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c6402b-fd31-4533-9077-f6e2f0e79618",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25267c5f-562b-4a1d-aefd-6b158b587ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07578bf0-b9bf-426c-9595-2983f10e183e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e9c3f1-bcbb-4216-bb49-9a360128f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83bf0e1f-ac6a-4bd9-a862-ac637f0b5017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3982b47f-3287-4cdd-b7af-dc9a7a936587",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e5f0c6-5c4b-4ea8-b8a9-a96e2be7a21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba0c1ff-f796-4027-a6a2-d4eeb1374ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e471f-7702-466c-9f34-541fc394fc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc59b850-d58d-4d3e-8b51-ed81fddb90ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a04fff3-8cc2-4e9d-b166-91f23521528d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ba5af5-5f45-4f75-b38e-6744dce0f24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5654987c-f534-4f2c-8900-284a20db7745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92591363-081e-4c5b-9158-53f897159cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab60b8f-26d8-49aa-91f8-931dda33031b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d22d65-703a-4716-a2e1-4d71b62eb68b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190a6d32-a281-49ce-b5e9-4360fe38f424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7aa178-643f-4e08-a537-1b023455a5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abc6795-2d68-4af2-a16d-a70b1ae43f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e985bf02-75b6-4547-9c28-8e9f9cf3e0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a28da54-65b8-453f-887d-82cff216b22d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b1f5b2-13d2-4ef4-8305-17c419fdc43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fd14aa-4df7-4134-9970-519b7ef41f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c4158-ea5b-463f-99a8-ad099b62f247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb78c751-bb4d-4bb1-8802-977aa48e8a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3090b991-81f1-43e1-9987-8d70a2375865",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e7fdcb-eb96-4833-b6eb-8fdb290604ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e0c995-e9be-406e-965a-103fc4b517fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f417cb6b-255f-4afa-a4c5-5e44306d4ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9065819-04ce-4a0a-a5b7-b4e621ff6a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf473d6-4d9c-47e1-a5e8-e17222007378",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36844a2-6f3e-482f-b922-b4969d6b8a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7433cad-2498-4f0e-ba8f-e4e48d52c4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7cda1c-926e-4a2d-a7dc-44124fb085ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f603d5d0-52fb-4779-af20-593ed3adc423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53056265-6b51-4df0-9277-f415b95d2387",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9ad26-c347-489a-81d1-30952bd2759b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f02e035-2884-496c-9f5f-9d32e4c29bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5810d11d-0c5b-4e2d-8b85-0ed37203946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f8aa44-f66b-4020-97bb-cfbfc30513e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f15d86-f2bb-4d7a-9d7a-8d4c33320abe",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc7c47f-e3eb-47f9-b8ab-1114ad8b3c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bac680-988a-4a42-a829-8efdacf395e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c8046a-2d87-4a7f-aecd-60602ccab305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df34cf56-b578-46f2-8f83-33d80b8120f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b1e800-e065-4810-b5f7-2c56b6a67b87",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846e1ac8-906a-4f84-922e-f38a9a29a107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f24103-147f-48c6-9fe3-e02ae36ccf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e8b94d-fa0e-4c9d-b09f-360dd30ba693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3a963d6c-e65a-4bba-8811-33d3e8726097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b11ce68-53cc-45ac-924a-191fdea2a238",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961feacd-b30b-4572-8302-43b8389d62f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a607938-6c63-4d64-bb60-c4e6d6ee21db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155051a7-fcfd-46ee-890c-110516f1c5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a03f0a-4d50-40e9-90aa-7f411bb2dfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e234a8c7-fc75-44ac-927d-2bc9a282e6d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a063ccef-1f74-4bec-8c4d-d831cf39d7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c8e134-2f4c-47a6-9329-5e5011edc50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdc349-6855-440e-b5f4-74b47c32cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5edcff96-a257-448b-b282-c7a0c72353ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914ac1da-894e-4db8-aca1-8576fbe05221",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081ece23-c23c-4562-b03d-8a9a934e2db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60d16b4-9dfa-428b-8cef-6f4aa3847fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a189da-af69-4826-8891-f37ed6aa4cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56afd1c7-a22b-46eb-99c8-913f51fef42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e90a75-aacf-4280-9c09-b3f8df27c72c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f00aa1-73bf-4d15-9c55-c70b80425e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ffa3fe-6a4c-49da-9c5b-3895cb216e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f46fc7-7e2b-4a4b-be3c-d204dde19787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cde20e5-5064-46d3-9599-abbd50d3b915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee549b-c4c0-409e-ac7e-135ff1b6373a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6915da49-3fcd-4207-9172-d5e0a1543ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad37eda-7b17-4483-ad80-9cb02ae694ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae5cc74-1603-4d38-a3a6-38e96c814472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a21c0944-1639-48e7-91b8-de936c2f86a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde92065-8ab1-4d67-86bb-a2c25883e7ef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4a062f-8ff8-4e63-8bbd-4faa008cc31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2309c52-860a-4b9f-9cbc-792cccaa8d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d56afec-1a6a-4528-a4bd-179778b912c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14fd702b-19c2-4c90-8286-044e2cf97163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1d2dc7-add5-4f2f-b9d1-2ecd1fdf871a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3288303a-36d8-4853-a451-9c01b17683f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6841fb2d-0f20-4603-9797-6d73000476c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc626f3-8403-4392-bd0a-8c445634d448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "51a6935d-bdd9-44a4-b61d-6c0becfba8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8886d46-43c4-452e-a678-3c59d571852b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430942cb-0ed6-4eb0-a5dc-471da4e717f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ec4eca-ffd7-4b99-97b7-df9d3e4e1368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f27583-fb5d-4c12-a30a-30a0902db4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d24464b2-4daa-4a9a-b619-fba8a4b7f775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a2fb45-b9e4-4a3e-bdc2-a3b0e974dbed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29ed4f2-5aa3-4f73-898e-d3387320837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0bff33-8506-4285-a90e-b12bb52fc3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bc2361-0b06-4e12-886f-8b8f1049e540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "367c6fbe-1ea0-4fda-a874-aff5445f41de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d4e5d2-622d-4003-9444-3e9b93de165c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2494a39-415b-4f17-b684-fc0328e66bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c7935c-83e3-4538-b6bf-a0325083fb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bab2211-8979-4c06-b441-96378c0e0075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f2cce8-b8ca-482e-b343-9d0d3a95ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583375f9-0d87-4fd2-bb32-a3e2825e5b22",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac789fd5-29f3-4249-a05e-cf480d7f921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4768364e-a32a-4c3e-932e-0084d3f709d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0851a627-f246-4060-8e0f-ccfc3ac04726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "819b1292-078b-48ec-8a6a-78d24d7dcd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1341832-071f-433d-9441-081215ff99d8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad0ad15-9ece-4351-9fe7-9d345889a2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa56157-9d83-4049-9818-63eb8a4da9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c732d9-4008-48cc-a839-ddb7ae67e9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d74641c-6d1d-4981-a84e-2f81936a0a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f398dad-781c-4474-84aa-35165866795d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ee78d9-b10d-4e7a-9311-57f89f0812ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80f346c-1342-45ca-a02d-0ab3768c9484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d37578-90bb-4e5f-98fa-10e027886525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1067210-c9f1-4c08-b448-c1c5f7f38038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586a4ebb-ad6e-4b10-bdf1-df79393ff845",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1284fa1f-2e32-439b-aeef-dfecad07a96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342373ff-66df-4877-a7f3-212b7e17a0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8152f8be-ee3d-4006-be76-fb5c5b5916a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b65e53db-335f-420c-a5cc-057591c92792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41972f6-5e52-4608-966e-b534d7077410",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf53aed-2a2c-431b-8c01-d1cd386a2720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02caadd3-fb89-4415-9c69-8d18dd9cc009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d598a612-cadf-4a83-9ad6-afda44d40621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26df5669-4c14-4c85-a46c-84b82952d84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d49f59-efda-4d73-854e-5d5aadaaede6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796065e6-63ef-413c-a5f8-f2a1119606b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214ddff1-ce34-46dd-bc3c-1cc811a2c8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa4fbe9-1149-4209-a75b-7eeeb190d22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6471c4-aa1c-450f-a107-a337dff3990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b665840-e0b3-4260-97bd-ad781baad766",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffbc30f-ebca-4180-b4af-ac74eac05945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f7cc8e-83d6-499c-be96-e28be74dd8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf4ad59-4d30-4f42-a939-059a53d50031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be5db6e-c05d-40e0-a9d4-454ad73002ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a237b53e-9f02-4082-b2f7-7cfa031035ba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451b4458-43d8-4ee5-9751-48f91fbf66e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d65cd0-68fa-4a97-9171-96cfaa5c9d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613dd296-4af1-419d-a3b2-4e6c59a162bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f34b63aa-d112-45d4-9851-8d9c8a5d3211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a110327-8a66-4b86-afd9-360afd5591a8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1977f555-4297-4db1-8428-1d957f2cb6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa497a77-4074-40ec-b6f9-347b823203e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85eecab-59c3-4bdb-af77-839690503c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f0a486-c961-4d2b-9c89-8be04b00c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e35477-c2fd-4924-b721-cbfe9bec47e9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb066a-4e4d-4f3a-8662-e8eac56c7466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4cac79-8ae6-46c9-a14a-bd407cf45016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a092f98a-0df4-42a8-8764-4d29389f8120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9802b45d-89a1-49e3-8054-5cc26ddd8f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71ce021-a490-4b04-bbcc-3ccbfb654a6e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3606f35e-7d5d-427f-b7c9-fb63bcac4808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9755e17e-93b8-4efc-8533-48b2c20834e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180ce405-2bba-4627-a455-84a5842decf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d262e9c3-c619-46cf-972b-6b2ed4b8a56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f36cbb-6b79-4bc0-8854-237c3ae6b20c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b30377f-7278-4478-a193-5a22d6248513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8fad53-7a74-456f-b449-8ea00d9e252a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae1a1f-a85e-4056-a49d-81c7003ed193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac994adf-632f-49c3-b2df-001653edff8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c30fe53-defa-4cff-a605-82ca8060f69f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1563ed-c49b-45c3-bd11-fc72ed201098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd156d9-698f-4e25-951e-5d5262230db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e054a45-aae7-427d-b6dd-a3ccba804243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eabc23-93ae-428c-ab42-106c86cecfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278909c7-a53d-479a-a9e7-38fdfbb46bf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbaf7be-d41f-4338-9e65-fac47797f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07aa9e29-ea82-44b6-950c-c27743a11ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6455f419-2fe3-4bff-a774-81f500530897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5eaaa4-1b42-4618-8693-a0bba3348672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7d7bb-7909-4fff-bd37-59df2dfa4322",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97daee3-1361-4a6b-91d4-c1674a41de4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60bb3e2-ea26-4c0f-a33f-edc1f5bb03e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09784ff-ee6d-41bf-ab0d-5073f8ea4468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a26783f2-2fc7-4e9a-b76e-edf773c937d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0d33bd-bac7-45b1-8cb7-b75b7979b6dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61842ffb-f5f5-4bee-bbf2-03b57783d238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d1f850-61a0-4a6e-a3e8-e89ec3e18b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89c7e55-513a-4174-b987-6a248924fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "519b4807-b17f-4f93-b88e-e6deae5b322d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba7620-75ba-45bc-8932-20e7ca217b50",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b1359d-e350-4994-8bfc-995072267c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7922e3a0-107e-46e5-9725-b784a967a095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295aca61-b335-4de5-ac70-a7e75ca478de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "371c2014-cf63-4dd0-b80f-f6a1ebd321bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5857d925-b56a-40cd-aa7f-da61535b14d6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb56c26-eaa2-4710-b1eb-7bb40e144eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb3bcc7-d039-41d8-bfa6-858e0dd7ede3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd2c03f-f326-4713-bb5b-74126789e4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5135665-e9a0-439a-b23f-4f9665157df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91ecb2f-cd20-45db-b5be-d901490abd3f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a513cbe2-abfc-45ce-8afb-f07824b7ed51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0b023e-5459-4ffb-8548-9fbbb08efe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220b92db-49c1-4121-b374-7c5c0127cb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c764ab2-99c6-4a25-8406-ba0a0f7a9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75e532e-13ef-47b2-8157-e42d9217eb55",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b50c5-3b88-45ec-8479-47a4492c8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7126c6d-78e2-4166-b46d-5be0ea2e161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63443dc1-4bdb-472e-b5c8-34f5cd7aaa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c7a056-fe8e-47f7-b9fd-61fde8fa0672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb933940-3649-43c9-bcf5-b1a914804b34",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf5244-4276-4896-9a3f-43338b8d016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c101fa-8282-43f0-a8b3-e495a72271b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2857219e-4491-457c-9f53-aa5b71372946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4f4ba0-b6c5-4874-a80c-b4089f58f3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b112c-8497-4729-807b-c96f435f0197",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be867ba9-bd6e-4a41-88d0-eb795c2fb020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b31e024-fc6b-476d-9097-679e29483be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59ec47e-965c-4148-a6fa-35aa639400d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e98914d6-574f-4fda-a8f9-ad6c93dfc30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2be507b-3d2e-4dcc-b58c-cc2cf2bac85b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1856292b-bdd5-408d-a46a-249a13498062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82dad2e-a8e5-4ea7-b719-30e9f7ecde62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ded8292-fdf7-4ce9-b136-8f0ccbe4176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e2d475-da41-4216-96d2-0a90e6d18b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69cf87b-dbae-4384-9eac-bfdffa55a1e1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2459584f-0dda-4c7d-add2-9d3c3e76e5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cea6f1-aa68-4240-ad42-4fddf55356fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863d992f-d5b6-405e-b7d5-c626812f536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7714870a-f3dc-4f7f-b536-4ce78cc70caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f297fabf-d82a-406c-9ef2-d8fda354d793",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baf934f-ec55-4008-a2a5-4b72ebce0a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17dbb84-0db3-4eef-83ec-f4b899e53939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb04c91b-d201-491e-82cd-e60285e4faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0830b172-8bfd-4328-af0e-1cb5fa2a26b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af06d369-1d30-413c-bc5a-a7e2ce1092de",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e518a4-5106-48b8-86c9-ca858203eeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3530fd47-4a7d-49c9-acc2-b5b30c898181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805e20e3-e164-45c7-9b23-e084c550ee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ee8646-6581-457f-90ca-507166877937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81b032a-e76f-473f-9d36-feb8fda7c060",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2778b137-f099-439b-b734-575d53d23dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ebc5a6-006e-4022-8ed9-9ca0fd4e70ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477594af-1ea6-46b9-a8bd-5977d36e3201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d93bf676-8165-4cb8-9ec2-85a81515c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aaae30-2bcf-4baa-9df6-4768eff8b899",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c431ec-a289-4137-8300-0624e14b14be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487aa147-bc47-4242-a5a0-507e0797f2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90d1dee-e57d-434b-8f93-7fd986a2a0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3769689-af11-4a09-9bba-f3de246454d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c463b45e-31e4-4b45-9ed3-408e541eaaea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b759376-d844-4198-b018-bb975f09de16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f048a34-749c-4b8d-a97e-0f6998f3e3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bc94c1-4472-41f2-8294-39673190f459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77285efe-065b-4847-bcaa-3106186d5fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592d5927-e687-41e4-9735-db94ee0769f8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219608bd-5f49-4b16-a899-ddf0ac4e150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af61da35-fc77-40d6-80db-5f78713c3041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4f26da-5d20-4542-9def-4d3d0bf87cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a8796c-46de-48da-9774-19fdca6a1771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c415a22a-4cd5-4d04-85e3-e5e5a1249a34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2684516-69b7-4d69-93a6-1dc8af7ab573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a504083-224b-488b-aa0c-024f4f1f26fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e74e2bb-10f1-4922-a53b-6c4f8b2e5735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbdc739-8ea7-4ef8-8161-4746dd822257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a947ff-8539-4f0d-87e8-6d40e7e6235b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53612bf-17ea-4217-85d6-08302cf0ae54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c3b674-cb8c-4a9e-a3fb-0beb0858da69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41282e96-0d74-43bb-bf81-fa028d3d9795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97aa3c7-ebd7-4708-a9b1-c868b7441f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e94a9c4-cbcd-458a-b8a1-75f6b98c0960",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a82e5e-8065-42db-b0cc-abee821d2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0dfbd0-e3d6-46ae-aa0e-21f8dc1f45a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75d8cba-d515-4a5b-865d-038495ae31c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e55a20-ca05-410f-99d4-1b0d3c8ab349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1818aef5-911b-45b3-892f-0f04593022e2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462c426b-a0f1-4216-935c-5b21074eefd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7725771-6d41-4962-b6b6-9099dcc43067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6262b12-c146-486c-bbaa-f13d9d0de225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "171a9bf0-bf64-41e8-b835-00f34138d574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a92ad24-8f51-48e9-9e75-78fbf5984b51",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f68a9cc-d1cc-4ec9-b01a-677d05c57ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13949e5a-ce8c-4d28-a038-9daef8e662d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01153f83-cd9f-4b6b-ad89-d2adc83c40a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "530b7153-e316-47dc-817c-9cc273bad62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8294ef7-f722-4f61-a1bc-651516d583c8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee6b913-9efc-4d9d-8597-5f17fa5a6623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ebf88c-a410-402f-a947-30b552c452b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b691be-ba0d-4ef9-8192-fe3c8ce0bac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23baf5ce-681f-4aa4-8e08-d0a8a4b01cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44701ce-8f84-4382-94be-ca0820cf5c71",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc420b9b-ecfd-47de-9eed-061625c7e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aebcb4e-7f63-4e2f-b2e0-d6b4ba8df096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f06324-98d8-440e-a344-75c6afe4580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35092b46-e4ad-4f53-807d-4c773f92abab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f635b6d2-37db-4205-8b35-0daf6f4a9c8b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ff44b-6448-4910-9eae-c11885af83c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a96db7b-e927-449b-8f30-5ac2d6fce623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a8cf31-c6e6-4565-9df6-593005c6c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df00288-aacf-47c5-9eb1-2d6962027e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ba4d03-fa2f-4dcb-a9ef-6a19787095dc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddd3d3e-d559-41fd-8ac3-49d651a32255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89b3eec-8885-4a65-8f62-376f88b0983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8339a3e1-50c0-4d08-999f-beafe38a8ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fc7da8-381f-4490-89f7-99aef62663f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db0146b-f599-4ba1-b6ef-d8a200ad1da2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d8a6be-34cc-48f9-aaad-6f97634e1c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd77485-f229-4ea7-970c-f4f843fce0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c8316f-4f74-469d-96f9-fe8e30c6476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b069644-f2e0-4c6c-96fa-29fddb0c9d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18add3f0-c8f7-4943-a37f-7692b81e5b19",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28b7865-c25e-47fc-ad4b-2c99a0ca2634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47438e8a-d2b8-4cde-bf3b-0fc41c8d1a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e78ab94-23c5-4261-a7f7-f4689c5484b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8911273b-8e34-4ddf-a316-50994c6e8472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1820d37-a937-4165-8b9b-9560a2c6c4ea",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3177158d-ada1-4eed-99ca-8b87b6f31f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d033ca85-33a2-4056-9587-7f9c4e4f1534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47001393-2915-40ae-9e14-ae46cde8a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "285c8e1f-9186-4673-8008-d96015c458cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929de30d-363d-48a2-82a6-94ea65fba63a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16e86f0-9938-4103-a566-dd70324ae5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dea0d1-9863-415b-8cb9-c380e7377deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c67fb99-2189-4f6a-b345-fcb9b8aad767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85462888-a7e3-4496-b74d-9102368c5201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb2c50b-878c-4f83-9127-a3026302c04e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8652218c-7275-48fb-805e-4042a8ac92e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780ba421-51c4-4e7a-b9e4-b4d190f77873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a13bc43-c2ce-415c-acb3-edf1beb57fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5897c5-34e1-43f9-87b3-993edaedc560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b316cc5-9b0c-4aec-9112-1ec9a2d991c1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9171e8f8-88da-4910-a745-c1e1d0deead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77079c4-459b-4e8b-b754-f3906ec504d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f4b30-ca0e-4e7e-ac15-63260fc3d956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ab9a9a-fbba-4012-8d46-3935bbd680b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5f1388-b910-4bd2-868d-1bdff6d0a81f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6febf507-4eed-48e3-91c9-f00a9dc31aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93c085f-80c6-4be2-9151-2d01303af61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84869c2-d6dd-4a96-b6a3-8e6550f503b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ff636e-98d9-4d66-be37-b05edafd14b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eba3b6-2580-4318-b0eb-85bd8d6827f1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d6ea33-f1fc-453b-9531-969d009a3c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fdfdd02-25c7-4f4d-83d3-e848467c2439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e4121c-6c5c-43f2-892d-1da37efe459c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03ee244f-35d8-47bc-9362-fd212c975931"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06af15d7-670d-4ef8-a78b-eb9946aeb968",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f86700b-ae00-4e34-b572-fb354e247d65",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832e0cad-a42d-4e6d-89da-1afc613e7615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21f075c3-e890-4441-b2dc-3e5578cb9e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd59b468-31ab-4822-a0c7-3940dc06f433",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21912233-96cf-4a4b-9ffd-bb31712726ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8f88469-1c31-4ee0-a842-c1d6190485cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec06e9d8-1b20-4b89-b7a8-dea696cea1c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc2728a-33b5-4274-9ed5-95846cb155c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "587655e5-7a23-4e91-8425-b2cbbd5b7d52"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "228ad705-88f0-42b9-8269-0ee305d82166",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a67dcebd-e899-4953-82c0-f04065f509fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10dcd00e-dc27-46d1-8f73-7463b6cf868a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a2b1003-34b6-44d4-9163-33c42a844f66"
                }
              }
            ]
          },
          {
            "id": "2161d613-1fcd-423c-89c4-07be43d7de43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02179e4f-ecc7-48db-9940-2879c47b40e7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6a7dcba7-cab1-45bf-9255-3553331ce87e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34cf474-8fb6-44cd-b0d5-b769fb9a4aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5982ee30-4c85-487a-b312-bfa2e88abfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee2b05e-07f3-47d8-bd9e-b4b132cc8ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f070f1d-5771-4b8c-84f0-6ecba7c1781c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3f968d4-e58d-4dce-8b0d-bfb6a10cfb64",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a59bb5-8b22-4827-b9d2-05a1af753c4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e286da64-8517-4aa8-b48e-2e547820b3f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffde5ed1-42e3-4163-880e-4d3990d45161",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e90565c-f526-4840-aec8-7751b09b2d84"
                    }
                  }
                ]
              },
              {
                "id": "abd49e92-3c63-416a-a3c5-73e7d8658951",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5c3485a-03f1-459d-a237-9f016ea10ae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f29cdd2-15b2-493c-851c-39760463748d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d836aa6-ff70-4cc9-b066-97dd06260cc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d69070e8-2a7c-46e5-9961-62010056b95c"
                    }
                  }
                ]
              },
              {
                "id": "bc23a67c-a812-4baf-9ba7-7570b7acc5a2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c8d84b4-017c-4c3e-a0c8-b84c462a19d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e6fd949-eb32-45b0-89ef-9a2ea7c4de66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75207aea-d166-4342-8708-c6f0fa392e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "353fbd30-ad63-44e8-b9ff-b3c739f007ad"
                    }
                  }
                ]
              },
              {
                "id": "ac2068cc-e3c7-4c65-bfd7-ca0dba972f23",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e552e24f-b9f4-4411-9459-50c5d0e0cd76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33cefafc-5950-4abd-a828-e76ca881dc80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1cc1e01-07d5-47ac-9f0b-8969453f1ac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "700f4304-2f16-4d3a-aab0-3d9d742ae6e4"
                    }
                  }
                ]
              },
              {
                "id": "6d12b1df-93dd-4d5f-bf89-d8da3a1aa6ed",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1ecab9d-22db-4391-8505-f1d60b4cd597",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd669ff8-bf7f-4f2c-b077-2ccd4ab07b82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a1c5e2d-6087-48bb-9a90-83d3100cbccc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "86ccb52a-07a3-4f1e-8ce1-b1ad85fdb264"
                    }
                  }
                ]
              },
              {
                "id": "4e98529c-dd09-4a60-bb34-ed70f8302532",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "620cf805-d0ab-4b8c-bde9-a921c2c3ca7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4fc5be8-c26a-4a97-9e1a-74d0ac4bafa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e15e7bc7-e4ea-4976-a8a2-d781ef8939e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43fd4ab1-5afe-424c-9a79-01fd31f14e7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c330718f-5cbb-424e-b8c3-42472787c248",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da944e03-ded0-474a-b3dc-06bb44b6affe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fbbcd7f9-ff63-4b96-9cba-becf1759998f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "989575a0-91b2-4482-b768-b1a337e87470"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1e25d08-3675-4352-b3c1-6dc9d900edc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16a7e521-c52e-42e8-ac53-68cff23fc408"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4186f557-c53d-4e2b-9536-99927e59f936",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5725e4c1-4c4a-4e2e-906b-c16a13e7cd44"
            }
          }
        ]
      },
      {
        "id": "fb948712-2bca-426c-b035-4ac55a42f2e5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7e0d5861-cc96-4e09-bfe2-49890efec4d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1b1fb6b-340d-4313-92a7-ecab404c38a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd5f5bf6-4417-47ea-93d4-2e220572f1d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13b3f87-f208-4e0a-adef-c62e26db776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f781d43-2c86-49de-b8f9-57fe837adc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a106354-d6dc-4c2e-8110-32fa2d3dbdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebb7b28-6c93-45f8-9f4e-d2a2a29e8f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7371677e-0f92-49f4-b350-719ba6337692",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8e6d04-20ec-4dd8-af4e-a7109c4966a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb75cd0-f205-4225-8822-52c76564529b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a5c173-0609-4d4a-b59e-b2089601eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44a1ab4-69d9-4c57-bd3f-ec96ee7ecad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4649b9f4-5fae-4686-868c-ca847fb25c48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49418d3c-f27c-410a-be52-9f0b932d942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ac62bc-2d2e-44b9-ad67-de406c0f7b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c187c8-8933-4527-91f2-99388f595d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89dc99e2-0d5c-49c2-8357-b81302730c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa8e3f6-b267-47d5-84b1-22ecd6ddf9aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456d4376-d0eb-481c-8d27-575187635376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e340baac-a7d0-411f-965e-3c19230f9629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7cc13e-503d-4c85-aee0-1c2ed403ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afa7e50-ff2a-4aef-bb17-38fdcce9e99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768e36c8-7fa8-4bfa-a65e-17426de05d9a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06857a1-7f70-4fbc-a1da-2fd78161d03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018d9050-90e7-47c9-a38c-937527518198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5db6f3-2733-4410-bf33-08fd7dd5e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb28255-05eb-4692-a749-3dbe417a0265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b501723f-394f-4e3f-bbe0-92699dc902b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2fb8ea-3b9b-4e83-be72-23547ca6d94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd920fb-6a48-412f-8250-246f738c4dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078701eb-5aa4-4f01-b66f-a99a821ab28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "170e2f73-6e96-4efb-9d14-7c06599c6723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027ab279-66d4-4ef9-b0ff-6bfcbe0ee4dd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a5e351-e717-486b-a386-9150f18d2780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a318c55e-b87b-42b6-8423-2a6b30974509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e327466a-7b49-44a9-82f4-e184d1ca5c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67e7ce5-f281-459e-af63-a92e0e589381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48db3e15-e7b0-40e2-aa48-ab0b2aefe777",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088d5b3f-496c-4abe-b6ef-bb01c685c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b2ee50-452b-4e14-9fca-d39142fe5ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c11c2a6-a8be-48d0-95de-9959b427de96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e50f7d-0b0c-4975-859d-1a02869221c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83c9ad9-471d-4130-9c9a-60f6769e6c10",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7799fdee-ef7a-4dd8-95d3-f874dc018d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acddd116-99d0-41ea-8fc1-6359adf6fa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4b824d-c8a0-4db0-8643-7ebe767d0eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e832b3b-cea6-4753-b9e1-1bbd79682606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d62913-d1bb-425d-9038-ea5ffafa96fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8325ff-b2ef-4482-aea9-f10d826584fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e88f26-3655-40e9-9875-d360e2bcd070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2072e36-1ecd-4834-a834-480b3ce0247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0ac57c-60c5-463c-a953-6d1bc75af113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d563e9be-fc8b-4544-9ac4-a9b2679bb083",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03f5e63-171d-4d38-aada-eab6781df796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aac4464-42a4-4da8-a7fa-52490eb68db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0bc468-6a09-4d96-a43b-db2465bd0f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3b76ebc5-2f65-4d76-a125-b64b069c4b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525f5535-5eca-46b3-97fd-3fbb6f60c1f0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa39af61-ebaf-4f2d-a1b7-7a1a502ff0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4bedbe-1c2c-4be9-8fe2-84754b684c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca319de0-ebf3-40b6-a10f-46edd0522603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07add358-e1c6-4985-8104-02f824a26448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cb65df-74f2-445b-8d47-071c6ef8a990",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9a3c22-080f-48d9-ba24-1542d10897f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859d5c69-a735-4c0f-a5c9-62881924a6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95caf25b-1776-4403-ae4a-7fbc51e3a4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f877a0e-9a4b-4463-964c-83e09c642ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375628a2-a2ad-49d0-8633-80a20546539b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325f1949-1abb-45b3-9708-d0c77b73d600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a193d5-d7fb-4b79-8238-0dfef70d477a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841fc58f-6e81-425f-81e5-f3c4e0665398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b9bf91-52ed-4252-af3f-afb758b3ee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f95b17-a57f-4aee-8c75-400bd910a1fe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210e0fbb-8a80-4d8d-804f-14611c951905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fab8e4-905a-407a-88f9-da957cc29ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2490b682-8198-4ff8-86a7-e5b8f86bf099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9ca499-df22-45dc-a7c7-47b8e28641a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb18422-e0d4-4d9f-9576-50f2e9336f7d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371c0f5b-6e77-4d35-84a2-69f433299d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362911ba-5bb0-4cf0-a65f-af95f593db84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784c24a6-0dd7-4761-9bfa-696fa043371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe1c3b6-805f-47a2-b2e5-9fe290c6cca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72f9531-e011-4a0a-8e9e-1794d3081da9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f842a8-ea3e-4318-9031-9099a1ba76e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4a72ac-fa9e-4ca4-aaae-9902eb13eb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e532ca11-880a-46bb-95ec-6b84e84e25b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16f40c6-8521-4382-827d-5f5670b3f6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c38d4-6107-4b93-8296-5edd7bb05de5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e62f2a-5fbc-4d6c-89d2-8498cb474ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e662e2e0-19ac-4ded-abe1-40b18f22eef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee0437e-1b2e-4e3c-b9c9-a7ed29ba338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f163962-8e9f-4c14-85d1-ec085fd96ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7fb812-a3a0-4710-9a7e-76320f1e0803",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1de34d7-c451-4aed-b29e-f40a8f073583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef43ce96-42da-4a6e-8caf-01970efbb3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074462b4-52bc-42a2-bbdf-724aea8eb02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c12b712-521c-4b52-8fe1-625b236f6403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5347e9f8-67ab-4273-aa62-112d0112f90a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a66aef2-f865-46fe-b1ef-409e8cc35e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f76c4-2340-4eb1-8846-a712b0237c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe5e764-4ee5-479d-ba91-0097fa007861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dca3ad2-16fa-4ff1-845f-8c08878bf8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65694613-c69e-42d9-af0e-5ef5a6a3ef4f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e665eee-d559-48c0-89ee-67770ab39594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af99b658-0c19-4462-90bf-5bff56b35549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d8b2bf-7e28-48f3-ad14-7976799c774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe4fcf7-244f-41f7-894e-dc4fe3337108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2fcc0b-31ab-4506-a2c9-404aa2a480a8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a975f04-7db8-4227-a141-d6792ae68b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d28af51-a6e0-4fc9-955a-d243430df8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02206a05-d60c-4ba2-9584-82860494efd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1751c61-ee13-4145-a2fa-dffbbc5f1c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7b6dce-8698-4a19-bb82-29023aa52fb1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2443d6-becb-4043-8ece-986e05413079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d4eda6-83c9-4291-a001-f8652c413a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8560c7e-325f-4e6d-a2a2-63993cb05859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f012327a-245c-4197-8829-fba8c5aa0ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0678e023-42e6-4236-aed2-bcaff10399fe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03131d6-586c-4bd0-863f-268cae88b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f5ae7d-7734-4af3-91dd-a44a93f85cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565715f0-836e-4607-bbc3-6fde8cb28f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b858f765-6639-4d45-8d4f-55bf96eb9967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a8efc2-6eb0-4139-92d5-c7f1c84f576f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00666cbe-088c-4160-822d-4e1def6a786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5e8ff7-f804-4737-8824-859cd917c58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74ec198-07cd-412a-936b-eebee95c235c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e040bc-aefc-424d-99cc-659a6dfb80d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9e131a-0905-47f9-8b49-5c0cbf78daaa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6985c21f-252b-4f8e-ae1e-5c0509986dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65388e36-ff54-45c5-ac2c-60224f960755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b679cf2-6f55-488c-99d7-2ab4efbee2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6464daf4-0b2d-44af-9a42-268da04be1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e510035c-8dcf-4935-8e9d-a661b567779c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb580830-1429-487b-8dd5-db635eb87d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97781c5-5263-4e9a-8a3b-cf2c0b0aa262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee275ed-270d-495f-982d-4f27b107a990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dea0dba-f631-4066-819d-f451ae68728e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dd23af-36c0-4ead-9006-c3fdc5817de6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b113e3-8db8-4157-b30d-cc832abc5da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbbf6b1-c0b0-4757-8f62-7be6455cfa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d8c730-011f-484f-95e3-b0703ad1b133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f9b50a-6cd0-494d-b3db-0973574fd2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3a36c2-dfcd-4496-a4e5-6a3b85999634",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49211b38-fe57-4670-97c5-87a0c9eb3672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7e86b1-3100-4a10-98cb-f9a7e75a4e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55880c31-95fc-4877-9ae7-e6dfc830d2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf24f17e-1db1-450c-bfba-996441f9fc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3afaafe-eced-4964-956f-ba821d7378aa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687930fe-b2d5-4012-a98c-bfb1be37ab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6804eeae-1024-4200-8724-84a5c62dd1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf8831b-d606-4ec6-a6ac-1c96af49c034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52862f9c-d029-46fd-ad1c-4faf6b9394f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d7ee5-c187-427c-891c-5d4a2a80ac0e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ccd090-6700-404e-a116-ad6097336f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8d8ca1-4d42-44f1-a494-c1b1e77cfb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c952574-28a8-422b-8f30-732d29c99b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a468f3ed-1382-4e08-9da8-c2552fad68fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be133ca5-5d54-452d-bcfb-426076db2913",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c5201e-120d-4c1c-9d4f-3e056143f34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31d6f4f-916b-4da3-b4d8-2dd055c86004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cf5700-ebf7-45f5-91fa-51644c46f014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a0429b-f194-43b1-8642-d8124bd3e70a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6a51e09-75f2-479b-8f68-9d878a1b154b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "962891c8-abd9-4203-87fc-12856e4fb655",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfd8f08-0a16-4da4-8b8a-b48cfe39bfec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0142509f-525a-476f-926a-5e6287a61bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d40588-536d-49a2-ae79-e9991c71bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acc8cb26-e573-478f-a8e1-7f522b7f5661"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264eac65-89e9-42ff-a7d5-f612a2086980",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1315ea16-2259-4186-8e2b-4f7e360d24c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4055e125-b61a-4ba6-b57a-366862c2ae24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1322db34-1ec2-4723-ba26-41ce25f0c190"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddf71acb-02c5-4c91-9c19-4b600dee92af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "085a069f-d613-453c-a425-5448213b69c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ab43f67-a535-4323-af90-a96b667e7355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e35d676b-de5a-4a69-ba8b-23a6abf30135"
            }
          }
        ]
      },
      {
        "id": "9a4045b1-96d2-4b28-823f-9671ecf208d1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8b3c4a75-aac3-4879-985f-ef058f0dbd5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46611186-7e71-4c23-bc38-744fb7f5d673",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd375f9d-cbed-4c63-8be2-f0e726e17beb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67772764-7a1b-4f5f-943b-2bb93d9dab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ddb557-d44f-4b73-bd77-d351efa8621e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120106c4-5a5e-43e5-bb0b-44212778d50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96cc29a-f1c0-4f67-b260-e2a18485be47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0893d880-211b-4c2d-880d-cf9bdf69d7ee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a90ee53-4f7d-45ae-8331-e13ba3989e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abe22d1-1ade-4438-ab2d-8b25578cba76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949ca6e6-fc6e-47c1-bc7a-bf30d9ec64d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3d9f93-db05-43ab-adf9-e3087ee9f8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82e56e5-6a18-4891-9887-0419918b764e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e3f52d-f5a7-4c42-bf30-9fecaa0feb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e60195-2fdc-4691-92c4-51782ed6d3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a384aa-74bd-4b83-9e4f-90a5ee961e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ebbf09-1455-4eee-9265-97f399631eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f393fb-837a-4a65-a578-c5fa828da12a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04294433-0540-4287-a68a-0fc689aefa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3786d912-4ea9-499a-8e2c-db56bcf332c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81723e26-fb49-4cd6-aaf1-8ae115fa3f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af116e1-7446-4d09-b2c0-50e00d9f12fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1226d69-26e5-4935-a6de-19647f2bd099",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8ce675-70ec-433b-bc11-515c377f0649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcdcdbf-793a-42e7-98a3-64b8491faaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3021aafa-7360-439c-b858-faa0ce15b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a609525-5435-4d41-9d21-28b64c073d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d662d592-e79a-419b-a73d-1c4fb347787b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaf92f9-a3ac-4db7-8e5d-cb018be729da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab50eebd-34f6-47c7-a65b-533a543f8442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c81ae01-23ad-467d-be3d-ad06ff8f2803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36ee1567-bc2b-4c77-a3a9-79a5afced6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2285ebf2-401e-404f-9ec1-21c91766a779",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6ea2ab-50ee-4375-9823-70edac7c743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fec9253-d9a4-4761-868f-e7e019a0ad49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b84a7b-3ac5-4fff-a8eb-a283897f80fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf5f908-12a6-4696-8b4d-8d75d7caf5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f08733a-97ab-4f89-a343-6cde01ea328b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9431e8-26fe-4723-b78b-5bd618a4320c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91601de6-0b1b-48a0-8665-fdbceb126853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e155bd-3d11-4b05-b05b-7d444b25b8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98c77e0-52a8-4830-bc20-8cf01e833a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8223bc44-d65a-4a27-8010-ebc962649e2e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d340dae4-f874-4357-92f3-e7753e5e9e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9495ff-1fca-46d2-8b2e-3d0b88aa43ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78841ed-4d59-428b-8898-daf6746cfa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d80dba-deb3-4cb3-88fd-3ef21b37cad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387c6236-2672-4053-875a-80ee9307d69f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ab8ec-1a63-4a0b-876e-e19efa75ad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5898262-c9ee-4986-ac3f-d47bee90ec41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facda3a9-fdd1-400e-9973-02fe49f6e1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd41aba-0085-46f7-86d6-200d79eaa6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8b3289-b4d5-4ddd-9fda-69a96955295d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd880d72-3ce5-44ab-88a7-1f8b6335e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a970e0-d32c-4278-b45c-013932ee378d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e619becb-527e-4e52-ae9b-23bc3f1d2d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8297a9a2-c9d8-4867-adb5-3085f8a4a409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb5a56b-e109-4f57-9a8f-7a90ee4a4eb8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f91208-efca-45f9-bcab-d40c0a244ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbb8b80-0d36-4440-933b-b5fb80f28465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96985183-d353-4a38-bee1-494349adcba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "873ac0da-0750-4f6d-944a-04d664ff7844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3492fad-8a4b-45f6-ae4b-ac9ca62e4a71",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fa7bdf-a68a-4683-b61b-1c02d11eeeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee97a919-b23a-495d-bbae-4a57353e2ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56f623a-359e-4bae-b209-600424c0ec52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52048d4-57f1-4642-a628-16e1d9f0caa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652572ef-f47e-404a-97c0-a24c40c354b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dad9e2-2fa4-419a-8d17-6c55b85a753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3b293a-3708-4977-b1f0-c730b1a0fdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f028981e-9ab6-4c51-9af3-bcad0afc1b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccfc00e-e5c3-4490-b163-b44d31b20cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80f1998-f8db-4442-9d17-b5862bdf79e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32ed987-c1df-4661-91b2-dbe6d6142ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d8245a-4d05-4afa-bd4e-a63c4a952d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ac7225-f94f-409c-a917-0f270fd304f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b75c2e8-ec87-4cf2-b785-a9ff342e2f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f5d8a-f91b-43c1-8ca0-e83e8bb38086",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d08ff-a98f-445e-ac2e-9ae1885139c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ec418c-993d-4f9e-90f4-b4f59e6da731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a35cd-007a-4b79-9949-5e54a0c884d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "191bdaa5-f16b-4b4d-a64f-c386206fd193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912fc9e6-6af3-4b17-8cb8-ca09171c71db",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3556331a-1536-41ec-ae02-b83a7319777f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3faee414-e5e8-4913-b3b1-79deb764669a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a463b614-8efb-41ae-9b7c-faa0224a86fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bef10c1-01d5-466c-9847-862814008a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f27c2b-a765-4440-b9b4-b6526c6ed9ee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c209f8-3120-4e02-8fa1-d4875b098b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c60809-fa05-44fc-8d54-f32aa14fa1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0012195c-9123-49f8-9cea-5206fb460277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24fdf8a-0e4c-421d-99db-ffffa6c1aa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0ab9a0-be95-49ad-84ae-c6a20ac10525",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3960e23d-767b-48ef-bdc0-25702c909466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e07fb1-a3da-4e4e-a0db-018bd44f1e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b79123f-f5f1-454f-8fd6-12b188c6b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cca163-0400-4c20-a8bf-23d65e7a3c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84941fc-b141-4806-bb37-b31484e1029e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a008ea-6b39-4920-8fc4-0d2a757b3c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212adcff-acd6-4c34-b534-83d5cec47710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dcbdeb-52a1-4fc4-b570-736492967025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1d1a2f-29e7-45ed-ab5c-ed169d4c4bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a60b5-e696-4fd8-8bf6-232712ab4dfe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b87479-60e1-4de7-9cb2-dfd97dcfb14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edb9f97-8373-4d15-babd-c63fa75e4bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae02c8c-3152-439e-af0f-f43aedd4129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0540577c-3a41-4501-902d-94f0bc77067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42794ebe-0a90-4fc1-aa10-b4b5b1ef66b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25831de5-0d1b-4ce5-b5e8-f64d85cdd5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320e076f-27de-46c7-b5bb-f556f3b0634e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08a5210-f314-4be9-aaca-795d039cb304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368d8b1f-05b9-45fc-ad1d-6a58259ce00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72020fa2-1eff-4dc0-a933-bc880a9762d3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae427fb-cd5b-41d8-a0f0-75eae8f5184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5873e4-a4c5-479a-a619-623fe50d356a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5f5ea3-e198-4d5b-9330-7f6d65ac4086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b881999-b70a-48e4-8556-d79ab5074bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b9063f-0c4d-477f-ba18-f57bab30d682",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ac3dd2-1214-4f7a-8bd7-ad83a8516e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dbb3e9-c960-4518-aa63-b5fa7fac2dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a841ae35-77f9-4b0c-b5f7-be06478f42a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1d41aa-c83d-49c3-8ceb-c4d423e9f018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf05884-ea80-43d2-8ba4-b92f1f00b5d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbf8e9b-b37d-4dd4-8b07-52464d222446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f232471f-60e3-4f0b-97ba-b37feed54a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0092946-d297-40c3-beda-01f70807b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d631b8-eba7-4798-8d08-64c337dcbf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f1ac63-8bfd-4f88-b9f3-2deea716be00",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8adc0-5dfe-43ef-97ca-0dd1c41e7739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb39828d-798e-49b7-9d20-ad3a6a2f2768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974b481b-1ba2-4e67-82eb-0142995618e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e40f44c-7a2b-4be0-b912-be0fd19b3bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908ef100-574a-4288-b6f7-e095359181b2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df0a788-c22a-4e59-bcda-f96e3cc008c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab68195-ee04-4cd3-834a-e3209be21e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b153204-f434-4d0d-82c3-00cdd71c1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea86899-9189-476f-b5d3-30fbb8a7b90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbbd367-e0ad-4d6a-83df-6dc0e0d0b870",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4494d0f1-b047-421c-9a2b-936b8b4516a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8432073a-3902-41ec-88d1-d52e962436fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b7ba2d-9d62-4182-af01-0942034605a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e337d7-b7ec-49df-ac40-4881d0eae473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6195035-3b05-4303-afb8-ead432be3d75",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bca9ab-b64d-470a-b0b1-e08410a8cd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71918448-0a77-4121-a6f8-ad58ec515526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a577fa-0687-4dcb-8150-4ed2bc53d8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c476304-693d-4903-9710-6b9911bb2341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5031ccd8-abeb-4a39-94a9-e7be4d678d79",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c91f62-12e7-4688-b77b-29edac279b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8af9576-0077-4f57-83b1-ba9e3eaa13ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f991e395-51e1-484a-bf80-c49876fe3bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec674e55-d66e-4289-853b-375442ee8b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42001d77-6d0d-4521-9250-b60901d4541f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c896377a-166e-4ce6-8239-206817781c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcbce79-df11-4b63-9c29-06cb912c3f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5606ae-599b-474b-8dc4-41fbd7f9d724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62960cd9-8ec8-4da2-9b9f-6acdb6b287ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94019432-b838-4f0f-b9e3-a2f43eb812f7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04354a7d-3aa6-4336-86fc-365a673d4859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82352dec-7097-42b9-a9c1-99cac2edb5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46109af2-7af1-4da0-bde2-e41349218f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f7b568-9854-45a2-b5b4-8f61762660a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663b3418-f235-403f-ba0f-0a6c6b17a943",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8033033d-252f-4f3a-87a7-fddbc4226678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08361851-2d84-433a-8622-10a18532e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd794799-34ca-4221-b8f3-ba99963c5033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f01bb7-50b5-4a70-a43d-36b28862e0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488a2dfa-1e68-4100-bfea-20b36a303a17",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2f2a16-a5d2-4173-ad7a-02bc372f10e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d751e017-85f1-42a5-914d-6e9a48be8b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609a6fa-698d-4918-8b7b-71e866809715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64b92c65-67ac-4ca2-a818-adb224ee5460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720cf38a-b121-4339-91c5-f695f62447ae",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6102b73-b598-42bd-8ed9-52f7594302fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c795f2c2-5a51-483f-9f87-0f3802174527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88b3dff-b47c-46ae-8adc-f57017fc7940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d87b221-07f5-4fd5-84b6-f9fa3c8859c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e0a4a1-c3c4-4260-a585-df1383a945ce",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aec1364-e501-4305-a477-4d15fc87e401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d00e6f7-ece8-4eb1-be06-f9162202738d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8388acde-773f-4c1d-9cd0-10e2e6cf0a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f56bc2f-9479-4ff2-bc67-abc0d8103357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24b971b-9782-4ff5-b034-c53720a0b66d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d807748-febd-44d3-b37e-396e6bf80db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42efabcc-3124-4a4e-b7ca-0455637a7893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7b4c26-80a3-499a-95b4-5164c952abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "775db5dd-636d-4361-831a-8794b5ebb4cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "223d7af8-b481-4bed-bdc9-07b310fed2bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09f17ffe-1872-4504-88fb-dba13844798c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ebdd3c-035b-4343-90a7-4fc00f4ab726",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "37417344-f0ef-4119-8874-3be3a3a47136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be990ea9-400a-4b1d-8aa0-eb4321f2778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65bb8f2a-1f18-4e31-b475-7209ddc2ca1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f0ef45f-23a8-485d-ae9d-24514dd08226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6a04ac0-44f6-494e-81ec-1feaf632e4f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5af8f3c-0bf8-410b-bd8f-0aceb8f3ed78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c289cc2b-8020-4a36-b690-55722449a10d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0251a4f-9b83-49d6-81e0-9e8d9caa5c58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66176179-0d4d-453e-b015-570c1d940937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7ab0edc-0f6f-4f10-b3fe-4da1a267239c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d62684f0-dedc-46fb-9dbe-004d703eef8a"
            }
          }
        ]
      },
      {
        "id": "39c29cef-ce6a-431a-898e-e6a86d88eb3e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a11988fe-7a1d-4fb1-8b59-0da45ac51580",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79bfb890-333c-4bb7-9655-ddd93389c468",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58c1cc90-4685-4e52-84ce-05c1765e19fb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68650e36-494f-450c-b93f-7579dcdf1f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f443177f-de51-4098-905d-71502503a255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01fe02a-e0ba-420c-a64b-25556b51900f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb3d796-a95d-4934-9adf-375a1c749e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89905211-16ba-4135-bedc-0484e2c7d054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81524131-94c1-4faa-808a-5990e5d5cea5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821080c5-140a-48e3-90fd-4df8c19680e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb4db0d-2cc1-4ac9-b988-5810465d5279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f7ae0c-8e71-4dfa-997f-1b300c710c3c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03557028-463b-430f-ac0d-e73a7e74af77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d27e83-b694-4a4f-b177-1b8c6e13a513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55e4404-d90f-4963-b971-f0db77564d2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae6298-9238-4250-abe5-83038d4e70f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7893c430-cbc3-4e03-812d-3f10f42854b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1244b871-d8d9-44fc-a467-2af392c5b6f9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bddc34-9028-4a65-8027-bcd158f9b7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31155f36-77d0-428a-bcf4-29ac46b3754f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a74a1dc-9dfd-43f5-ac1c-f48e5038e6a0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd46a90-44f5-44a7-aa05-47b606ad5494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04400ee-ddd8-4cf1-bb43-92e078c83147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f67caf-e4ec-4be2-baad-191833fdba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4e6c42-df1e-454c-9568-241fee0cd60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b65a5f-e1f2-4561-acac-53a22d1d4963",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277e4b59-e7a4-42b4-9eac-46c3ee9a488a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6944f18d-c98f-4d0b-b483-e888a281bdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa00e5-261b-4004-90da-6364efd92d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69beba09-f6c8-454f-bf70-408ced7c30ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef2a812-5062-46d3-8c98-fe9e09437d0a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230f2c5c-c336-415d-b24e-30f1bdbf52a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c30af7-1767-409e-8f2e-15bcf89ff651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120688a6-1a66-4dfd-abdf-2614c96feb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d85424-5fa0-47d3-b5a3-8306132f3bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e0234d-da03-4bdc-a8cc-f798a98fa0bd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cdc148-a7e5-402b-9b9c-6da6d5d47d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a4c261-98bf-423e-909f-04536bd4fb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f1449f-68f1-4c2b-b59f-97980f7bdcb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb91ab8-45d9-43e0-9426-c7a6917102ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6776bac0-b70d-41df-8494-5432a918e075",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4319a1b-d96d-478c-b66a-e8aadf282c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badd19c5-1cda-48e6-91e2-89dbfe82ea53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f3eec1-26ad-424d-b935-dfdd4926eade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4921d819-d15a-431a-8a55-8e5c7e2c4a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459e4da2-8498-4ddc-a4d2-0358e547e1aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb325ae-3cb3-4f3e-a301-483ba6ede0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd7dd6e-3950-45cf-bd9f-6e0b823801a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a072c6cf-7025-4d85-85f0-7c56790d0172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325069d8-974f-4bc0-a80c-b96884f79473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b53a80-4e77-4215-b501-8f06305fa691",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cab5ff-d3e4-4ac7-a647-309e9e91b22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ffccf12-39e7-4211-a4c8-276a2821fdef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10f9c18-8bbc-49b6-af49-61163729d37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e80a058-11a2-4043-bfe5-57feb2a31fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4148cc22-b5f0-4e54-81dd-17700e8ae19e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce140a-fbd1-4d2f-a283-45417b9d7cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f882553-df90-42d1-86e1-6bb71620cc9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2e7c76-3129-436b-8104-b1b2cc4ae26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177d56f0-d583-4aa3-8a5a-d86458d2f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee15c12-e8aa-4948-92ad-977ac4c7a23c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5457dd-17e1-4478-9a61-e952cd5dd53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf2de572-6065-43b0-804f-0730821714cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc531628-fb4c-410b-a977-efe3b97e8a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfe5f2c-ed4a-4a5c-9499-d81fd6c62e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2eed97-3378-470a-94c9-9ce624867dc5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54c3d29-1784-4140-9271-565ef2eaec5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bca0423-7522-49a8-9a28-c9afa0a2a036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13a51a9-a7fa-49b5-92cf-4fa2c8552961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3387738f-443e-4ec9-9d28-12b4be966d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1bd161-f764-4b8a-b5a7-8113d1210efe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74d20f9-95b2-47a1-ac24-89fd3e39280d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa431e0-462a-4e21-b92a-1855bef7ebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f8c7e1-bef5-43d0-af12-1dd275ac8807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5f84c2-39bf-4f6c-a7dc-165d439c8bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5cef22-0f97-410d-90d3-c55276cc4158",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228fc22a-5ac0-4ad2-ae1f-83bb80096626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef4d4b6-227a-46a0-9732-c84fa74d27c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299feaff-5153-4e9a-8a07-91abd9bf3aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b05c791-5b54-4576-967e-05281a1a9b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bfde5b-3941-48e3-97a3-347811830aa5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0a06e6-cab4-4ea3-83be-d82066dd4244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79871b42-5ff6-4ae1-95eb-1e00bc6daa05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d82a8d-525d-40d1-99cb-2c41ed8537c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff30fc6d-bfe3-4a2c-8af5-3bf7fe96dabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b4793-d7d8-4104-b12c-40db67ba052f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf5d055-4065-4a07-9e28-601258307ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0599bc5-6c7a-4fb0-a1f1-108a5733baaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb6f53-ff26-4c2c-a6ac-b1b73f8dd557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9dfdd6-4ff4-4167-b739-965fb1d4ee76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e76b2d-e3fd-4188-94cc-2de617cd91c5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a51528-35e4-4717-85ee-4ab6e136d99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf046847-dfd1-4b2d-822e-2836bc165ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe6116e-7906-4ac3-a902-1956ff197880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de063274-3fc4-44a3-b585-bc489d496073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adc6849-f115-4e9d-aefd-4e10e6c12265",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acedd94-3737-4bee-b1f0-a9e96e46ca2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6e9039-c56f-4bd6-bbea-4e78818d2945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf6584f-a378-4937-8b38-12658d63289e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2b9ca3-1c09-4403-b708-a39292c5bd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2128e32d-41ef-44ff-89ea-25e6e980d951",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098298f1-6fe0-48c3-8259-9b363b9a6115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4353dd98-9f60-4d6c-ac26-a78d491362ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b693bbb-3793-40c7-8d16-3f14f9c581c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3a94e5-8122-4804-a7b8-0cdc497ee345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce834096-8695-470f-92b1-aff196ba40f3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f063f763-cf51-4c86-bf6a-db0962207f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5466c2ec-f522-4526-98a2-5ea464b7d0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8640dbe1-508c-4ca1-8c2f-901da352b2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69eb9bec-7dba-4573-ac36-635a0366ed64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6358b86c-b383-43b3-bb10-98ccd31ebba8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad1ec95-ecf7-4770-9a53-55f5280ab3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133db17d-6b48-4e58-bad6-a81110a7e959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d80921-4743-412f-bdeb-2c585915df71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cafdb91-27e9-4f0a-aea2-cd57582ad9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad73ac4-b042-457a-88a1-dc1794aec6ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4532bf-1b25-422b-ae13-95fd58e5530d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d53eec-75d1-4a28-b82e-ab299f0d5283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc8af33-71fe-4748-853e-a4fd031c4652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df613d51-775b-4f25-8f8a-4f0a5b8130a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb617c4-5b1f-4a4f-9de1-bbd8a31fff57",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01df0759-331c-4839-887a-ce75efe0e477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc6fc2c-1be3-4734-a91b-fb3eae5e83a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086ddcc9-38a6-421b-b66b-d2a01775450d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbb7064-736d-4399-a2ae-e44af22bc1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461cae45-1f03-4b25-89c5-760bf3346e01",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aa5255-25f2-4284-8f20-6019910e19a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e289531-ade5-487b-8fbc-e5b10980da97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3367cc-0145-4511-895f-52a233317be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ae4750-c976-40b7-9bfb-1beb7658064b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0926c13-c659-413e-beb0-4d0a5731962f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8995af20-d9ad-417c-a49d-907564b6e756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e17fcab-e277-44c1-9b1e-6dfae9360411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1047325d-5d95-475f-a8ed-8f2c76f4a35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912afb38-3ca6-4610-9849-1d962077f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2ed227-dcc8-49c4-8dbd-37f1716698ef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73953f2-7d7b-412e-8577-f60422895f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98683fb0-f032-4ba5-9006-c3ea36657306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd80a48-eed6-499a-8063-24b5e5d8158a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39bf8f3-f2f5-49aa-a76d-49447125f110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce9e20-a4fa-46dc-a277-69546f4bbc04",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c2d31c-989b-45a8-9c29-6f3217aed08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b59f3db-af33-4fb5-84c7-c969c7152e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0dcd03-97ea-4925-a017-75a2ab52d64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8a5493-8251-4a21-aaca-0a1bf78cfad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53f848d-362c-4333-a8e6-b865f7719fce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edf854b-48aa-45f5-b0c6-3a6ab9f4cbd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a973c67d-7e9f-448a-8d06-c46c25e93a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08edfdd-52c3-4bd8-bbf8-fe349e6793fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ce1c9c-98d1-4edd-afa8-d1a79ed5fede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4645bb8-3057-4de6-a297-d4323b497e85",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c440389e-b726-4f4a-a16a-7fe3a366cd51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457a5afc-5798-4f26-bd8c-e14113a8a1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b79e77f-f349-4f0f-9e98-b53890769048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47dc169-37ea-41a3-894f-18ea904f9d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2048157-edd3-440f-9cca-67c9d02962dd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b95851-a9f3-4292-a64c-de5f9b939ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9bed5b-0507-4db6-b4c8-3d1a25920719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20edb7e3-9b14-4e27-9580-31b043b9a595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8fa75c-4858-49dd-aac0-fbf6b950bbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4cfeb9-5729-439a-9921-bfef1157fcd6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee81fce-3a34-4620-9b4d-2ef54d3f9c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cad054-c13e-4c11-b49e-5be9f5fcbab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039c3682-ba61-474d-b124-a10647fe30a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296b8fd2-1e58-4708-9e6e-e6bf14790d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f18511a-7f2e-4028-a04f-780065f78da4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7baa5e8-7479-4214-b860-9dd96e5598f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c5228b-fc71-4d4d-8f72-66845c3aa611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d335256c-31be-4e76-982b-593999a904a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adb3d50-fd1c-4e2e-bccf-ce267c2c31b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a60b9ac-96a1-4481-8c69-ea46d5f8dfd9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce088b6-ae20-47d4-bb7d-7a454191c59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8a4180-635c-45b8-b0e1-89dc7e433ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a2715d-1595-44c4-ab12-65fed37fa3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f09117-889d-4124-a5ae-908da2bfd1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc98f105-8c54-4e05-ab7e-30cf0ed1c771",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5705247-54e1-4583-a961-5056f87c311c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8857f557-72f5-4683-b0f6-6f8b9f3ea2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df91a857-1f3f-415e-a67e-d386fcfcb347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d446b5-3d0f-4c53-85a7-fab2f0278921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8286a08-c551-420f-a05b-74ea9973538b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f70f543-60ae-4881-a3fa-f2ee41197a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef7f66b-397c-412a-bdbb-3f456b89b570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f805eb-708a-448c-9184-190ca2bac414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a768f7a4-a13f-4044-9353-da7bbb56e86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29a1a4c-c1d3-47a0-9de7-3a3ba7a470e6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6932a9-b764-46ff-8ece-9f3321f96138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf743ff-20cf-4949-b093-3f35e37875f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb5524-4578-4055-b407-81e37ef65c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cef87cf-74a8-4b13-a71e-a1db48c0594a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52e7c29-68ca-4000-b59c-ad6b8bf1217a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9540e023-a385-4109-a390-db524cd3d3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b677ef32-8cf7-4e81-87ab-6ed715d05de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e936d621-08ef-4c4c-b774-d9426f1f3d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fe479f-6843-42d1-a9ce-f0c4b45a80c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b796959-d087-441f-ae02-14068b5db134",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44d6d14-9393-4b41-b5a3-5f9a079bcc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc760c87-4938-4345-b4b2-c7eb8f21db7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261d4df2-d16c-4522-8fba-20fda173dfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1b31d1-f3c4-4f7b-a5d8-21637d464a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1437f5b0-3f49-48d4-a60b-4b3069631b98",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c92fe8-350d-4928-a75e-c1eb7f741467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58053f3f-794a-4941-89a8-ca6c6f390c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a4a69c-8f6f-4e8c-b961-efeb939dbb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188ec4a3-13d6-4d55-b992-d2bd61c06b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc227bfb-50e1-4da2-a768-4da0938586b0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdab367-ca92-4c5e-9b5c-1f98e64fa6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf301d1-4962-4086-b71f-016f6a839b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe963328-cb4b-4bd2-8e0f-3434f6bda644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d213ab6-2742-4052-b379-db8fd8dace02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd53dcae-a5fd-4292-ac62-53979a55b952",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8d6497-ef47-4cf4-ba97-acafa15a842b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3d8889-1102-4692-85e0-678b90eb108d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c36ef-d3ff-4a00-9e5b-6c3906016202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcf7922-53cd-4bdd-a59a-b69785bd1dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24365146-29a0-4726-bebc-034d3bd4f4b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcfd870-60fd-4e2f-8eb9-5c27553853bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d70d864-da92-498b-9478-716d8535b99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cbc6c1-d6cd-46a7-a378-6d17cf1940f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6253231d-2f70-4888-ba4d-de5c47a4bf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86139a8e-ba72-47a8-b731-5b4c664ad35c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7311a759-a2f4-43d1-8e98-6e0571af91fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5433042d-9e5f-4ff6-9091-2757bd997261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce10933-138d-4adf-a0c6-98e8fa5b807d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d699dbd-2697-492f-9713-9f9a5ccc71c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6738077c-ad2c-47b2-8ef0-2692f20cb045",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42d0c2-57b1-4aaf-9123-84b576595665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1100af3c-a2cd-4d6b-a094-0afceac5790d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8e40b3-718a-48fb-8715-a3181a768ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd10694-9360-4325-8455-ebf778a9284a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89c2edb-23b1-4f19-be99-bde6a8f7c678",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05957b89-1e3a-4d2b-902b-ecfff2126ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7b17e5-b117-4b78-b395-d8452eedf41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d700177-529c-404e-8310-e589579021fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219019de-65a2-4f4d-bc09-a0f6f7706c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcf8dbf-e0ca-4320-b832-e8314b348877",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c9d4ad-fdae-4195-88e7-d9669d02162d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bafe609-81ba-4928-bf99-4f98d9a3a8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b92420-edc0-4587-bdba-a1fece00432c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9817f96f-8873-44dd-85d3-d675d2d93c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c065a85-371a-4a2a-b914-40523421bdd9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a321f8af-a4bb-43f4-9252-9885c83876e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eae847d-47d2-454e-b71e-ac2f915c70b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a220e5e-8523-47b0-9a24-32123530b7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5feb70-5b5a-49e7-9435-4363b17f45f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46579d94-507e-4bb2-bf23-c329142256ec",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb74e2-4051-47fb-abb0-4c92811c860a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7082731-75d2-4336-84a0-876e0d70692f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef59901-b74f-4bfa-970e-302eb28ea2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0619ab38-a496-422e-86e5-8bf10d41ac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12784c33-3373-4024-9c79-d6f25b19b14f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045384b6-df34-4362-80fe-817c490b970c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c42d008-1ce4-4991-9de4-f87bbd761490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b980a5-8b2c-4788-8032-0b2ad17c6c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dac9f1-566f-4c48-993a-53b608846a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7a5fd4-628f-4580-b54f-3267a1df3192",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105cfff3-5ccc-4b4f-a523-63d7432e31dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc88a65b-9427-4fb0-9a12-6640e550485c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc903e2-2772-4669-a518-b814b0f90e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7ad0fe-cac8-4e48-b13e-ae20a1a1951d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399daad-d939-4241-84d2-a1a707dc39f8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f0fffe-894a-472c-a862-78d1379b470f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d2e96f-e7ac-415b-9879-5e3e7caa67b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6241e4ed-e7c8-4202-9c83-46f12965d48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7448a1-b59f-442f-9daa-15909c7c13a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2243f43-567e-4dd0-aae5-04ad8800586c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a6f8d4-2fa2-475d-b45d-069799c979ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c143cfc-8a4f-4c67-99f4-c11955cad4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec968339-d8c7-4830-969b-d6ddd36ec2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5819f08c-c403-4c18-86be-2d2265c6dd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c71dde-f2cd-4cf6-8734-71e003556a94",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793c97e9-93ce-4708-b0a1-6a5cfe6552d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d475db32-d7b5-4409-89f5-0f54d7202ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7d6d75-715f-4c94-b4a3-7cc650bbccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b178eaa-e84a-44e6-836e-97091fdd96c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7341dc37-f676-4c77-b3f4-97728079f5e6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df24bc9-0c92-49b1-995e-048ba9e6f84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5dd549-12fc-4c6f-8887-72b466faf8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7b6a85-e351-4a76-a9c2-80e0c06f58dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f4e8f9-c14a-4f4d-9936-2e469509b26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135e3e0-be30-4624-bb82-ad6ce8a4291a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7f81fc-ad98-443d-9ccd-68669d17b549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a8cba2-195c-42e5-866b-5b2423f3ed0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501e68a9-eff7-4078-8d09-95ba04ff5c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd86cc0-ffe7-46f8-a226-45cca042e577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319aafab-fe16-4dd7-a5d6-eaa9f61f35be",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413c8d3a-f853-411b-bcc5-21303eb55f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18765ea-8215-49bb-90ea-332020c905c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4083b5d7-71c9-4411-b27c-33d956d765a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1b0e18-8fa9-4050-a60a-b6ab39d7eee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80667b58-826d-43d1-8f01-0dadf633b2e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0015dfe8-c838-4231-9f11-c0426b1d5536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac0d06f-e8b3-493a-8fcd-9d28deb2d3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c636a8b-ee33-43a6-9ddf-d0016fb1cf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e16c773-baa8-48c4-9e6d-ed80650e7ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ad3391-b48b-409f-9eea-aedb606c3565",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d36c37-82c6-4c9d-a0c3-1e43345e719b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487e6dce-2930-4904-8632-96d0b73736f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004ea2bc-1e4f-4efd-b33c-da3c8511e312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be211d0-faee-4268-9e35-f0a55e20696e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4dee6a-1ed2-429b-bd15-5e8f4ce736dd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affab4ce-dfe3-456b-862b-3066a96ce292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b6fd05-cf1e-4c78-a8cc-5a27c14ff275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0da9ef-0b00-410d-a5e8-6189ca37da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c170edf3-383a-4125-b8da-a228fb1e8b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5380a5-1ca9-421c-9e3b-d1f9936c9893",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a683a9f0-2332-4dd0-ab89-15d5e9d0d5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96a9215-5245-47f2-ae66-8fcd5efe39fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3d1e4-fbc7-42db-b158-a10b183929c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a853dc9a-b731-4b7b-8403-21f61e0e4a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2929ba85-7a3c-44a4-b1e3-2154b144c383",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f251b3e3-c4d3-42de-b27d-a31b158230fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f68fa8a-1079-4664-9d8a-57d51cc99da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9757d8-bfd4-42c8-b87c-b27b08e7428b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c3d6dd-9afa-49dc-8a12-bb76abf042bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ee8ac5-ed40-4190-af01-e99b6d86dc36",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d159191-da57-4bbf-a560-befa3aad0885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "891f73f6-d4a4-4229-bb44-662273ae963f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f829ec-649b-4dce-bc4f-69c08bbd0e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73021a41-2580-4ebb-ac5f-c81d5449977a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56e60e8-8b58-4026-8c97-af9cef0c1f2f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640d1be8-21cf-4381-b461-84474c7a0502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dfd44a3-1802-4a28-97c1-dd7eb9f4486e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21a69f2-b520-4c5e-aa26-35fac2e03dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90707ba-2b8c-426a-9075-24cda727bda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f19801-b739-4472-838d-eec8c9a3eff6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acc9ecb-c03a-4554-a53d-e31cf838c457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71804cc0-3a24-4d2c-b88a-6448fc37ff94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3242d380-7688-4f9f-82c3-b058d0a6b0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93ebfb3-e230-4bfd-aeff-2952165a9c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f53b8d-12bc-44ab-b417-0c717c7d16c1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82979ca3-7b95-4acf-8e2a-299112f860b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c9d891-3a82-4568-8792-3267ab47dc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12a9228-5134-4000-a765-1b1436945655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9707b12f-4290-4948-86b2-a0aaec69fb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a369ddad-2884-4e75-af5a-24698f0a7e50",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192fd388-4fe7-4a34-9ef6-2b94c52c9e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0813e219-5b92-407d-80b4-8399c0eada58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7e8526-5553-4509-b808-9899a6b3223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5debfdf6-0a7a-4735-ab5b-983450357768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9907b64-169a-4be8-bd77-be3ae2df92dc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bae2a78-71cb-4c0c-85bd-778a2d6bf5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2983e05-f3c3-4589-a372-76b20b8a2873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c500067d-b931-4a57-855a-7fe73199a0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac58e14f-9dab-40fb-a28b-4ef10a204072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0436c51-1acb-44bc-ad82-991c7756d845",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0d8e47-7232-4f9d-9f0c-a77df36e3a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ad7caf-c18b-4609-adfa-42b743f7ae11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65299fc8-f1bc-4cd2-aa1a-a421b36c612d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9246f14-22dd-4e77-bfa7-1db37e3afce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e188c65c-394e-45a6-8d4d-09bd32abce4c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adae547-5892-47b4-bba0-e00840960fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb3957e-f9fe-466a-a3c7-eada20b77e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f407d5e9-de45-411b-bdd2-745837724ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb394c2-c121-4491-a11a-410e0710b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf1c2b1-e247-4454-a89f-72dd6e78ad3c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32dabaa-d652-4d5f-ae10-e7474881ef14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9577fac-3918-4c5a-ac08-41eeb77df5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcc44e1-3ad9-4d67-a0c2-9c62c96e2000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fc6161-77b7-4de0-985e-b007265ea217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe5f9dc-c7e4-4759-83ab-a4bb6d03e8be",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a9ad32-e006-4506-ba4c-0d00d9f3ad25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333ad4dd-8f68-4997-a5ed-439692ea84cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdf4e66-e96c-43cf-a65b-8044cfacfe53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7975ebbb-5a8b-4c41-a30a-07153f22b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2881f7df-5c1e-4df8-a35b-b047426bcbfe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd8d764-f03d-4129-a686-5abec3875289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b98c1d6-1d33-4176-a21c-a68acc99e6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f20e1b-6a58-4c91-9a87-840f2c8ee2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48596f06-189a-41f4-bf8f-f32e38256a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b83c5d8-fc03-436e-ba4c-6e93015000e4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c7ebc1-2969-404f-8a43-a807ab240652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca6913d-3cd8-4888-a4d4-761334368b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecce809-3f4b-4054-b340-ba7f8a2b726a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912dcb54-07f6-48d2-9174-fa790dc85dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0df4fa8-9148-4168-9895-33b0bd85490e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafb83fe-f299-4bc6-904d-f1d133601353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ed1a1b-2cba-4a74-993d-cf4d04bf5f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b34ea86-be54-476d-bef8-f20bf4f9eaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a418dd5-bbc9-40b8-bbd3-b6e6d09f7c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fef9ad2-5ef5-46a4-a575-0ee5f9155f49",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502bb175-da2d-4f04-932e-29605acf753b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea19f879-c2ad-486e-9e7b-66ea6e083787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfe787c-ae68-47c8-b06d-934c31ef2b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ef7405-2da9-4335-ac6e-a402eb843f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1490249b-61c8-4133-9f5d-58b04d88f01e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e12effd-77aa-4ce8-88cf-558c116993dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd537af1-c6bf-477a-9e7a-74420e280309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac038da-5f46-417b-808b-c9ba2394b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9399c961-2c11-42a0-837a-23f9b80ec7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4542f0-e85c-4278-89db-6a7a44abaa0b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc430e3a-b76c-4dab-8ce4-af3242fe3df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b0ac47-6e4b-43af-afe3-5cab5c1ba4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0a92f7-ae0a-469d-96ff-4c289b33be16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a336fd4-0762-4f40-a3b4-47137132805f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0e10b-3ed3-4326-8ed2-c86164b5de1c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e359c1-8c08-4ed0-9ce1-a014e634c616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef1f429-602c-46a9-b3d5-8134373ec24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c815718b-e55d-4291-9980-6acc38a6523f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706e93ee-d9ac-4fee-b56a-1fa1db71f5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d344c16-6610-42de-be4c-3e2bbeb13801",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4560303-a619-4025-b446-500aa27c9659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbc695d-bd63-49b0-9b17-f6408f3575a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866c59c7-79f5-4315-8c02-b05cfb89054d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67ef02a-bda9-4c3b-9934-2a34b4c54c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6010a23-eab5-4f05-a150-09bf97716345",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9edcea8-219b-4d1d-bdd1-3b0b7d4c294a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9062066b-1d9f-4b8f-b25c-407f84229a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c86ccc-6dce-4da0-9f0b-3af494815902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3097f1e3-a99c-4b05-a8b6-9f0cb61f66b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b8da40-8927-42ea-a286-ff0adf28c752",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691e81f0-3d0a-4481-9cca-d67559728801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ad1dda-8956-4834-9e63-1572661884f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faeb801-246f-468e-81e4-0471cb57a161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef65fe73-94d3-4531-b154-ce85de7fcdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bbfca4-12f2-4325-8999-99fb1512d454",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d8df3-c495-4b3b-81f9-3c5a39757f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd08353-61cd-4c2d-bdc6-f75e32b232ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7233f8e-db22-424e-bd7a-7a3b421d0d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dcfefa-5914-4608-8447-3ff588ef3fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c179ee6-b7a4-42e1-b514-a41d8d970f12",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d48ae9e-2229-425d-9e53-40af8ef9131b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7977f7-b2d8-4c95-8665-4d63b1969c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9281418b-14f7-4d0f-8dd5-48ccc5a63549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757fa5f0-31b9-4fe6-90c2-a7db1e7b3c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7346d80-1c19-4657-af23-bdd5ffa3ce6b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29801727-946a-40e5-8c40-00d9a4a80de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d08a39-2579-4ff8-ae01-fbd2c59d7e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05478b42-c1db-4997-8f29-98195a689785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8323c769-8bae-49ba-8495-bdd80986d458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e936ad-32c0-4851-a46e-f20f71a28ac3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8240da78-fa83-49f7-ac77-5fa1daa5f77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05073b35-6be5-489f-9b76-414146202a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0454531-26ed-43ba-be84-5caceacffa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e16ecd-ff2a-45fa-8fc7-7693d87db429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aba5bb-94da-47c0-9a0b-8fda076a3a61",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8351f3da-9214-4db9-b66a-73e2d110dcfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92cd96b4-f96d-4b01-9bfb-83c77f017b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a93b96-0310-4508-8f64-ce5cda524bf6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03182384-c407-4dca-9aab-5b5f8df22669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61c32c4-884f-451d-a28b-1e8e8e2febaf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fc89bc-862b-4840-bbbe-0c8772378b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0069757e-e3be-4054-91ea-69f6db64ed32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8bc21d-3fbc-49e4-98bc-22f288272232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8e0ef0-75f5-4d18-9189-69449b77708d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9d18ed-411a-4c46-baa0-f9f7ceb8cfcd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f600d7-6223-43a1-8baf-ee05de799dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c3dbb2-578f-4991-ba95-f07a9dffd77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299fd628-be24-4e84-a16b-9feec591113d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55b9075-3b3e-41fb-8a42-6c73ca2b2f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c683a-e27f-478f-9e7f-6253e63fbe24",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa503ccd-ced5-4deb-88df-6cb629868ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bc5268-6d80-4fc8-a645-8805b89a93ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae775d6-4ac4-4783-8263-83f87919c423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab5ec47-f2dc-414f-a883-284d995dfcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dce818f-e325-4de4-8d0f-5e4c08f77b7f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370841dc-1998-4158-920b-93f48fc254ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f2ffa3-bc5c-4f37-9a05-1439f3f56345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd73bb63-37e0-4c60-bc7b-a542bfe57014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d8373a-5dfd-437a-8fcd-a8d47868b305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae76bd28-47f4-4f9a-b22d-b024942ef43f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e9658f-c5e8-42a5-a51b-f5f4e4e31483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7b08a2-2805-42af-a55a-dc0fad5781c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1951fb49-1829-4b0e-aa81-497646e4fb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35f9c5c-9672-4565-83f4-544e974afe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b0e6a4-4161-4d39-8761-8aab34c49ff7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad2d895-ce92-41f7-977d-802089863db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c7786c-0ad6-4108-af7e-4d831117da51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa6e0e1-2540-41f1-a364-714b8d10da98",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0857b9b9-3cfe-49e0-b95a-c8393da1c88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5946fd4-6048-495b-9a2a-b350c4836285",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb263bcc-2bb5-41ac-955a-c1a0217a8066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495a1bc5-2040-4d17-97da-070509f753fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cf5953-38d8-497f-9a21-cffbe694bcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0baa0b5c-c980-466e-8642-d67b75bbeb59"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc149baa-6209-4f87-9edf-ee77d328e174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d791995-1682-46b6-bed7-4cb5b08aadd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6713a3f-8bbd-4b4a-b805-dd3444c6b8d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7809074-ee58-4b5a-921c-ca12d8e1fd88"
                    }
                  }
                ]
              },
              {
                "id": "30d745a3-9bec-4ad7-abb3-30a5e3a144df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e74f1bf8-f672-4fe3-879c-ac1810de1b5e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd3ad14-6a07-45db-a4ca-f39fbbeade5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4ca0c54d-cace-4feb-bb08-f300cf791368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4d685d-7e49-4ae5-8606-92e824e5efb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afef314a-507b-4efa-908e-916414c2c162"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "151fb63b-e0e7-4cbb-9fcb-7c02599199ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e9c22aa-722e-4904-a429-e1e35d5d2fbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "959d4545-35b4-45e1-b771-13ed75faeacf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d30fa7c7-693f-413c-a799-bffca84e234c"
                    }
                  }
                ]
              },
              {
                "id": "65a4774b-eea4-48ab-b17e-d2351510a518",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ef6705f4-36b5-4295-9dc9-a1c7d09e32bd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75df26d5-e98c-441d-8bb9-9f2811788842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc9c4098-d885-4549-82a2-e1a967360c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caca5c6-195f-450f-8c2a-dc9256662db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292a5650-d421-4639-9db0-1b13fe6eab7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "be6e8735-537f-4c67-8224-67eb093aee93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74ae3356-84c7-4cbb-9543-b8cfa67c0f2e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3e681da-a207-4170-ad36-d9ebe156ab5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0863fe0b-9760-4269-afd1-42c1593a77f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c00e7060-b0ab-487e-a6ff-adbb543b9387",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "077f3868-0e19-4e86-ba13-a31f47762ca5"
                    }
                  }
                ]
              },
              {
                "id": "598fba75-efdc-45b5-a8fb-38f2e23e5441",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "874dd2e8-776a-4c05-acb2-84473b0d3ace",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7a7c156f-b8a7-4e76-b176-afa7965ddf70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f980d82-c6f7-43db-8ae7-08315d7897b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42ff0257-8598-45c4-a35d-2d934655b53e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4045f957-047b-4a9b-bc99-5b04cbb1774b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5daacac8-4e10-47c6-beb5-2fac3840b763"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75b3dcab-fd99-42ae-8d25-8eb8984fe8cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "def5cc4a-4910-4aab-8dbe-ee292ea6859f"
            }
          }
        ]
      },
      {
        "id": "837c24c2-492d-4a45-9bae-48b106ebbfcd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "912a6177-bd8c-4761-a373-59a3231084f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6ded34c-0702-4c19-b228-6b737875e044",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83042b19-9adf-4800-8892-5e225f5882db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ff44db-22e1-414c-ba1c-09aea458e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b415b299-17e5-4a1e-986c-e00241f3abda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b99924c-bd0e-4ce3-9d67-6a7b7580805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b67b884c-9613-4d04-90a6-6b2cefdd19e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af69e039-1574-425e-9227-24b5a5671fe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c458285-a682-41fd-9de5-7c6c888cb7a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a015a410-62d4-428d-8690-c21077d5b1c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "884bd3b4-13a6-4ac5-a471-39166ee6ecc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "442b2ecd-ef58-428a-bf01-05c40f5b7108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2714d5a6-0f72-41c1-949d-2ad8d9268688"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "185b79cc-a599-42ba-80bf-7a7d820772ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86bd09b5-76b3-4fbe-99ca-4cf1cb0ac28b"
            }
          }
        ]
      },
      {
        "id": "54f98f1a-7d1a-4d53-ae92-6b64886c3ff9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4d4f1342-15ca-40bc-9db1-3256c5cfd996",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26a7ff17-6121-4894-ad00-a872ca8a2f85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "144f7d5c-2501-4948-b4a8-93d4162d445e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ae181-87bf-4428-98a8-d9d8b6ff79e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58a40ad2-20ca-4188-8da2-5681a5f8a241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa36f9-b00c-41b9-a502-6e0d6bff67c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f315ca3-f439-402f-8fc4-04b0267779ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4655c9c4-521a-48ec-968a-aa58202ab2eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74f8486c-8c2e-4f52-b863-261c3ab4ecdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "708c49bb-339a-4d15-860d-1e27e4b2015d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a605a167-5a6d-4934-a80d-210b0ff39723"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21013de8-5c19-4e54-9c31-9fab1291eb42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30031ff7-9477-42a2-8074-9e798cc9fc87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8697f03-1555-4cbb-bcaa-213888fea57e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69b43049-f560-4c90-922a-6f12bb5a22fc"
            }
          }
        ]
      },
      {
        "id": "123a00b3-4dbd-43cb-ad5a-29be8acba8ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4a917927-55e1-4f62-abcc-591ae74b9789",
            "name": "Negative Testing",
            "item": [
              {
                "id": "923c3dae-c0ad-4ef4-bca4-d8809558fc79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4737130c-71a9-435e-9361-88222b7fb2ca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a089495a-9435-4c52-b398-253db41a04a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6800e265-fecf-4868-bb62-50f251064a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e773cf-3d07-4a53-ad05-087630cccdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55c193b3-dd5e-45a3-93a7-5cb6bd693b12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e201d94-a591-48d8-935a-2ddae0efd52c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "860a5366-4234-40f1-8e90-2e304e83663a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db661e11-c30e-43e6-b0be-575d96b02b02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5608aeb-2393-4c78-8ee4-ead3bf07c136"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b72f5038-f8c5-4dbf-848f-20e3bdf4e22b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "537978ac-66fc-4fa8-aae8-a68668ba5ff1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32d5e8ca-a3dc-47d5-94f3-8fb5c20b3b88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "560ca6c7-535d-4a28-9971-1fcd23741283"
            }
          }
        ]
      },
      {
        "id": "e815c1fe-24c5-47e1-bac6-b2ba1735218f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2377ea26-083a-4215-96d1-2797a35cdb6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27504e5c-cb4d-474b-a23c-2a76566824c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0d77aebc-8aca-48a2-a846-fa8710f1e5ac",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5647eb1a-7360-42a6-8cc9-d85984c58b50",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ee501be-b76c-49a2-81f0-f0d6401dbf4a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.91228070175441,
      "responseMin": 6,
      "responseMax": 376,
      "responseSd": 24.9074643231487,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705279086224,
      "completed": 1705279114000
    },
    "executions": [
      {
        "id": "fec6f6b6-3234-44f2-bb81-7c643972ec83",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2ea75f09-ccd1-4849-a0a8-5ebf09d74f4d",
          "httpRequestId": "23b114f3-eaa3-4d0e-abf7-0af1f315baa3"
        },
        "item": {
          "id": "fec6f6b6-3234-44f2-bb81-7c643972ec83",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8d5a99c6-03e0-401a-b866-2f5df35d7164",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "b0ebfb38-56d1-4d23-a340-c87d71600320",
        "cursor": {
          "ref": "13734b9e-2654-4f7e-8ff4-14bb96ed0093",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ee858352-d6e1-4a1c-8cbf-39a6333efd82"
        },
        "item": {
          "id": "b0ebfb38-56d1-4d23-a340-c87d71600320",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ac56ce2f-26e6-4dec-8aa5-71db75384928",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "13dec50d-2e48-433e-8589-6140bcc3941e",
        "cursor": {
          "ref": "5a013bca-e7d7-4c23-bb6c-80b0af2d02ce",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3b248522-ba38-41e5-81e0-1bffc80d38ca"
        },
        "item": {
          "id": "13dec50d-2e48-433e-8589-6140bcc3941e",
          "name": "did_json"
        },
        "response": {
          "id": "442197c2-1c66-472b-8f02-c1f1d55264d3",
          "status": "OK",
          "code": 200,
          "responseTime": 376,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d1a15-5f4a-418f-97d4-efb0e43458f5",
        "cursor": {
          "ref": "7a8b1ef1-4fc7-4e5c-833d-38f561dba4de",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb4d93be-c978-479b-86c7-dc28c5e664bf"
        },
        "item": {
          "id": "648d1a15-5f4a-418f-97d4-efb0e43458f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "c60d6100-a3cb-49fe-b3c1-7447eb310c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d1a15-5f4a-418f-97d4-efb0e43458f5",
        "cursor": {
          "ref": "7a8b1ef1-4fc7-4e5c-833d-38f561dba4de",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb4d93be-c978-479b-86c7-dc28c5e664bf"
        },
        "item": {
          "id": "648d1a15-5f4a-418f-97d4-efb0e43458f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "c60d6100-a3cb-49fe-b3c1-7447eb310c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b1bbfe-e729-4469-89b1-702b083544d9",
        "cursor": {
          "ref": "9d55974f-ae59-4752-a77a-f201aa1f8198",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7a593fb4-373e-43f0-a700-accd2a49e8a3"
        },
        "item": {
          "id": "60b1bbfe-e729-4469-89b1-702b083544d9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "258eeb97-4ace-49ac-baa6-a1a57c7113fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc216a0-69ec-40a6-af00-b6866ca14d04",
        "cursor": {
          "ref": "feb752e6-1678-451a-815f-3e8a370ab760",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9f16ea11-139f-47a5-93ee-a3fde823c0f1"
        },
        "item": {
          "id": "8bc216a0-69ec-40a6-af00-b6866ca14d04",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5616fcd8-9bd9-4173-855e-167a0c4b7c6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a626ee-9d88-4a30-a878-4ebd67110150",
        "cursor": {
          "ref": "c5147c8b-2d12-49e9-a1f1-ec1cfb513e27",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9423f07e-c1c9-46fb-9681-fd0f8fc96d78"
        },
        "item": {
          "id": "19a626ee-9d88-4a30-a878-4ebd67110150",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2b789af8-169b-4453-9859-f96ee5d5f814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548b0c6b-654c-4a1a-b7c5-3ac531250f69",
        "cursor": {
          "ref": "e1e918a3-46fe-4fe4-ae6d-730af6b2ec02",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a5f84f9f-152b-4567-9208-fd6ef6daafeb"
        },
        "item": {
          "id": "548b0c6b-654c-4a1a-b7c5-3ac531250f69",
          "name": "identifiers"
        },
        "response": {
          "id": "e0e10b3c-fcc0-430e-b078-dc7165ff2feb",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71f359a-ff7d-422f-a1dc-d454f7400d12",
        "cursor": {
          "ref": "1aae06f5-1760-46a8-8bfa-a63febe9a67f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "be76080d-406d-454a-a3e5-884af8a46338"
        },
        "item": {
          "id": "f71f359a-ff7d-422f-a1dc-d454f7400d12",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "77e57d9a-6e05-4408-a59c-ff7a44e5d882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b88965f-58af-4bd8-9eb1-35e8ca63ef83",
        "cursor": {
          "ref": "dcf86bae-d072-44e0-827b-7ccef5f47204",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d511cb02-b0c7-4b23-be7e-d780a1895109"
        },
        "item": {
          "id": "4b88965f-58af-4bd8-9eb1-35e8ca63ef83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "71fa48f3-1bdf-47e8-bac2-ec047bc371a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63a53bf-5df5-4c6c-a01b-b06db37b70f7",
        "cursor": {
          "ref": "7b0b4eff-8da6-416d-96c5-0feb87f97f2e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2bedb773-acf8-4262-a8e2-fc00e68617fe"
        },
        "item": {
          "id": "d63a53bf-5df5-4c6c-a01b-b06db37b70f7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "24cc4fd9-7b75-4462-b389-fc98dfe77736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3c3d6-7884-4481-9c89-76e968a3a128",
        "cursor": {
          "ref": "0d6e8a4e-04bc-42d5-9fae-01d8a30be178",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1b021e87-e7d2-4bf3-aaa0-a5bccf78e85b"
        },
        "item": {
          "id": "d6c3c3d6-7884-4481-9c89-76e968a3a128",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e50001bd-f6f5-45ca-a86a-2e7ee296fa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28f5031-a2c2-4548-9e8c-a14d51cdd35e",
        "cursor": {
          "ref": "5e18e46d-16be-4a12-aafd-11a321552bda",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5f76f558-fdbb-4f77-ad08-a0d919454ba6"
        },
        "item": {
          "id": "d28f5031-a2c2-4548-9e8c-a14d51cdd35e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8c971e1a-de8c-4dd6-8118-611fda30c48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b35380-3616-43e0-9154-8578423209ef",
        "cursor": {
          "ref": "0e858e52-e14c-40cb-8425-0b7d7ae36560",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "38b683c9-ffbe-4e24-8b33-5e75680c5b92"
        },
        "item": {
          "id": "75b35380-3616-43e0-9154-8578423209ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb566c68-879f-4488-8576-e1c1a3e19d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50e02d3-0211-465c-a3d5-d9e690f82729",
        "cursor": {
          "ref": "822d570c-7505-454a-abcf-0bbf4e83e042",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d8937b5c-8e65-4f2a-88e1-ee030aac9cc8"
        },
        "item": {
          "id": "f50e02d3-0211-465c-a3d5-d9e690f82729",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "43980691-2353-4d6f-b614-f15cf8c43fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b08af-4df4-4924-b6ac-2b01ee0dd2a5",
        "cursor": {
          "ref": "a3738c7f-a212-4934-88ed-00973483d22c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "39fb4894-2d7c-4669-996c-79b55794577c"
        },
        "item": {
          "id": "0d0b08af-4df4-4924-b6ac-2b01ee0dd2a5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b7e687a7-193e-4e4b-8f28-1362113173e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c27a79-b8e3-40c5-8a29-da27ec898d9a",
        "cursor": {
          "ref": "60e5d93c-716e-43c9-a76c-4e79434836ea",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0a52f39b-c956-4ff5-a3e4-3eb7ead3d0f9"
        },
        "item": {
          "id": "06c27a79-b8e3-40c5-8a29-da27ec898d9a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0c3780bd-a5ec-48a1-9e27-e97ac550b8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1658054-c307-4df9-8863-d2be9a461532",
        "cursor": {
          "ref": "955509a6-7f20-453a-818c-f6323dd03c9a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "429a46c2-7bf8-476f-b8f5-c4ad965ac50c"
        },
        "item": {
          "id": "d1658054-c307-4df9-8863-d2be9a461532",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f330113f-1304-41b3-b7af-3f20398c5765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17b2f38-bdb4-4d7b-996f-7f6929c46c2f",
        "cursor": {
          "ref": "b7ecf4d6-8565-44ce-b7fa-543e54e51405",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d2ee1fbe-a2aa-4c1e-8e19-0b036de80080"
        },
        "item": {
          "id": "d17b2f38-bdb4-4d7b-996f-7f6929c46c2f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "91f8ad73-c236-46cd-85ac-6fd9989a93df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bef7104-14cc-40d9-987b-1ef14a3a6bea",
        "cursor": {
          "ref": "20f49868-347f-47e7-b57c-db616e2cf254",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7808e3ac-73e5-4c71-808d-aed82c25f3d6"
        },
        "item": {
          "id": "3bef7104-14cc-40d9-987b-1ef14a3a6bea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c55f8789-eea7-48e6-9afc-4d3ed70acced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de43c3a2-c20f-4b14-890a-ad87848d8c52",
        "cursor": {
          "ref": "30067599-9921-444a-a891-e57d9195ec4f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6fedfacd-7353-4be3-aa7f-fa438ecfc1ac"
        },
        "item": {
          "id": "de43c3a2-c20f-4b14-890a-ad87848d8c52",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "19e3f48a-39e2-43dd-a485-2438e8b95fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec75484-a5b8-426a-a7ed-faaeb2247d07",
        "cursor": {
          "ref": "49662c32-f911-41a6-9327-4f2f6d192082",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d76ee0ec-0181-4c59-923a-560dc841bdbe"
        },
        "item": {
          "id": "2ec75484-a5b8-426a-a7ed-faaeb2247d07",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5bca60d7-8dca-4e2e-a318-e01aa7b914fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97595d6c-0485-411c-9cc3-a043f89d07e3",
        "cursor": {
          "ref": "ec30ec29-fb98-4dde-8bc0-8e42c993e3f4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "06445ec5-5380-4044-8004-fab0b296672f"
        },
        "item": {
          "id": "97595d6c-0485-411c-9cc3-a043f89d07e3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a89f7cb8-1f7f-4f48-aeaf-28131363ad6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d1c4a1-f4aa-4b35-82ef-6886a8e6a28b",
        "cursor": {
          "ref": "4e95c87e-51c7-4dc4-b729-41cf456064fc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ccd5c419-89c4-4e20-bba3-18656e40db76"
        },
        "item": {
          "id": "75d1c4a1-f4aa-4b35-82ef-6886a8e6a28b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "027f74f3-a028-48da-bd11-5f93e7ceb299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e484a83-f936-4ce6-b63e-85f18776bff6",
        "cursor": {
          "ref": "ec3c40e0-aa34-48fc-96cd-a17be3bd2329",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "91dc6e9c-1303-40ab-8314-698c9a8e9ad2"
        },
        "item": {
          "id": "8e484a83-f936-4ce6-b63e-85f18776bff6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ba198396-3086-42f6-a6c5-4c63e923a2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e76628-b304-4576-8286-2f6a2644e74f",
        "cursor": {
          "ref": "403276ef-b39d-445e-b2b4-e88bb8d80509",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "99cddd8b-dfbe-45a7-97eb-95555707239f"
        },
        "item": {
          "id": "f7e76628-b304-4576-8286-2f6a2644e74f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e035e0ea-a525-479a-9863-2641901eb2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb48592-63aa-4845-8c1c-54264957103b",
        "cursor": {
          "ref": "35f113aa-c08b-42da-9b15-3179f9bfded0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bc0f6ea4-0a5f-412d-8130-03d624780873"
        },
        "item": {
          "id": "5bb48592-63aa-4845-8c1c-54264957103b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5d49e140-5b86-4521-945d-91b58efb17a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ede15cd-e135-40ca-9f8d-f0c748009be7",
        "cursor": {
          "ref": "79dfaf2a-0263-461e-97bb-1df2282df379",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3030e6b1-4363-4df5-8e0d-2aef9fb9bad7"
        },
        "item": {
          "id": "1ede15cd-e135-40ca-9f8d-f0c748009be7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1a359b72-6bed-4ce8-b9e7-ce611593a5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3984f9c-27d6-4902-9ca4-2a4b59e63d3e",
        "cursor": {
          "ref": "69d4eaae-0579-4234-9e29-ccd952eb67a2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e9b3e15e-88a6-47b4-8511-068570438da5"
        },
        "item": {
          "id": "c3984f9c-27d6-4902-9ca4-2a4b59e63d3e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e068f33d-3e5a-48ae-89be-ea7ee04f8545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc033872-8543-4584-acbd-5411c0da5250",
        "cursor": {
          "ref": "979db9c2-fb69-4016-81ee-403dec5f0333",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a8cc51d5-0a4c-4197-a512-30c89459581a"
        },
        "item": {
          "id": "fc033872-8543-4584-acbd-5411c0da5250",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c9eb3ad3-3448-4c11-99ea-9356f5e58c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9a8b83-c1bc-4c3a-bc3d-ac74933f045c",
        "cursor": {
          "ref": "e3e508d6-b603-472e-a773-840fe7504aa8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a8dcac3f-702a-4852-95a5-95399a916e23"
        },
        "item": {
          "id": "2b9a8b83-c1bc-4c3a-bc3d-ac74933f045c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8fcc3735-251a-401e-876a-141a65a22b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a146d66b-f001-4f1e-a14c-3feee63f8e74",
        "cursor": {
          "ref": "288e58b9-30e0-4d00-9ae0-14392668780e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9d47b053-5f92-4ddd-a305-414aa53df67b"
        },
        "item": {
          "id": "a146d66b-f001-4f1e-a14c-3feee63f8e74",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2efd4be3-14aa-4558-92a1-96672d5b87bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea49d8e-b1e8-443a-9387-0aaf6fac4656",
        "cursor": {
          "ref": "c4fd099b-1be3-4f30-b0bf-a8fc1518dcd4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a6ff8920-1ef7-4bd0-8217-44d95993fa53"
        },
        "item": {
          "id": "1ea49d8e-b1e8-443a-9387-0aaf6fac4656",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "30ec334e-79b5-47c1-a60f-58bbf3de82cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c6402b-fd31-4533-9077-f6e2f0e79618",
        "cursor": {
          "ref": "c9c9f593-d9ab-41e6-a23f-92ccaaeb416a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8b55ff50-04c6-47ae-ae04-9a332d23edb3"
        },
        "item": {
          "id": "b7c6402b-fd31-4533-9077-f6e2f0e79618",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "df76e5ee-b760-4573-aa2f-2cc691adcbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3982b47f-3287-4cdd-b7af-dc9a7a936587",
        "cursor": {
          "ref": "4dba335a-9c57-47ab-a594-4ed7fb98652b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "004885ff-6d28-4f3a-9631-7de87ffd8b11"
        },
        "item": {
          "id": "3982b47f-3287-4cdd-b7af-dc9a7a936587",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eda76b59-f01b-45c3-b810-15a6b5e177e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a04fff3-8cc2-4e9d-b166-91f23521528d",
        "cursor": {
          "ref": "5fc420a6-c5f8-45f9-92fd-e95ac84ac437",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "040e01e0-82f3-4aa5-9d4e-81c6fe966aea"
        },
        "item": {
          "id": "4a04fff3-8cc2-4e9d-b166-91f23521528d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2404084b-8123-46d9-92f3-168f2375f697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d22d65-703a-4716-a2e1-4d71b62eb68b",
        "cursor": {
          "ref": "ab36c5eb-8b37-444b-89a5-f7b224825939",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "63deea79-b619-4ced-bb42-28d6b27a36d7"
        },
        "item": {
          "id": "31d22d65-703a-4716-a2e1-4d71b62eb68b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "22d546d4-1c01-4b39-8e4b-b672ca7c183d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a28da54-65b8-453f-887d-82cff216b22d",
        "cursor": {
          "ref": "8cb799ff-a3af-4519-aaef-78de8b8c007f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "24d3927d-e84c-42bc-99e6-21f55d58e2ab"
        },
        "item": {
          "id": "5a28da54-65b8-453f-887d-82cff216b22d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7481b9cd-44de-4258-970e-155d5e34e345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090b991-81f1-43e1-9987-8d70a2375865",
        "cursor": {
          "ref": "70ac857b-7c8f-4848-ad4f-296149c3ecc1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c2834250-ab84-4415-a5af-d8a6bab372f5"
        },
        "item": {
          "id": "3090b991-81f1-43e1-9987-8d70a2375865",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "63e66f96-c6fb-4d05-9d9c-a98d20b82881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf473d6-4d9c-47e1-a5e8-e17222007378",
        "cursor": {
          "ref": "08f6582d-2e83-4d8b-81d0-19bfb7927b82",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4b107d00-80f9-4225-a461-597f204e4f15"
        },
        "item": {
          "id": "aaf473d6-4d9c-47e1-a5e8-e17222007378",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ec027ff-1e87-45d8-84e3-80dee27aa85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53056265-6b51-4df0-9277-f415b95d2387",
        "cursor": {
          "ref": "b24d3d97-c8a6-4dd4-8a7d-05e14eaeb689",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c82ff8d3-82d5-403e-b948-64a9faf2447e"
        },
        "item": {
          "id": "53056265-6b51-4df0-9277-f415b95d2387",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "25bf0e41-18f6-4df4-9d16-f50456d5cd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f15d86-f2bb-4d7a-9d7a-8d4c33320abe",
        "cursor": {
          "ref": "c113edc9-5731-4a4c-b3d0-878243f8bdb0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "417a2b4e-851c-4398-a893-d5abe9aeed5b"
        },
        "item": {
          "id": "a8f15d86-f2bb-4d7a-9d7a-8d4c33320abe",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "14e2595b-e370-4e7f-9608-187067b2f915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b1e800-e065-4810-b5f7-2c56b6a67b87",
        "cursor": {
          "ref": "5af8919b-0c9e-4c36-8679-66dc54299e6f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cea71d00-4c07-45d9-aea0-0237051289f9"
        },
        "item": {
          "id": "76b1e800-e065-4810-b5f7-2c56b6a67b87",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fa3a99c8-c7fe-4084-8507-d0aa4a4fbffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b11ce68-53cc-45ac-924a-191fdea2a238",
        "cursor": {
          "ref": "f77cc689-bbe0-4a85-b7cf-9cf48576b7ba",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5dd0bd8-21cf-463b-b068-03619853f106"
        },
        "item": {
          "id": "5b11ce68-53cc-45ac-924a-191fdea2a238",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cdcb4540-54d2-4797-aa90-bec861d08086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e234a8c7-fc75-44ac-927d-2bc9a282e6d4",
        "cursor": {
          "ref": "bc062b6d-dffc-4bac-92a5-6767f69e3ffe",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1f9868e4-8a27-448a-b802-fa5c6abbce29"
        },
        "item": {
          "id": "e234a8c7-fc75-44ac-927d-2bc9a282e6d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "23db362c-3f64-4f91-b87b-74d41c6fc6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914ac1da-894e-4db8-aca1-8576fbe05221",
        "cursor": {
          "ref": "7b62b70f-afd3-4c44-a88c-1768e5557ee4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bbacd050-8403-4d38-b4c8-8e5c6046e490"
        },
        "item": {
          "id": "914ac1da-894e-4db8-aca1-8576fbe05221",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6bc8f025-fe29-412b-b008-a938e7b3560c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e90a75-aacf-4280-9c09-b3f8df27c72c",
        "cursor": {
          "ref": "c2bba883-2d20-480a-a1c1-0f855bc2c225",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b28aef2b-b1c5-43e7-a076-6aad47f1fd63"
        },
        "item": {
          "id": "b3e90a75-aacf-4280-9c09-b3f8df27c72c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9c0391ab-300d-4b01-9d7b-1afdb3be29a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee549b-c4c0-409e-ac7e-135ff1b6373a",
        "cursor": {
          "ref": "0abf3949-78e1-462a-815a-e2f54e902a48",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e1217702-a771-46fc-a5b1-4136a32d8409"
        },
        "item": {
          "id": "9aee549b-c4c0-409e-ac7e-135ff1b6373a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0dd7ffe3-272c-4d1c-a8d5-2e801d83ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde92065-8ab1-4d67-86bb-a2c25883e7ef",
        "cursor": {
          "ref": "e0123142-b15e-446c-9ab7-791c00a06614",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d1417f30-a397-4b12-ab31-b6dc64521941"
        },
        "item": {
          "id": "dde92065-8ab1-4d67-86bb-a2c25883e7ef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "409fd8eb-7cab-44e3-bce6-b7d5d2ed7dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1d2dc7-add5-4f2f-b9d1-2ecd1fdf871a",
        "cursor": {
          "ref": "d185a2b7-b9b7-439c-b4f7-463c2856eb33",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16affe06-4bb7-4563-9de7-cc24ef4e9f84"
        },
        "item": {
          "id": "0e1d2dc7-add5-4f2f-b9d1-2ecd1fdf871a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "059bace8-d49b-47a4-a7af-555e3ed30aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8886d46-43c4-452e-a678-3c59d571852b",
        "cursor": {
          "ref": "974beacd-0d7f-43f5-8bf4-b54401e368e4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2b87e930-aa4a-4a40-83dd-58f13996fdef"
        },
        "item": {
          "id": "c8886d46-43c4-452e-a678-3c59d571852b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8004cc2c-21ff-4ae9-ae23-31e0a91ee04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a2fb45-b9e4-4a3e-bdc2-a3b0e974dbed",
        "cursor": {
          "ref": "b88de7d9-6bc8-4bc5-8e55-204644d693c4",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "55615e4a-dfd6-48e9-847d-8d8267346473"
        },
        "item": {
          "id": "10a2fb45-b9e4-4a3e-bdc2-a3b0e974dbed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "522ea3e9-fc8a-4363-aceb-20596b81093a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d4e5d2-622d-4003-9444-3e9b93de165c",
        "cursor": {
          "ref": "0c3edd11-b983-4ddb-8c5c-0e87d3976623",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d598bca6-b04e-45e5-adc0-4351e7fa8e5f"
        },
        "item": {
          "id": "66d4e5d2-622d-4003-9444-3e9b93de165c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "37ebfd58-16ac-4389-92cd-d1681082f8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583375f9-0d87-4fd2-bb32-a3e2825e5b22",
        "cursor": {
          "ref": "2e400f55-43f3-4255-9bc8-578bd69d7807",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "60a3b349-51fa-4f98-a8d8-1c9888d33b03"
        },
        "item": {
          "id": "583375f9-0d87-4fd2-bb32-a3e2825e5b22",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "96005604-f8ee-4adf-ada3-97743981819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1341832-071f-433d-9441-081215ff99d8",
        "cursor": {
          "ref": "9eb722cf-e0d1-42e2-8593-7497e457462e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0e133bb9-6640-44b7-95b9-429d79595b49"
        },
        "item": {
          "id": "b1341832-071f-433d-9441-081215ff99d8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01423223-705c-46b3-a9d3-96e36e16e585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f398dad-781c-4474-84aa-35165866795d",
        "cursor": {
          "ref": "41c6e07e-d24b-40e9-8181-a504c03596be",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c71a4639-04f5-44e8-82cc-8dfeec4f9dff"
        },
        "item": {
          "id": "4f398dad-781c-4474-84aa-35165866795d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7c8c6b1b-b2f4-4a70-aade-9152930ad464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586a4ebb-ad6e-4b10-bdf1-df79393ff845",
        "cursor": {
          "ref": "94ed6a02-aff5-4b01-ad18-3b9fc9000f78",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0ea6211c-cdc7-4b36-a51b-85eaadd77b7a"
        },
        "item": {
          "id": "586a4ebb-ad6e-4b10-bdf1-df79393ff845",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1d77204a-fdc6-4df1-ad89-7f1d7837c032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41972f6-5e52-4608-966e-b534d7077410",
        "cursor": {
          "ref": "8169ad01-4afd-4755-8c55-e658ade9341a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c2775d56-0c3e-485e-a91f-2fe042d206e2"
        },
        "item": {
          "id": "a41972f6-5e52-4608-966e-b534d7077410",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be4833a8-e69a-4585-b04a-0f2c65731404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d49f59-efda-4d73-854e-5d5aadaaede6",
        "cursor": {
          "ref": "f0a96926-2a54-413d-aaa0-a5c479472d06",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "61d7329a-d96b-4be0-b67b-466e30e792a4"
        },
        "item": {
          "id": "49d49f59-efda-4d73-854e-5d5aadaaede6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6551bea4-d098-4ff5-8346-71a78b0fdc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b665840-e0b3-4260-97bd-ad781baad766",
        "cursor": {
          "ref": "f1be14d3-8fc8-4a4b-95c7-51537f4769ec",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "95de1865-7030-4ec2-bb49-768cbaf68036"
        },
        "item": {
          "id": "7b665840-e0b3-4260-97bd-ad781baad766",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf7a9922-c937-4979-8796-0ce0e00b9ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a237b53e-9f02-4082-b2f7-7cfa031035ba",
        "cursor": {
          "ref": "3bb75971-c3fe-440c-9435-7acbb774429c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fcaaf74b-f1e7-4e9c-bd54-13e3a77c2161"
        },
        "item": {
          "id": "a237b53e-9f02-4082-b2f7-7cfa031035ba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c4e76056-24cb-4227-bab9-8228ab88d73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a110327-8a66-4b86-afd9-360afd5591a8",
        "cursor": {
          "ref": "dd520d28-f93f-45c3-9cf8-e5344133f98c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dfd3bba9-dfcb-44b6-8c38-4299362ee6fe"
        },
        "item": {
          "id": "4a110327-8a66-4b86-afd9-360afd5591a8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "925c2993-6afb-4585-93d0-1a67f75cf117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e35477-c2fd-4924-b721-cbfe9bec47e9",
        "cursor": {
          "ref": "c6136c14-82f3-47e1-89be-403cd7a07811",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ed22311f-4518-427f-8e23-9adc6b28e9a6"
        },
        "item": {
          "id": "71e35477-c2fd-4924-b721-cbfe9bec47e9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "91f8139e-335b-40e0-8752-a04ae4954366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71ce021-a490-4b04-bbcc-3ccbfb654a6e",
        "cursor": {
          "ref": "11610cfc-5934-4fd1-a734-a3177c17ff9b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "edfb83bf-1f9f-43f6-8bc1-1e2240d0e00d"
        },
        "item": {
          "id": "a71ce021-a490-4b04-bbcc-3ccbfb654a6e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2ae88efe-3833-4c23-a35e-1ff9fee9bb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f36cbb-6b79-4bc0-8854-237c3ae6b20c",
        "cursor": {
          "ref": "069c17f9-bfa1-4a45-a8f2-10ac01390d70",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "496e3461-fe04-40a0-aab7-ff9207e5cd81"
        },
        "item": {
          "id": "35f36cbb-6b79-4bc0-8854-237c3ae6b20c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "15f0c6db-9006-4045-9961-5468dcb5ab4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c30fe53-defa-4cff-a605-82ca8060f69f",
        "cursor": {
          "ref": "61bfd874-d6ba-4500-8986-902f6c7797f9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6d6b76e5-024e-4b77-80f6-d933b282fbb5"
        },
        "item": {
          "id": "3c30fe53-defa-4cff-a605-82ca8060f69f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bbb49a39-6b5f-4139-b034-09eab344e0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278909c7-a53d-479a-a9e7-38fdfbb46bf1",
        "cursor": {
          "ref": "9c6997c7-ef68-4cb5-9308-0f5900b59488",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e02e4ccb-a9be-4020-af7d-00681b736869"
        },
        "item": {
          "id": "278909c7-a53d-479a-a9e7-38fdfbb46bf1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b5fbcc63-6c73-4456-b77b-f426027e96c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7d7bb-7909-4fff-bd37-59df2dfa4322",
        "cursor": {
          "ref": "72dc9b81-7d8f-4054-b8d0-a061927deca5",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a3be100-f8f9-44e4-b04e-d2d30d4598f6"
        },
        "item": {
          "id": "a4e7d7bb-7909-4fff-bd37-59df2dfa4322",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "709e9bd8-f40e-47ec-9bb3-2f194ad09271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0d33bd-bac7-45b1-8cb7-b75b7979b6dc",
        "cursor": {
          "ref": "d786316b-4dc6-4b01-acd4-4bfd2d157959",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "68f1b5dd-02b2-4b97-8f77-03ab02fd8942"
        },
        "item": {
          "id": "dc0d33bd-bac7-45b1-8cb7-b75b7979b6dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "32349dc1-273b-4484-a331-c33f613b9247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba7620-75ba-45bc-8932-20e7ca217b50",
        "cursor": {
          "ref": "d74345b9-74db-4d1c-85b9-f673b77915fb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "528177b6-7196-49e9-89ef-9b490ccf1932"
        },
        "item": {
          "id": "cdba7620-75ba-45bc-8932-20e7ca217b50",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d0075c3f-8203-4cc3-af2c-d5eeaa18cd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5857d925-b56a-40cd-aa7f-da61535b14d6",
        "cursor": {
          "ref": "30d46b8e-e003-4a7f-8d36-5e30bbdaf654",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4acfc8c9-d426-47f9-a3da-5dd507030bc1"
        },
        "item": {
          "id": "5857d925-b56a-40cd-aa7f-da61535b14d6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "87df38f7-cd33-4744-a87a-22d14cb7c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91ecb2f-cd20-45db-b5be-d901490abd3f",
        "cursor": {
          "ref": "8f6b0056-97de-4b18-b821-d1fa27510a6e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "495c677d-c9cd-4a4b-9749-315c8fd9c468"
        },
        "item": {
          "id": "a91ecb2f-cd20-45db-b5be-d901490abd3f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "11e0aa27-843c-47c6-9255-747b14114204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75e532e-13ef-47b2-8157-e42d9217eb55",
        "cursor": {
          "ref": "c1390c67-1bc2-461a-ae6a-693b1aae8ec1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "91389362-e858-4957-b46e-3469751d3096"
        },
        "item": {
          "id": "b75e532e-13ef-47b2-8157-e42d9217eb55",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "87ed33a4-e352-4f71-b126-65136338c3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb933940-3649-43c9-bcf5-b1a914804b34",
        "cursor": {
          "ref": "ec05329a-c916-49f8-8e31-36559e6e33ea",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f55470e2-ca99-444e-81fc-dfdb65636487"
        },
        "item": {
          "id": "bb933940-3649-43c9-bcf5-b1a914804b34",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "629bb46b-c724-425c-8bd2-11585701be80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b112c-8497-4729-807b-c96f435f0197",
        "cursor": {
          "ref": "ab61269b-184f-4f0d-827b-f0a822da0faa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1791e429-9730-4dd8-855c-4248f9f8ea80"
        },
        "item": {
          "id": "4e5b112c-8497-4729-807b-c96f435f0197",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a58cddeb-d87a-4b1d-8a45-5950807abb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2be507b-3d2e-4dcc-b58c-cc2cf2bac85b",
        "cursor": {
          "ref": "8efe628f-ccf1-43bc-aa24-faecd4b04036",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5d666cda-d291-482d-8712-c2d3446e15ae"
        },
        "item": {
          "id": "a2be507b-3d2e-4dcc-b58c-cc2cf2bac85b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0275cf7a-31f4-4f83-98f2-fdb295e71f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69cf87b-dbae-4384-9eac-bfdffa55a1e1",
        "cursor": {
          "ref": "09c5f0de-3323-41a0-942b-b4829e6a9162",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "be09bb85-327a-417d-9118-82242d3d3dff"
        },
        "item": {
          "id": "d69cf87b-dbae-4384-9eac-bfdffa55a1e1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5bcaa50d-6764-4a82-ae94-325644aacc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f297fabf-d82a-406c-9ef2-d8fda354d793",
        "cursor": {
          "ref": "4b19b520-f264-49fc-90fa-d6835398bb12",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "72be316b-9c54-4f5a-b94f-4562ec51de23"
        },
        "item": {
          "id": "f297fabf-d82a-406c-9ef2-d8fda354d793",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ceec1f04-656b-4ad2-a0e8-06ca7e031009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af06d369-1d30-413c-bc5a-a7e2ce1092de",
        "cursor": {
          "ref": "6f646ff1-e06d-4efc-8fe8-fa23b1f211aa",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "43c5527f-2869-432a-9c3b-e691e738ad13"
        },
        "item": {
          "id": "af06d369-1d30-413c-bc5a-a7e2ce1092de",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "77679270-a579-4a2c-a4da-84319d6a8217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81b032a-e76f-473f-9d36-feb8fda7c060",
        "cursor": {
          "ref": "2e10258d-fffc-43fe-93df-e69db753494b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ba13e953-f269-423b-b761-b759a2d0eea0"
        },
        "item": {
          "id": "b81b032a-e76f-473f-9d36-feb8fda7c060",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bac5646f-6784-4509-b16c-e56c694f9d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aaae30-2bcf-4baa-9df6-4768eff8b899",
        "cursor": {
          "ref": "16f35b60-a52f-40e1-b90a-7d0e5fdf831b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e81562fe-c710-4f50-b974-2e092d5c5e1c"
        },
        "item": {
          "id": "40aaae30-2bcf-4baa-9df6-4768eff8b899",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cd0fa9a9-acfd-409c-96f5-d7068ce2f7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c463b45e-31e4-4b45-9ed3-408e541eaaea",
        "cursor": {
          "ref": "30496efc-6196-442d-a90e-e26e063714ec",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "32b12f80-2b24-4a49-8760-d160ff3e1917"
        },
        "item": {
          "id": "c463b45e-31e4-4b45-9ed3-408e541eaaea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "edcbfe74-cf88-4362-a94c-e01c9848787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592d5927-e687-41e4-9735-db94ee0769f8",
        "cursor": {
          "ref": "dd9d22bd-129e-4ce5-8937-6ce438ca8616",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0f4c2d67-c384-4f49-b108-c1fec53300ac"
        },
        "item": {
          "id": "592d5927-e687-41e4-9735-db94ee0769f8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c4b6dff1-76ea-402d-954f-deeec5f05a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c415a22a-4cd5-4d04-85e3-e5e5a1249a34",
        "cursor": {
          "ref": "a5ffb224-5c6e-4c8c-9845-3523c6fd6106",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cdcb2d41-622e-442a-945c-8df3c42669db"
        },
        "item": {
          "id": "c415a22a-4cd5-4d04-85e3-e5e5a1249a34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6059edd9-68f4-453a-917d-158be303ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a947ff-8539-4f0d-87e8-6d40e7e6235b",
        "cursor": {
          "ref": "91e40748-024b-405b-ab41-65bd4f9d0848",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "591986e6-ff0c-4cdc-86f6-c532bda2f949"
        },
        "item": {
          "id": "85a947ff-8539-4f0d-87e8-6d40e7e6235b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4587f955-ab05-49b6-8811-5d0708f9abf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e94a9c4-cbcd-458a-b8a1-75f6b98c0960",
        "cursor": {
          "ref": "2bf6f178-4442-4c5a-93a8-49fd8e6b244a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9d77adb5-a7f4-4fcd-8a2d-086c055e7b1c"
        },
        "item": {
          "id": "0e94a9c4-cbcd-458a-b8a1-75f6b98c0960",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7a057d4b-1b04-42a1-af11-ba3cd0a68375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1818aef5-911b-45b3-892f-0f04593022e2",
        "cursor": {
          "ref": "e483f830-46b6-4b47-8dfe-d3558ba12c07",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b20a8467-a61f-4d98-a012-f3c05932cd2b"
        },
        "item": {
          "id": "1818aef5-911b-45b3-892f-0f04593022e2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ecdd4c4f-3d53-4abb-8158-46c7aa496ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a92ad24-8f51-48e9-9e75-78fbf5984b51",
        "cursor": {
          "ref": "7a665577-395a-4789-ab8c-08fd193f2169",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5a1fd64c-9545-4e81-82e2-902fed932487"
        },
        "item": {
          "id": "0a92ad24-8f51-48e9-9e75-78fbf5984b51",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4fbdef6f-9a26-47ca-9546-de2e5864f395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8294ef7-f722-4f61-a1bc-651516d583c8",
        "cursor": {
          "ref": "3d6b7e1a-3abd-4607-a8e0-22245875d9c5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "715ddaed-6f14-415f-8a55-5b2895bb1db7"
        },
        "item": {
          "id": "e8294ef7-f722-4f61-a1bc-651516d583c8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "229bce85-b4cd-4dbe-a67b-14164457eb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44701ce-8f84-4382-94be-ca0820cf5c71",
        "cursor": {
          "ref": "44ce17ae-ff07-466b-99f3-4b0fe42b9bec",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9de2879f-20f0-4674-8320-880b0b0d08da"
        },
        "item": {
          "id": "b44701ce-8f84-4382-94be-ca0820cf5c71",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9a75e2b7-db2d-40da-afd6-29ff414ce472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f635b6d2-37db-4205-8b35-0daf6f4a9c8b",
        "cursor": {
          "ref": "e6229b40-bda3-4984-9e01-f992355d7000",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "808dc6fa-5576-42ef-af4e-2ae3dbbf67c8"
        },
        "item": {
          "id": "f635b6d2-37db-4205-8b35-0daf6f4a9c8b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f3290fd2-b215-4653-901c-b4860a762acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ba4d03-fa2f-4dcb-a9ef-6a19787095dc",
        "cursor": {
          "ref": "6e964be7-6522-45af-bd31-52a572a0033b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c7d15573-74e9-4959-848e-909480ad0785"
        },
        "item": {
          "id": "93ba4d03-fa2f-4dcb-a9ef-6a19787095dc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "671a35fd-36cc-43fb-ae1b-c71a948e21a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db0146b-f599-4ba1-b6ef-d8a200ad1da2",
        "cursor": {
          "ref": "19997058-24ee-4692-afa9-b28a9b7864c2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2505869d-62e6-47ff-8368-2ccfb76412b3"
        },
        "item": {
          "id": "1db0146b-f599-4ba1-b6ef-d8a200ad1da2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5543cdbf-c3bc-44a2-9050-8ac95d293148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18add3f0-c8f7-4943-a37f-7692b81e5b19",
        "cursor": {
          "ref": "86bc70d2-0b30-476f-9a62-0f78a0b3d91b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "41596dad-2b91-4d13-a8b1-939d849cad92"
        },
        "item": {
          "id": "18add3f0-c8f7-4943-a37f-7692b81e5b19",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "90202971-990f-4bf2-95fe-cfcd4b397a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1820d37-a937-4165-8b9b-9560a2c6c4ea",
        "cursor": {
          "ref": "4f2df5a2-b298-480e-af2a-b6a952d4c136",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b96b8b63-9945-4a6f-844a-0db62d43b957"
        },
        "item": {
          "id": "e1820d37-a937-4165-8b9b-9560a2c6c4ea",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "72f4951d-0cb1-46c4-9ee7-d22670d67fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929de30d-363d-48a2-82a6-94ea65fba63a",
        "cursor": {
          "ref": "cc1384b2-9c82-4760-803f-a385f10105a4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "38df0ade-d4e9-4f9c-ac87-49037b43208e"
        },
        "item": {
          "id": "929de30d-363d-48a2-82a6-94ea65fba63a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d9f0751d-f8b3-4c80-9889-9f99dadec660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb2c50b-878c-4f83-9127-a3026302c04e",
        "cursor": {
          "ref": "8ec16b9d-a024-457e-ab5b-a0fa326b662b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7b3c2b81-e4c8-480b-93eb-c16a7c5c2067"
        },
        "item": {
          "id": "abb2c50b-878c-4f83-9127-a3026302c04e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "42d5e3b8-cbfa-4c9c-a1b7-dec39e768ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b316cc5-9b0c-4aec-9112-1ec9a2d991c1",
        "cursor": {
          "ref": "3e770109-e828-48aa-a6aa-a6fe8bf668b0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "43599f61-a479-49da-8ca1-6441391cec00"
        },
        "item": {
          "id": "9b316cc5-9b0c-4aec-9112-1ec9a2d991c1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9e45de47-9144-4817-9836-b740f42bf717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5f1388-b910-4bd2-868d-1bdff6d0a81f",
        "cursor": {
          "ref": "7858ead2-bf9e-4874-b9fc-e98aceeae7a7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d1d46fb3-a7c5-4c26-98b0-013970cbb4c5"
        },
        "item": {
          "id": "6b5f1388-b910-4bd2-868d-1bdff6d0a81f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84179a19-4643-4db2-8b28-1115c97da7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eba3b6-2580-4318-b0eb-85bd8d6827f1",
        "cursor": {
          "ref": "14f68c05-33b8-4302-ae42-457c34a2da33",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "116af597-a001-4a6a-819b-d0246a1f3b0e"
        },
        "item": {
          "id": "11eba3b6-2580-4318-b0eb-85bd8d6827f1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4775b085-6d73-4449-b027-96eca5f6f9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f86700b-ae00-4e34-b572-fb354e247d65",
        "cursor": {
          "ref": "25ff712f-3603-4d23-8378-599ec5c9f458",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0895d1e4-14d7-46ec-abd8-f58b55c50e5c"
        },
        "item": {
          "id": "6f86700b-ae00-4e34-b572-fb354e247d65",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2b5488e7-0cf3-4535-ab82-f063d7dee6ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7dcba7-cab1-45bf-9255-3553331ce87e",
        "cursor": {
          "ref": "3df80a03-edba-445f-b649-f45f28305e75",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d0c4389c-a04d-4c60-84ca-8daab4f6f652"
        },
        "item": {
          "id": "6a7dcba7-cab1-45bf-9255-3553331ce87e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fa340bbd-4979-456c-a5af-2ac60c3c9036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d3f968d4-e58d-4dce-8b0d-bfb6a10cfb64",
        "cursor": {
          "ref": "bd8d7c9e-c730-414c-bac7-deb330495ae2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "37a6c223-a213-49bb-aa2c-f748fafd410c"
        },
        "item": {
          "id": "d3f968d4-e58d-4dce-8b0d-bfb6a10cfb64",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6f8a3381-18c9-42ea-8a0d-88f1b517127f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "abd49e92-3c63-416a-a3c5-73e7d8658951",
        "cursor": {
          "ref": "1f16f411-2858-4788-af91-ad048e5b6f8e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "58f6c6b3-0e76-483e-9be4-66dbe3d19775"
        },
        "item": {
          "id": "abd49e92-3c63-416a-a3c5-73e7d8658951",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6ff4a085-8caf-4d70-9cf4-5c06a8e93fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bc23a67c-a812-4baf-9ba7-7570b7acc5a2",
        "cursor": {
          "ref": "fdba5718-df78-4112-b2f5-11cf9eb7d406",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b66d01d0-8882-495b-acb6-248efbe69047"
        },
        "item": {
          "id": "bc23a67c-a812-4baf-9ba7-7570b7acc5a2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "94a90b49-8e6f-410b-bc6d-4ad06fdc2f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ac2068cc-e3c7-4c65-bfd7-ca0dba972f23",
        "cursor": {
          "ref": "5485c441-b8ac-4194-994a-0de3006b97c0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ac0238c7-1ae2-45cf-8e48-572e334c4c77"
        },
        "item": {
          "id": "ac2068cc-e3c7-4c65-bfd7-ca0dba972f23",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "19e59a51-7cf8-4d7b-b8a6-54ec24d317a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6d12b1df-93dd-4d5f-bf89-d8da3a1aa6ed",
        "cursor": {
          "ref": "449c2a5e-26fc-4e3f-a402-d5e8938611b7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "61828d3f-fb6a-4dc2-98c8-49216f3a48ff"
        },
        "item": {
          "id": "6d12b1df-93dd-4d5f-bf89-d8da3a1aa6ed",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20d240ed-f739-4981-a535-aebc0a55ebe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4e98529c-dd09-4a60-bb34-ed70f8302532",
        "cursor": {
          "ref": "5176ecca-3ef5-4e9f-8f99-9616bf53e7bb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e08d92dc-a52e-4889-9e72-02b603138a80"
        },
        "item": {
          "id": "4e98529c-dd09-4a60-bb34-ed70f8302532",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7d0bcf87-9f3e-45f1-b98a-334342745439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cd5f5bf6-4417-47ea-93d4-2e220572f1d1",
        "cursor": {
          "ref": "a4125408-b7eb-4899-8355-59bd43bf33b6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3961ffd4-dd70-4f59-91b8-f822df96b155"
        },
        "item": {
          "id": "cd5f5bf6-4417-47ea-93d4-2e220572f1d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "584dc7bf-cea0-4686-90a5-06551a941633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7371677e-0f92-49f4-b350-719ba6337692",
        "cursor": {
          "ref": "46802ccb-714e-4d9a-b0e1-d8728700d25a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6aca8642-6514-43a6-a769-86950ce14c87"
        },
        "item": {
          "id": "7371677e-0f92-49f4-b350-719ba6337692",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c70f6223-4e1e-4895-b751-1d12129cf80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4649b9f4-5fae-4686-868c-ca847fb25c48",
        "cursor": {
          "ref": "d64b157b-5eff-4535-9b95-2cf3f55c1650",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4a12739d-37b4-43f6-af9e-0517dfe39f08"
        },
        "item": {
          "id": "4649b9f4-5fae-4686-868c-ca847fb25c48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "af58a06a-ed75-4463-bada-c63c01586409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa8e3f6-b267-47d5-84b1-22ecd6ddf9aa",
        "cursor": {
          "ref": "e313a1fd-d1c3-41bd-bc36-5f3282a837aa",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2b8261a5-509c-467f-815e-184af372725e"
        },
        "item": {
          "id": "afa8e3f6-b267-47d5-84b1-22ecd6ddf9aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87fd4755-784b-4b85-9a56-2f34238c8048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768e36c8-7fa8-4bfa-a65e-17426de05d9a",
        "cursor": {
          "ref": "fb5a693e-abae-4a8b-8bda-89acb23ef6c4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "31bb8fcb-702a-42ad-85bd-a393d8ff9536"
        },
        "item": {
          "id": "768e36c8-7fa8-4bfa-a65e-17426de05d9a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f1421fa5-8f02-403b-bdad-b412838d1f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b501723f-394f-4e3f-bbe0-92699dc902b6",
        "cursor": {
          "ref": "e8886cb4-05a9-43a5-a7cb-16c5b2dfd1a5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7c3f0ed0-0756-40b6-a67d-2e08a6c10cc0"
        },
        "item": {
          "id": "b501723f-394f-4e3f-bbe0-92699dc902b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "38e4ebbf-adcd-4f7b-8b9e-8a066ccd735d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027ab279-66d4-4ef9-b0ff-6bfcbe0ee4dd",
        "cursor": {
          "ref": "5f92fdca-7758-414d-a2dc-aeb906be1441",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9ab8f2e3-daa1-4504-bef8-fb98ec55cfe7"
        },
        "item": {
          "id": "027ab279-66d4-4ef9-b0ff-6bfcbe0ee4dd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "729fee3e-52c1-47fb-a66b-71491ce95ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48db3e15-e7b0-40e2-aa48-ab0b2aefe777",
        "cursor": {
          "ref": "3b7010dd-f071-422c-9d4e-f69a0d48bdbe",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "28915c1f-934e-4538-aa6e-b141fd6b95bc"
        },
        "item": {
          "id": "48db3e15-e7b0-40e2-aa48-ab0b2aefe777",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8735de0-ccb9-484c-969e-1bf26ede8b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83c9ad9-471d-4130-9c9a-60f6769e6c10",
        "cursor": {
          "ref": "283b14fa-23c8-4fc1-b3bb-a50921269372",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d2aa790e-8747-4125-8b19-4cd99fdf1d26"
        },
        "item": {
          "id": "e83c9ad9-471d-4130-9c9a-60f6769e6c10",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8eaa0596-eea5-40ea-8ad3-72e043aeea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d62913-d1bb-425d-9038-ea5ffafa96fd",
        "cursor": {
          "ref": "b8657130-8df7-4a6a-afaf-7d9e2809a1cb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9fa65a2c-7404-4a5e-b306-8c2274c391f4"
        },
        "item": {
          "id": "00d62913-d1bb-425d-9038-ea5ffafa96fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2e5350b6-f54f-4402-878e-bd1fbea515d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d563e9be-fc8b-4544-9ac4-a9b2679bb083",
        "cursor": {
          "ref": "a53e2f10-e9ec-437c-b5bd-ec8e61c30713",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "df617fa8-22d6-48f8-bd8c-9ce24fae72d5"
        },
        "item": {
          "id": "d563e9be-fc8b-4544-9ac4-a9b2679bb083",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "678fd329-ddd9-4b40-9894-758ea88e6072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525f5535-5eca-46b3-97fd-3fbb6f60c1f0",
        "cursor": {
          "ref": "ce0814ae-1d4e-4f4f-8f24-efed749937e7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0291f6c7-67d9-41d9-9a51-80c199b67fd5"
        },
        "item": {
          "id": "525f5535-5eca-46b3-97fd-3fbb6f60c1f0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c73e74c-a1a7-4cfc-9382-f32af4ca05b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cb65df-74f2-445b-8d47-071c6ef8a990",
        "cursor": {
          "ref": "ad030899-16fb-4bbf-a47a-29050c00df50",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bc036f1d-6c82-46ce-8572-5a4f7fd6108d"
        },
        "item": {
          "id": "e8cb65df-74f2-445b-8d47-071c6ef8a990",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf2f2f9d-5c83-4cdf-9ce0-d965c2268971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375628a2-a2ad-49d0-8633-80a20546539b",
        "cursor": {
          "ref": "9a927fb8-04a5-41d4-b02e-82f11e2c2c09",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c1226e40-1539-4d8f-91cf-23a2c9060163"
        },
        "item": {
          "id": "375628a2-a2ad-49d0-8633-80a20546539b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df287f44-d936-44b4-a8e2-1874a48d506f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f95b17-a57f-4aee-8c75-400bd910a1fe",
        "cursor": {
          "ref": "2380f28c-2201-45bd-9fb0-cf8a32c2f8b6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5f8a8578-e9c0-40bf-835c-09d4d087b348"
        },
        "item": {
          "id": "62f95b17-a57f-4aee-8c75-400bd910a1fe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b596d751-6bd6-4494-a752-a7dd4535f980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb18422-e0d4-4d9f-9576-50f2e9336f7d",
        "cursor": {
          "ref": "8826141d-b935-40a1-bc0a-bf8c0c1ae0f2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5e0014a0-000b-4d35-9660-d62e1055a9bf"
        },
        "item": {
          "id": "1eb18422-e0d4-4d9f-9576-50f2e9336f7d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc1b3ef4-366e-40af-87c3-12d5a9dcb677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72f9531-e011-4a0a-8e9e-1794d3081da9",
        "cursor": {
          "ref": "d983537c-f508-4e60-8f74-7e5dba395017",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "25710168-3e9c-41aa-ad51-62a183ca044e"
        },
        "item": {
          "id": "d72f9531-e011-4a0a-8e9e-1794d3081da9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b9ba626e-9e1b-4ef0-981e-cc7450d155c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c38d4-6107-4b93-8296-5edd7bb05de5",
        "cursor": {
          "ref": "50d2c4e2-30b7-46b7-823f-16f82a7097e5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c657b778-3f08-491b-badf-6ba9f28f35f1"
        },
        "item": {
          "id": "2e4c38d4-6107-4b93-8296-5edd7bb05de5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5fa0c7d2-fc5f-4d43-ba4f-5e909cab99d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7fb812-a3a0-4710-9a7e-76320f1e0803",
        "cursor": {
          "ref": "5dcd7d85-e8f6-4083-84d0-16671d9242ef",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c9c25016-7b27-4abd-b50e-d4284482e9c4"
        },
        "item": {
          "id": "7b7fb812-a3a0-4710-9a7e-76320f1e0803",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fa21df3-00ec-4ef6-9f5c-a28ed71df6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5347e9f8-67ab-4273-aa62-112d0112f90a",
        "cursor": {
          "ref": "12485737-ac09-49fe-9910-6911a66ed4ce",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d6297d77-cb29-49b6-9a55-d99b6deb369c"
        },
        "item": {
          "id": "5347e9f8-67ab-4273-aa62-112d0112f90a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bb357b4f-7357-4aff-af41-12f0d7323a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65694613-c69e-42d9-af0e-5ef5a6a3ef4f",
        "cursor": {
          "ref": "c1fcf30c-4ac1-4645-85c5-95feb5bf5768",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f09371bc-bd81-4162-92d9-43d0b3fa7239"
        },
        "item": {
          "id": "65694613-c69e-42d9-af0e-5ef5a6a3ef4f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e26577f-a7a3-49ad-a7b5-40aa43bef8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2fcc0b-31ab-4506-a2c9-404aa2a480a8",
        "cursor": {
          "ref": "743b10f1-b483-419e-a1c3-43e6e979a7a6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6c13a54e-3e0d-4bfe-9658-165b89db90cf"
        },
        "item": {
          "id": "de2fcc0b-31ab-4506-a2c9-404aa2a480a8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c2a48461-2b42-4519-af37-a934e8577bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7b6dce-8698-4a19-bb82-29023aa52fb1",
        "cursor": {
          "ref": "8d26322b-de75-4716-b909-4d257901a26d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fa818833-ef7c-4165-a633-be3c3440f9fb"
        },
        "item": {
          "id": "ff7b6dce-8698-4a19-bb82-29023aa52fb1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d37fa7e6-79d7-4593-897c-d426db130620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0678e023-42e6-4236-aed2-bcaff10399fe",
        "cursor": {
          "ref": "8983f676-6e65-4a38-91b1-9ce7434cc274",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aeb90b9a-222f-44a0-9970-2f8a085863ea"
        },
        "item": {
          "id": "0678e023-42e6-4236-aed2-bcaff10399fe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2faf783a-e22d-4acf-ad2a-28dadf328911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a8efc2-6eb0-4139-92d5-c7f1c84f576f",
        "cursor": {
          "ref": "389d7220-f059-463a-a9a3-44ea72024ff9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "12aa32ec-1455-4be2-ab65-af7fae792755"
        },
        "item": {
          "id": "40a8efc2-6eb0-4139-92d5-c7f1c84f576f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "238776e3-18ce-442b-b821-b6490b2e45de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9e131a-0905-47f9-8b49-5c0cbf78daaa",
        "cursor": {
          "ref": "61fbe5e6-5066-4a5b-8450-d7719baa8fa7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ee367ac1-1000-41c4-a87d-bf5ef073f3e9"
        },
        "item": {
          "id": "4e9e131a-0905-47f9-8b49-5c0cbf78daaa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c1dc140d-8532-4f81-bc17-936b09193bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e510035c-8dcf-4935-8e9d-a661b567779c",
        "cursor": {
          "ref": "fdc0e46f-41d6-4d0b-9d14-af0963735a48",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "56ea096b-df37-4c75-adbe-831f9eadca9b"
        },
        "item": {
          "id": "e510035c-8dcf-4935-8e9d-a661b567779c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e7c9f1c4-b69f-4f8e-8351-bb98b1c6c6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dd23af-36c0-4ead-9006-c3fdc5817de6",
        "cursor": {
          "ref": "2ff1c06b-5ef6-4f88-9767-3bf892a6c9be",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7bd43861-3bd6-47d8-a659-a80b22cf1e24"
        },
        "item": {
          "id": "e4dd23af-36c0-4ead-9006-c3fdc5817de6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5a08e0b3-e0fe-4477-ab54-39e8a2d02211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3a36c2-dfcd-4496-a4e5-6a3b85999634",
        "cursor": {
          "ref": "98c6777f-b68a-41d6-ae75-453a55d96237",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b9b5f7b-62d2-4a9e-9933-ed771d7dbab1"
        },
        "item": {
          "id": "3e3a36c2-dfcd-4496-a4e5-6a3b85999634",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8b2d3687-f410-42aa-9a29-e2124a58c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3afaafe-eced-4964-956f-ba821d7378aa",
        "cursor": {
          "ref": "d0cf968e-8a31-4e00-a02a-93723828cac4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5f74695f-1e78-4b5e-bdc2-4a0f57a229f4"
        },
        "item": {
          "id": "e3afaafe-eced-4964-956f-ba821d7378aa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b6d6e933-89e2-4bdf-85a4-0e9e9f60f9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d7ee5-c187-427c-891c-5d4a2a80ac0e",
        "cursor": {
          "ref": "c130f027-76f1-4064-bf93-0dba8bf21586",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "922ada52-4e80-42bc-981d-5d3203b94464"
        },
        "item": {
          "id": "2a1d7ee5-c187-427c-891c-5d4a2a80ac0e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb12f69f-8a8d-4d43-8e5b-cfe2bfb16a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be133ca5-5d54-452d-bcfb-426076db2913",
        "cursor": {
          "ref": "843632d0-53f4-45c4-80be-549d30e15c11",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6f93e789-d76e-448d-8180-23101684cd36"
        },
        "item": {
          "id": "be133ca5-5d54-452d-bcfb-426076db2913",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0aeaed4c-6809-4285-aa4f-928935cdea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962891c8-abd9-4203-87fc-12856e4fb655",
        "cursor": {
          "ref": "ef5295dd-a1c7-4e29-8b13-d2c9ebc8f412",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7febae35-fa05-4ef4-80eb-ebbd84f9620b"
        },
        "item": {
          "id": "962891c8-abd9-4203-87fc-12856e4fb655",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "107cda17-700f-4ac5-b1d0-2be10f1c9961",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd375f9d-cbed-4c63-8be2-f0e726e17beb",
        "cursor": {
          "ref": "59ecee7b-a560-4242-b6ae-e86adc7ecbb2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f7450428-8b8f-4e43-bc6d-0054835e7f1c"
        },
        "item": {
          "id": "dd375f9d-cbed-4c63-8be2-f0e726e17beb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "359b8b97-080c-486a-9a16-5e89bee3d872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0893d880-211b-4c2d-880d-cf9bdf69d7ee",
        "cursor": {
          "ref": "50ff4b6c-9509-48a5-9d43-0284a0519e3f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1286e4c2-d545-43b1-ad68-09e3202323e6"
        },
        "item": {
          "id": "0893d880-211b-4c2d-880d-cf9bdf69d7ee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5cde6fd3-2bcb-47a2-b7c1-d52f9f13f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82e56e5-6a18-4891-9887-0419918b764e",
        "cursor": {
          "ref": "338a826e-11c1-483e-a705-97f9bea467e2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba515926-8ba8-453e-845a-587ae7a4d571"
        },
        "item": {
          "id": "d82e56e5-6a18-4891-9887-0419918b764e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4f390f5f-f2f9-4066-81ed-e609334aa0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f393fb-837a-4a65-a578-c5fa828da12a",
        "cursor": {
          "ref": "b518c6ba-f2d7-4a38-a5b7-57cc36ea389e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "53a6f8a7-c78b-40eb-9258-d9abef3314a7"
        },
        "item": {
          "id": "c4f393fb-837a-4a65-a578-c5fa828da12a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4460e054-97be-460f-b72b-90f1e31741d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1226d69-26e5-4935-a6de-19647f2bd099",
        "cursor": {
          "ref": "ef1c1888-ea75-418a-9d3a-98c6a6ac44b0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "81c1d53c-fd56-499a-819f-c95149b702a4"
        },
        "item": {
          "id": "f1226d69-26e5-4935-a6de-19647f2bd099",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b34f105-ebff-4abc-b1f6-e47352e1d08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d662d592-e79a-419b-a73d-1c4fb347787b",
        "cursor": {
          "ref": "365ec6c5-6b9c-4fa8-ad3b-781590befec8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "182e7cc6-8bab-45f9-a82a-d97eaae82903"
        },
        "item": {
          "id": "d662d592-e79a-419b-a73d-1c4fb347787b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "63e734bc-6c4e-4714-a04d-ad4c0cd97255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2285ebf2-401e-404f-9ec1-21c91766a779",
        "cursor": {
          "ref": "5fc3d2d0-358d-47b6-bf40-15681142a52c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0629bb71-0004-4dfe-9bc5-27b5d775c24c"
        },
        "item": {
          "id": "2285ebf2-401e-404f-9ec1-21c91766a779",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eeee070a-130f-405c-b382-b641aae39f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f08733a-97ab-4f89-a343-6cde01ea328b",
        "cursor": {
          "ref": "ee85ef52-f0a9-4c80-8ce4-92fe5517fc80",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b33ae8d5-54aa-4bb6-89bb-891c5b1bc63d"
        },
        "item": {
          "id": "6f08733a-97ab-4f89-a343-6cde01ea328b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a3d13877-fb75-416a-84f8-054f5372335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8223bc44-d65a-4a27-8010-ebc962649e2e",
        "cursor": {
          "ref": "4547bc0f-5536-4ad0-8f2a-82f686c00875",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ebdead93-bc62-408f-85d6-9c98281bee45"
        },
        "item": {
          "id": "8223bc44-d65a-4a27-8010-ebc962649e2e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "36f1c60a-2d00-4d09-a0a6-14795be2ea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387c6236-2672-4053-875a-80ee9307d69f",
        "cursor": {
          "ref": "3b3dceec-4296-48bf-939d-7b24831a11bc",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "da50c1b7-9243-424a-959c-2b15e8925ead"
        },
        "item": {
          "id": "387c6236-2672-4053-875a-80ee9307d69f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7087d7a0-a0a3-4f0b-82bf-a77206fdddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8b3289-b4d5-4ddd-9fda-69a96955295d",
        "cursor": {
          "ref": "d31e851a-4f4b-41d7-8094-2186cfdfb790",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "09de148d-8dd0-4206-bc93-1a1ab6810215"
        },
        "item": {
          "id": "db8b3289-b4d5-4ddd-9fda-69a96955295d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e872558b-0bb3-47b1-bd10-b359025d70bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb5a56b-e109-4f57-9a8f-7a90ee4a4eb8",
        "cursor": {
          "ref": "b0b89c4a-a3f2-4318-8070-1166bc71129c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "01c19350-8e87-4eab-be19-7d4dfcca4854"
        },
        "item": {
          "id": "cdb5a56b-e109-4f57-9a8f-7a90ee4a4eb8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a12df56f-1dc1-4d1d-ab86-ec1df5f6b848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3492fad-8a4b-45f6-ae4b-ac9ca62e4a71",
        "cursor": {
          "ref": "5d510b95-5aae-4cfc-92ae-1ddd1a55fcdb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9bd581ac-e004-44a0-b219-3e818eb48d44"
        },
        "item": {
          "id": "b3492fad-8a4b-45f6-ae4b-ac9ca62e4a71",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ea39baf1-2eb7-4848-887e-b7b3356f7540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652572ef-f47e-404a-97c0-a24c40c354b8",
        "cursor": {
          "ref": "9547acf7-61fb-41e5-b1de-09c1b41ff1a8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "deefe490-490f-48d6-8667-8f2cafc99919"
        },
        "item": {
          "id": "652572ef-f47e-404a-97c0-a24c40c354b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "08ab94c9-97a0-48f7-85dd-9b817d5d3129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80f1998-f8db-4442-9d17-b5862bdf79e4",
        "cursor": {
          "ref": "6eb85aa5-752b-409d-a99c-dabf62a0027b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5db12f57-d7fa-47e1-bda6-0da1b07ba40b"
        },
        "item": {
          "id": "d80f1998-f8db-4442-9d17-b5862bdf79e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "375e0895-8704-40b7-869e-0939938cd28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f5d8a-f91b-43c1-8ca0-e83e8bb38086",
        "cursor": {
          "ref": "38842a65-2674-4b6e-9ca9-5ef001e4ceac",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7083e698-94b6-44f4-a8d3-ac90ee18d2c2"
        },
        "item": {
          "id": "ae4f5d8a-f91b-43c1-8ca0-e83e8bb38086",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8d64731a-1d27-4866-8fb4-73f1e14c50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912fc9e6-6af3-4b17-8cb8-ca09171c71db",
        "cursor": {
          "ref": "12ec8734-0026-4773-aec7-4e95588d71a9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "38181f3c-48a7-4919-b852-62e6c8158459"
        },
        "item": {
          "id": "912fc9e6-6af3-4b17-8cb8-ca09171c71db",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "de6e504e-21bf-49e2-b83d-83efe4d4d8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f27c2b-a765-4440-b9b4-b6526c6ed9ee",
        "cursor": {
          "ref": "ad1d6574-3b05-4f2a-a1fa-4deb444b6788",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7387d553-d148-4e01-8762-b23c3b014dbb"
        },
        "item": {
          "id": "54f27c2b-a765-4440-b9b4-b6526c6ed9ee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "601c92ac-8999-4993-a97c-6a4cb63e3aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0ab9a0-be95-49ad-84ae-c6a20ac10525",
        "cursor": {
          "ref": "f5d2883e-a478-44d3-90c3-3698e8f982d9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "92d3eb37-0b43-477f-b3f3-8ce053b9f1a0"
        },
        "item": {
          "id": "ee0ab9a0-be95-49ad-84ae-c6a20ac10525",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "05e17677-a401-4fad-98c2-8017768e82fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84941fc-b141-4806-bb37-b31484e1029e",
        "cursor": {
          "ref": "3527c691-aa62-41a1-a776-d0793604e879",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "56e6ce49-6648-4bcd-86fb-413dd0c8db53"
        },
        "item": {
          "id": "a84941fc-b141-4806-bb37-b31484e1029e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "56b5293b-0437-42e3-bd92-3f971235a19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a60b5-e696-4fd8-8bf6-232712ab4dfe",
        "cursor": {
          "ref": "00d89ea0-a987-40d3-bd6a-4abe231280dc",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "805839a2-aad6-4775-a70a-c8cd62487c35"
        },
        "item": {
          "id": "cc6a60b5-e696-4fd8-8bf6-232712ab4dfe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3dd18356-dee4-4b11-8b12-cc3b40c57778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42794ebe-0a90-4fc1-aa10-b4b5b1ef66b4",
        "cursor": {
          "ref": "7b8148a2-5b5c-415a-997b-066bcb1bc892",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d063bb21-7f5a-4c2a-88bf-5b857e9994e6"
        },
        "item": {
          "id": "42794ebe-0a90-4fc1-aa10-b4b5b1ef66b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b8c234f-9461-44f0-8f45-ef2394ecfa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72020fa2-1eff-4dc0-a933-bc880a9762d3",
        "cursor": {
          "ref": "100daf1e-8562-4982-b8a9-2d67dd13c088",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c30bacb1-a135-4306-88eb-dbec50a2bd4a"
        },
        "item": {
          "id": "72020fa2-1eff-4dc0-a933-bc880a9762d3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb0ecb52-862a-4f99-af72-f7f7c2dea898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b9063f-0c4d-477f-ba18-f57bab30d682",
        "cursor": {
          "ref": "7d33f26b-3245-4b3f-89a4-3d8d410d6206",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cf2e248b-7b5e-43d1-ac68-75dc901de30a"
        },
        "item": {
          "id": "62b9063f-0c4d-477f-ba18-f57bab30d682",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ccfbd991-caa1-4231-8ab1-93371ef6639d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf05884-ea80-43d2-8ba4-b92f1f00b5d9",
        "cursor": {
          "ref": "54ca4c4f-d4d1-4793-b34a-a2606ba5ec5b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "29eb7ec2-4306-464c-bed5-1e1ec802f21a"
        },
        "item": {
          "id": "1bf05884-ea80-43d2-8ba4-b92f1f00b5d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "334874e2-b4e5-4817-9f52-b181e06e67ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f1ac63-8bfd-4f88-b9f3-2deea716be00",
        "cursor": {
          "ref": "bc698598-92bd-46d8-a525-25e9596ea409",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "763a88a0-75f2-4cce-994c-208d13f251ef"
        },
        "item": {
          "id": "61f1ac63-8bfd-4f88-b9f3-2deea716be00",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd33a98e-c239-4102-8a9c-86370082d80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908ef100-574a-4288-b6f7-e095359181b2",
        "cursor": {
          "ref": "1af377b4-6796-41bc-ae3e-5e9d7d6421ac",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "68e23f80-1821-4281-bb5b-848a33ae16cf"
        },
        "item": {
          "id": "908ef100-574a-4288-b6f7-e095359181b2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f5cb594f-344e-471b-b26a-5ce5f434fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbbd367-e0ad-4d6a-83df-6dc0e0d0b870",
        "cursor": {
          "ref": "a1b703bf-cb15-4613-b667-71feb145da09",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ba9d17e4-4b77-4f19-891b-465188679a58"
        },
        "item": {
          "id": "5bbbd367-e0ad-4d6a-83df-6dc0e0d0b870",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "13363279-a727-4c5c-bb8e-6b3f4f9a70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6195035-3b05-4303-afb8-ead432be3d75",
        "cursor": {
          "ref": "5b2bd5f1-1304-4ee7-8a42-56b48d24798c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b77fa2f5-4024-4446-9850-423c82203c92"
        },
        "item": {
          "id": "c6195035-3b05-4303-afb8-ead432be3d75",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b70f7e2f-ccbb-4e6c-92d5-8798adf7b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5031ccd8-abeb-4a39-94a9-e7be4d678d79",
        "cursor": {
          "ref": "23f0788f-4caa-4f6f-8f3f-be4960eae551",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dea1aeea-ff90-4d05-99fa-5f40c31b8d2c"
        },
        "item": {
          "id": "5031ccd8-abeb-4a39-94a9-e7be4d678d79",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38d535cd-4d9e-4375-a170-bf2d86ebb820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42001d77-6d0d-4521-9250-b60901d4541f",
        "cursor": {
          "ref": "4be26fb0-04a7-4c22-975c-aa58d13145e1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9c2b8f85-af67-42c6-bca7-526a771a4227"
        },
        "item": {
          "id": "42001d77-6d0d-4521-9250-b60901d4541f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "40b9885b-080d-4043-826c-3c4ea0f2e188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94019432-b838-4f0f-b9e3-a2f43eb812f7",
        "cursor": {
          "ref": "102d3140-29da-45dd-b3ca-920f5fa868c1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9ec29a6f-a4c3-4be2-b64f-a650026d2cb7"
        },
        "item": {
          "id": "94019432-b838-4f0f-b9e3-a2f43eb812f7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0039ff8e-daea-4f5f-bde0-3c08331502b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663b3418-f235-403f-ba0f-0a6c6b17a943",
        "cursor": {
          "ref": "7b29fea6-a4f6-45cf-8396-14784e0ca0e6",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "77eefdd3-2411-4e13-95e4-155efe613037"
        },
        "item": {
          "id": "663b3418-f235-403f-ba0f-0a6c6b17a943",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8f806895-2479-4520-8475-480fd2c8d0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488a2dfa-1e68-4100-bfea-20b36a303a17",
        "cursor": {
          "ref": "46286141-00ad-4736-9caa-61bf85652ed7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8a474a1c-00f4-46bb-aa25-efa300456b07"
        },
        "item": {
          "id": "488a2dfa-1e68-4100-bfea-20b36a303a17",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "620e52f0-830d-4087-9f7e-9c2058f24a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720cf38a-b121-4339-91c5-f695f62447ae",
        "cursor": {
          "ref": "33929d65-753c-4d2a-a957-b75e605c9d76",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "40368626-572e-4d57-b66f-24d6a9b6a0b8"
        },
        "item": {
          "id": "720cf38a-b121-4339-91c5-f695f62447ae",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "51a115d3-909b-43b3-b98b-998db5e23647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e0a4a1-c3c4-4260-a585-df1383a945ce",
        "cursor": {
          "ref": "c95fede5-dd57-4c09-924a-ad0cb141831d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02fbb041-a3ab-4e5d-a6d8-143ab5ac4357"
        },
        "item": {
          "id": "d8e0a4a1-c3c4-4260-a585-df1383a945ce",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "13fc7d20-b43a-409d-8b09-fedf1c667293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24b971b-9782-4ff5-b034-c53720a0b66d",
        "cursor": {
          "ref": "abe90f0f-26f6-4c4a-973f-b655ca6c0dd1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d5efa603-d146-4928-a7db-29f255ce3804"
        },
        "item": {
          "id": "b24b971b-9782-4ff5-b034-c53720a0b66d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "69030c71-b9cf-4b15-81d8-351508c786a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f17ffe-1872-4504-88fb-dba13844798c",
        "cursor": {
          "ref": "21f01525-32bf-4754-9aef-95f0a9272966",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9b5cabe6-dd83-4d92-b028-a8e567afb8b5"
        },
        "item": {
          "id": "09f17ffe-1872-4504-88fb-dba13844798c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d7e1361-0117-41ec-8186-78708757a67d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c1cc90-4685-4e52-84ce-05c1765e19fb",
        "cursor": {
          "ref": "b357827f-b3e8-4aa0-853f-75e7bb2b1f85",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "461bf674-ec1b-41d0-892a-06ce2451c266"
        },
        "item": {
          "id": "58c1cc90-4685-4e52-84ce-05c1765e19fb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7599e68d-7b3c-4827-b820-c3ceb22dae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01fe02a-e0ba-420c-a64b-25556b51900f",
        "cursor": {
          "ref": "3d2d09f3-ad69-4965-a5bf-2aa8d7c4d7c4",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "62c45d3c-338e-4304-9fdf-cdbf5119f9c3"
        },
        "item": {
          "id": "b01fe02a-e0ba-420c-a64b-25556b51900f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4a9b3b78-dfe7-4481-bf27-517e9bcc70d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81524131-94c1-4faa-808a-5990e5d5cea5",
        "cursor": {
          "ref": "26e9b0ed-98a7-4803-b7c7-4fdbe8b0997a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7fa53c48-9f3e-4840-8f97-6cc8d36207d5"
        },
        "item": {
          "id": "81524131-94c1-4faa-808a-5990e5d5cea5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "120c4b80-8b82-4a03-9a14-19f67364dd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f7ae0c-8e71-4dfa-997f-1b300c710c3c",
        "cursor": {
          "ref": "014b74ff-9d27-4ec6-a2e6-308bba58f4c9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "79b98dd9-02ca-48ba-a2d4-629c715edab3"
        },
        "item": {
          "id": "d3f7ae0c-8e71-4dfa-997f-1b300c710c3c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1af97cb7-a345-4531-870b-6eab4febb53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55e4404-d90f-4963-b971-f0db77564d2b",
        "cursor": {
          "ref": "49a9f150-ae64-4dc0-8256-64ae71f5f020",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "61ee8b84-c8a3-467d-98eb-eeddbd79223d"
        },
        "item": {
          "id": "c55e4404-d90f-4963-b971-f0db77564d2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d5677781-279d-45b8-b221-937ec73a3eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1244b871-d8d9-44fc-a467-2af392c5b6f9",
        "cursor": {
          "ref": "638ff2d3-ea6b-429a-a400-40f93e446c5a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9beabbb2-e3be-42e9-a568-f96ac0ab4ca4"
        },
        "item": {
          "id": "1244b871-d8d9-44fc-a467-2af392c5b6f9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5a33a61a-436d-445f-97ee-ea011ea85d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a74a1dc-9dfd-43f5-ac1c-f48e5038e6a0",
        "cursor": {
          "ref": "15fd1122-890a-4dee-8754-aee7d1441823",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "66f10459-aed7-4871-b8c8-98a4760bd095"
        },
        "item": {
          "id": "7a74a1dc-9dfd-43f5-ac1c-f48e5038e6a0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "210fb425-8665-40d8-a8a7-aa0bf5c08fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b65a5f-e1f2-4561-acac-53a22d1d4963",
        "cursor": {
          "ref": "1ec4b858-3a22-4d51-8484-bf1770b6cfd9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "06a451f9-b1b8-44bf-9407-e784b3ddf7e1"
        },
        "item": {
          "id": "11b65a5f-e1f2-4561-acac-53a22d1d4963",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0dc9b227-15d7-4997-aae2-2106d3971bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef2a812-5062-46d3-8c98-fe9e09437d0a",
        "cursor": {
          "ref": "92664e27-b916-49d3-a762-31fa6f2eb5ad",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3c91a698-9d8c-4524-b349-6af6fa3370a0"
        },
        "item": {
          "id": "2ef2a812-5062-46d3-8c98-fe9e09437d0a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "67fce93b-e0d4-4c04-b6db-80bedfa379e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e0234d-da03-4bdc-a8cc-f798a98fa0bd",
        "cursor": {
          "ref": "0452708e-78d9-47de-a5ea-5d2876c37a63",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a673c2d9-ad99-47de-8b70-0faa9f69ae07"
        },
        "item": {
          "id": "67e0234d-da03-4bdc-a8cc-f798a98fa0bd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "966bb60a-ce75-4942-9d06-ce3a2a01bade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6776bac0-b70d-41df-8494-5432a918e075",
        "cursor": {
          "ref": "dc58b4cd-96f9-407e-bbd8-96a4e81f2169",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e1aab486-2701-4e92-b18d-6c1fcff8a587"
        },
        "item": {
          "id": "6776bac0-b70d-41df-8494-5432a918e075",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c7b9cfcc-8b7c-4a03-b198-de10322dd97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459e4da2-8498-4ddc-a4d2-0358e547e1aa",
        "cursor": {
          "ref": "b6e42ba1-f244-4edc-ad5d-aa003ba470b5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5d0fc825-a8fb-4f1f-8e0d-5b1e3c438425"
        },
        "item": {
          "id": "459e4da2-8498-4ddc-a4d2-0358e547e1aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fe839bc0-cc3a-4476-a81f-5b6923bba2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b53a80-4e77-4215-b501-8f06305fa691",
        "cursor": {
          "ref": "b6a2bbfa-f423-489f-8a78-f6815d2edae9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fc67b534-fe05-424d-a7ea-653d10b74c06"
        },
        "item": {
          "id": "86b53a80-4e77-4215-b501-8f06305fa691",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e46530e-1e4b-450f-8adc-0c6875a0ecd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148cc22-b5f0-4e54-81dd-17700e8ae19e",
        "cursor": {
          "ref": "df39f8b6-d392-4347-ae44-66fc806c14d5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "233df2e7-9593-4952-b7ea-2e22cc1a3b69"
        },
        "item": {
          "id": "4148cc22-b5f0-4e54-81dd-17700e8ae19e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0e9bc55d-1715-47f7-97c3-8efd324a2e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee15c12-e8aa-4948-92ad-977ac4c7a23c",
        "cursor": {
          "ref": "e16632fc-a27b-44b9-940d-534f9b093372",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d71a185f-8a8c-4584-bc77-f05b321f3681"
        },
        "item": {
          "id": "9ee15c12-e8aa-4948-92ad-977ac4c7a23c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b078ccd6-eca0-4306-bcf8-1db59d9c7df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2eed97-3378-470a-94c9-9ce624867dc5",
        "cursor": {
          "ref": "064df42f-302d-4383-bcf8-6d965df72710",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "31c0c324-7817-44eb-86bd-942d17b1f213"
        },
        "item": {
          "id": "de2eed97-3378-470a-94c9-9ce624867dc5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2a2cd3c6-09d0-4045-8515-c4de1505d4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1bd161-f764-4b8a-b5a7-8113d1210efe",
        "cursor": {
          "ref": "7d0b40b9-53f6-4dd0-b706-6008f21006d5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e5ec7d28-464b-4271-90a0-7a0ed535abba"
        },
        "item": {
          "id": "ff1bd161-f764-4b8a-b5a7-8113d1210efe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e7881f3a-8b8b-4b9b-9bb1-0bbb38a18b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5cef22-0f97-410d-90d3-c55276cc4158",
        "cursor": {
          "ref": "5adae432-6da5-4ced-87af-5b1710a7c8c2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a26176a6-4d0c-4e49-85bb-fab05b93ab1a"
        },
        "item": {
          "id": "ce5cef22-0f97-410d-90d3-c55276cc4158",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e49c0f30-c99a-4549-9f58-a30ec4cb5a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bfde5b-3941-48e3-97a3-347811830aa5",
        "cursor": {
          "ref": "8ec5f252-5318-4002-ad9a-3d96671fb6cb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "36334ef0-2041-481a-bd6f-d7b80393a44a"
        },
        "item": {
          "id": "57bfde5b-3941-48e3-97a3-347811830aa5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3a3bc5cc-1e8c-4de9-82ce-6dab5ffc5196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b4793-d7d8-4104-b12c-40db67ba052f",
        "cursor": {
          "ref": "c16f5290-0f61-4c24-8d17-c079b98f26dc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fe4de957-b7d2-4dfe-8f0c-3af4d84efee9"
        },
        "item": {
          "id": "980b4793-d7d8-4104-b12c-40db67ba052f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "177c44e1-8c0b-4dec-80d6-a385f4aed11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e76b2d-e3fd-4188-94cc-2de617cd91c5",
        "cursor": {
          "ref": "d08c5ced-912b-4309-8a69-cc57c2a91fc1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aa23e33d-76fb-4711-af67-ad065bde11fc"
        },
        "item": {
          "id": "80e76b2d-e3fd-4188-94cc-2de617cd91c5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "67a12b83-46cb-4794-9035-ef15b595c1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adc6849-f115-4e9d-aefd-4e10e6c12265",
        "cursor": {
          "ref": "422d0b1c-5479-4c07-9689-cf1e43229079",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b9eec6f8-3c8f-4d33-ac9b-a4db60d88c79"
        },
        "item": {
          "id": "2adc6849-f115-4e9d-aefd-4e10e6c12265",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ea475298-a337-4024-8068-a003d411caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128e32d-41ef-44ff-89ea-25e6e980d951",
        "cursor": {
          "ref": "bd3be80d-e118-488b-9209-c1826b5045cd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "df658f79-8236-423f-a433-dc5c272febc4"
        },
        "item": {
          "id": "2128e32d-41ef-44ff-89ea-25e6e980d951",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ffe1d8ce-fefc-417c-9282-2a26e1583486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce834096-8695-470f-92b1-aff196ba40f3",
        "cursor": {
          "ref": "d9ce82cf-c2de-4139-8576-8e9a2e8d33db",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "309977c4-f09f-4d95-8642-254735dfde61"
        },
        "item": {
          "id": "ce834096-8695-470f-92b1-aff196ba40f3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "414dc833-9f17-4b25-85d7-7f0744ca8a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6358b86c-b383-43b3-bb10-98ccd31ebba8",
        "cursor": {
          "ref": "0d7958ca-0621-4152-88ae-f636c0152f05",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "742acd67-7ef9-4291-bfd5-370c34dce353"
        },
        "item": {
          "id": "6358b86c-b383-43b3-bb10-98ccd31ebba8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "523e60e9-eb85-4b47-bd31-e31fecc2ee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad73ac4-b042-457a-88a1-dc1794aec6ad",
        "cursor": {
          "ref": "564150ca-3a30-474a-af2f-fbaf2b0dffc6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6bcef30d-ad06-447b-9e41-f12cde41a6b8"
        },
        "item": {
          "id": "cad73ac4-b042-457a-88a1-dc1794aec6ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "61eedad2-9a56-4b10-b7b8-1ba5543dbdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb617c4-5b1f-4a4f-9de1-bbd8a31fff57",
        "cursor": {
          "ref": "3c6907be-5fca-4429-9300-8f743c5d2aa8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "41427400-3e6f-422d-a5f2-c88eb7389e26"
        },
        "item": {
          "id": "fdb617c4-5b1f-4a4f-9de1-bbd8a31fff57",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f75527f1-ef08-47b3-915d-5f8fed282ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461cae45-1f03-4b25-89c5-760bf3346e01",
        "cursor": {
          "ref": "72eb2358-6694-48f6-b28d-059831ba8cfc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2db5264e-d915-4572-9f3e-dec99872a71e"
        },
        "item": {
          "id": "461cae45-1f03-4b25-89c5-760bf3346e01",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0ae3e51e-2dd3-4e54-8bd1-eae47ec25e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0926c13-c659-413e-beb0-4d0a5731962f",
        "cursor": {
          "ref": "a8a5ba90-e0a2-4d6c-a0bf-70805bc9a503",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8b71b819-b4ed-485f-9d00-5c59c1e22d67"
        },
        "item": {
          "id": "e0926c13-c659-413e-beb0-4d0a5731962f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6c75f524-c396-4cf7-b0f8-0c9025c1e3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2ed227-dcc8-49c4-8dbd-37f1716698ef",
        "cursor": {
          "ref": "a47b99fa-fb79-492e-ae35-8d2e75f5ffeb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5181e053-cfd6-4b43-ba54-b49aa7403461"
        },
        "item": {
          "id": "4e2ed227-dcc8-49c4-8dbd-37f1716698ef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1845b7a7-aeb1-4c90-b991-fa6c5199ca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce9e20-a4fa-46dc-a277-69546f4bbc04",
        "cursor": {
          "ref": "db2efb3b-01e1-4481-8ef8-e22cfed04b68",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "930cce4b-e66b-4e04-b659-747047a27ea3"
        },
        "item": {
          "id": "56ce9e20-a4fa-46dc-a277-69546f4bbc04",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "25f19ea0-2a7f-4ba1-bc1a-4347f94cb1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53f848d-362c-4333-a8e6-b865f7719fce",
        "cursor": {
          "ref": "de6f65ff-871a-44c1-af28-b79c9ce767e2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c3efec49-291b-49fa-ab7c-c598080231b2"
        },
        "item": {
          "id": "a53f848d-362c-4333-a8e6-b865f7719fce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a960bb66-f55b-439e-8c1d-f263a8d32d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4645bb8-3057-4de6-a297-d4323b497e85",
        "cursor": {
          "ref": "1cb3c350-b98e-4f72-bf5d-23cd6e517c01",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba418fc2-0163-4501-bd27-3ac38306b39b"
        },
        "item": {
          "id": "b4645bb8-3057-4de6-a297-d4323b497e85",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c5ddc346-3b36-4f70-8878-e9ada47878ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2048157-edd3-440f-9cca-67c9d02962dd",
        "cursor": {
          "ref": "a4e17269-2ed8-429a-b4bf-52324b425540",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "025bffdf-b165-49b9-adc2-dd573ca2c690"
        },
        "item": {
          "id": "b2048157-edd3-440f-9cca-67c9d02962dd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "05a5ea46-a8a9-40d8-b62a-c9a7afe77c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4cfeb9-5729-439a-9921-bfef1157fcd6",
        "cursor": {
          "ref": "3b0dbe2e-1550-454c-9e6a-9a44f0532b26",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "96d81547-c076-4c8e-b3ed-13ec5feed256"
        },
        "item": {
          "id": "3e4cfeb9-5729-439a-9921-bfef1157fcd6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c0d520c5-bf11-490e-b967-744c44904ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f18511a-7f2e-4028-a04f-780065f78da4",
        "cursor": {
          "ref": "335d8a74-a2e7-48b5-9620-100257fb7c10",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2dd8a1ee-7059-4953-9f0b-b66793dd0f6a"
        },
        "item": {
          "id": "9f18511a-7f2e-4028-a04f-780065f78da4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8b0d70b2-66d2-4ad2-9d3e-27b19f7dc829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a60b9ac-96a1-4481-8c69-ea46d5f8dfd9",
        "cursor": {
          "ref": "0cc9c656-3e39-447e-99fd-3408a58edd74",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f2ff5bf0-ead7-444e-9899-d7821788e71f"
        },
        "item": {
          "id": "6a60b9ac-96a1-4481-8c69-ea46d5f8dfd9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cf663a7d-f39d-4b9d-9bab-b4d309498b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc98f105-8c54-4e05-ab7e-30cf0ed1c771",
        "cursor": {
          "ref": "b6d50fef-0120-4498-b0f8-0239d6d36f85",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2488a2d1-2743-4e52-9aa0-346c4ef8ea67"
        },
        "item": {
          "id": "bc98f105-8c54-4e05-ab7e-30cf0ed1c771",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aa89fac7-fe09-49fa-8ba6-b1bb5ffa8cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8286a08-c551-420f-a05b-74ea9973538b",
        "cursor": {
          "ref": "7f657da4-2720-406e-b568-c033cfd6284d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fcce1c06-a401-430e-9513-977918e62430"
        },
        "item": {
          "id": "f8286a08-c551-420f-a05b-74ea9973538b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9186f9bc-1a46-409b-8e30-90398acb8623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29a1a4c-c1d3-47a0-9de7-3a3ba7a470e6",
        "cursor": {
          "ref": "ab82ee6c-bbf9-4611-9a4f-20d5f538190d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3f5edfa2-698d-42b7-ae24-1c528e2494e0"
        },
        "item": {
          "id": "f29a1a4c-c1d3-47a0-9de7-3a3ba7a470e6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "125a9a1f-a8b4-4b8c-b401-01c01dfce22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e7c29-68ca-4000-b59c-ad6b8bf1217a",
        "cursor": {
          "ref": "c5bf00b1-5c46-4090-969c-d7b3c5acc071",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c45639cd-db07-4642-a7b2-07f2ed6cf7f0"
        },
        "item": {
          "id": "e52e7c29-68ca-4000-b59c-ad6b8bf1217a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6b98d41c-928e-4363-b1d4-ee46e0bd7588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b796959-d087-441f-ae02-14068b5db134",
        "cursor": {
          "ref": "d9d2c53a-81e7-4bdf-b289-7092809209ac",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a9a5753-10b9-447f-8d21-dbd401536d9a"
        },
        "item": {
          "id": "6b796959-d087-441f-ae02-14068b5db134",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "05c4f311-aa7c-4923-8e55-f5664edd5b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1437f5b0-3f49-48d4-a60b-4b3069631b98",
        "cursor": {
          "ref": "7e2eb2fb-339f-4373-bc4d-b37953c12536",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ab797616-5632-4194-824b-51f352b74b5e"
        },
        "item": {
          "id": "1437f5b0-3f49-48d4-a60b-4b3069631b98",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ccb462ca-5691-49e5-a129-2219edcfb194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc227bfb-50e1-4da2-a768-4da0938586b0",
        "cursor": {
          "ref": "d123f72b-2649-41db-9502-c9c073ed30ed",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4628fd8b-0222-4641-a434-8f9561c16063"
        },
        "item": {
          "id": "dc227bfb-50e1-4da2-a768-4da0938586b0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "22549902-c229-45e2-8871-0a54de6c95bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd53dcae-a5fd-4292-ac62-53979a55b952",
        "cursor": {
          "ref": "5705f3a1-3184-4ac5-b642-701523d906c8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "00f186a0-5e09-4b67-9b84-9fbce06b2b0c"
        },
        "item": {
          "id": "cd53dcae-a5fd-4292-ac62-53979a55b952",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c6b8c26a-d2a5-41a6-9d54-239da14efadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24365146-29a0-4726-bebc-034d3bd4f4b8",
        "cursor": {
          "ref": "a342f636-ef56-4b89-8a34-e450ff488d0b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e57bf5b6-abfd-4858-869e-471dd37ab840"
        },
        "item": {
          "id": "24365146-29a0-4726-bebc-034d3bd4f4b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ce0f5574-ac09-406b-bbf2-fae0bad40ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86139a8e-ba72-47a8-b731-5b4c664ad35c",
        "cursor": {
          "ref": "38c14f22-fb6a-4261-810b-54853d81d880",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1a704af4-b21b-4bd0-b338-2b7b19c6a124"
        },
        "item": {
          "id": "86139a8e-ba72-47a8-b731-5b4c664ad35c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dc57f58d-1a86-4495-808a-3946ac265ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6738077c-ad2c-47b2-8ef0-2692f20cb045",
        "cursor": {
          "ref": "59d53973-ddd3-497a-b81b-fd84283fbfdc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a6441887-6657-429f-a6f2-e1061faa23ec"
        },
        "item": {
          "id": "6738077c-ad2c-47b2-8ef0-2692f20cb045",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ee23f259-7361-499e-aaea-821c3fef4fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89c2edb-23b1-4f19-be99-bde6a8f7c678",
        "cursor": {
          "ref": "85d06f2a-a98b-4667-9672-d9a681ea29c5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "21b157dc-071f-418f-9f67-3d547beec2d7"
        },
        "item": {
          "id": "e89c2edb-23b1-4f19-be99-bde6a8f7c678",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "81f4762d-22ba-4fcb-b174-a5a7d6786c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcf8dbf-e0ca-4320-b832-e8314b348877",
        "cursor": {
          "ref": "0259b265-68de-4857-ab49-b01be71edc96",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9ca5c32c-ddad-437e-8199-c1b9ccfd91e2"
        },
        "item": {
          "id": "edcf8dbf-e0ca-4320-b832-e8314b348877",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "90c66464-ab42-403a-9965-76858fc54d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c065a85-371a-4a2a-b914-40523421bdd9",
        "cursor": {
          "ref": "9e636bbe-7f38-41fd-a360-9e8e09d52e9f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3b0750a5-1c6b-4f33-b45e-e3af71c04b39"
        },
        "item": {
          "id": "7c065a85-371a-4a2a-b914-40523421bdd9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed87b504-c41a-4c56-9037-b113c09f1137",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "46579d94-507e-4bb2-bf23-c329142256ec",
        "cursor": {
          "ref": "0d886f7a-e815-40b3-b8dc-48ef4049f9a7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ba55d538-7311-400c-a4a9-cb36da91c62c"
        },
        "item": {
          "id": "46579d94-507e-4bb2-bf23-c329142256ec",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5f026529-a7cd-4eaf-bed6-c9d09abf3eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12784c33-3373-4024-9c79-d6f25b19b14f",
        "cursor": {
          "ref": "61860143-8f89-461a-bc8e-7eabead3218f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c85d0062-bb48-4b00-9e20-9ce9013333ec"
        },
        "item": {
          "id": "12784c33-3373-4024-9c79-d6f25b19b14f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6304b6f7-4cf1-427b-a57c-40dfa4953f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7a5fd4-628f-4580-b54f-3267a1df3192",
        "cursor": {
          "ref": "776a28e9-317d-4017-87b9-32ca5c4a15ff",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a65cb761-58ea-47e6-90e2-f58dfeeaa6c5"
        },
        "item": {
          "id": "5c7a5fd4-628f-4580-b54f-3267a1df3192",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d4c0b5a5-dcdb-4063-965f-bfb3d7cc41af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399daad-d939-4241-84d2-a1a707dc39f8",
        "cursor": {
          "ref": "3e970cbb-035c-4a2e-ba88-ec90c235ed08",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5a9f8675-b473-4f8e-ac48-ce2036ee98ab"
        },
        "item": {
          "id": "e399daad-d939-4241-84d2-a1a707dc39f8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7df148b6-40e2-4a58-9395-c7e209f75d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2243f43-567e-4dd0-aae5-04ad8800586c",
        "cursor": {
          "ref": "ae849a97-6bc1-40b8-9d68-76bb108105be",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c1f91388-7482-47ff-92a4-104deb322b00"
        },
        "item": {
          "id": "e2243f43-567e-4dd0-aae5-04ad8800586c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2ad627dd-1aa1-4e4c-8b01-94145ddaf6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c71dde-f2cd-4cf6-8734-71e003556a94",
        "cursor": {
          "ref": "6787d2a2-83d3-43ec-ab56-e8113c68d7e3",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e7b5c00c-a68b-443a-b698-0045be4c8aec"
        },
        "item": {
          "id": "41c71dde-f2cd-4cf6-8734-71e003556a94",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ebcb027e-0882-47d7-97d5-20f751a5d95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7341dc37-f676-4c77-b3f4-97728079f5e6",
        "cursor": {
          "ref": "1bedf866-b2b0-4165-848e-53f4f244a9bf",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "81f7e40d-fe6d-463b-84b4-b57eb83e6e68"
        },
        "item": {
          "id": "7341dc37-f676-4c77-b3f4-97728079f5e6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "50a5cbae-cb2a-4e5e-8a33-f2195b23262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135e3e0-be30-4624-bb82-ad6ce8a4291a",
        "cursor": {
          "ref": "c94bcf6e-0a2f-4119-9a8e-c7fb71d5363b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8b77836a-04a8-4f1a-aaa8-5299e7ead7f2"
        },
        "item": {
          "id": "5135e3e0-be30-4624-bb82-ad6ce8a4291a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "abd7b971-9901-4702-825b-4ae584b6a9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319aafab-fe16-4dd7-a5d6-eaa9f61f35be",
        "cursor": {
          "ref": "d237e85e-76ce-4192-a4ef-826094883726",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a680f088-245c-46dd-b34e-6b316eddb8c9"
        },
        "item": {
          "id": "319aafab-fe16-4dd7-a5d6-eaa9f61f35be",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e46f664c-d57b-4463-8219-5a61ab2e404c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80667b58-826d-43d1-8f01-0dadf633b2e9",
        "cursor": {
          "ref": "9572e86a-f8d8-4bc2-ab48-80cb738252d4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9411939e-4f16-4093-ba43-eae982553d43"
        },
        "item": {
          "id": "80667b58-826d-43d1-8f01-0dadf633b2e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3bd8a179-b6d5-4fd0-ad72-1d88c4ae4765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ad3391-b48b-409f-9eea-aedb606c3565",
        "cursor": {
          "ref": "600a2038-556a-4aa0-8e79-4836ac6497df",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "66ef6249-6aad-40d9-87ba-4c47cd588b94"
        },
        "item": {
          "id": "b7ad3391-b48b-409f-9eea-aedb606c3565",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd62fde1-d52a-4f11-ab9a-db71111ff95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4dee6a-1ed2-429b-bd15-5e8f4ce736dd",
        "cursor": {
          "ref": "f46e214d-ae7e-4361-94b9-697a086bd3bd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "19cbe17b-eb20-4a0e-b470-e98b01732b72"
        },
        "item": {
          "id": "0d4dee6a-1ed2-429b-bd15-5e8f4ce736dd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "db3bc219-7eb7-454c-8326-975ee3f88e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5380a5-1ca9-421c-9e3b-d1f9936c9893",
        "cursor": {
          "ref": "50582421-17d8-4805-8f0b-7a4270a24746",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1e4bbbff-f8d0-4646-a072-00cb1bc10167"
        },
        "item": {
          "id": "9e5380a5-1ca9-421c-9e3b-d1f9936c9893",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d66b2de-a77f-4fbb-84e6-943c5481d04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2929ba85-7a3c-44a4-b1e3-2154b144c383",
        "cursor": {
          "ref": "424b2116-b910-4ccb-99a2-63383f454b1e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "888b85a9-3cac-4d54-80f4-cb59bed18280"
        },
        "item": {
          "id": "2929ba85-7a3c-44a4-b1e3-2154b144c383",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7a880a8f-dc68-44fe-ac29-68642c424926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ee8ac5-ed40-4190-af01-e99b6d86dc36",
        "cursor": {
          "ref": "026da9d2-7a6c-4b33-9cdf-09cff51236bd",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4d3ca806-4a63-436c-b765-a4b4371e0f8d"
        },
        "item": {
          "id": "27ee8ac5-ed40-4190-af01-e99b6d86dc36",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "029fcfc5-54c8-4c98-9e20-893718289afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56e60e8-8b58-4026-8c97-af9cef0c1f2f",
        "cursor": {
          "ref": "b1b30702-faf6-4800-a26c-0288e0b0c371",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "48cf1ef8-2066-47cc-bfc4-801ab85d63c4"
        },
        "item": {
          "id": "e56e60e8-8b58-4026-8c97-af9cef0c1f2f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "663b77e1-8d1c-4213-bd50-36d516f4f1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f19801-b739-4472-838d-eec8c9a3eff6",
        "cursor": {
          "ref": "6a34278e-436f-4b98-ad34-775e8b460340",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0260597c-70c6-4c35-9669-f43803143568"
        },
        "item": {
          "id": "14f19801-b739-4472-838d-eec8c9a3eff6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d9f84b89-5448-471c-94d2-ab9046421c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f53b8d-12bc-44ab-b417-0c717c7d16c1",
        "cursor": {
          "ref": "983e65a7-be9e-4aeb-840d-779669e6b541",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ccc70428-6db8-4ca9-972b-abf3015d0e5b"
        },
        "item": {
          "id": "c6f53b8d-12bc-44ab-b417-0c717c7d16c1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ce264de8-fe40-479a-9649-9283b05d62b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a369ddad-2884-4e75-af5a-24698f0a7e50",
        "cursor": {
          "ref": "814afdd2-a817-4780-b945-85442672bf50",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e7be9028-a75a-44ef-8abb-84e44175f970"
        },
        "item": {
          "id": "a369ddad-2884-4e75-af5a-24698f0a7e50",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b59dd1d5-75a7-45e9-a1e5-793846abf6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9907b64-169a-4be8-bd77-be3ae2df92dc",
        "cursor": {
          "ref": "16db3ac9-e1e3-40ee-941e-dda2a17bf10e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "897556f3-a50d-43e8-8030-b9bd9f075ac3"
        },
        "item": {
          "id": "d9907b64-169a-4be8-bd77-be3ae2df92dc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "67cde858-ec51-4e6f-8b60-113e0b34b042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0436c51-1acb-44bc-ad82-991c7756d845",
        "cursor": {
          "ref": "65e8605a-edfd-4a0d-b16b-23aa4dc66682",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f5213ef1-b7cf-4c58-8dfa-7906d756435b"
        },
        "item": {
          "id": "a0436c51-1acb-44bc-ad82-991c7756d845",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9c53162b-299b-4111-bad9-53c37c95e1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e188c65c-394e-45a6-8d4d-09bd32abce4c",
        "cursor": {
          "ref": "4c78327a-8873-4b27-a0df-ad14c394bc33",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e18b33f1-15f1-41c3-ae40-4a5b719a6fea"
        },
        "item": {
          "id": "e188c65c-394e-45a6-8d4d-09bd32abce4c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "370d559c-16a9-494b-963a-af1684467c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf1c2b1-e247-4454-a89f-72dd6e78ad3c",
        "cursor": {
          "ref": "d35ac12f-b189-4484-b6e7-b18ed2ace57b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "879f6c0b-00bf-47db-8b4b-2457b459a0a5"
        },
        "item": {
          "id": "9cf1c2b1-e247-4454-a89f-72dd6e78ad3c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2ae30ffa-82cc-48a6-9aeb-bee665a4b331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe5f9dc-c7e4-4759-83ab-a4bb6d03e8be",
        "cursor": {
          "ref": "d3552dd3-1e27-446c-a01d-fb74dc7fb85a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e49686b5-477c-4ec3-a5e1-f2bafaf2d9fe"
        },
        "item": {
          "id": "4fe5f9dc-c7e4-4759-83ab-a4bb6d03e8be",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e5f7c691-bdfd-4214-a592-e0d1d3b1f235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2881f7df-5c1e-4df8-a35b-b047426bcbfe",
        "cursor": {
          "ref": "95c4f35b-bb2d-446f-98d3-36a55bb6baf9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f128ea99-7a87-42d8-9d2b-5672c9dca306"
        },
        "item": {
          "id": "2881f7df-5c1e-4df8-a35b-b047426bcbfe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "45d06494-a404-4a92-9b79-77da2d1942ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b83c5d8-fc03-436e-ba4c-6e93015000e4",
        "cursor": {
          "ref": "9a25d73f-08ec-4e2c-b088-a271f8e7e862",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3a449442-6f7f-476f-be13-0b92cd9589e6"
        },
        "item": {
          "id": "9b83c5d8-fc03-436e-ba4c-6e93015000e4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f885a4f3-e86d-480c-9396-7d7022b5187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0df4fa8-9148-4168-9895-33b0bd85490e",
        "cursor": {
          "ref": "d2ffb3c0-bbb5-440a-9adf-2c3d0c461793",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "95084e0b-390d-49e9-a1c1-8ee975490848"
        },
        "item": {
          "id": "a0df4fa8-9148-4168-9895-33b0bd85490e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dd334164-7e6b-4cde-a286-4714dbbf3db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fef9ad2-5ef5-46a4-a575-0ee5f9155f49",
        "cursor": {
          "ref": "1afcf4ac-e379-47b2-876e-385350a66b62",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b4b64ce2-dbd2-4616-977a-b9d820526717"
        },
        "item": {
          "id": "1fef9ad2-5ef5-46a4-a575-0ee5f9155f49",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fa7c5af8-6944-4b09-80ab-91b3dd0105d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1490249b-61c8-4133-9f5d-58b04d88f01e",
        "cursor": {
          "ref": "7e2406d4-779f-4ee3-bc1a-63962968092d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3d79bfb8-e502-4d9f-903c-9b9474354e7c"
        },
        "item": {
          "id": "1490249b-61c8-4133-9f5d-58b04d88f01e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "714e62a4-a02f-459e-9f52-9f2f592e9cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4542f0-e85c-4278-89db-6a7a44abaa0b",
        "cursor": {
          "ref": "9c51e75b-8d8e-4d5c-bd24-5d873dd7ceed",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b49a2279-1573-4dba-a13a-9215c2a9fe64"
        },
        "item": {
          "id": "6d4542f0-e85c-4278-89db-6a7a44abaa0b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a718918d-9610-4b14-a686-4047f220c61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0e10b-3ed3-4326-8ed2-c86164b5de1c",
        "cursor": {
          "ref": "228fce77-eb49-4e6b-bc94-680eae90ba58",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2c1c1d09-4d19-4541-9c6e-3b97dfabb2ab"
        },
        "item": {
          "id": "a5a0e10b-3ed3-4326-8ed2-c86164b5de1c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b811b1eb-c7c9-4c52-bbdf-7cabe71ae8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d344c16-6610-42de-be4c-3e2bbeb13801",
        "cursor": {
          "ref": "ec348619-743f-48e8-b449-5ca66980ed6f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c2eb7cde-5258-4f2e-bb7d-98f34b1a15a1"
        },
        "item": {
          "id": "9d344c16-6610-42de-be4c-3e2bbeb13801",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a85f044-30ba-4979-a715-85ed2065f860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6010a23-eab5-4f05-a150-09bf97716345",
        "cursor": {
          "ref": "41753ebf-0ca4-4cd9-9542-b03af4a5175a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f0359530-d7d1-444a-a885-086398c4263b"
        },
        "item": {
          "id": "c6010a23-eab5-4f05-a150-09bf97716345",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d831208e-85e8-4366-b31d-79cc0ca32899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b8da40-8927-42ea-a286-ff0adf28c752",
        "cursor": {
          "ref": "eeda7f5b-356c-47da-abc0-a571b4c5d2c8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "aef35b49-14d4-4ffa-8e5d-1b5c347e775d"
        },
        "item": {
          "id": "26b8da40-8927-42ea-a286-ff0adf28c752",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "998c4b8e-e081-483a-bfb8-a05e2fce1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bbfca4-12f2-4325-8999-99fb1512d454",
        "cursor": {
          "ref": "76255b76-31d3-40b2-ac05-89f7848210c0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8ca800f3-025c-4c67-81ab-466bc4ba813d"
        },
        "item": {
          "id": "97bbfca4-12f2-4325-8999-99fb1512d454",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ab655bfe-afc5-4316-bf6e-c669b9807f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c179ee6-b7a4-42e1-b514-a41d8d970f12",
        "cursor": {
          "ref": "cc7edfe2-ff5b-4f69-9a90-25f30cd2f8ea",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d99bf477-f597-44f5-b23a-259a3fc7ad09"
        },
        "item": {
          "id": "3c179ee6-b7a4-42e1-b514-a41d8d970f12",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "34fda4d2-ba67-47c8-8fce-ac453d6bcded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7346d80-1c19-4657-af23-bdd5ffa3ce6b",
        "cursor": {
          "ref": "119c107c-f29b-409d-a95c-b68623f42a05",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "709a35f7-b2e9-4734-a7cc-e4305004d0c2"
        },
        "item": {
          "id": "c7346d80-1c19-4657-af23-bdd5ffa3ce6b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "85493b09-fcea-4a16-8195-22f916336e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e936ad-32c0-4851-a46e-f20f71a28ac3",
        "cursor": {
          "ref": "68dcc094-774d-433a-b652-7302abdf1885",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ecaec15f-0144-41ae-a607-72c791a47b0b"
        },
        "item": {
          "id": "09e936ad-32c0-4851-a46e-f20f71a28ac3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a748c783-773d-456f-908e-f9fea62d9f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aba5bb-94da-47c0-9a0b-8fda076a3a61",
        "cursor": {
          "ref": "f92c9e13-2a53-401c-9125-909c98ff8b78",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "66bcd986-a4aa-4ab8-9261-b49cee075a37"
        },
        "item": {
          "id": "e0aba5bb-94da-47c0-9a0b-8fda076a3a61",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "366bfc23-0e18-4d37-b03e-eca9e7b0c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61c32c4-884f-451d-a28b-1e8e8e2febaf",
        "cursor": {
          "ref": "f5473330-2ae7-40e9-80d0-f37d1fd31ecd",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2c890217-bede-4bab-9e9b-a0c92a21878c"
        },
        "item": {
          "id": "a61c32c4-884f-451d-a28b-1e8e8e2febaf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fa45f74d-6980-48cf-9a4e-d3710ebe2c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9d18ed-411a-4c46-baa0-f9f7ceb8cfcd",
        "cursor": {
          "ref": "4e6f7c03-9f45-49e7-91c0-9f7190057869",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cdb9d499-d472-4a21-9e74-76bc727956dc"
        },
        "item": {
          "id": "fa9d18ed-411a-4c46-baa0-f9f7ceb8cfcd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8711f1b5-1aff-4db8-a74a-65572a128f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c683a-e27f-478f-9e7f-6253e63fbe24",
        "cursor": {
          "ref": "80e43371-9226-41bf-90e7-1e105cf16813",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f87f91de-8821-47c5-b73d-7820043af731"
        },
        "item": {
          "id": "124c683a-e27f-478f-9e7f-6253e63fbe24",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "59e62779-f81e-45f6-aaf9-4df1d11c6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dce818f-e325-4de4-8d0f-5e4c08f77b7f",
        "cursor": {
          "ref": "91f6c714-583b-4f88-9b63-6e0313441884",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0a071ce3-5d67-4f91-bf79-09dccf221343"
        },
        "item": {
          "id": "0dce818f-e325-4de4-8d0f-5e4c08f77b7f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "178544bc-1578-432c-81f0-b5c56e2756bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae76bd28-47f4-4f9a-b22d-b024942ef43f",
        "cursor": {
          "ref": "bc457165-f5d6-4e0a-ac02-857855f187e0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "13e169cc-8009-4c84-a677-5b394717cf6e"
        },
        "item": {
          "id": "ae76bd28-47f4-4f9a-b22d-b024942ef43f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e1fd0a5-4eec-4621-968e-4c44d93107dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b0e6a4-4161-4d39-8761-8aab34c49ff7",
        "cursor": {
          "ref": "8b7eac15-c02e-4f8c-8b6b-02f31a262458",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dc8b0556-0a8e-4002-a904-75f60cc862c6"
        },
        "item": {
          "id": "f5b0e6a4-4161-4d39-8761-8aab34c49ff7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "07b1ebcd-7625-4957-bc5e-ee64f4e807d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5946fd4-6048-495b-9a2a-b350c4836285",
        "cursor": {
          "ref": "a3c69d6b-20a3-4b0e-b2c6-a9737eb54366",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d0272aa9-1760-49f7-ad65-2dc09d827f2c"
        },
        "item": {
          "id": "c5946fd4-6048-495b-9a2a-b350c4836285",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7db856e9-9018-4e9c-84d9-3bb49280ee6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74f1bf8-f672-4fe3-879c-ac1810de1b5e",
        "cursor": {
          "ref": "95c86a52-4f45-4ff9-a1d3-10363dda2260",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5ca2dbcd-e750-4093-b529-9d0ff69f3b5f"
        },
        "item": {
          "id": "e74f1bf8-f672-4fe3-879c-ac1810de1b5e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "feddb8b9-fd06-48af-8db0-1e4a02a4118d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6705f4-36b5-4295-9dc9-a1c7d09e32bd",
        "cursor": {
          "ref": "e77706d0-982b-4357-a8e0-e92cc6468382",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "12f799fc-5e01-4a3d-9406-a0b901962778"
        },
        "item": {
          "id": "ef6705f4-36b5-4295-9dc9-a1c7d09e32bd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "989d83be-a7f2-4de2-bed3-9871a7d89115",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ae3356-84c7-4cbb-9543-b8cfa67c0f2e",
        "cursor": {
          "ref": "1e8604ab-62c7-4c1e-ba9c-453b79024a36",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "40424161-f46f-4290-9276-1f991cf6993a"
        },
        "item": {
          "id": "74ae3356-84c7-4cbb-9543-b8cfa67c0f2e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f45d0712-f812-40be-9a8f-15b86af5d73c",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "598fba75-efdc-45b5-a8fb-38f2e23e5441",
        "cursor": {
          "ref": "66b12f86-2a46-4640-ad18-169694c8f675",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bf776ef1-d5e7-4006-8121-f46831efbb06"
        },
        "item": {
          "id": "598fba75-efdc-45b5-a8fb-38f2e23e5441",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef878e84-562d-455f-a5cf-934e687299dc",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83042b19-9adf-4800-8892-5e225f5882db",
        "cursor": {
          "ref": "66cbb8e1-2166-4647-830f-619145843cd3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b715151a-f13f-4926-a448-0cae41e91b74"
        },
        "item": {
          "id": "83042b19-9adf-4800-8892-5e225f5882db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6eb558c1-5093-476a-ab37-83c68fb15ab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83042b19-9adf-4800-8892-5e225f5882db",
        "cursor": {
          "ref": "66cbb8e1-2166-4647-830f-619145843cd3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b715151a-f13f-4926-a448-0cae41e91b74"
        },
        "item": {
          "id": "83042b19-9adf-4800-8892-5e225f5882db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6eb558c1-5093-476a-ab37-83c68fb15ab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144f7d5c-2501-4948-b4a8-93d4162d445e",
        "cursor": {
          "ref": "68570016-6984-4dc2-bdc7-bc0082db7385",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3d5accf2-6b78-4038-afbe-593bac092884"
        },
        "item": {
          "id": "144f7d5c-2501-4948-b4a8-93d4162d445e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "569c0227-2d5f-4ede-82d0-a0b51c4ac153",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4737130c-71a9-435e-9361-88222b7fb2ca",
        "cursor": {
          "ref": "14f8ff52-d0c7-4a22-8d1d-88120eb9003c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e5cc5787-2393-4527-8396-7b8788977f32"
        },
        "item": {
          "id": "4737130c-71a9-435e-9361-88222b7fb2ca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8b3eae1c-9f7a-4d9c-83fb-ce70758e2c4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}