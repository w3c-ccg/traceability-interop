{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8e1429d3-7e78-45f1-9684-aa024f74b5ff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "90297bba-eee8-4450-9f07-e6100d9b9c35",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e095fbd-2786-44ed-90d1-a83c1b70f3f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0221c424-0254-4cbd-8715-0cb443fad2e7"
                }
              }
            ]
          },
          {
            "id": "758e7bfd-d4b8-41ac-a834-f5150faeef40",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d61b6b2b-ab68-4b31-a300-ae9a73b25227",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ead08ab-1492-4ed1-94c2-34c21c39574a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7e297ec8-de5c-4425-8f11-660305bee5c4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8c43f3e3-446f-48d5-974f-6516dccbea2e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea1c4eb7-2625-446f-ae0d-9579a59fd550",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da3ec681-26db-4c28-bfd0-8680a9190903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e46a6f20-d067-4b07-8afb-79a6998e309f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf22ddb4-7e46-4a17-8b2b-01cb5de9c170",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdc05bb8-6152-4ac5-85dd-02b4ec68cb9f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ce36020-c29c-4abc-8f1f-a3c5e854e147",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b13ca714-3353-4c71-b130-3ce02f7d371c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f5b9c82-899a-4baa-a6c8-04feb64150e4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "deea7c32-4666-43b5-8975-0861bbeb282a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "795a4340-9e98-4e2f-81b2-c8ea187ba73f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6726505-5ca6-4148-bc6e-fbb9229e0f29"
            }
          }
        ]
      },
      {
        "id": "9599002f-19c3-4478-933a-ef3c7c4941a4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "074d6935-6a06-4d34-90af-87626a8c72dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f6bcbf-eac2-4ac5-bd9f-3ed69b123d12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91c0d004-b677-403a-b3d2-b313ef84c45f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c6f655-3915-45f3-ae70-db64c7d507d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db31f6dd-8a90-422f-8fb5-caaba9b8cdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd53aec-9710-4e60-9827-cacccc756b7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c310a28-8bf3-469c-8786-b32cc1d02c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2cea4a9-183a-4e30-a5ef-2d6aac060416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bdd6ce-4e9c-41d3-84f0-5bdfda748690",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d18e20-16a0-4884-a3e5-6da07dd96dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e8d3991-78ea-45af-9d4b-454ae6a7365e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4e224b1-1274-46df-9e47-7e0a9aaae547",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df6ffb42-7d47-478c-b979-f2cc8f9c0958",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f516e74d-2d3f-44bf-8a7e-86ccba423dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00555bcb-adcf-44d7-aa9a-847f0f62f032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc20138-d4cb-4d2d-856c-6fe9a4df31c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f6a6f5-f649-465c-935c-509aaf53c292"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "211188bd-7a69-4d45-b579-e5aa679b6cab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7cef051-e644-467c-97ee-43e9cf72f4e6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be94aa3-ee5b-4183-b1a5-a1d6d9f1d3c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c63e5cc5-ccc9-4749-a0b6-243be3c5e423"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ad8b0bd-e546-423b-9259-b74d026747f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b40740c0-62c4-49ba-aa04-8eb76080990a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9b7710d-bd8b-45a5-b3cb-f1dfd11af679",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af0fe657-e347-4d01-8754-d9e6a1e4520d"
            }
          }
        ]
      },
      {
        "id": "87d00332-e0af-43d9-a86c-5af927c5fa91",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "87ead1d0-3913-4db9-b61b-673b911fd3ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4e55793-ef03-4bb1-89c4-4497c0e3ebd9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c0443c64-4abf-44a0-981b-7ec48d572125",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a9a500-e130-4a8e-af1c-feaef4a4c3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7658e396-dc17-4186-9780-8f342f225960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afd8ec7-8fe8-4aea-9266-fae9f5ea0345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2995c84-c5d5-4496-8d7f-c4a6c48193ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bdb458-f6a0-467f-a127-9c3dcfc6088b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e275679e-ba92-4bd3-873d-55800dae9dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601323f0-a559-41a7-a12d-4ae3272f3bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35732220-dbcf-4e76-9540-5885cc714c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76ddb4ab-661e-4873-a5cf-42fc5e370931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c64b7e7-f6db-4462-89f1-6bb5ac7a1292",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e554d759-935b-496c-9d11-b9ae451b4e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209a0168-8177-4696-b38e-fd08aa05fcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667f762b-5a6d-45ee-8541-8da381b763b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427408f8-8d5d-42f7-84ec-8b46a45f04c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab77fb42-1b2c-486c-8002-a7c6af723d5a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e238ffc-a3e7-41a7-8257-2c01522448b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4260be80-d399-476b-92dd-b7898f0ece14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2392c3-e1c4-45be-aad3-602c572f9f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cc6e127-0b0c-4d34-8443-32de4e5aa3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d7f4ba-7353-4b88-ac16-49bef23a91b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb44ba2-3552-4a1c-a9d2-59eaebdead85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8572e5bd-033d-4ece-9b0c-80a78e10c36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8e1512-1e94-4bce-b9e5-59dc16d55115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6c2e148-24a4-4102-a37e-1cad76e7f8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c978aca-63a2-4cf2-822d-2e5ce416e5cf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1ce845-8860-4b75-b30c-d0c20a1f3918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4ad704-b533-48d2-b62d-fcee20008b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847f4a07-4e5a-4ab4-9d03-3fe272d93f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51e2c93a-7eb5-4abd-915f-06fd231064f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c8107-3359-43c8-b9dc-f640a73e081d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d48f636-c5a0-46c1-896e-c4e2bf9aad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b57d4d-49f6-4dcc-840b-0dad7c17118a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400c6327-4378-4fc4-a45c-d553fc15087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63c601f5-b28e-464d-a6fa-498f10a9e68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f923b5c-fc50-4854-aec5-644f5a9b25f9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196a32a7-0f4f-428e-9cd5-e17a4c026f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f103a7e7-22e8-4533-a274-1acba9c3f6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33719aec-c2ac-4434-a9a7-cf62235e40f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47357634-9498-4de0-95e4-e444131afa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0096c679-7dca-4a83-bfec-75f9b30a588a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e892f2b5-64f9-4733-9d3f-e7ff9deed224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd08819-ab31-46a7-9cf6-4d34ad0419fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03687e0e-ac51-4bb9-b28e-b20b3d97c32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac55537c-4e83-4853-93a0-cae75620f39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2511ae30-45fc-49cd-b071-6ff93eb4af95",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a66ad8-c34d-417a-8cce-dea46c94c155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7cc362-d6b9-4f35-b4c6-49d5f4329a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466512fc-8b4e-499c-ab26-1ee26c2bea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4a3f9fe-f672-4cb0-a5a6-01dc8f64dc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723c085e-25c8-4669-a54b-d3c436bb4cde",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100fa204-3f6d-44db-8e9f-8a6c3b5e2d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f955eeef-65b7-46cd-a25c-0f6e31609999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349a1502-9220-4f69-8704-7529aa847fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bbfcc6d-4b63-4945-a5f1-79b36d16e0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa86fc5-6c63-4821-9edf-afb567f90de4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4777dba6-9b42-40b2-bd52-7a31dc174d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a70af5e-0111-45e9-b49a-d6da7a196d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df4e498-fea9-4668-ae94-8afa543c4a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01e85bd-97f5-4386-96f0-9c812b550da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591b0e2d-74a0-451b-928d-1f61de73514e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53e5a1f-fa11-4960-ac8a-457a1fbbd942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef6fc18-5a2d-4554-80dc-bf22985c1d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4299f21-fc18-4081-bb17-1eb739caa198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bab5b1c-c72a-489c-ac30-5451b3c7db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35fb5ca-b2e5-4a72-9c5b-3a5565be1df5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254aab2c-eae5-4163-b7e6-2d51b350c300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26044a6f-4b2c-4369-a3f8-acf5f798e95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be65414b-bf27-4093-b63e-a7b3d8e15405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdebbb8a-e0ae-4ce9-b1cc-647d1bd0f115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e60c0ba-2de8-45f7-9d41-5f7c64c4616a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2d32a5-ca87-4a6e-8d47-fe8facb3652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b22bbc7-3e28-44d2-8f01-5b8c47db43cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f25eb8-95f0-438e-83f0-b812a1b457e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5059fb4a-8ed7-4e24-aa30-7f6f1949aadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d31b4e-73d8-42da-8e56-6f352428dcd3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dda4ffc-ebc4-4335-8f90-e0f5b314fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced316f-fc6b-4504-b539-a17abaf8cab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a5120-cb5c-4ca1-a5c4-74c65b235040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de978122-853b-4ef4-a175-002c1fadfad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49988d7-15ac-491f-97c2-a46d4dfa4a91",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f19129-6da6-4366-bdaf-e99d8ab9c52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec7c0a6-17e4-4aca-af65-e3989523828e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35419f2-aa76-4b83-a7dd-47ccd603b685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbaf8add-aa89-4d5a-bbd7-42cc909a47fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e84962-145d-49ce-ac96-548eb83bc413",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd42e954-2060-4acb-b0e8-16c51a28138a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae18722-b43d-4417-8c1f-6f5c0d4a9868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7562803-c74c-4c42-9522-284604229b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17205b9d-68ce-4573-b91a-962d2bf6dcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07de26-f048-4e43-ab40-fcb64fceb07d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b94d15-4685-462e-a148-b0527427f46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61c3d02-cbe8-48c5-b759-0f813dde4961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0682960-3dfe-4722-9d78-982b9675be90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5712343b-2afb-47a8-9a43-e245e4e99315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd08f3f-f35b-4b4e-9dd1-03b64dbebd9e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ff2acd-7160-437f-b0af-98ac073b91a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fa06cf-f788-47d8-a0a4-b3aafad8b835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5b3fad-b8f3-46d5-a7e3-a33607540b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e60f4b9-e39d-457f-9add-144e24fc6bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5f27ba-14fa-4811-98dc-14a5496335b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01128ea-ba72-4e52-a1a7-52861bdd61a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8056707-3168-45ed-b195-f700800a9d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d2d73-958f-43e3-964e-55f9b79dfaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9d0980-fcc6-4bb0-877a-4aed3c0dd8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d5bf3-5256-4691-8445-32914466ef38",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28a35e8-91d3-4a78-a3e6-8706d2548a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7a8284-f071-417c-8b98-4cc0a06fec7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b3fa75-5887-4d87-9a91-983327b4be7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a145c27a-324e-48e6-9bd6-2f3c6d36e005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a43f3a-1765-49e1-a442-71d6c00712ea",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be13c10d-fedb-428b-af56-84b15301f390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293060e4-9ddb-4a59-81a9-3e18711ba5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4aaa3d-616c-40fa-9036-7c6af40e13fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b36c477-52a0-474c-be69-781d7b3f4fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4342aa60-40ee-4cd6-aa7a-2f2fcfeade23",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73c4f34-8f2a-4481-b2c2-034bcd2678af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d279e8-41df-4e99-855b-7229e9191447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aad1d4b-b73f-427d-b2fc-4632c790a546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d51c63c7-ae8c-41d1-917c-81d95fb5d2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7febe8dc-1234-4d7b-b155-742dfd919b21",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf03d02e-6aad-4c52-92cc-3095fc60c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d17b5b6-0597-4e20-9292-63a197d0b509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10081cca-c796-411b-96b9-c2017cc528af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f4ab42-7445-4def-910c-0d43ab069310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd8c612-3e2a-4291-97a7-c8e3f4ecba22",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a6863e-55e9-4c49-9966-f496a9d3f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9623979-002f-408d-9c52-66ac99d2a7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a28435-d76d-487f-a503-4d89d4323da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aca4122-b90c-4108-8fd9-3c7de09272a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d181f806-8232-48e9-ba06-0c7f24b71d43",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48903e3-26ce-474c-8cb8-2cf13ed6acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42907657-dcc1-47fd-b0d0-0707345e16d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575ac006-278a-4c13-a0df-596b64ca7bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2397eefc-1bf6-436b-a25e-b78d4ee57090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8077f61e-160b-4cc4-8933-7a4cdf5767ab",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d8d897-b305-457d-b10a-0bd033855b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec851f00-0e6d-48d3-9556-5d294d6f9431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891a330c-56ba-44b5-a33b-f895e7e54edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b87bf12f-ead2-4528-b567-1e84ab952c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6ea40c-9d21-42bc-9bc4-19208d14d540",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a25aee-4eee-48ac-8f89-50c11debaa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031b597b-b017-4fd1-b698-e1fdd2990fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ac2c1c-d6df-417a-98fe-0cfc4baafa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9d0419-4d2e-4365-946c-79ff529fae22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b8e7a5-f1a8-4210-bda8-b3def5ebce2a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1a492-9994-4297-92eb-85f8c7e64d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c1af35-4b3b-43be-97fd-163d22836b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d51e88-195a-4122-9e66-6fe75ddc094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1003600e-2425-4455-9f25-237487e9a9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c49f2f-c895-40ba-b6e9-acb970e1b4d2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d3df81-2b23-4cce-a5c1-0cb4cc9818c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36969ec6-e84c-46f0-8244-feb82cf43017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501b64ce-b4e2-44fc-9ccd-aa3d549700f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec59593-7da1-455a-934c-a6bd1f81f6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ccd096-a641-4056-8a51-6d0973c31743",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8143b355-3272-4463-a617-d5d5365248da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203ae501-5a4a-4783-8e65-4466dac521b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d1a6f7-454b-41e4-b22c-9767a8c56cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4d751c-e910-4c32-8ea0-fd03dcaf18c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185bf1d3-28c8-41c7-8876-d4b7e0ae753b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5c54e8-badb-4c3c-9396-bead22ff2652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993be64c-668a-49cc-b0a3-47f8b3631de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe227730-a93d-4a28-959a-104331093eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2317e77a-1a2c-44fa-be72-e6bd0cdba957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265002fe-a09c-4074-98a8-155153170661",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc169aa-7013-41af-9c26-648a2b26ecfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6bd7c3-7d52-46a2-a930-f24f307f829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aee857e-3f91-4139-a322-2261e338d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1747ca6a-3c61-47f0-b5a9-762cfd294764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4d6648-ad4f-4e25-9252-47fa639ecbf5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2557ac-108c-4784-8130-200d4e0ef44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2669d11f-3cfb-45bf-8feb-76740852c1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19044ef3-7dc8-4e79-89d9-c97eefaa0ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6e285ab8-0240-450a-a7e1-bbbb7a88bee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e439ce-501a-4c85-984a-fc2c87358c5d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbdfa86-e741-4b4a-8b7a-9659d733c09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56f43052-70ef-44ef-a0a5-a41e199b265f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e89e16e-bbb0-4f18-b9c1-f2368ff1bc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d453422-28f2-42db-9cca-39f20f9ba287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a224ab-f531-4c50-99f4-fd49563595f2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f04ba0f-630b-4fb9-a543-30a390bd8fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c483b998-e2e1-46b7-afc5-806546c68b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8167c5da-c879-476d-9d14-cdf8ca57f100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5313494c-2ff4-441b-aed4-a804185aadf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a783fa-6e76-4608-a00f-13191cdb1bf5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88396931-ff24-458f-a4f1-c0ee1c1623a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c104e49c-740a-486e-9f60-9606e20e75d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3bfed3-2a69-4e46-86c7-009c7b5c886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9e68e1-5e9c-4e90-a131-fe5f6a4e93e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245e28d5-7422-4cc0-a08c-f05a25fad5f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c5cf38-e2ce-4b22-a697-3ce37e1efec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de54432-d28c-46a6-b2fe-4cd79cb73f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d44845-5066-4a9f-af92-f76ace80c50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e57f811-8ab0-4bbb-9106-1c5e85978387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdc092c-1f0e-4b34-b44f-6a407dd4cf0c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e30dca3-cdba-4ef5-867d-967b5e013fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9c6d41-531a-4569-865e-2fea79e4fc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a61e72-101c-46ff-9eb6-3dfa5f962616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82239779-1ae5-42ac-b5dd-98b0c447c4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8725b0e4-1567-43e1-ad18-b6763739e2b3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da0b6b8-1c3b-4e92-a3cc-b5c38912c3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b3731a-c049-4a8b-b70c-081129007d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ca3c8-445e-44c0-879e-e7bfd728d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c1d8d2-75e9-4589-a244-f23de788714f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349379be-36c9-4926-9ebd-0cb30304d45c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da93e13-15c9-4345-80d0-5f1756921eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9edb38a-aa3c-408d-b293-89fe3010f71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d23eade-dad0-4301-879a-5e3eb872af3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6a623d49-9b06-4940-be71-ca14829ea77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e56d3a1-98ca-4b08-bd39-48e1be6d036f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead59c57-18f1-4a88-b5e8-8157d7f0d372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dfe61f-7e88-4741-bf6c-839b14125a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332ab4ff-68e9-4bd7-90ad-745ff2772c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd29487f-2616-4803-a53d-a78c8e459b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56334a7a-785c-4fa3-b9c7-7e1246facaed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7eaebb-238d-4352-a895-dfcdd16158e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b522b38-f982-4bf5-a481-e564cf755520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3849a7-3587-4580-93ac-68a2765a8415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed6bbcb-b0c7-46e6-8983-c57f6ffe2a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd1f7d1-5bb2-456c-8f90-60ee1981f224",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1bab53-e6e2-4b86-b4ca-64be3f8de9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f58f37d-df89-4569-9965-6a05b04abd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f23325-df7c-441d-9a9a-d0e34ab39fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16fe2cde-2f34-402e-bae8-3b49f2cd757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a949af3-9cb7-4d1a-b2db-bbe427133c7e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de0b3ca-daa4-4eca-892a-ff8ad5534384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d46e0d5-6e97-45fa-ab0e-1f5c22b3c7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc58a2c3-1538-4d5f-b89c-f784574afb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbc3ccf-d2e5-48a5-8ff8-d1162d491576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd41df7-5d15-4e9b-8f03-c21dd5669405",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210d4255-6cb2-4791-97fa-a0342f4e7aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a23f6c7-cc9a-4feb-b74f-3860e5223489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e59d5-071b-4865-944f-95777f3dbae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55ca987-2f2b-45a9-aa59-07ed80979c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77fad76-6610-4365-a147-81c853043754",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248b65f6-9019-4825-a13a-0a7def719b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190d955e-3736-4bfb-ba07-87ead3de0bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a32c60-08c7-4623-9758-4e1a974ea3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "121e2ca9-b272-4f69-8776-853dc505715d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678fc2d5-b0d1-4ba8-8f89-d4cfa0564cfe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba9012e-fc92-4bd3-9a3c-564f62a22244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20bfc56-742e-4ddb-9873-ec2cfbdb2a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2b1509-038a-4dc8-b0f2-d0ce753564a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95db418a-5d78-44ec-98c4-90ea407042a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f171de30-735d-4a18-a218-e5c5166dde0a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ca02bc-7b14-4d98-9867-bfee1a52559f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1736ff2a-c6fd-4800-93fa-d045c21fe542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9907f294-8311-4c78-ad95-aef5f9e10afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c887e6eb-64a9-4d65-8b25-d8d0ef4f65cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a36cf95-32de-4e49-85a2-383ec501e9bc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3e74db-134c-42d2-a0b5-a435574b33cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079c3335-b4c5-4841-8259-ecdbcdb09023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d69e50-e4fd-43f3-bba5-6cb8048f0bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4f035b-d437-47c9-92ba-d9075d509479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04447285-e7f5-4719-8849-bc748873d9ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d2935-988b-4d99-81a3-118391ce301b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690ab2a7-3aa8-41c8-b124-a62f9a40a596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e0f4c7-f3a4-4f7a-b5a8-087618a2d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda98931-159e-4aaa-84c7-00de86a99db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6d2b16-dd54-4f4b-8d70-461b77ff8806",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2292ea-1733-4bf2-b0e8-2b1bef587ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc45a93-34fb-4fe3-88eb-80fa3ef89d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0067404d-22ed-4ab9-89e9-a0e90efb7d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e79bad-3d95-4c3f-9169-e4a4ee23f4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41e13cd-f87d-47ec-b1a3-4f16102c6cac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea61f16-99d5-4a75-909f-9962acac1877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbae7ef-6b9b-4b23-9eb9-ca9999453a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14404ac9-ea94-4728-8ccf-ab1d7f9c1b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6d28e8-647f-4b2a-8b1d-621af7d37869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643713e4-7c9d-40a2-8957-1cfc7c75b60c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde8afd7-7dea-47b6-814b-bf8a6f72250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5452e662-f302-478f-a14e-cff13b10e8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a537f7-ec8c-4ceb-afa8-b5ed743902f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1dd264-8681-4806-88b0-e4fe7ff04559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f244fd19-cac3-41b0-92d1-9dd40e9e1323",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b58d4a-d51e-495b-a90b-3df8efa84e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176c3931-1dda-49c3-8d08-b03601a394c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0329919e-5f9c-4686-a12a-bfbc72e41ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddb8ccb-e234-4915-8d99-44701488b982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e400556-2132-465a-b126-d58e36fd56fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e5d3d3-0a16-4478-8b0c-d159a246bb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a607610b-c604-4faa-afc7-fea81dd60ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff640b9-5f43-43f8-80d2-7d4686efab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5619a066-2ed0-4967-a755-ecc3a93068cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec8307d-e331-4719-a8e3-233097157ce7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe681781-4963-45f7-9305-6e5594f6b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b2a895-1bfc-4246-85df-c138fb8159e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e2a955-9831-42b4-bd0b-5c9fa76c7631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "463aa949-c855-40e4-8835-151947594cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de4a205-472b-4bed-9768-4d5841746906",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9144ae3-09e7-4c3f-9d48-404f0787bcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbf1ca8-112e-4fa7-a693-5b535517b032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0180e-eb60-45f3-886d-4ee7551c4eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb87b73-8366-476b-ac1d-036d71e91c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4253bda7-8eb6-4603-a805-f044894c91dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb61403e-8060-44c7-b421-aa0fed4de8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2ab61d-75bc-4f4d-8334-5effa8263c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4864c594-ead6-4010-8902-af90cb8ea10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53714b52-bbc7-41c2-b57f-f9301eba55ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085856df-8239-482c-81f9-2505f0e92eaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a78a0d9-635e-46be-975f-893ac89635a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35657adf-a728-491a-a45e-a32b538ba77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b36f604-24f4-4ae1-b238-e525e37cbda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff47b834-619a-428a-a001-1eab928b5cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7c9303-d3cf-40fb-98fe-35535a0eb928",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e2feac-f24a-40af-b0f1-7a7e59041cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226ce891-8931-4e31-a2e4-c8741baeebe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d80114c-af76-4f7d-8d1b-0ead874e1957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8223498-b6d2-49db-8e03-782b511566b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb35699-0d9c-4ee2-932c-5962bcbdf419",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b40e72c-7b28-4315-8163-e7e2d7c3591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e60821-a4af-45c0-977b-c6c15455ee83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dd4d41-333c-450e-8c16-7d108da7b054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddd4f82-1e42-4465-b829-373ff540b90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ed313b-8c6e-4664-b011-54cc825b3d37",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e445e-49a4-4486-aa1d-2880057c7592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8ceacd-1c1d-4b7a-9d85-a43575845c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6836499a-1e91-4bdf-803e-09d15174b876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff6aa55-0ab1-4444-b36e-b9670f738b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830e5af0-1183-4eb4-97da-b86afb26f7cd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b73210-05c7-4482-b7d3-0bc9d72912d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34647d69-405b-47f5-8b8b-78a400b2d622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d01444a-dc63-4da6-b89c-2eb392aab73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d473b8-9435-4cea-b4f8-b10f723899c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e36677d-6dfe-480a-bd2b-e749e485d88c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef74560a-c63d-465b-aaa5-3d09defd1516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f08796-243c-4bd3-b071-f0a840465d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d67561-25c3-41a1-8245-6697966327ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdd9637-ec9f-4ff9-94f2-a051cb07c413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85f143-34e8-4237-8ee4-88342b8f20d0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba888a6-731f-4b2d-a64b-cc0ef974162a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f557330-390b-4274-9d44-2a8ab766696c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b66f36-73eb-4e8e-82ed-fdbc4831d2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40136534-84a7-43a8-9364-e0221e5118a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c23300-1a2c-4578-9e8e-90638e981dc1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc72ae63-0662-48f2-9166-1405a9e8ac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee34d37-6d83-4c24-9cd5-2b721d4cb57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca41bc62-23e0-4aca-9ddf-ff6e08ff8fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8be13be3-5ec7-4856-aa21-8e19f6394d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adb6411-d58e-48c3-905d-32c0cc6012e5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a13aee1-0c01-4226-b7f2-77c357c39d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debece79-eefe-4b5b-ac9c-f83c7cd75d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bc76a8-f533-453e-9be5-67ee2b26351b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "132e1259-e5f0-467c-ba6f-77c7415c6f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed26ad50-6597-417e-ba43-6516b0eb1d31",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d95485e-a71e-4835-90de-0bb6e524afa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d4467b-5d85-4bd4-9ea5-a9b595ede16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d52519-2ef6-48e5-89fa-b3af40a9a197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc6ed86-bf9e-4f8b-b727-0d13ecc3870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26901fed-ccc7-48f6-817a-4078292907a2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06ef1f5-d6ff-42b3-952c-74f8754faf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73479107-9765-4cf3-984c-8127078edbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3845461c-58fc-4c33-910c-a8abaf324479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd464fe-536a-40a4-9dc7-d802b973e23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e536ef10-fad6-4c00-9161-d22c2099adfe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849e832f-0829-4257-90f8-fd95e72f8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097097ae-aba7-4379-811c-c4dbd0cf379d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62423077-e0d8-4da3-b4ea-17db1b79d84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f00aef-8679-4cc0-8a08-21bbb1a3fa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d565775-07b0-40bb-9075-4299702f59c2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbab64d-fc52-4fec-81c5-188082c35725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef697c06-9379-43bd-a29f-a3c766ae877a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3ea0b1-3009-407b-bbe1-0e5c49d8b841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf7bc5b-b3a9-4270-9fa3-f2041593d778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cffbf53-cea7-465e-86a2-a8510fffb915",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc81e48b-79e9-46b4-a41d-101f342f5e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d57c80-9768-40b5-ba9e-658f5ae81df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fdcd9e-e4eb-4c2e-b388-37aa6570e71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5edd319a-8bc9-4936-a126-8b42da22c5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b95651-6c97-48ff-acac-b0cb82f04bfc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d13966-b628-4916-9b1a-d49f0e8ec734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8027d7-65f0-45b4-9bcb-27944a662b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e04c46-31f2-41bd-ac09-d2fc3009a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "308344b1-5d22-4f49-ad1b-68a7e1df6af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a5689-4c25-4b81-ac36-e1fad111af1e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c49fb9-9f31-4ba1-9581-af7a35fc9bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b32c76-890d-4087-b51a-6609f0a7157f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520a344-c287-40a5-9980-3eee42c22b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f383fee1-6cbc-49a9-8dce-ba1d07dab3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d911963-35a5-4e4b-baa3-8a78c3f87362",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b482cb34-657f-46bb-9f4a-a98295d0af7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597f2247-4b77-4ffc-b6a7-d484181cd1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ecc6eb-dfd6-4746-94af-16957cab60d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92cbe5ec-5db7-41c9-b351-54878b2f6332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250f7cdd-c14f-46ce-b3f5-24af57ed2953",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1808d545-09b1-4ac8-9e6b-395f1bbc574e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399057c1-52e0-4b5a-befa-24249dc31419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73c49e0-8871-4cd2-be5a-f6ece0fd042f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f860ae0-9f57-4a3a-ae06-69d6968f87ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70017d00-2761-49c0-a4fc-b09695e7b495",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1036ba3b-45c8-4368-a597-647cea20195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86eb151-b0c3-4d82-9b3f-e5506857b2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a7be7e-1dc4-4721-a176-86a8276fdd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8edf611-cf62-46f2-a475-cc6693693c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310ee5a7-8627-4c5a-986f-d166013c4b37",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c54b18-6c75-4079-b4eb-9ed708c886fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35e889d-a604-49b6-b89a-5788da9dbf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78becc16-864c-491e-beb7-eaf95d23d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73934159-b0cf-457e-afa6-8f168aed540a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a65250-040e-4913-b436-391097fa53f6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c5ec47-ccee-4d1c-a3db-481705f9ae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f81a5-2e02-4001-baa6-a208d5f1781e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536cdde8-3f66-4424-8d2c-59910cf1d789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc1eb4a-2451-4e24-9a0d-429759f1500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb55e95-511e-4925-befc-90248fa44688",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3b6c54-b816-4ca8-b8de-21ee111017d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ac8e0c-3dc5-4753-9184-667c5a18af47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300d9b29-d71d-4ae5-b80c-085811149c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "386d523b-b45a-4686-a5de-f896189e5297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a184b32f-c745-46ea-9d16-7dab8de08e91",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da689ce-f21f-40b5-acd1-45280976908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9ca5fe-3522-4b1c-8abf-c02d6b33843b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715fef30-872b-4afc-a62d-eaf5b9e5f6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62312577-eab4-4f65-8e63-e0bf8d448b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7b99a1-b493-46a0-8676-fcc2cf9caf9b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3579254-9087-4d77-8386-4e6607a9aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015dfaac-8f44-465f-b729-93d0f8256596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159315c9-8641-4072-aeb7-e57c6606b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae7f873-6c86-4fbc-9a58-ff605fbcf9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f394d7-7bf8-4c17-a46c-0a3e6076bc5f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb6c1be-389a-4dea-b31f-5f68cbc5db9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ec4e44-b987-412d-a804-571162c4c139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82552de2-d592-45d0-a8cd-c13f6a8f99ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3195f267-3b39-44fa-83e8-8a642de4f1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac5f48d-0bce-4990-9e32-e483dffad331",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85761164-1cf0-444f-aa57-f9a126eab053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a3256c-a83d-47ab-83cc-7a1660f89754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e1a16b-e1c9-4c2d-a8b8-28404e0227cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91420ffe-e845-49db-bb05-1b4ddd9c7f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f14084b-f2de-4ddf-a127-961d49bec63f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7f8450-f216-43fc-aa75-0b86e91f3795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91472ece-6291-4f7d-a0e1-ed53fead2d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d940986-1386-47e3-bd69-c40fb62f5a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0459b7dd-f95b-42cb-9b57-90ddc2031fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecb4392-780d-4d56-8108-c66b85f109c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52ae75d-d98a-47a2-9fe0-0c73fa7e8265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c16de6c-73b0-4cac-a5ac-736f7b63395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d02b82-2952-40f8-aa95-b21324e474b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e00f7bae-2127-4472-9da6-3a0647b9b12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075ad0f6-db81-4c95-804b-7876ef609495",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce606a49-66dc-44d9-88b0-95c53f01a746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ef9798-b102-40f2-be5d-53adf3e6dd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5d8811-002a-4bdd-b723-5bcb7b4370e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad890b71-6725-4ee3-88f0-f5cbfb1ed276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb304c-d67e-4f37-89a8-68568940942d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7b33e5-cdcd-4212-9ca9-994f835882e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e5ad3c-4dd2-42fd-a722-8e8e72e546bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13508b67-7592-4923-8591-e7b7e982f345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4f63b0-4e1f-40ea-ad9d-b53a5acf3b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5959361-fe14-4ce7-b552-a1913fa2c675",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce9046-1dfd-40f0-b888-37b71066a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773efaaa-c13b-4ae5-aab9-c4c582bf54ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05592d2c-84d7-49e6-b3c8-15ab27e5c89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae35a06d-fa4e-4644-ba44-c353140cdc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667a7b9f-af61-49d6-a63a-f8e905c73288",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c62bdf-6dca-4b87-bf08-dd43ae91850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6e00a903-e20a-4a24-9b5e-29864d0bfa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cf99dc-3ce3-46b2-878e-de240efcbd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad936a75-e822-4972-aa06-84b36b6dd8be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea1cfba5-6863-4878-a0e1-474aceec9962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f31fa9f-cc20-4d08-b4ff-3459b5361fac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5387b09e-be51-4bff-9c59-706dda3557ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f23104ab-646a-464f-93d0-ee6d56f81ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa95d405-ba57-4036-9ba1-d3835a051143",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e56827c-647a-4ba8-96e4-0e553f6b3797"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f7de7ba-3d99-4b12-8c5d-2af29e20899f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77232f9e-85d0-4c78-a845-1e6d86dfe246"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fae5b995-e737-4972-a57b-116ba43cdab4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d080a3f-76ee-40d4-8a22-3d609ff5fd75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f449e236-71a7-4b16-90a0-7a438e6ce858",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09b24e9c-9c50-425f-a727-5965d34b0e75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49c13b82-e973-4801-969b-799987997697",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbfe9b1f-8220-4273-95c0-6a187e5b0f4a"
                }
              }
            ]
          },
          {
            "id": "cef21be7-e2b2-4c24-a429-3cc460c1e47e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "996b3335-d504-456e-a525-62670420e693",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "192a49f4-c64d-4b3c-8093-e7f1b01a2047",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1fdc49-4fe1-4a7c-b2f3-71361701cce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "45022384-5ded-4067-bb8a-1b119d1e06cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af686a0f-ead0-4470-a9df-e1e5077f216b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0051cf06-91d0-422d-8973-2a0e99f656ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66890762-ade6-403b-9009-b64623d650d7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1046c7e-44f3-4e2f-b24f-8613a7802d94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d12acc1-567a-47d3-bf07-a2d0978a8d7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d349b10-ead2-41d2-a960-a8a0770e9dbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6a846a7-0863-4d6d-a19f-4cf5fdaccf3f"
                    }
                  }
                ]
              },
              {
                "id": "757a98c5-1ae9-4beb-922a-85dbe319dd8f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d73daa-7ec8-4f7a-b3d8-ad2e2425ca2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e879eb25-bfa6-426b-9a7a-0fc8db94d247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a6b921-1385-4265-a7e9-65e01d43d36b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18b6826e-2d4c-4a59-951c-91db37a73923"
                    }
                  }
                ]
              },
              {
                "id": "c15e1c91-f403-4cfb-be9b-c4d2b69ef2b2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa6de75-9630-4d32-a539-0874f5da51d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3da85f4-6e9d-4d62-bf0f-e2deb3ba87c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "593f8b36-853a-4d92-b31c-979aaa9fb3b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6bc0f640-b7c0-4b74-8da5-ae8a9206872b"
                    }
                  }
                ]
              },
              {
                "id": "cded9c06-dfee-4d5d-a523-b4b46bb9527a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b528df0-880c-4237-984b-902400811a79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7fd72be-009c-4e48-b3be-56c85bf31622"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee566d58-3e3e-414d-bc7e-ede27d5196a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8437f373-fbb2-48e0-946a-8bbe409c8d51"
                    }
                  }
                ]
              },
              {
                "id": "e32c8c41-fb17-4f6e-8062-b8616d9f7139",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "148e2c44-d6e5-4dd2-b7c4-ffafff3cf57d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cff93bca-c0b6-4e2e-9f52-b3c36b05959d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c147b1e-a5d2-443d-bec0-0a3a41e7123b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5624c227-ed48-41a8-9611-c9086cc27ebb"
                    }
                  }
                ]
              },
              {
                "id": "867d9e85-799b-491b-8d04-6148d6886b88",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c64b61b1-132e-4bd3-b9bc-ba4490fbfe55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3c256e1-30a1-4a17-8203-923e184296c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8053879-0343-4fcc-a78a-77c5dd459490",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb66cd15-5c0f-422b-b3c5-e70a2bac5e74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d565ea45-2876-4193-801b-137d7370291e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dad23312-b4ff-47d0-8e44-fa6db7641197"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71953676-55c6-45ab-8de4-150690feae83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d47a8119-c6ef-4c78-8203-1d3692cd3d05"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61fdfc7d-4313-40eb-937d-7b2067eac960",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ed407ce7-d1df-40de-bc5a-78742b5f0738"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26dc2034-fb51-4246-ba5d-77eb0d423907",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78bb9bab-0933-4034-a535-53e9493f797d"
            }
          }
        ]
      },
      {
        "id": "35b2de81-5b9c-49df-adc0-c47d5462dd53",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8ee44554-05b6-4c72-a4c5-4566e72524c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b11fab6a-428f-4328-b1af-2edb82096ccc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "593b5cdc-2c13-4df1-ad30-e9b9d09f22ab",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e465cd2e-19a3-4d94-853c-fb33236ce60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56dc7a3-4012-48ab-92a7-0626fe3f1e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb1da30-a3ea-4bfa-85ef-a4d5527fb320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d245da9-7ed9-473b-9303-666703e9f1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593e2fcf-b243-496f-8e68-6729533025d3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13094229-218a-430b-8f3f-67928b56b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd6abbd-a05d-4ce4-9abb-f1fbe101e0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a548a1-db67-496e-ada0-fa51cbc2450a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4e1839-b3ea-4cd6-b3cd-9945e541bee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4541818-21de-45e8-84be-1e18bcef28f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5424f7c7-9a8f-45a4-b2b5-044fc7fe40ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c59e2a-4067-4726-9e97-c7d5a41788b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35f0b87-d1ad-41b4-ad0e-f17e8e76f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "381e400c-be63-4bb6-a532-99080a115be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce66786f-9658-4725-8d5f-cfb30c176c66",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc45cc0c-8b28-4998-b9e9-846919189d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ac32e8-3045-4d6d-baac-cca55f31f394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dccf72-4612-46bc-8717-b0d7c5f176ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba0a376-5ac5-4e64-b760-a9460582df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728f5ba9-41df-4aa8-aed4-cf28d6b2ed70",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfbd61f-7ce8-4291-a85c-9de3e742be89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2aa9a4-e283-493c-b7a6-689e3a430787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd40935-1040-4778-9f8c-22d9d6454400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78bdc383-2a78-4cda-8110-31b1b4d791b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab8a7f8-a1c9-4e11-a30d-d399e50567a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a920014-659c-4925-a9d5-4b7e94fcef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9061f61-fd7d-47a9-9c76-93cf589bb57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395bbeab-f59b-473c-94b8-c95df21180c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f768993-99b5-4fc1-95fc-4165a0302a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36812e2f-3a16-4c71-bb2c-4a15e7fcfe7e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c68b43-26c4-4d6d-80f0-5789a55bbd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8435757-1245-4c36-9675-5ce26b9abfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26cfc74-84f1-4584-a329-7ce988bb4fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "625a41e3-fc74-42d9-89ae-de6c2a3ee89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f636172-6e90-4122-a2e5-3558da256fe7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90693d91-55a4-4bf3-b98f-317d37e4056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47361e5e-d7f5-4167-b0f8-a8af1965c066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1f7353-6c57-48a5-9bc6-232fb1ba50c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dc8d48-db43-4f83-a906-c6e3110a2868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca85125-7dd9-4083-aefa-e90250fb085e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d516017-1b51-4954-99a4-912f64442add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baad7e9-90de-41af-ac82-6670c96f76cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f9ef09-52c8-4af7-839a-5d3cd4955f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d695c7d7-9a49-4a44-b708-15ece176b951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf6ad98-06e2-48b9-88f7-4a9ce364b617",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d2610-82c5-41dc-b3a1-18d8fec288eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f997f5e-b135-44a0-b65a-3a891975bd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212d4769-4343-4cf2-8066-db4b768b049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32cfc81d-7507-4194-8ba8-a931c663e2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b349a2-306d-47f1-a779-1a19bf8b94bd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db227b22-1eeb-401e-8fc0-660275970141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807b921a-63fe-44e9-a223-0888625a3185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4f48a0-a2d2-48cf-bb59-498b347417da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b5af35b8-f990-4026-9a21-7aa682a42404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417d1b0d-b938-4388-b830-81d73973c78c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ebcb99-9b9f-495c-8844-e32bba95e0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d6ff0b-6637-4173-b456-76a34b8ef693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decf76ee-10ed-45b8-8cdb-b440a0ff67e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e624e280-128f-4979-a002-a760e6fed59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f48706-e9f8-4c00-a2b5-8831eaf69328",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8e35d0-38aa-4f0e-a648-aa1c2bd8e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd7bd87-a551-4c4a-b1eb-b537020e575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270a141-5df6-4602-a666-0c949e70528c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0bf623-97f5-4512-8eb2-e05114acd8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8c526a-02d9-4820-ac05-e684850aa5d3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7205e7-949d-441d-8319-3528a286ad8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772d9a5f-b848-48dc-b7b9-e003c4d18aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43301d4-8e9f-4416-ab2b-8f2061038200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5877a2-2137-4449-956b-39d45c2234e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7c232e-0a6f-43ef-9bec-e67b08205fb8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d014e3-f1d6-47ca-8661-81d7833c8077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96477492-d0fb-444a-888a-98aab881e54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a4510f-a338-408b-a12e-676263c11570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "798eabcf-606c-4a69-a35d-ee020f0560b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1024e4-8af1-48ee-9ff0-161a06f967cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5d0d0c-0d61-450a-9d0d-24dea9c01b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3eaebdd-1109-4194-95d7-e5c19cd56dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6980dc02-38e0-4bf0-a948-19a1975d4556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27f0c61-261a-4815-8fa3-c78d0e8294a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f965c-4911-4074-a3cc-850266777858",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af43e4b9-2cda-4472-a774-b3fb1c23f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1d7f1e-3392-46a7-aa9c-bf221bad5d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cced4c-9061-430c-aa1f-bcf6b9ede79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ab5387-dae6-4c12-85cf-8da749234337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e261178-f1c2-46ac-b56a-d9ef9ec7a90a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbae256-aee3-4000-a79a-9a85f00645d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d33373-e783-4822-830d-eb9e0cd18896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b1c822-2b6a-4b38-b24e-f2346a7f4b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70009981-c660-45bb-90e4-7ac1866e4f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0e5585-7fd2-437e-928b-61d584074252",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3912f00f-5528-4d41-adc8-2d5d564ddc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f52ac16-1c1f-4e3d-9b10-5643f123970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78945982-67cb-4c5c-a051-8cf5698335d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77ba027-0dd2-4796-bc78-8464e646165e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59c6915-60f4-4021-aee3-f28c7be7c799",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d59d5-198d-40fd-9f51-8e8b27140008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c349d8-9985-476e-a58f-77a42cc8f639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec8ca0d-798a-41d3-8ecc-ef4f5980dfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d419dd54-68b4-42bf-af9c-bedd36443683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c7a5a3-d747-47ca-b154-878a9ae8f245",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa7228-f273-4793-a8d2-6be0a8ec1de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118979af-124c-4526-8d93-a31500e1d8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878c09c0-4863-4667-a0dc-1d97b17ab02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c687b58-df19-4602-bf71-d74b6486c924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4fbf14-85d1-4a50-a971-b3fe715762d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077c3ed7-78ee-4d8c-ab76-9720d585025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7170f4-9825-4658-b9c3-ba870f52fd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4a5609-4c54-4c3d-bddc-86e83d543584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14aaf292-0c8f-48c9-aa31-9e4e92fba3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ac0a09-f15d-4ce6-a2bd-233b4c2bbfed",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2c476-a76b-47c6-a544-a75a192948e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3e20dd-047e-447f-b292-8d037406eace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2c5af2-3687-4ee6-aef2-ba6f309e12e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fbea95-9c59-48e3-90a3-93d1cb01d105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a41ae36-e062-47aa-b50c-a587d6c06f50",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d4e08-4457-4ebb-b162-af53223cbe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8ea28a-fc70-4f75-8e0a-b101b9b4b3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816fc9e9-e553-41fe-8b9a-352a9e8f5abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d57915-2e4c-47a7-a342-7ba59d05cf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767bee49-bab9-4bed-bada-8309193d8ea7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98effb1-b45a-464a-8557-8a70899546d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8548d9f3-d6c2-4c6e-ac50-197e8102e221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f831fb97-7009-48c8-b3ec-894b4a1590d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3075b3b1-0e53-40f3-9fac-b6467aaacdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a286777f-9082-45e7-a394-0d17657b04fe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f640009-b6f3-4104-a100-578ac10914b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c8f811-87d3-472b-91db-d0cefeec04d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8710665-b14b-49a0-afc2-d3be43c2e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78ebe76-c726-4868-ae92-9911e3209d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a465c37-e2b3-4056-8666-5f0c54825255",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad604c1e-d799-4284-88f9-70f0a080e3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2249b363-7afb-40d2-ab71-9fe8e96f11c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e15c68-afcf-431f-9a43-4a275cdbf331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0441a97-2ef2-4a47-8161-c36d2b3eec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53021afe-f2f9-4cda-b155-2c85deb39e26",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7e6cb6-d144-45aa-94c9-864b709952a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ae21a1-dcab-4745-ab68-b147a0801ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00832991-d74e-46d9-8fc2-2f3eefd7f715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f267eccf-743c-4ce3-ae9b-732c6f2bdf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1455a985-6376-41ad-b315-5fa7673438c2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d49668-688f-4928-82b0-96ac08caed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91c2b1d-c220-4353-af90-f2b41abb3437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c953dacc-1b74-4dcd-9dfc-36dcced93d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b1f508-f106-4b68-853d-e5b188bddea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a524df-bfa3-4cd1-9280-9888d3c1ac7d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74029d23-1a5a-47f7-bf23-20343b1c15de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc41b5ae-009a-46ad-b9aa-4c9825fe1734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f88ed0-e6d0-4851-bcb5-49c3d32fb162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4169017f-d715-49c2-b702-b060cf7493c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538d3e7-52d8-4465-8456-b0fb950de14c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d08a728-9e19-47eb-91d0-afb778e28303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b300e2-2597-4df8-9714-63df0b5dc563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905b087-5a41-4d18-b2e2-28a608e4b802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b77ffb2-9fc5-4cf6-8398-7f56bdbba97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb44e712-6137-42b8-8623-caecf8c11b8c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4fa454-8a4d-460b-9794-1b7cbd06df10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12599311-c7f0-46e3-80f7-7b098017cfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c00ae69-f088-4d6e-86d6-1d0539486aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bff2179-e32e-42a1-b3fd-f86092e89cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6754a2f6-26cb-4ba4-9fb6-b332e0e53b30",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0391af-82c1-4879-b759-df4cade8fa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46dc4f9-03eb-423e-93a0-a389f620514f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d3ee62-fe69-45e0-837f-9a14bc35e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45987aaa-38a1-43a8-a9c5-b234c5fbfe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b704ccac-1955-4e88-b0e2-77c3f1ab9c42",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc67b0c9-50af-41b4-8e63-8418a21d9080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a1c9af-4591-422e-a8f5-ef2200467253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842ecf13-7e54-42b2-b4dd-5f9b02642907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a2d947-140d-46bb-b706-b62f368900f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7797fce-c7d7-4368-8a6c-136a5cb98fa2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea9e32f-7863-4db9-8b4b-ec152c6b8d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bfc0a5-3839-453f-9ea8-fd5fab9fdd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b840455a-8be9-448b-8a42-d5a31a648942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88cb6410-7d6a-4ece-b051-b3b3e6aca45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115ffbaf-c716-4778-ba78-c35b05a0e326",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d623df35-5f08-4a21-a751-34c0e64cbc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c505e8c-1ac9-4f47-be9c-bf1eaffcca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54e05f7-9ccf-4791-a87e-3900fcf79050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7156b7f1-4a18-41ca-8593-729c0e8f561f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa8ec0a-a717-4b72-81a2-cff62eb77ea8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c7063f-bfcb-4a21-a63b-d9b63a783dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224d2464-5135-4499-9a05-17dc11b30265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38dc4eb-f4a2-4e35-8b34-cd4741ed87fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf662751-b763-4910-9adf-7b056b604a37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90386d0e-27f8-4f2a-8669-c262fc7acb99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81ff5286-70cc-4402-b22a-9aa466341cb3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c5c541-d74e-4c4a-9d97-4f58f0a0846b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5afa2590-a036-44f6-8c98-fc52d96bb0e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8c7a06-bb8b-4f07-ab62-6573035b7c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98487227-3c22-4512-a3cb-9d93b6670c64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62c04542-98df-4e44-b1de-ec739e82ad0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30ed5a9c-a556-4386-9a96-497d9037e0c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f87f4061-4266-47a5-8962-710a55308abb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74c2b983-eb27-419c-8791-74d32bf8dfe3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feb452d8-f853-4af9-bf1d-7b9743022b2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f200f80d-be73-4e30-a43f-98ab1a6daaa2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b95ee003-d236-4ace-9c6c-b563c5ef4dee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6c074f4-a701-457d-a192-b785bb4db9c8"
            }
          }
        ]
      },
      {
        "id": "0031cea3-6164-4fd7-8adf-8477b2c0c73f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c59c8843-71bd-426e-b7fc-d5c4ff6e2614",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6bc22f9-4208-443f-95cf-ab669bdfa4f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98979641-841d-412c-b291-99fcb19b438c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef893f3-59da-4179-9f84-0bc10782b407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6867f026-ca21-43d6-9222-d8773dee0a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d41c75-ad1b-43f5-a48c-93c02e27076b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf5243c-7cc6-414a-8812-6de83ab823b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce53f056-3fef-4599-8788-ee07a2b2b5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d0804-72a9-430c-b1ec-332423702e3a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2a71ca-f9b0-48c9-8e72-3531f44603c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6327fe-4044-468a-81f0-66d8f2fac013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514160b7-fcdf-4d10-beb2-904198116245",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24442c47-bf98-4ddf-b22b-6d74db0da34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74c70c1-1c72-4439-bfe8-95f783c0902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e5502-2e6f-4aaa-bf2e-188e8977f64a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010396c1-559e-4e2f-b20c-c5f300a94d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7491fad-0e19-41ae-bf87-e685cbc9f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cffdec-b516-4231-a731-5f19287cb6d8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd14133-f9b8-4ea1-9fd8-359959a46647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30df5402-65b6-43f6-940d-ccf0f2842de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d243b8-c35a-4cc9-ad14-bb5bc18648ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01640b0-4667-4dc5-a36c-def994acac18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c63642-a52a-46d7-b455-2355192500e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835a072d-b96f-4ad5-9d0a-393ac5b513d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f305dfa8-496c-402e-9a7b-6ff24908f7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1caae16-90fb-496f-93b6-23dbf0ecdbad",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ba9aeb-ff05-4d90-8662-0c77cc78b42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3acb8d-acca-45a9-beb2-eb2480c0a15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3e1c53-4536-456b-a38f-bdfc2c4e4810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2792270e-a145-4013-afc3-fe76c51166da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027cf038-34ea-403e-9bf6-5ed16d8d0a2e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c5f931-a4dc-426f-8c1f-9abf5b43ce91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc909cc-6b29-429e-870a-1e8b3731b4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d97cc9-e8b0-490a-9188-56723851c62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dffb16-1a2b-4a01-a08b-a7c135c56593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a156e01a-14fd-4c46-9671-2354135ddec6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265cbf30-5ec7-4d15-87d8-c2712f10c0a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f58e3e6-93da-463b-8f2f-defad70b4b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd44c60-7660-44fe-89c2-7d0638c50ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5a3b8d-3661-4653-b546-d7d5f66ea9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567c0127-5c79-462b-8bdb-254e3d007912",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b826a782-c1bb-4a59-a2b4-5cfb95c092ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6896dd1-ae2d-49db-b11a-d18c5d1a6a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c035976b-c4f1-42ae-a754-67767ab0a368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7347f82-bcfb-4110-9f48-e70b801bcdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d8a0f7-a8f3-465e-a048-39870f76c232",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e96572-6f26-475c-a1b5-b495b46c0637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59d4a84-9b8e-4cfb-a95f-f9b7e97c9dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbecaaa-f3c1-43e9-bfe2-4109c19cba10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc4fd04-ca47-423a-918f-b67f71f8f2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d169798a-2209-4c20-adba-5b1da81f31e9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18692b6-fdaa-4d8a-8e61-710dcadfd134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9987292-97a4-49c9-91b7-aa9abff70984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764cb9d5-397f-48ea-98ac-e63257537ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe51eaf0-194d-4073-ab43-b439c25f15e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a4c35-b47c-4c1a-b4a1-4745b9f8ab6d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f04ba72-de2b-4f49-8251-63e5e6ecc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2950cd-176d-482c-8a50-aad235d30852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0e713e-d6e0-495e-acb6-2b6a69885abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52ceaca-b2e1-481c-8d57-4af7d9510320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0339cdf4-b86c-4e70-b497-6e0314c0ce54",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376fe365-4105-4b69-a428-fb9b63f94424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0767697a-99f7-41af-9b10-25da071cdb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3187c1be-0da1-4362-a8f1-80fdda1af68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f54ed1-a2e1-489e-8e07-4d22744cd839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af16c34a-b7e8-4a68-9fbe-2eca2223ad00",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e4538-04cb-4e66-8131-954d3ec3845a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db9a0cb-7b9e-4581-9a58-ae77055f9db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074fba93-545e-4355-add2-45a2ebf99eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8d72b8-ae46-4b52-a3c4-6e001d3d1349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d617e378-e938-4400-bac1-e51e3216c480",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbf9651-c2a1-415a-9679-fecdb24bbea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0217a7b-dbf0-4748-b9eb-8d2e47c9589b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eda060-4a1f-4889-b6f6-a786e289463f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dbc177-e144-412c-89ce-0d463b45d013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6acbaea-bbe8-4eb1-9e6e-20f75122fc2e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b644021-0f9d-4aeb-95a7-19c2365da4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeda815-abc7-403d-8045-4427fef0adbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9eb40b-1ae8-4a10-9518-712449ef1209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab667f05-0979-44f8-b4f4-364959c93541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963b0cfb-801d-488f-b435-990a26b990ff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b757f8a5-6ae0-41b2-8773-ac7538a96d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c85d2ba-dc76-44a5-aa4b-854ba050cf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dd191e-a2a5-4383-822d-df9ef6e84b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a341d79-619e-423f-bc13-bd67bd147794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bfcd8d-0d16-4379-bd2a-3cd9a5791916",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc519ff9-498b-4d97-bc76-4558254675f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63aaba71-f879-4ae9-b905-59dc44d5f876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80c0e9c-00fd-4bbb-a210-fea6b0242aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfb4f07-c5c6-4fa8-824b-06e32aa9d116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7590cea-6569-4e5b-bf93-f7f097ccb808",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dd3df9-4f96-4d15-9026-fc5e80db41c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c737658-652e-4dc1-b116-9aab295450da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4e0a47-b638-47ab-902a-698dc530cbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d0abe0-d6e0-48d5-9871-c99e4389b4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f2e25-e5b7-4c8a-913e-c68f51ac1c51",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fa003e-83b0-428b-995c-ba6c2ac4b48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb71df1f-d401-445a-9315-819ba82842d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e22bcb-efb5-4c52-9b27-100920fe8308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8610678a-4756-43be-a2e6-3bbe46103f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccfe610-012d-4b3e-ab59-295ac2ef909f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013ab21d-3d76-4a48-a592-47cf518e8550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0378cff1-d146-43a3-b762-1d9f67d76f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc05c52d-1cd1-4ca7-8a3a-968167ac6e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1067bbfb-0061-450b-af51-d88006514bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee9da68-1618-4501-8afb-a4398b14dda7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5270fbe7-10e5-4f5a-b5b7-1e0e49464ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5163c81f-e125-4d85-88e2-41610268214a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62db88bb-ae2f-4901-949d-2583d37d2a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf86d634-0abb-4140-b322-73a52b237a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113630ca-d668-47a4-9ec9-a29b84dad710",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84b754a-bfca-486f-a882-8b635cf50bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a6490a-27b2-4da0-9045-86934bdd257c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fa8f1a-0d41-445f-ae16-a4d3b9fb31e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de452786-8b14-4ae3-9065-c86563963098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631eb496-b6c0-4c10-b3ab-86e23f44e5ba",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825d46a4-5ef5-44b9-85ef-8ca58fe2788f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a72e894-ac0a-4c3d-8bc9-3c093348f575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78781a6-5a8c-4ab4-87ac-a9569bd03e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94dbc22-c16a-4540-a715-c50bcef4250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a7467-073f-4146-b88f-74b962c479a2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9863882-2215-4e98-bad5-aed913ea8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3dcc7e-a9db-4b92-b2b6-6d65b5a7821d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f18474-b7d1-407a-83d2-7453a309ca5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd43a5d-5cc4-4de4-947a-6f61fbd67514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a58b0c8-4490-4084-ae68-a4779dc07f16",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c7828a-84b4-4ff6-8eec-85d4632f6934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6eac4f-3844-412a-8e7f-ffb737c74b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653e6c29-aeb3-48d8-ae63-ff4b79bbd615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9904edb-b60c-4d91-97c2-8cfc483d1886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac236eb0-8735-4477-ae55-288782142cf8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ad1916-b518-4d20-91e6-d9dd0497ccea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92eda2a6-ac62-440e-94fe-887aeccd7151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8219fa-cf3b-4834-89b7-4089ea5c7bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f33bb9-23c2-4270-8e46-a54b4ca3af1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60a65b0-479b-4f41-942d-0b0768c201c1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10162893-8c3f-47e8-82fc-57be5ff6350f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337b7cdb-1431-422e-8481-85701753347d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b06a2b-3f68-487b-b8d2-c4c27077e6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e80430-215b-49eb-bef2-1fc1c709b1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa6aa72-2d04-42c7-9f2d-1d63ac977c31",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06303b94-dc02-417c-a20a-bd193821ac53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc566af0-125d-4985-ab2b-1105302d2ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a142b21-674b-4472-b7b0-4015b2d77ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1334e1-4b83-437f-afb0-ba9739cfd968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ff3746-fa4c-41d7-b5d9-f66c334117f1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf50f7-3516-46be-8923-5160273b6e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26860e6-0af6-4d8f-8f8d-aabf79361d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f78c71-e70a-422c-b829-920f467a4bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe659b3d-8c0f-47f6-81bc-fb2ed0ce5a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb8e526-e5c4-4cc5-bedf-5cda51403cbd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54399b80-b8f7-48e4-b7ee-c0a19ac1dd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a11cca-dabe-4994-9432-d1ca5a4de571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6168fc8c-7bf4-4833-95e0-6a9a2e32d235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10bcdcd-77a6-4522-ae30-33ea75b206d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1c5006-a8fa-4307-970d-59ee7a558e39",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4335ec18-5855-44b6-ae68-4e2bc643a033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7410183-bb5e-448f-9684-fb3be1304518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3331f507-94a3-47e9-9865-d4fc71670da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d25cca2-fcc8-4fdd-8ea9-31ad218e4b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b61046-acd1-4303-8536-23d9cd39856d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b735138-964c-4750-afca-5468f780ba71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44073b6-963b-4a00-9d46-21b7e7016813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d18144-cac8-444f-a376-6df4e9c155b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29352f0a-aaf8-497b-ac0f-66233dea6caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03ae6f2-78cb-4a6b-ae70-c2bc1a697e9d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcfe478-4bde-4c65-a5b7-46a9d34a84c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9f2f99-1d23-47bc-8557-f86c2a94ab5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139f37ba-e4ac-4ad7-a566-8851ffb03e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a6ee12-be97-41e0-b7c2-c4528f5160e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd04a8c7-4220-4683-ac2d-63141b3079db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820b24c6-af00-41de-81b3-c88af83fa0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6591ea2-40b3-464b-8227-2e649016298a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d295c301-8385-435d-a106-307e694af6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56708c03-c1bd-4cc3-8667-46e4752073a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ea0605-c2f1-499e-8aa2-7b37baa48b4f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f3fd00-434b-44bf-874e-ca496017b282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449550c2-0488-48f3-b8fb-82981250afcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b3e0f-8806-463e-80aa-cae329adf045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa58552-2062-4432-b28a-50ea425c5955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de2c7a8-fd30-4fd9-8712-1927f110d397",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e418b3c-caa0-4b83-8005-b41876aa2085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fad2560-dd87-4e5e-bf95-e72b7bd07504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3a6dc2-2098-4594-aa86-f0163f192599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce283e2-a5d6-4abd-91fe-96e6d08f9d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c7ba3b-595f-4af1-961d-f802f7c411f0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93b8c3b-f5ce-4eb2-916e-c84a5386c4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bd9688-9ab0-4b48-8e40-2eecbfc3108c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4044c19c-bc82-4e19-8703-e9a449b39538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e2b49b-364b-4ca6-9872-d9b726a08dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae8369d-e886-40f1-93bc-ccbc1fc03994",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35200c0c-2836-4a9d-be55-ed58e7be1fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3114f4e1-d5fd-4e92-907b-8732fe9d9269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146de44-e3c6-4447-ad2e-ce3d9f7e1edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87eb6b4-6095-453b-ae76-65f65e83dafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcd7869-6779-4d34-8b73-3432a3088351",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df999341-f35b-4475-949c-a7f19e6ab79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf116cf-20a6-4d59-b665-40626d99b93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58222890-594a-40d4-8468-17ff7cb40d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67e5e7d-dfdf-43ed-b83d-8e0313388772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df95e983-2393-4fe4-a7a7-fed58df8fbe3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e634fea-0961-4b3c-9890-e6e7ed116b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a513cb8-78ec-48de-bb81-17713603a64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0639b1c2-f7c4-4326-a0e7-d45a7f2e6414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedb8a31-3dd1-4d46-a30b-63596f79ffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f558a2-636f-4aab-aa5d-995db9bd3f0b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d676cbe5-b35f-4ca1-abdc-3f2e8e8f3ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e970b4-c0a9-4871-9d29-e5c032fd2ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9751c6-2cd1-44c3-bb9b-7cc373f4134f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10c325c-d0fd-4cff-86a8-5fbf931ff96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2fc728-ea92-40ec-994d-bc736aca5178",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7e530f-0786-464e-99d3-1ad43f231903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d66c97-95cb-48d2-9384-1ef97a9dc1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0c0bce-14b3-478f-924b-64a61b9aa176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2ab689-d917-4968-bb1f-33a997aefecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec6b5e6-3b1b-48d3-99be-4e355bc3640e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3df854-c739-4b29-96b6-4fc436ab18ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcd92f9-b698-4b02-9d2d-42f4d45a473a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dadd524-1377-449c-9359-9386652d77eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a5a7af-010a-4bf8-bc52-6faa4f17414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c55c4a-c241-4bc4-acbb-f77cafda5506",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a684ba-67f3-44f0-8708-c96a63c7714e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076ca981-e5a7-4634-8260-8cfe019a0d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4805f9-01f9-4a98-8e0c-87b43fabe7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f504b00-51ed-4311-832a-05f520fd057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a41add7-f08f-4963-a909-b40953beb592",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4525c84b-2d24-4634-be45-f4cd9ebfc822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa175da-ae62-43e4-8ed8-0f152f09741f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a501b879-53b4-42ac-9de6-74b9c560cfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d909c5b2-fbdb-455e-bc91-d598543ffa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834bfc72-0b4d-4700-95a5-47c038743517",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756f7145-a65f-429e-9c63-38d2850d5db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b652c4c7-f143-4628-83c6-db452a2c839e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07285e3-66db-4d92-bb74-8b89743849b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81374f5c-2fce-4abf-9502-3f243fcaa66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581a1737-205a-4aee-9105-9ae4247eb001",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb84e09-6404-4b98-bde1-fca19cd0060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463bf3ac-4119-4503-8dbf-5ff533694707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564fa025-ab19-4cca-9df5-7ff3f26de08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e4b4a5-11af-4730-a6f4-627ddc6d277e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2211f494-f2f4-4ad3-8399-89f3fdbf0e39",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07614031-b346-431b-9e49-f6bf2bce1888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aea0ee2-9d18-4eac-a35a-7d9830d67d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254778b3-183e-4367-bf6f-eac155f18452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61a94db-68d8-412c-8f1c-40fedf4b3fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f547164-14a7-47ad-a596-55efae73ac6f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d006a960-1ec0-41a4-b203-4750add4bffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9c9994-0f2a-4c32-8d80-f5d4f5338157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bc3c6c-9aec-44e7-b953-02cdba98407e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a5ae3e-ebab-47a4-ac7e-08ba0ce898b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e6ed38-f19a-43d1-bff2-4123c4046cac",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20de49ad-e2ff-4eac-af57-c8e142b39fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22904dd-c9d1-40d4-a724-bade9df5a43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2afe8e1-6114-48a1-8d8a-001f7ff87d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f5665b-948d-4f64-a76e-8a78b576a8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4c0bb1-0409-431f-87da-21ba1df80498",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1605899-3932-4cc8-811f-3a0ac12aa2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a623dc-dcfb-4fb1-9689-812fc7c9db77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226f3466-231c-4adb-8870-7535d7fdeb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928c3568-d187-4112-b4c0-e332603ecc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e0bea3-e6e0-4dd2-9023-0f916e5ec08e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8611714f-563d-4469-9067-5b88d08045c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e866e4-5ab9-418b-aac9-fc144c120753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5964f4e8-e9b7-4411-9a38-f7263e1801f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d8b023-7e85-418e-92e8-bde98f336e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72704e13-e2a4-452a-a7e9-b9bc1e7e8375",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107b2e92-5f71-4ab7-a9aa-f853a5046416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28e5d38-60ec-408e-beae-c4e02ed2fa9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcd2b54-f5b9-4e4b-a89a-3681b7185ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e75294-0066-4a4f-8a5f-d3e98f6b5dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5afc3a-b4ef-475a-82e1-f27b77a73012",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a82743-6381-4c61-81a3-31aaa764fede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cd5145-7aaf-42fe-aef3-da6cf0053415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f735e6b-af79-4206-a0a5-34af58d2284e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fa2c94-af7f-41cc-a778-157de5401bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706127c8-1ea2-449b-bde6-fb1cecf0691f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa520945-a6d4-4286-be85-3b425ec231a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3137a2d9-c142-4c83-9699-8216187b0848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc58b48-3c8f-45ab-b3f2-e9cb3135d2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8b84fc-8acc-4be0-ba7a-6fc5a9095fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfee754c-de46-4e24-be8d-895d0a39bcc5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78aad39-96b5-43d6-989e-32c7c40b6bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81256b12-4bea-40cd-9757-7c8fdec1090d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d01786-9c52-4ff8-831e-4fcf4e69ec76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e19ff7d-cd7d-4ce4-bd79-764e3c930635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458e502c-0185-4a57-851b-d98e7b39bee4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ffda81-eb20-4a11-8942-1265cb1c6298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a1d7ad-59a9-4d59-8d87-f9473ecfaa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55db44c8-f84c-429b-aded-809481d003e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1efcab-80c9-417f-88b9-d4f0f179a3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b8f4bc-3bea-48bf-9ee8-10913046c555",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89857605-2745-47da-b673-d0ba5f74c962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f300741-a6e7-4755-9110-7847b9e3e32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e362c32-e8f7-4580-bf30-5212bb556c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bb2405-3023-4ccb-b9ab-57fd810b7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59f7134-34ab-45db-a816-1e98021f5b5f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff053e94-7623-4548-937b-87d81a0867bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603cabb4-e9c7-42ea-98b5-fa023917230b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74ce3e-343f-4a27-9a5a-605b8a2fb7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32debe7f-a8c2-43af-95ec-0e70b9395413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4f2e0b-834b-4a1b-a626-dbeb0bf7bfae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c9bbd1-930f-46ce-b7a6-397b527daa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788b7172-8e1d-4dc7-8a6b-ad5bb0b15425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e01fa03-e3ca-4060-8e8c-ee9ac62c3f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8a26f6-59d6-41c9-a36c-89db725bdcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13ede0c-56d7-46db-98c3-bd5a3bff6633",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3303193-98c4-4b21-ad7c-2011135c518c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6fb3f01-9e16-4d92-9beb-fe6f832b6177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1a62c9-58d0-481c-a9ec-e11277e184ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c455227-7de1-4228-8050-e22702bec165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c9642c-b0a5-48e8-b455-0f03504559f0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cef026-9295-452b-b01c-90d50fd150fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f4ce39-2477-4c06-bf2a-74d64ffb4352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8793caaa-772a-4fb4-9b6c-57a9b997b14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bd5f47-de96-4df3-be57-017d62ed2103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fdfbc2-6a25-42d4-837e-0d48f901bfcb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4de1e3-6ce7-4250-bf50-b5fe45b6507c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c77766e-4cc9-411e-aa25-4c93307eca0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b55ee9-2951-4f84-95cc-4aa7a6fa6767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88205648-0dc4-4267-bf8f-06620a763701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dab57b-7524-49c0-9202-c5c383352b01",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb1bb22-2eac-40f9-8389-3520f0105c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6963c3c2-7c40-452e-896a-89c7b6a76722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd162b24-eaef-48c7-90d1-4c3740de789a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417eb4bb-e76d-4bb9-8951-e024e1e0dda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7286bcaa-c7b6-4aeb-b948-7b587f65a280",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda3cb14-22e6-418c-9eff-d621fa550e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d26754-d618-4d7f-b4b0-a0e54f2a8c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ebf8e8-0553-434a-8d4c-794e26480550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae11077-078e-4992-9cd8-1540708dd5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83bd1d0-a087-4e01-b32f-4b863f7bd91c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60708e4c-2129-4a08-b722-dcce9ef0db2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b3642b-2d50-4839-b779-822d55fd070a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d637891-c305-4737-b440-b1c2466b1c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4876c269-983a-4bae-b768-0c50a1a2fee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ec7f4-8a90-4e6e-b329-7f2f7df85d52",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649d43a2-2815-465b-9307-fbc872705713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beda4fef-9aba-4507-8627-382088a3faf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7303df-d167-43e9-b2b8-897a94e86bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bd5f90-eb96-4694-9c6b-ac2049c9c9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec373b6-3083-401f-98cc-dbf7ed911b10",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fbdc3c-aefc-4cdf-b957-115a22246f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254fdc74-990a-4d38-8d67-5aac7cf645d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a67087f-26b9-489c-b62c-7726372840f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ade0e7-7e51-44d2-957f-d766fc65d5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063b0c40-b62c-4e95-adb1-a01d179c4159",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeb545d-82c4-4fd1-86b2-7fc016e8dd22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a76116c-b135-4417-b88a-a9022ffbe124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dab33cd-524d-411d-aa10-18e920b6ba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42a5c56-5cc3-4f44-9368-1ae17c0b16b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583e0d30-be00-472a-b71d-d29101131475",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcf4915-c67c-4cb4-8162-7a5c39ed2f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffcb0ddb-269b-4e37-9a39-e92ab9564010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9256c93c-6f8c-4079-af21-d28f7f47d8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342561ce-0d67-4c8a-b788-f80253f33353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fe1abc-f00d-4835-ac54-18c0fa943e14",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00af4028-3781-4449-9640-02d68657ab6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c8f9cb8-4295-42c8-a4de-9483a7a0fde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8e422f-5eb5-44c4-a148-fbde85c2eed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fd1859-dd45-4806-bdda-7abfceb1cc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ec628-e9ba-4854-a2f9-f3f49d70c97e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72099dd-7fbd-46af-a102-d92503242c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ad0956-b6c4-4c69-9fca-15609700fcf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5bff3b-2cb9-4166-a1d5-c3e13631cecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24472f57-70ab-4a28-891f-9ee3c3632af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3544b8b-6e0c-4642-8753-b6568134da7d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c3f440-faed-48ea-bcda-eae51e2b1ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935d6326-b888-4a24-9dd2-7305208d494d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80d289-3066-46bf-ab93-3d475e875ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83941b8-9432-4d6f-ab80-a0cfb77bfeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957471bf-22f6-4544-b4d0-f9b7c223516e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed770bc-c858-4937-b99d-7dee482a23b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea29722d-d0ba-4844-b135-427dd083e795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45e753b-922d-4350-bdf2-6a6cd23e6405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df01c1-9030-41f5-9195-8fbb6be731bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda0753-a646-41f0-abf2-9fb6e4fab788",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c44513c-3b58-46d1-a0b4-a09498e5ad70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95e5d79-8bf4-4b99-b8d0-752a5f22b190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a054b0-8945-459b-b278-e64e25262b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017ed3c7-0b47-424a-a0c8-ec8491ed9aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0cebe5-bba1-45f4-9174-d615d835c5b6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b58f314-a31a-4c00-86b1-d56796c97931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa7de2b-8059-430b-8333-dfdd828b639a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d095e35b-be04-4f36-82c9-1e091aa0bdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f073b91-4d0f-4e61-acd2-5507c9c962eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb212cb-3299-40f4-a09f-640c2cc85297",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930c5bf9-febc-4e25-bd8e-0fb3f3da87fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db6ec29-669f-470b-9eff-086e6fd86bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f4649e-c645-436b-9ba4-a336f5ab4ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01f977f-46a1-46cb-a73e-ba4e2bc2efde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04e4845-bd48-46d9-b665-a1a96ade43fe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab16dbe-ea7b-4a12-9525-268cf1686bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18be6c13-5dc9-438a-96d0-6325f6e34a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38509f95-1b89-4672-a05b-70dfac973173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14279322-f417-499e-9bca-0f2f7209d5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556a7949-0690-4f2a-895f-1a93f0b900ea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e422d4-843b-474d-9e1c-f1088078f344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1544271d-1ce8-47c1-8697-4f75bdaba215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400297da-6582-4fd5-9c70-ee800a16a3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10e368a-36a0-42e5-9d4c-b864a92ce09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912958c9-5c23-469b-b8a8-2e025957fd30",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90866d2-02a6-41b4-9b28-24e17103305d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c003cd9e-6d2f-4c73-8f88-ffeb853d56e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cb1e81-6809-442c-a37c-b7e458096ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa52347-0a9a-4327-86b5-a5d5dd11082c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf06027-5d7d-4704-9565-f77f3f414798",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b81df80-8a6b-4ca5-b379-2d23d06bd84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e1d2e1-3ad4-4801-979c-ad95af541337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e807b8b3-80bc-4aed-a94a-27bd81763a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cb0c6c-ad92-40f9-ab06-535baebd6bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695a03be-dad6-46eb-a434-a3b4a0d0f987",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8689ee-31aa-4b98-acce-6faf35bc4c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42d41ff-d0a3-4e5b-a9d0-9f7ea508e31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b2e4c6-75fc-4214-bc2f-d0625e31869f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e37fb5-5a77-4545-99e1-5e8b06449a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb4723f-3464-4bd6-a3af-ca2e99640e1e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f321179d-f5af-4b5c-b100-a34eaaad8809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13abff22-156e-41e4-a56c-984467ffe48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9902a2a4-8def-46a9-9d29-207711ee6ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5d5313-da11-4ace-a529-83ff42350727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8455297-6951-4145-b327-91a06306a09c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fbde74-8571-4d23-a5fb-eb840228ab88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808b122c-ee65-4a73-ac55-c4e7bf1bd96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d5db38-f4aa-4db3-a7b9-4000c96f2237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cf5052-f8ef-424e-a391-1abf80806d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcfed95-b534-431a-9265-27b1980755c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ad5280-a2fa-495b-8749-5508b6492871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e569491d-a2e2-4853-a5fc-df6681d4babf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d682a3fb-aa4e-4287-bb58-a1714d0d644d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d229e6ac-ad29-4e6e-a4fd-62e776d4b85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3b97db-69a1-41f5-a2cc-11956cbfc70d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0831ab-06b8-45fb-86a1-a156ee455eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09be53d-1b27-4d30-af59-a0f69e1f6127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc61109e-5afb-4394-ac29-d04df5214bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0d7c6b-69d4-4412-954d-c8ea6a4350b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d570424-04ca-4a82-97e2-d6d71c5c35ef",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34070506-eac0-4302-9be1-26725997c75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6b7ef2-d98f-4452-aa18-b57f92d70708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee677bb-804a-46b4-9ee0-7006c2b4c6f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d1acea-8729-4e7f-b348-e015340442ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ca7f43-6780-4146-9f8a-061e75376477",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80dad48-e356-4b4e-8dde-26328590bd74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d48f1eb-406a-47a6-9676-ff54f1075987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe393e04-49a1-48f3-b63f-152291b1b597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e096182-14ed-42b5-a67e-5f0f5671a6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e109785-d4e5-4c82-ac4e-9d80cab1928c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456d5730-82b4-47b3-8d43-db060afcd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd7f05f-a4db-4ec5-9cd6-2cff1f211d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be003d9-a36b-43d5-82f4-72758d984c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d7631a-39f0-4a55-aae9-58e15a2d7d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0895ea-dfc2-424d-a8af-20f727af9232",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07436ebc-ec87-4d76-a534-45ebae563a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4d385e-7140-4ae6-8d61-bf73aefaf66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15fbffd-5828-4147-b99b-aed4e758a1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cc0c6a-552a-4151-9ef6-95db75f928bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fa6dce-cd64-4925-b548-a21fee81b5ed",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eded3886-0ddd-40b0-8b65-dfa793a21e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0852c326-a86f-4958-9904-d60b728da670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46a9c92-ae1b-4d83-875c-c0747a3de692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c37ee7-14a7-4d82-81ea-4472bce14a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaf3867-d59b-4751-864b-2bab44429d93",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc016e4-575c-41c4-9c9c-fecd8e03c6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91cbec54-42b5-4313-8b97-97ac6e39548b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284c5a02-23a4-432e-b38f-dd429167cf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5163697-83a7-40ea-b8fe-bd1099138ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be1031a-a5ff-49d9-8079-9caf832024c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d19778-d621-4831-9caa-682457d81777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7d45a9-aa0f-4979-bd1b-50da82be35ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b140e8ad-aeb8-4c1c-a7ff-97e606b850b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19405322-55d2-4f65-8d6c-17ddfe006421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cdfc77-65b2-44e1-82d2-73a255b8c54e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e535de-301c-40a6-a80b-f48273661bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0541c1b9-c07b-436a-8470-f232466b2ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2665520b-a493-44f6-a816-dc86c4b1641a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a312199c-a1fe-436f-8433-1f95aef0029d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27812e1d-0005-4d25-a2d6-72fae6b4bbe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70456b49-1544-4394-8cad-5e320f6a1384"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6741ecf6-4049-4d6c-809b-febdaf416f2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b28ef84b-3851-40b4-9af8-f61f68aa6b08"
                    }
                  }
                ]
              },
              {
                "id": "1ea13725-8cbb-43b0-a413-818974a1d7aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9a0027b-6aaa-4517-abf4-1225f74e8b16",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5034793e-8d42-411d-8abf-417102b12907",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "679dcbf0-8b22-400f-9bb2-ad18e9bd2f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d315d65a-cbfd-4e65-91e1-7e816b9e61ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b2fb8d1-653f-4552-9a1a-04d77a9ef316"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "192a3071-5934-45a4-8ca5-9b61b6a4c875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "badf8d55-9864-44f0-92df-ac1187e8334b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a69ee6fa-6fd9-4ab1-94f6-7c50001ac8d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb4a52d-37e2-4855-ab19-aaca913e338a"
                    }
                  }
                ]
              },
              {
                "id": "47b77900-cc02-4987-81f7-5f9d8000a86a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e3ea5a0c-4426-4634-8e14-fc30bea7f7c9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934e8fcc-ee45-4674-9c99-85850cc0e8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "911bb9db-8f14-448d-a392-d6eeceb3a0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e0cdfc-626d-4d89-9fa5-2d9cc1a2e84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9388840a-903b-4c1f-94c6-e9d1756b4d60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c93cce7-8716-4a25-96ba-eb16a4d9174f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3a28a59-a598-40fe-90c0-cbb5fca6a471",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2cf4a51-68f7-45b9-aa72-b6d9d139b298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c63424ef-b072-4271-a5fc-99c51aa76a8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36a0b991-96c2-4d35-9481-19d1d4878ca6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ce0dc06-45cb-45cc-b763-09494a6234b4"
                    }
                  }
                ]
              },
              {
                "id": "c3d81f6e-3368-453c-be39-6e919a57780b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46b0a056-479c-4520-af9c-e4c73d77e57e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "51582347-1ba8-4fb4-911d-332dbde18364"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27c77a9e-1821-4641-9222-8f86ea690c79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7838d011-6222-40a9-9c70-b7ecd1e150d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f405ea3-0ceb-4831-b7cd-78a7a46c7e3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c12c287f-0b7b-406b-8e72-e3459d1346f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e9c1311-879b-4c48-8aaf-e47f2e56b28d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27d098fa-bdac-455f-95ed-59eb367c58af"
            }
          }
        ]
      },
      {
        "id": "b861f31e-79a7-484c-973f-5b816a3f5b5e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "538154a1-41da-453a-a765-6ff3f2762524",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4845f663-3b2e-4696-846d-257a9069cd42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72f4e529-9390-4a9b-8d39-9582b03a10ca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d657952-d438-4039-aca0-b16079e6adb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "14f57ea0-1f84-4200-8d7e-ed7e5d01844e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a7868-b0eb-4192-bca5-4910a44a8810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc247b96-3116-4a54-be40-0537883edc48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "178726eb-b6dd-489b-ad65-204002aa2c7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb667ba-f8d1-451a-ac24-6e2e784e63f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfd8e592-ab6a-4c1a-a807-c09176700f20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d0ccd4-aee4-4a37-92d5-132074fbdc3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4e8a7f1-6cf0-4783-98b3-33a8020af7f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "972e975b-3d6e-404a-8ffa-2a777a973bdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eff6cf9-e3ca-47bd-b678-e5ad4968bece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c81ef1aa-6a48-4aa0-9f58-d24f1f0822e7"
            }
          }
        ]
      },
      {
        "id": "456892ed-5238-44bc-b69e-f434fbbec90c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7572ea96-1c19-4526-9526-762b19b26811",
            "name": "Negative Testing",
            "item": [
              {
                "id": "240a6ec7-9eb5-44ef-8f7d-5f1752525a79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7c23e3a-31b9-4486-a47f-b8a70bc3fb1f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12726435-19af-4c8c-ab7a-20ce2460cb13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "131c24d0-ed6d-4bd7-adc0-5e3f17765198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624bdde1-ffd8-455d-967b-8fe83e77cf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ade9b56b-a83a-487c-b157-62b953f3370c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7884ef0-177b-4ab6-a761-c2fa7fbd5906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58de70b9-dd38-4bfa-a687-6b00c39a96c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3743b988-2f9f-4b12-9837-4d13462b676f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396cce7f-d345-4a3d-8ab8-ed987be60da3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f70bf76b-c7e9-4247-a02f-34827279342c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8eb93a1b-cd23-4bf3-9285-9f6f697dc8cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "484b4273-523f-466f-89b1-1e51c87579f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f267ae6-254b-44b2-9f74-3025332c87b8"
            }
          }
        ]
      },
      {
        "id": "0865a3f9-62cb-4b44-975d-1ec616eb4197",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8c65fde1-b0e4-4947-9097-5652b2f8e920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24298e12-c503-4a6f-9fd0-30ac187d702a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f484ab07-4e74-493f-827a-4d544c20c8ad",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09062b8f-d857-42b4-9e7f-1031dac11865",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ebb164c-7557-41b9-8473-f007578b322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0679fd55-85bb-46de-b562-3319029359b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01c9af84-c29e-4fed-becd-17a0860ada58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac829c2-3f73-46a7-90ae-7d8a5c5e5018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3bf393c-1b34-4e6a-8eab-39718b58f4a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59a85d79-3e4d-4b6c-a452-614294936d56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f92f3d6-3814-43b6-988c-3c48de93daca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47ab7788-5181-416c-8697-fb5ad4404896",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70d8986a-9d2f-4433-8666-9fcf48e56c23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "047972dc-8654-4176-971f-94466fb798ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8566f4ce-be51-401d-b4c3-6119f982f2ec"
            }
          }
        ]
      },
      {
        "id": "f0456175-f71b-4b43-b9fc-dc36c12b4e83",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0414f9ef-5e86-49df-a34b-8faf37f52589",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f4ed616-5c22-4276-b05e-01b11247d954",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "283f5de6-ce1f-4b48-9545-d637761ae4ff",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e3dfe75-edd7-4a5e-9c3a-339978287500",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75758795-8c1f-41aa-a151-111d49eb062a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.58333333333334,
      "responseMin": 11,
      "responseMax": 10320,
      "responseSd": 771.1137360008616,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717288825869,
      "completed": 1717288867735
    },
    "executions": [
      {
        "id": "90297bba-eee8-4450-9f07-e6100d9b9c35",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f8d89e3f-2286-4fd4-bf3a-ff0f918929c2",
          "httpRequestId": "a16da9db-4740-420e-8640-634acff4cdcf"
        },
        "item": {
          "id": "90297bba-eee8-4450-9f07-e6100d9b9c35",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3063a477-be0c-4cf0-8e34-e43b5d5f78d6",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "758e7bfd-d4b8-41ac-a834-f5150faeef40",
        "cursor": {
          "ref": "bd674313-d72c-4121-a464-aa0284d02eb6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c5d9b2be-e545-44cf-bc0f-55ecf40f87a8"
        },
        "item": {
          "id": "758e7bfd-d4b8-41ac-a834-f5150faeef40",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f4142629-f2fb-4e7e-8ead-4c36327c556b",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "ea1c4eb7-2625-446f-ae0d-9579a59fd550",
        "cursor": {
          "ref": "6fab3332-4e23-424d-985c-0dcf6d6b628f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "31dd0a3b-65a9-4b6f-8e91-dbafe7210feb"
        },
        "item": {
          "id": "ea1c4eb7-2625-446f-ae0d-9579a59fd550",
          "name": "did_json"
        },
        "response": {
          "id": "f47b7f03-4480-4743-982c-f20bdedd71b5",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c0d004-b677-403a-b3d2-b313ef84c45f",
        "cursor": {
          "ref": "86f6365a-b2f6-4aa0-9988-b9844e9d7232",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c14f14d8-82ea-41fd-8b9e-b0a4aaaa6efc"
        },
        "item": {
          "id": "91c0d004-b677-403a-b3d2-b313ef84c45f",
          "name": "did:invalid"
        },
        "response": {
          "id": "1b30a1b9-be03-4b67-b915-88fe658ca7a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2077,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c0d004-b677-403a-b3d2-b313ef84c45f",
        "cursor": {
          "ref": "86f6365a-b2f6-4aa0-9988-b9844e9d7232",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c14f14d8-82ea-41fd-8b9e-b0a4aaaa6efc"
        },
        "item": {
          "id": "91c0d004-b677-403a-b3d2-b313ef84c45f",
          "name": "did:invalid"
        },
        "response": {
          "id": "1b30a1b9-be03-4b67-b915-88fe658ca7a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2077,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd53aec-9710-4e60-9827-cacccc756b7d",
        "cursor": {
          "ref": "9b39e81a-0250-428a-bada-0016bb22c77d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0552949-9385-4966-bdae-53a3b27878f3"
        },
        "item": {
          "id": "bcd53aec-9710-4e60-9827-cacccc756b7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "948788af-0f74-409a-ac1d-bc03164a24b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bdd6ce-4e9c-41d3-84f0-5bdfda748690",
        "cursor": {
          "ref": "cd5e4545-fd46-4059-80a6-c385fc2e20ad",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d02c4c2c-bc81-4470-9914-87325ee94499"
        },
        "item": {
          "id": "90bdd6ce-4e9c-41d3-84f0-5bdfda748690",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "254376a6-f09d-4a9f-85b3-4594b8cd15a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6ffb42-7d47-478c-b979-f2cc8f9c0958",
        "cursor": {
          "ref": "0cf2e839-4f66-47f2-8959-a75a934c314b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "34bfafe0-3217-4511-9c4e-5c8a2825a92c"
        },
        "item": {
          "id": "df6ffb42-7d47-478c-b979-f2cc8f9c0958",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "33c453b3-c3ea-4341-a59d-4682a17f7149",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cef051-e644-467c-97ee-43e9cf72f4e6",
        "cursor": {
          "ref": "5c7cd02b-cd98-4245-b567-951becc9dbf6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23bfe305-327e-4d06-acc8-f6f7ba43d6d8"
        },
        "item": {
          "id": "a7cef051-e644-467c-97ee-43e9cf72f4e6",
          "name": "identifiers"
        },
        "response": {
          "id": "fbca2a38-6e95-4f1d-ae61-e44e170886e6",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0443c64-4abf-44a0-981b-7ec48d572125",
        "cursor": {
          "ref": "0f573eaf-7463-42db-a980-06b6310286b1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "98f980ca-d259-4ab1-b5cc-05ef66012cc6"
        },
        "item": {
          "id": "c0443c64-4abf-44a0-981b-7ec48d572125",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a0b366d5-3b51-42df-9a4c-9707a142c5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bdb458-f6a0-467f-a127-9c3dcfc6088b",
        "cursor": {
          "ref": "d7a5ab35-14b3-4761-b678-c2612793e5a6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "301278b0-ce25-4943-8349-b343f16e81c0"
        },
        "item": {
          "id": "64bdb458-f6a0-467f-a127-9c3dcfc6088b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81ebcc2d-59b5-4e4c-8276-e06edff2cd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c64b7e7-f6db-4462-89f1-6bb5ac7a1292",
        "cursor": {
          "ref": "2cb4246c-0d2f-4c6d-b37a-306d1471059c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "678b5354-21eb-449f-b91f-df7539f0a3b0"
        },
        "item": {
          "id": "1c64b7e7-f6db-4462-89f1-6bb5ac7a1292",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7ccc6c94-73e3-49c2-a93c-696ab62ce9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab77fb42-1b2c-486c-8002-a7c6af723d5a",
        "cursor": {
          "ref": "5b44e572-1edb-4416-afd0-705115c5f9d0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "35700dd0-7ea5-462b-b169-261271ce9395"
        },
        "item": {
          "id": "ab77fb42-1b2c-486c-8002-a7c6af723d5a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6678256c-9ed5-4c68-be9c-39a243db49c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d7f4ba-7353-4b88-ac16-49bef23a91b8",
        "cursor": {
          "ref": "6f4dd29f-75ef-46b2-b9b4-26d43c676a3b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7d37feb2-ad8b-445c-a533-3dde0bcb36d3"
        },
        "item": {
          "id": "40d7f4ba-7353-4b88-ac16-49bef23a91b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6633ec5f-b201-43bc-8feb-48fa78582a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c978aca-63a2-4cf2-822d-2e5ce416e5cf",
        "cursor": {
          "ref": "aed8367d-e093-4aff-af0f-ec3220742fdd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0ae2b205-1895-405a-93db-a673e00796b2"
        },
        "item": {
          "id": "3c978aca-63a2-4cf2-822d-2e5ce416e5cf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5d9aa0a9-7256-4dc2-b621-f2e24e1f784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c8107-3359-43c8-b9dc-f640a73e081d",
        "cursor": {
          "ref": "07e96264-2489-4d7f-b385-10cf5a2cbd21",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1a51b6b1-9dd3-4a9f-bec3-cc84e94850c5"
        },
        "item": {
          "id": "b53c8107-3359-43c8-b9dc-f640a73e081d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c40a0eb3-7a2a-40a5-840b-c05d10483c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f923b5c-fc50-4854-aec5-644f5a9b25f9",
        "cursor": {
          "ref": "b3c349aa-e797-4ed6-9883-309dc6aff807",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "65ce06f4-3c91-4e80-87a1-fba57b3c3916"
        },
        "item": {
          "id": "7f923b5c-fc50-4854-aec5-644f5a9b25f9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c560fa7c-9ecb-4462-b693-49294d81b9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0096c679-7dca-4a83-bfec-75f9b30a588a",
        "cursor": {
          "ref": "0e9a7dde-8f4e-4446-8359-b0b133903020",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d529edcc-f3dc-413a-86ab-077251e51aaf"
        },
        "item": {
          "id": "0096c679-7dca-4a83-bfec-75f9b30a588a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a04e9747-c9ed-46d4-bb6d-ef1c211f69f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2511ae30-45fc-49cd-b071-6ff93eb4af95",
        "cursor": {
          "ref": "d3ccce04-4939-48ac-83ce-ba1147fa03b6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1d6287ac-3402-4542-b186-752fabde3d63"
        },
        "item": {
          "id": "2511ae30-45fc-49cd-b071-6ff93eb4af95",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b3596ae4-0e29-469a-9baf-6b77c7e9993b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723c085e-25c8-4669-a54b-d3c436bb4cde",
        "cursor": {
          "ref": "5ebc5ce8-2e22-4fa1-8cff-c4f5a28ae14c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d1ddfecf-7012-48df-a36b-08f8d11ff6c1"
        },
        "item": {
          "id": "723c085e-25c8-4669-a54b-d3c436bb4cde",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9a7bd550-15de-4b56-a03c-1362add8080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa86fc5-6c63-4821-9edf-afb567f90de4",
        "cursor": {
          "ref": "8f87657d-6ef8-4d42-8535-fa2df50d23d0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3adbe869-ec2a-4c15-b658-960845f6ae44"
        },
        "item": {
          "id": "cfa86fc5-6c63-4821-9edf-afb567f90de4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "68922770-0b73-4982-9d53-cd3b36c358b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591b0e2d-74a0-451b-928d-1f61de73514e",
        "cursor": {
          "ref": "032fe8e0-c8d3-463c-9627-c9c473b2998a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "902be69d-15e3-405f-b7f0-da33be897a40"
        },
        "item": {
          "id": "591b0e2d-74a0-451b-928d-1f61de73514e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dc68df5f-b86b-4b6d-88b9-2c724f76d78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35fb5ca-b2e5-4a72-9c5b-3a5565be1df5",
        "cursor": {
          "ref": "abc89144-7402-43c8-aba9-7c6eb13f24a4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "298e4df7-a681-420b-bb1a-03038be65f68"
        },
        "item": {
          "id": "e35fb5ca-b2e5-4a72-9c5b-3a5565be1df5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7cedd3b9-25fa-403a-96c8-db6dbddb0db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e60c0ba-2de8-45f7-9d41-5f7c64c4616a",
        "cursor": {
          "ref": "cbaf0657-257b-4589-8bc7-4373245c98b0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3423ee06-5681-4704-af0c-f9358ea37746"
        },
        "item": {
          "id": "1e60c0ba-2de8-45f7-9d41-5f7c64c4616a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3451efd7-828d-481c-9780-61bd83c1569e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d31b4e-73d8-42da-8e56-6f352428dcd3",
        "cursor": {
          "ref": "bbdf737e-3998-4161-b690-22fbb593cfab",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d093837-f28c-46da-8b10-f66f3bd9e688"
        },
        "item": {
          "id": "62d31b4e-73d8-42da-8e56-6f352428dcd3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c6244990-5c94-40bc-a5cb-bfb85e1136c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49988d7-15ac-491f-97c2-a46d4dfa4a91",
        "cursor": {
          "ref": "a0cd8936-683e-47dc-8a86-dd09b86b143b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "460145d1-cc5c-4d75-8d0b-fa982a4113a2"
        },
        "item": {
          "id": "d49988d7-15ac-491f-97c2-a46d4dfa4a91",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0aed0b93-202d-445c-b374-1de0c6ce8a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e84962-145d-49ce-ac96-548eb83bc413",
        "cursor": {
          "ref": "5cdb9640-e3ba-40bc-b459-bb36d145a324",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ef5c5c18-6774-4b9d-a9f0-5fe5ac1006a0"
        },
        "item": {
          "id": "d5e84962-145d-49ce-ac96-548eb83bc413",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d5a666ee-fdde-431a-8ee9-172d080fe0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07de26-f048-4e43-ab40-fcb64fceb07d",
        "cursor": {
          "ref": "9bd968f7-a8ca-4bc9-9122-004a01b62a8c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ee3d90ea-adf9-495b-aea0-8cb1318a9965"
        },
        "item": {
          "id": "9d07de26-f048-4e43-ab40-fcb64fceb07d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bcf6d956-13bc-4712-b5da-121d4e1d9406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd08f3f-f35b-4b4e-9dd1-03b64dbebd9e",
        "cursor": {
          "ref": "55135f25-1b9c-4b3a-8cde-344b4e8cbc37",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9a301e01-a044-4f26-88cd-483a33d97e52"
        },
        "item": {
          "id": "0fd08f3f-f35b-4b4e-9dd1-03b64dbebd9e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e5e2ebeb-732c-4a47-8b18-4355fd3cfbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5f27ba-14fa-4811-98dc-14a5496335b8",
        "cursor": {
          "ref": "eedef04b-1e54-4088-a5d3-f2c02e8a173e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f4a3bbdc-d382-4b17-a1de-73ccaed4b3f2"
        },
        "item": {
          "id": "8e5f27ba-14fa-4811-98dc-14a5496335b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6b8fc5bd-3038-445d-8260-833db0eda42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d5bf3-5256-4691-8445-32914466ef38",
        "cursor": {
          "ref": "789da88c-afb6-485f-b1e0-19750f8e974a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b2a0d75d-c7b6-4d99-9df3-b02f450a0d69"
        },
        "item": {
          "id": "fa4d5bf3-5256-4691-8445-32914466ef38",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e2d8303c-b30d-4098-8685-0ff3bdd6b4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a43f3a-1765-49e1-a442-71d6c00712ea",
        "cursor": {
          "ref": "12ecf3c3-53b7-43db-b5ff-e187ef346bf4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d31432a1-ffe6-4998-8868-8a85b2bb064e"
        },
        "item": {
          "id": "61a43f3a-1765-49e1-a442-71d6c00712ea",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "57e6d726-d18f-4bf6-b41c-2f37150bd2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4342aa60-40ee-4cd6-aa7a-2f2fcfeade23",
        "cursor": {
          "ref": "bf03ce52-1cd7-40b2-8d3f-50b8ffcf8543",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "326f693e-5620-46a2-96cc-2ddca45908fe"
        },
        "item": {
          "id": "4342aa60-40ee-4cd6-aa7a-2f2fcfeade23",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bf96e4cc-faff-4345-a163-e6a51b0e4425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7febe8dc-1234-4d7b-b155-742dfd919b21",
        "cursor": {
          "ref": "179f8bbd-9ce4-4d5f-8c33-f4e50302d791",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b94ebfc1-da34-4d5b-8ce0-f58dbc93bbd3"
        },
        "item": {
          "id": "7febe8dc-1234-4d7b-b155-742dfd919b21",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "80bb42b4-b590-4d99-b470-40f40c2630a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd8c612-3e2a-4291-97a7-c8e3f4ecba22",
        "cursor": {
          "ref": "f3b0ead5-9ec3-4c88-b307-8f8443696dc0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b7bdb88-0e55-43ce-9ed3-24076b133295"
        },
        "item": {
          "id": "cdd8c612-3e2a-4291-97a7-c8e3f4ecba22",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2fc33560-7fe4-4e57-aa09-51081e683508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d181f806-8232-48e9-ba06-0c7f24b71d43",
        "cursor": {
          "ref": "97da0b31-16fa-40ba-bef7-3e33d0543658",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ccb6ba9-d411-460e-ae01-5e1487c46b4f"
        },
        "item": {
          "id": "d181f806-8232-48e9-ba06-0c7f24b71d43",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "409fb324-b2bf-425c-9dce-f5b332f7688a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8077f61e-160b-4cc4-8933-7a4cdf5767ab",
        "cursor": {
          "ref": "1f1ba2e3-3337-4dd7-b2fa-5a15f54d5e94",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "808fbf6c-9b3f-47fd-9bda-ac00727e4c49"
        },
        "item": {
          "id": "8077f61e-160b-4cc4-8933-7a4cdf5767ab",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "330a796c-c9f8-46b3-a385-2fb4d5f5bc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6ea40c-9d21-42bc-9bc4-19208d14d540",
        "cursor": {
          "ref": "e2383770-f400-4cd2-9a44-524dd5071bf6",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8311d274-9f11-41db-981f-3a54b1485c08"
        },
        "item": {
          "id": "ed6ea40c-9d21-42bc-9bc4-19208d14d540",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4279bb9b-5801-4075-93d2-9dfb99c9f7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b8e7a5-f1a8-4210-bda8-b3def5ebce2a",
        "cursor": {
          "ref": "f84b0e8a-75fc-4db5-96ad-fd711ab31756",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3aa4960e-8e14-4d82-9966-39b9c0011ea3"
        },
        "item": {
          "id": "e7b8e7a5-f1a8-4210-bda8-b3def5ebce2a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3957210-cb6a-4780-ad32-3ccb8dfe25ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c49f2f-c895-40ba-b6e9-acb970e1b4d2",
        "cursor": {
          "ref": "5c3ac1d7-21ea-41e7-b041-676c25686f75",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5908281c-4a4e-4e2b-9249-c6007edde515"
        },
        "item": {
          "id": "52c49f2f-c895-40ba-b6e9-acb970e1b4d2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b63f6419-cd60-4b14-ba68-aba610dc3d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ccd096-a641-4056-8a51-6d0973c31743",
        "cursor": {
          "ref": "9992540f-5ec0-4f1d-be5e-0350246cff69",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "074e5a64-c88f-4dd8-b80d-9169bb4945bc"
        },
        "item": {
          "id": "69ccd096-a641-4056-8a51-6d0973c31743",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ea44589c-6ef3-4b93-99f7-680eecb420f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185bf1d3-28c8-41c7-8876-d4b7e0ae753b",
        "cursor": {
          "ref": "db3fa5c4-5e08-4fdb-b9f7-4f944995d039",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "19a42a00-d81e-4eaf-b888-d56938c19544"
        },
        "item": {
          "id": "185bf1d3-28c8-41c7-8876-d4b7e0ae753b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "642b553f-35d3-4bc4-aeee-50923e378120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265002fe-a09c-4074-98a8-155153170661",
        "cursor": {
          "ref": "c99d7ce6-b9a0-47df-b0d6-22e95722d9b7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "089e218f-baf8-4850-9775-f700eec51d99"
        },
        "item": {
          "id": "265002fe-a09c-4074-98a8-155153170661",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3e18a6ca-7a4c-46e5-ade9-4acf1080c74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4d6648-ad4f-4e25-9252-47fa639ecbf5",
        "cursor": {
          "ref": "95145b12-a14c-4fe6-b71c-4bcd4143b456",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a2663fd4-fba3-4e36-9def-a45a995e8f63"
        },
        "item": {
          "id": "1c4d6648-ad4f-4e25-9252-47fa639ecbf5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b572918-4a7f-4cd4-a404-cdcb6c63cd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e439ce-501a-4c85-984a-fc2c87358c5d",
        "cursor": {
          "ref": "c2126882-a6b0-490d-8cc8-1ff73a2bf725",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "65a8b5f3-c481-4cbe-ad50-3fb152b65e32"
        },
        "item": {
          "id": "a2e439ce-501a-4c85-984a-fc2c87358c5d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5078d232-ed09-4026-ba2c-5fb1a0f7328b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a224ab-f531-4c50-99f4-fd49563595f2",
        "cursor": {
          "ref": "38f93cec-e437-42dc-a94c-632ad12ca511",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b5817a09-43a5-4dbd-9ae0-cfc74dd7d039"
        },
        "item": {
          "id": "27a224ab-f531-4c50-99f4-fd49563595f2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e90ba651-1be2-42b4-aeef-3afe4e067890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a783fa-6e76-4608-a00f-13191cdb1bf5",
        "cursor": {
          "ref": "e088e138-de54-4618-b162-eb837906f749",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72b6d67a-3264-4464-a42b-f4c778b07282"
        },
        "item": {
          "id": "37a783fa-6e76-4608-a00f-13191cdb1bf5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8c15b218-67d1-4df4-82b1-214d1a2731b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245e28d5-7422-4cc0-a08c-f05a25fad5f8",
        "cursor": {
          "ref": "5923dc3a-73a3-4ab5-876a-cb0355969646",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7d0ed61f-8e91-41c8-a972-82286d5c0cc5"
        },
        "item": {
          "id": "245e28d5-7422-4cc0-a08c-f05a25fad5f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f68961bf-95b4-4956-ace8-7d763fcc9ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdc092c-1f0e-4b34-b44f-6a407dd4cf0c",
        "cursor": {
          "ref": "07958458-6f67-4061-b162-7c8138827230",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9dd2ffb2-17b8-4e45-b06d-474fa30f3adc"
        },
        "item": {
          "id": "1fdc092c-1f0e-4b34-b44f-6a407dd4cf0c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2488bcd4-0577-4eaf-9718-08af60e04033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8725b0e4-1567-43e1-ad18-b6763739e2b3",
        "cursor": {
          "ref": "e1fb5a0c-7eed-48d2-b257-e2b7bd27b089",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d98a3515-3cc0-45a4-82a8-2476d871b8af"
        },
        "item": {
          "id": "8725b0e4-1567-43e1-ad18-b6763739e2b3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ca6462cc-d1f3-458b-9be2-6137c2f96a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349379be-36c9-4926-9ebd-0cb30304d45c",
        "cursor": {
          "ref": "441a3a70-db8b-43ec-9b96-661c61c6757d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f984abeb-e0ab-4cc4-ac09-ebabd62a73db"
        },
        "item": {
          "id": "349379be-36c9-4926-9ebd-0cb30304d45c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ea6ddae6-5c41-456d-9e3d-ae5928f15adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e56d3a1-98ca-4b08-bd39-48e1be6d036f",
        "cursor": {
          "ref": "a4851080-9814-4ba2-a01e-f47dc24a8505",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "749cdc0a-d80d-4f63-8f7a-ec50dd204be5"
        },
        "item": {
          "id": "2e56d3a1-98ca-4b08-bd39-48e1be6d036f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9321790a-0abf-4728-ad8f-29d5554f9ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56334a7a-785c-4fa3-b9c7-7e1246facaed",
        "cursor": {
          "ref": "7ccb457e-d6f5-4cdd-a26f-b794caa88c1b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "240f865c-cbb1-4e5f-b167-c0a6075ef4cd"
        },
        "item": {
          "id": "56334a7a-785c-4fa3-b9c7-7e1246facaed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "32828c1d-d881-441d-b316-c187b125826a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd1f7d1-5bb2-456c-8f90-60ee1981f224",
        "cursor": {
          "ref": "2981d411-a9b2-42b2-821b-e87b2307edf3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "29ef0a84-b2d9-4c36-bd2a-abda1747fde2"
        },
        "item": {
          "id": "6bd1f7d1-5bb2-456c-8f90-60ee1981f224",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bba22301-cdfe-47a4-ad24-3d9063d35f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a949af3-9cb7-4d1a-b2db-bbe427133c7e",
        "cursor": {
          "ref": "50713500-d078-4396-85d3-64637a8a0a7e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e6203807-3135-4964-9292-de5831285166"
        },
        "item": {
          "id": "2a949af3-9cb7-4d1a-b2db-bbe427133c7e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f1565afb-f45e-4ab4-a90b-3fec386a8131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd41df7-5d15-4e9b-8f03-c21dd5669405",
        "cursor": {
          "ref": "270fbdbe-ef8c-40ae-af95-728b1a5526ef",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7480f073-3d56-4ede-8e30-e571a4494a35"
        },
        "item": {
          "id": "3bd41df7-5d15-4e9b-8f03-c21dd5669405",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "49215ea2-fda4-4012-ad11-3d7c480929c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77fad76-6610-4365-a147-81c853043754",
        "cursor": {
          "ref": "4cfed461-9f52-4e49-baf1-0e53e3f0d4f9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c8101b5c-0290-4fe8-88ab-fb7344fe97ac"
        },
        "item": {
          "id": "b77fad76-6610-4365-a147-81c853043754",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "471bed2a-2ce7-45ec-9fc0-3ea60da6d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678fc2d5-b0d1-4ba8-8f89-d4cfa0564cfe",
        "cursor": {
          "ref": "d5b2d2e3-bd67-4b44-a54d-605a1b825540",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fae925de-5fd7-4cfa-b3db-15b034ca8155"
        },
        "item": {
          "id": "678fc2d5-b0d1-4ba8-8f89-d4cfa0564cfe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5b973e0e-c351-4a1c-a6f5-e56d0f994753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f171de30-735d-4a18-a218-e5c5166dde0a",
        "cursor": {
          "ref": "40ac4774-af83-402c-917d-a18c4eabb730",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "354361a7-93e9-47e3-bc21-612dd694aa59"
        },
        "item": {
          "id": "f171de30-735d-4a18-a218-e5c5166dde0a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "793b826d-8f7f-4813-ac18-a39af427e16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a36cf95-32de-4e49-85a2-383ec501e9bc",
        "cursor": {
          "ref": "82e659b2-e9a8-46fc-a309-c9f45ec21823",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e66aff56-d8d8-4eb8-93c6-9c2b2be5e58b"
        },
        "item": {
          "id": "7a36cf95-32de-4e49-85a2-383ec501e9bc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d5312137-b161-4bef-a8c1-4f860cf48f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04447285-e7f5-4719-8849-bc748873d9ff",
        "cursor": {
          "ref": "9a9fc541-769a-46b9-a290-b05767664ea5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4695367f-a67f-490b-8230-390e06058d05"
        },
        "item": {
          "id": "04447285-e7f5-4719-8849-bc748873d9ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "496e2658-ab75-408a-aee3-4862fc3a4fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6d2b16-dd54-4f4b-8d70-461b77ff8806",
        "cursor": {
          "ref": "5cc29b0a-dec5-4b6c-b192-d8f2ed06e42d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aae83858-a2d0-4024-b3ef-5723508880f7"
        },
        "item": {
          "id": "ca6d2b16-dd54-4f4b-8d70-461b77ff8806",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dc819df0-400d-4614-a0ed-08f01b40a640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41e13cd-f87d-47ec-b1a3-4f16102c6cac",
        "cursor": {
          "ref": "d3804f02-156a-44e1-8be1-9aa336fb60dc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "00ab720f-19a6-4821-b12b-c86771608b66"
        },
        "item": {
          "id": "b41e13cd-f87d-47ec-b1a3-4f16102c6cac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "afc23fea-3a58-4dff-b209-c07912733762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643713e4-7c9d-40a2-8957-1cfc7c75b60c",
        "cursor": {
          "ref": "e2f77272-441d-40b0-b3f2-2d2c2c001f18",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c5d3c87d-b0f3-45a7-a6af-e023e7588879"
        },
        "item": {
          "id": "643713e4-7c9d-40a2-8957-1cfc7c75b60c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0cf6f83d-9629-481c-8c3f-0444d6b5a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f244fd19-cac3-41b0-92d1-9dd40e9e1323",
        "cursor": {
          "ref": "fb7bd713-81bd-4581-af45-53e08595c60c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5a59f98e-24fe-419a-890f-76c1c4d3cc10"
        },
        "item": {
          "id": "f244fd19-cac3-41b0-92d1-9dd40e9e1323",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "770c17df-eb32-4756-b335-f0ad4d40c8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e400556-2132-465a-b126-d58e36fd56fd",
        "cursor": {
          "ref": "0557fbfe-2deb-4b25-b937-2ced0e2e2f07",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3590fafa-d695-4533-ae4e-e1175411a27d"
        },
        "item": {
          "id": "1e400556-2132-465a-b126-d58e36fd56fd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e9416cee-bc18-40c2-ba68-2cae1f4f4e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec8307d-e331-4719-a8e3-233097157ce7",
        "cursor": {
          "ref": "6f79225f-573b-4d92-a8cc-79497c431ac6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81f57f05-8a8e-4419-a080-c8d9b3002b7b"
        },
        "item": {
          "id": "8ec8307d-e331-4719-a8e3-233097157ce7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c78b17ee-b17c-4bcb-bfa3-81516dd3c6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de4a205-472b-4bed-9768-4d5841746906",
        "cursor": {
          "ref": "ed172acb-21d0-4c03-9564-d7cf8310c07d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5b99a976-131e-41fa-aa9c-9bdc472fdcd3"
        },
        "item": {
          "id": "1de4a205-472b-4bed-9768-4d5841746906",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c0127f70-435e-4a8b-aa3b-e020fa43d831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4253bda7-8eb6-4603-a805-f044894c91dc",
        "cursor": {
          "ref": "2ca1203b-e702-424d-a85e-ee799d260ac5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9760a6bf-f1c2-47b0-bb37-615233181a80"
        },
        "item": {
          "id": "4253bda7-8eb6-4603-a805-f044894c91dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae5b7ab4-c4cc-46e7-bb6d-18b629ee7916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085856df-8239-482c-81f9-2505f0e92eaa",
        "cursor": {
          "ref": "963f5be1-d46d-49e6-868a-21083a8ae40d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4db83962-d811-4ab2-822b-8a08f9269302"
        },
        "item": {
          "id": "085856df-8239-482c-81f9-2505f0e92eaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "370951cc-9586-40c8-80c6-dec4059892e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7c9303-d3cf-40fb-98fe-35535a0eb928",
        "cursor": {
          "ref": "e9dd3f27-66be-49a8-813c-3d539743ad83",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ec577743-2631-4caf-8edb-0c76f3fc97b1"
        },
        "item": {
          "id": "0b7c9303-d3cf-40fb-98fe-35535a0eb928",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "70a4c5be-0ece-4c0e-ba1f-b667795ccdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb35699-0d9c-4ee2-932c-5962bcbdf419",
        "cursor": {
          "ref": "08c34dc0-e2ed-49a6-adc3-95040f1eb4f9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "949ed632-e7e5-4901-939e-ce89858db2a9"
        },
        "item": {
          "id": "ffb35699-0d9c-4ee2-932c-5962bcbdf419",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "51e945da-48aa-4f1e-bf5f-1b54eeb9176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ed313b-8c6e-4664-b011-54cc825b3d37",
        "cursor": {
          "ref": "0d7f0110-4946-4f2a-977d-8bae9a2b99d8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cb6a6d5a-efb5-4af3-97dc-b9723bbb486c"
        },
        "item": {
          "id": "26ed313b-8c6e-4664-b011-54cc825b3d37",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "48934dd3-1a49-4576-a7db-08cebea516dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830e5af0-1183-4eb4-97da-b86afb26f7cd",
        "cursor": {
          "ref": "ff3e1d63-70bb-421f-84ce-63c759e5976c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eb1960b6-00c0-40cb-aaf7-d9ffa1f8eb8f"
        },
        "item": {
          "id": "830e5af0-1183-4eb4-97da-b86afb26f7cd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "18083e64-9248-4d37-bbe0-c81b82d0231c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e36677d-6dfe-480a-bd2b-e749e485d88c",
        "cursor": {
          "ref": "6a27e794-c5cd-4b33-b069-698b14129538",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cb52ebf4-e400-4bb2-81f9-19873bad32af"
        },
        "item": {
          "id": "0e36677d-6dfe-480a-bd2b-e749e485d88c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5ae7cc93-920e-4988-b240-fc1232338cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85f143-34e8-4237-8ee4-88342b8f20d0",
        "cursor": {
          "ref": "e35a49e4-7b1b-43a1-b19b-bddd14c0ceed",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a5efd2df-e353-4c76-90cd-30de7d44228a"
        },
        "item": {
          "id": "ad85f143-34e8-4237-8ee4-88342b8f20d0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f84a7569-480c-4691-97a0-17584ab75867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c23300-1a2c-4578-9e8e-90638e981dc1",
        "cursor": {
          "ref": "d88a9ea7-8e01-4c29-b727-f63b458c67a9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aacccfae-ffff-47c9-8104-bfa3d928bacc"
        },
        "item": {
          "id": "49c23300-1a2c-4578-9e8e-90638e981dc1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15dae10f-2e36-40c7-a62a-52220632759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adb6411-d58e-48c3-905d-32c0cc6012e5",
        "cursor": {
          "ref": "f929a471-e10d-4383-b0c7-4b738ab3dbbc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e72a3700-6ad3-4150-a6c7-453a3ec50065"
        },
        "item": {
          "id": "0adb6411-d58e-48c3-905d-32c0cc6012e5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ccee54c-2e5e-4b10-9052-62b0cb4629ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed26ad50-6597-417e-ba43-6516b0eb1d31",
        "cursor": {
          "ref": "06501654-34e7-4726-ab7c-98627f4b528a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b03b1003-a3cf-47f3-9b52-94aafea4b327"
        },
        "item": {
          "id": "ed26ad50-6597-417e-ba43-6516b0eb1d31",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6b8408f7-12d5-4e96-98ff-62cea4906479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26901fed-ccc7-48f6-817a-4078292907a2",
        "cursor": {
          "ref": "8a584870-6f0a-4650-a7bd-7d78a0c8460e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fedd2e69-cc2a-4ef1-ac93-7ec83c3a6645"
        },
        "item": {
          "id": "26901fed-ccc7-48f6-817a-4078292907a2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ebd9f006-9530-48b0-95e0-c936a589a24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e536ef10-fad6-4c00-9161-d22c2099adfe",
        "cursor": {
          "ref": "291bfc7d-505e-4b2c-9218-1075c0919c0e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0a09b650-019a-4ec0-a08f-ea7f3a33663e"
        },
        "item": {
          "id": "e536ef10-fad6-4c00-9161-d22c2099adfe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "970c0a08-7bf7-4e41-b753-7be90c7dd136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d565775-07b0-40bb-9075-4299702f59c2",
        "cursor": {
          "ref": "70eb3ca4-153b-4f95-8da8-4692c30a86a4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "de2e9f91-3a32-4c30-a3a6-a0a1a16664d1"
        },
        "item": {
          "id": "5d565775-07b0-40bb-9075-4299702f59c2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dbb34923-53d2-49c4-9e72-6ae16919d5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cffbf53-cea7-465e-86a2-a8510fffb915",
        "cursor": {
          "ref": "1d17f352-f13c-4852-8f7d-9c8aadd1f14d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9b44d6ff-4366-4c8b-849e-f5bfa4ad0890"
        },
        "item": {
          "id": "9cffbf53-cea7-465e-86a2-a8510fffb915",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c06ab56-1dcd-4bbb-8bee-b541c2bd7fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b95651-6c97-48ff-acac-b0cb82f04bfc",
        "cursor": {
          "ref": "b589d28d-4ec9-422b-af47-b08d58613058",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "46a78997-8ba2-47d2-b43e-80e0b32c1460"
        },
        "item": {
          "id": "88b95651-6c97-48ff-acac-b0cb82f04bfc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c379b577-0042-410c-888c-54215005157d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a5689-4c25-4b81-ac36-e1fad111af1e",
        "cursor": {
          "ref": "12ba8242-c046-47af-98a6-ac83c6d36270",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fbc51a84-826b-4b37-ad0e-eff5fb5fb68e"
        },
        "item": {
          "id": "8f7a5689-4c25-4b81-ac36-e1fad111af1e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1157b22f-ab8c-46a1-86bb-cdf0212ad8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d911963-35a5-4e4b-baa3-8a78c3f87362",
        "cursor": {
          "ref": "5a680c5c-c3e0-4687-a2a4-44dc15d01ecf",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dda3d0cd-840c-493e-bf40-7a84b1d0e16a"
        },
        "item": {
          "id": "3d911963-35a5-4e4b-baa3-8a78c3f87362",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ae19d315-8937-46f1-acd3-f7ecd00426c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250f7cdd-c14f-46ce-b3f5-24af57ed2953",
        "cursor": {
          "ref": "518ad110-9192-44c0-8f56-a30128369107",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "46633f44-0e07-41ca-be4a-f5a7ab7bba78"
        },
        "item": {
          "id": "250f7cdd-c14f-46ce-b3f5-24af57ed2953",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bd046e2c-e95f-4995-8dc8-e0163ebb32ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70017d00-2761-49c0-a4fc-b09695e7b495",
        "cursor": {
          "ref": "fbb6d8be-be07-40c7-aab7-9cf64d6ab55a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "00434991-a40f-4d72-b69a-ebad8ff910db"
        },
        "item": {
          "id": "70017d00-2761-49c0-a4fc-b09695e7b495",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5375a80d-002d-4e02-ac86-25bb17bcdc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310ee5a7-8627-4c5a-986f-d166013c4b37",
        "cursor": {
          "ref": "0d5dac04-510c-46f2-93be-27e6ae306aaa",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "895fd37d-91bd-4cf1-95b9-ea9159e69f53"
        },
        "item": {
          "id": "310ee5a7-8627-4c5a-986f-d166013c4b37",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b416b041-01f9-48df-9bac-3d8023cdad0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a65250-040e-4913-b436-391097fa53f6",
        "cursor": {
          "ref": "c3d375f0-9300-400e-8382-fbfbcf7eaece",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0f7dfdc4-3697-4c3c-a9bb-2af349361e1b"
        },
        "item": {
          "id": "e6a65250-040e-4913-b436-391097fa53f6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "af5d61ce-ac5c-417f-83b4-d963f5ec5bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb55e95-511e-4925-befc-90248fa44688",
        "cursor": {
          "ref": "111e6bed-1620-4e20-99bd-b7264112309a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a2455a4a-4166-442a-b688-d9069894f60f"
        },
        "item": {
          "id": "4eb55e95-511e-4925-befc-90248fa44688",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4cffb4da-b012-4660-a3ea-7e6a7467e646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a184b32f-c745-46ea-9d16-7dab8de08e91",
        "cursor": {
          "ref": "959541bf-ae23-484a-8061-d1b430db54ac",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd2e3731-5c76-46a8-b653-bc1989a61636"
        },
        "item": {
          "id": "a184b32f-c745-46ea-9d16-7dab8de08e91",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f10791ae-e28e-427b-9f95-5a0d4bcea1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7b99a1-b493-46a0-8676-fcc2cf9caf9b",
        "cursor": {
          "ref": "f1f7498b-89f4-42ef-b6a0-9e473bd8f882",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4a34350f-8cdb-4573-8ec2-0e4c846b6988"
        },
        "item": {
          "id": "6f7b99a1-b493-46a0-8676-fcc2cf9caf9b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "42f35883-5aae-4a50-a1df-0490a3920fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f394d7-7bf8-4c17-a46c-0a3e6076bc5f",
        "cursor": {
          "ref": "a7121089-8693-4c8c-975c-2cb4ca46deed",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fcc82f4b-94de-4eb3-a943-ca48673f4969"
        },
        "item": {
          "id": "f5f394d7-7bf8-4c17-a46c-0a3e6076bc5f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "24dcde49-c80b-4261-8933-356b3ef5d0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac5f48d-0bce-4990-9e32-e483dffad331",
        "cursor": {
          "ref": "2a7bd355-59d8-4939-8f2f-f5e0805742c0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ef813e06-929e-43c7-b03a-0ddf4532c525"
        },
        "item": {
          "id": "5ac5f48d-0bce-4990-9e32-e483dffad331",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1bf81ba-0104-44d0-8378-25dd50204c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f14084b-f2de-4ddf-a127-961d49bec63f",
        "cursor": {
          "ref": "285fdbad-0ceb-4642-8fd5-8514f47dad8b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cf52fba9-8abb-4745-a261-cb7fe8ae0a64"
        },
        "item": {
          "id": "4f14084b-f2de-4ddf-a127-961d49bec63f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6ed2c2eb-8f43-4ba0-a2b2-10be2fc39e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecb4392-780d-4d56-8108-c66b85f109c1",
        "cursor": {
          "ref": "c8b5a259-b59c-4d15-bf52-b34a14822bf4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fc61ea09-abfd-408f-a547-235c4cd37d85"
        },
        "item": {
          "id": "6ecb4392-780d-4d56-8108-c66b85f109c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2679da49-1287-484b-bf6a-0ac49e4b79a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075ad0f6-db81-4c95-804b-7876ef609495",
        "cursor": {
          "ref": "0581b40a-8545-485e-9bfe-e6f9ff0c38f4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91051f17-546c-4332-9e35-c1e704ece33d"
        },
        "item": {
          "id": "075ad0f6-db81-4c95-804b-7876ef609495",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2b9aa99d-ddfb-4c0e-93fd-b66cce40d82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb304c-d67e-4f37-89a8-68568940942d",
        "cursor": {
          "ref": "284fd67a-5491-4a7b-b237-c6a80d662d02",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6903454f-0339-4acf-a6d9-9e148f8793c3"
        },
        "item": {
          "id": "4eeb304c-d67e-4f37-89a8-68568940942d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "de6ca42e-616d-4ffb-9aa3-cf8a6840ba0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5959361-fe14-4ce7-b552-a1913fa2c675",
        "cursor": {
          "ref": "4030b8ef-aacd-44bb-96ee-61bdb4b0bc50",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6e9e7642-6ec2-4820-9738-78a660481b51"
        },
        "item": {
          "id": "b5959361-fe14-4ce7-b552-a1913fa2c675",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4367c9b7-7964-4229-8dca-040471133e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667a7b9f-af61-49d6-a63a-f8e905c73288",
        "cursor": {
          "ref": "5aa6f682-d3a5-41a2-9a6a-8e08def0edec",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bb8f8139-bc6a-41b1-8c43-4b692b8e569a"
        },
        "item": {
          "id": "667a7b9f-af61-49d6-a63a-f8e905c73288",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7208f629-b66d-47dc-b25b-336915ff9253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f31fa9f-cc20-4d08-b4ff-3459b5361fac",
        "cursor": {
          "ref": "40b268e1-f60b-4853-844a-75be88f313be",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd37d44b-64bb-47d7-af73-b2a4e5f6fa90"
        },
        "item": {
          "id": "1f31fa9f-cc20-4d08-b4ff-3459b5361fac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "49178e73-7234-4900-ae1a-408749f09156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192a49f4-c64d-4b3c-8093-e7f1b01a2047",
        "cursor": {
          "ref": "c74e2aac-e568-4c86-8760-34f88b6a61bd",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "49ba5ae8-49c2-4210-b86e-63b9103df109"
        },
        "item": {
          "id": "192a49f4-c64d-4b3c-8093-e7f1b01a2047",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4c457c00-73a1-4384-b29b-be4e2d46a999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "66890762-ade6-403b-9009-b64623d650d7",
        "cursor": {
          "ref": "d2c3596c-0d55-468c-b484-27bb5cb35ad5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dd8a1ad3-28ac-4b65-a1df-69ec2571687e"
        },
        "item": {
          "id": "66890762-ade6-403b-9009-b64623d650d7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "81e3fc91-d9b0-4f3b-ac32-ee9a2ce612f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "757a98c5-1ae9-4beb-922a-85dbe319dd8f",
        "cursor": {
          "ref": "965ba7b4-dd13-4e8a-bc58-2e76e0763eee",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2c444d91-4f93-4468-8bf6-7199cbf5e05e"
        },
        "item": {
          "id": "757a98c5-1ae9-4beb-922a-85dbe319dd8f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5a37328a-371e-4a07-bad5-a806786ac6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c15e1c91-f403-4cfb-be9b-c4d2b69ef2b2",
        "cursor": {
          "ref": "750e29ee-b82c-49d5-adb0-f9ffba203295",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "68d96366-4710-4ba4-8153-7c65cd32a25e"
        },
        "item": {
          "id": "c15e1c91-f403-4cfb-be9b-c4d2b69ef2b2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1c65a481-95d6-47d5-b6af-5bac81a34117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cded9c06-dfee-4d5d-a523-b4b46bb9527a",
        "cursor": {
          "ref": "1a975fae-f554-4938-bfc7-ae49be023ab6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ed38d970-16c6-4eb2-88f1-2554de6478f9"
        },
        "item": {
          "id": "cded9c06-dfee-4d5d-a523-b4b46bb9527a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "23298e6e-f641-4acd-b96f-0260eb5b0a81",
          "status": "Created",
          "code": 201,
          "responseTime": 10320,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32c8c41-fb17-4f6e-8062-b8616d9f7139",
        "cursor": {
          "ref": "34d5c9f9-30da-4582-befb-d626bbcbcf12",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "10fed4a9-aad7-492a-b1a1-5bde1a6c3c48"
        },
        "item": {
          "id": "e32c8c41-fb17-4f6e-8062-b8616d9f7139",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eb356f69-0714-41f2-94b7-aff9f2525b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "867d9e85-799b-491b-8d04-6148d6886b88",
        "cursor": {
          "ref": "c5d36b1f-fa33-4f7e-b235-57ca513bca7c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "02e22eb3-62d3-488e-89c5-0ad57ed8c63c"
        },
        "item": {
          "id": "867d9e85-799b-491b-8d04-6148d6886b88",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c3a4c863-a93f-4e91-bf8d-17ca23c4b373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "593b5cdc-2c13-4df1-ad30-e9b9d09f22ab",
        "cursor": {
          "ref": "62b6935b-6737-491f-a33f-86671af516e0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9a248ae6-9e59-4efa-8bd7-5417c4d57071"
        },
        "item": {
          "id": "593b5cdc-2c13-4df1-ad30-e9b9d09f22ab",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f134fd81-57fd-4821-b875-72bf32d340bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593e2fcf-b243-496f-8e68-6729533025d3",
        "cursor": {
          "ref": "99dadce1-7133-46c3-89ef-39c826f3afb6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b1406e0d-a26d-45a8-b08a-a18f8d46f39e"
        },
        "item": {
          "id": "593e2fcf-b243-496f-8e68-6729533025d3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c4e3dd10-0378-4710-88d1-d74dd77ce4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4541818-21de-45e8-84be-1e18bcef28f1",
        "cursor": {
          "ref": "9fd5e953-fda2-4011-8125-e7c54965ab02",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f6134eac-86da-4893-b0ee-28bcbde907fb"
        },
        "item": {
          "id": "b4541818-21de-45e8-84be-1e18bcef28f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1221e547-9ce1-41a6-9a20-07ed531bff12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce66786f-9658-4725-8d5f-cfb30c176c66",
        "cursor": {
          "ref": "62e999e2-b2c9-47bc-8806-40db8c0f2f71",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8020886f-82da-4268-ba8f-0770c11be3af"
        },
        "item": {
          "id": "ce66786f-9658-4725-8d5f-cfb30c176c66",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3880e771-d823-47b3-944a-c86841becc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728f5ba9-41df-4aa8-aed4-cf28d6b2ed70",
        "cursor": {
          "ref": "050d2082-5892-43c0-a65d-89425b5e0d30",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "76b0927b-6da1-4662-9762-d790bbc0c861"
        },
        "item": {
          "id": "728f5ba9-41df-4aa8-aed4-cf28d6b2ed70",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40fd98ce-2f66-4814-9f9d-c372bfd4fbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab8a7f8-a1c9-4e11-a30d-d399e50567a2",
        "cursor": {
          "ref": "2983dadb-e0d5-48e5-bc05-547fc5496cbc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4f15b94e-587f-41d7-a122-3c483030e290"
        },
        "item": {
          "id": "3ab8a7f8-a1c9-4e11-a30d-d399e50567a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9099a3db-75eb-4851-9550-a01518f7589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36812e2f-3a16-4c71-bb2c-4a15e7fcfe7e",
        "cursor": {
          "ref": "de7f3bc1-d0ed-4483-9540-37ab6620d119",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b42e95a-bd83-4d13-a90d-5f0fec75220a"
        },
        "item": {
          "id": "36812e2f-3a16-4c71-bb2c-4a15e7fcfe7e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ae91b9ef-579f-4ccf-86a3-8a869f2eee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f636172-6e90-4122-a2e5-3558da256fe7",
        "cursor": {
          "ref": "9d681360-f446-4b3d-990f-c32b824459de",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f291413a-5676-4bfc-9bb3-d329ab5bd779"
        },
        "item": {
          "id": "8f636172-6e90-4122-a2e5-3558da256fe7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f5b3be26-c96b-4235-ad8f-fa2a93b2c336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca85125-7dd9-4083-aefa-e90250fb085e",
        "cursor": {
          "ref": "8d0fda58-b7be-48fc-852c-4b28e57b08f6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bdc2630f-74a5-4a9c-b884-f3dc44adf06a"
        },
        "item": {
          "id": "dca85125-7dd9-4083-aefa-e90250fb085e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d57e6126-0b78-4485-96a4-6ef511b14e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf6ad98-06e2-48b9-88f7-4a9ce364b617",
        "cursor": {
          "ref": "b4cb6464-e867-43e3-ad8c-b8841d3df357",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ba737fb3-3a02-4096-8f1e-f747e7b58121"
        },
        "item": {
          "id": "caf6ad98-06e2-48b9-88f7-4a9ce364b617",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8e735338-18cb-4442-a82f-eab3773de8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b349a2-306d-47f1-a779-1a19bf8b94bd",
        "cursor": {
          "ref": "0a719e12-c98e-4af4-92bf-568ea660dc28",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "37816414-c73e-4267-82e8-7727e5f81704"
        },
        "item": {
          "id": "83b349a2-306d-47f1-a779-1a19bf8b94bd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eedc0f3b-a580-4520-b5cc-22505c4094e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417d1b0d-b938-4388-b830-81d73973c78c",
        "cursor": {
          "ref": "52faf6d6-2306-4bdd-ab80-5120bfe3160b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "efd144fc-dabc-4801-a012-f87dc0e30fef"
        },
        "item": {
          "id": "417d1b0d-b938-4388-b830-81d73973c78c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8a64f317-0ee6-44da-976c-85eb26b26887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f48706-e9f8-4c00-a2b5-8831eaf69328",
        "cursor": {
          "ref": "90f3960d-dcd3-423e-aaf2-7e00e1ca232d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c3034c50-8cc4-4542-bd0d-624f15e846d5"
        },
        "item": {
          "id": "93f48706-e9f8-4c00-a2b5-8831eaf69328",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e74e6335-63a9-4b4d-b7f0-005ce1c4ac4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8c526a-02d9-4820-ac05-e684850aa5d3",
        "cursor": {
          "ref": "dacf0d44-f1a4-4d3e-917c-49f29799b4bc",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "42e4e844-8ef4-42c6-b1d0-330ef7e4e5cf"
        },
        "item": {
          "id": "ed8c526a-02d9-4820-ac05-e684850aa5d3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "534a86d9-f9b5-4f9e-a72f-9b6a146ce772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7c232e-0a6f-43ef-9bec-e67b08205fb8",
        "cursor": {
          "ref": "fe7ea83b-2582-4a04-b460-1c1eda20378f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b229fe7-2e5c-46af-a994-d674e70126ce"
        },
        "item": {
          "id": "ec7c232e-0a6f-43ef-9bec-e67b08205fb8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "df83af12-7173-4172-8c2d-7eb84af70165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1024e4-8af1-48ee-9ff0-161a06f967cf",
        "cursor": {
          "ref": "984d5a72-57f6-4257-bc39-5507898be3f8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c322d78-45ff-405c-9741-7f3998369244"
        },
        "item": {
          "id": "de1024e4-8af1-48ee-9ff0-161a06f967cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9e84809-1b55-4e95-b229-bdb9d7bf4637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f965c-4911-4074-a3cc-850266777858",
        "cursor": {
          "ref": "75b3e684-714a-4b71-b66f-4cc6ffaf54b6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ed35d0f1-aa7d-4347-8530-b5811a6193c5"
        },
        "item": {
          "id": "b81f965c-4911-4074-a3cc-850266777858",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "395fce64-fd5f-4594-83d9-462d142f8d3f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8e261178-f1c2-46ac-b56a-d9ef9ec7a90a",
        "cursor": {
          "ref": "3ac06e82-7954-4b11-85d0-0262c2e132d4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d21c308b-b7a3-42cd-9d0f-9aed30dd6f03"
        },
        "item": {
          "id": "8e261178-f1c2-46ac-b56a-d9ef9ec7a90a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f102959d-fed8-460b-b20c-1746c99d556f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e5585-7fd2-437e-928b-61d584074252",
        "cursor": {
          "ref": "f3e0db3d-5e01-4a7b-b242-0e95e858cdec",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "97858f79-3691-4b9c-9f0c-6f64352d0e42"
        },
        "item": {
          "id": "6a0e5585-7fd2-437e-928b-61d584074252",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "66fe4da5-7bb4-4464-8dde-571b3f0cbbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59c6915-60f4-4021-aee3-f28c7be7c799",
        "cursor": {
          "ref": "9c8a64a9-f893-4995-83ac-a51d74847891",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "52f379ca-907d-4ebe-a12f-c85dc329723f"
        },
        "item": {
          "id": "f59c6915-60f4-4021-aee3-f28c7be7c799",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f939ee90-4a69-49a6-afc2-21f38cd436cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c7a5a3-d747-47ca-b154-878a9ae8f245",
        "cursor": {
          "ref": "127c9e91-c8e6-450e-8326-eed5db679281",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f5c7fc35-77d1-478b-af01-9e230aa844d8"
        },
        "item": {
          "id": "49c7a5a3-d747-47ca-b154-878a9ae8f245",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "92965458-1bf9-4f9f-994d-8a41c7eab7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4fbf14-85d1-4a50-a971-b3fe715762d4",
        "cursor": {
          "ref": "4fd24603-6089-4889-b37b-ef8acbd9f6be",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1dece74e-07e1-4249-a2e3-154dad9ceaf0"
        },
        "item": {
          "id": "ff4fbf14-85d1-4a50-a971-b3fe715762d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5ddb63b-4be7-498e-b69d-8bacfc9886eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ac0a09-f15d-4ce6-a2bd-233b4c2bbfed",
        "cursor": {
          "ref": "6cb5f9d5-1884-41a0-a932-51217cb1fa75",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5e4ef256-321d-4691-a27a-fc08b3ee1089"
        },
        "item": {
          "id": "c2ac0a09-f15d-4ce6-a2bd-233b4c2bbfed",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72e39723-3c45-46b4-801a-6b14f62ee35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a41ae36-e062-47aa-b50c-a587d6c06f50",
        "cursor": {
          "ref": "04fe354a-4e60-4424-9b55-4d83526b8bfb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8b36dea9-34e3-4d0a-b404-aee03484217b"
        },
        "item": {
          "id": "0a41ae36-e062-47aa-b50c-a587d6c06f50",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e7ee4a4b-3209-4889-83ff-dcd08a896129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767bee49-bab9-4bed-bada-8309193d8ea7",
        "cursor": {
          "ref": "d95ac6b4-9453-4429-b266-05f57fb34d1a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8262d957-3587-4415-b308-a9c20ff5934d"
        },
        "item": {
          "id": "767bee49-bab9-4bed-bada-8309193d8ea7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b6d57cbc-db19-43b0-af78-727bbbbcb61d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a286777f-9082-45e7-a394-0d17657b04fe",
        "cursor": {
          "ref": "99630e66-6503-4dfc-a745-17261398c7e0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5f9d9502-9690-400d-8082-3c207ea0e31b"
        },
        "item": {
          "id": "a286777f-9082-45e7-a394-0d17657b04fe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "84c1e162-a4ae-4f0f-8455-e9e36baa91a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a465c37-e2b3-4056-8666-5f0c54825255",
        "cursor": {
          "ref": "079688b4-9938-42f3-a20c-1b177fde6112",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c59c4e69-72f0-4729-97e9-d500f67c23dc"
        },
        "item": {
          "id": "7a465c37-e2b3-4056-8666-5f0c54825255",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7a94ea9b-893b-4635-b25a-34cefd75aca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53021afe-f2f9-4cda-b155-2c85deb39e26",
        "cursor": {
          "ref": "cbdfe7fe-35e2-4a6a-93ff-5e4dc90a65ad",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d20cf9a-11a6-4334-800a-a4c1c090e137"
        },
        "item": {
          "id": "53021afe-f2f9-4cda-b155-2c85deb39e26",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d1343012-4ba7-4d3d-aa53-814bcbbffab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1455a985-6376-41ad-b315-5fa7673438c2",
        "cursor": {
          "ref": "4a288485-9b82-43aa-9c33-40b6b0d9b7e3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2261d2c7-2dee-434e-8907-1c14d190a518"
        },
        "item": {
          "id": "1455a985-6376-41ad-b315-5fa7673438c2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b30a9a4-94a9-47b1-8107-0dd9b244a348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a524df-bfa3-4cd1-9280-9888d3c1ac7d",
        "cursor": {
          "ref": "c25d81bb-351a-4779-b79e-2618e4fea60f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9ecda57d-5ea9-4436-846a-bc394e953ff4"
        },
        "item": {
          "id": "74a524df-bfa3-4cd1-9280-9888d3c1ac7d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2768d02f-99c4-47ba-8fd1-545b57489afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538d3e7-52d8-4465-8456-b0fb950de14c",
        "cursor": {
          "ref": "9bb9860e-62b7-4936-bfdf-6eb466a79462",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "056a06d1-8a54-43f0-971f-f326732f4dcb"
        },
        "item": {
          "id": "4538d3e7-52d8-4465-8456-b0fb950de14c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "195eedc4-c80c-4bef-8af9-fa2f0c1b9888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb44e712-6137-42b8-8623-caecf8c11b8c",
        "cursor": {
          "ref": "7e94cfba-a2d6-4f03-9f3c-1a2c31d35f0b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a39322ff-de6e-42d4-9b27-09f40fd2d018"
        },
        "item": {
          "id": "eb44e712-6137-42b8-8623-caecf8c11b8c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "acec2054-b220-4481-98f0-cb8b8808cbaf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6754a2f6-26cb-4ba4-9fb6-b332e0e53b30",
        "cursor": {
          "ref": "1d52ed48-c208-47f7-b5cb-f4d27f50fbd3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f0ebd049-4c3f-4f45-ae55-df59537f90fe"
        },
        "item": {
          "id": "6754a2f6-26cb-4ba4-9fb6-b332e0e53b30",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6400b9f0-ff52-4f5a-ba3a-5516033da362",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b704ccac-1955-4e88-b0e2-77c3f1ab9c42",
        "cursor": {
          "ref": "86c33b61-f816-48e1-afd3-8d202fac34cb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4bdd9d49-3f54-4f73-9b29-7e8204114393"
        },
        "item": {
          "id": "b704ccac-1955-4e88-b0e2-77c3f1ab9c42",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a0ed6d02-e297-4658-bfcc-fdaa20cabf93",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f7797fce-c7d7-4368-8a6c-136a5cb98fa2",
        "cursor": {
          "ref": "ef8d302d-83aa-4e7a-933a-9c202929b596",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "79269dae-ddbd-4a36-bb9a-f9a32b8ff7d9"
        },
        "item": {
          "id": "f7797fce-c7d7-4368-8a6c-136a5cb98fa2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0b50589e-3c5a-46f5-93ef-474f5ad4ede9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "115ffbaf-c716-4778-ba78-c35b05a0e326",
        "cursor": {
          "ref": "dffbd7e1-3ad2-4e17-9461-f6f37ddf7772",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "767debaa-960b-4855-a832-e7b48a3f81f3"
        },
        "item": {
          "id": "115ffbaf-c716-4778-ba78-c35b05a0e326",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "af177e49-918b-45c2-ad3f-34737c3aa8ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1aa8ec0a-a717-4b72-81a2-cff62eb77ea8",
        "cursor": {
          "ref": "419d40b3-d8c7-4a35-a22d-45c5a778012a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "913b1270-6bd4-4a66-b455-41865cd11bbd"
        },
        "item": {
          "id": "1aa8ec0a-a717-4b72-81a2-cff62eb77ea8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "809ad97a-3818-4a1a-983f-6bf7fe44761f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "81ff5286-70cc-4402-b22a-9aa466341cb3",
        "cursor": {
          "ref": "f8c5ec3a-b0dc-4db9-8286-e283b0adf5be",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8b0bf1a4-a883-436a-a9b3-e0ad8769f62f"
        },
        "item": {
          "id": "81ff5286-70cc-4402-b22a-9aa466341cb3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d590880e-20bf-40b8-b93b-75ecb77984b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98979641-841d-412c-b291-99fcb19b438c",
        "cursor": {
          "ref": "5dc9359f-bd05-4a9d-b312-baded7291bc4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ee0b1469-dea8-41b5-977b-f64d964940f7"
        },
        "item": {
          "id": "98979641-841d-412c-b291-99fcb19b438c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3523a5b3-0113-4eb0-ad80-210ae1a83382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d41c75-ad1b-43f5-a48c-93c02e27076b",
        "cursor": {
          "ref": "4bcd275f-414e-4d55-8ba6-c309a52ff7ef",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b17d62c8-2233-43f4-92c5-ffdbdb5ed7f1"
        },
        "item": {
          "id": "e6d41c75-ad1b-43f5-a48c-93c02e27076b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1362f7e5-db2a-4638-86d3-646547ee372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d0804-72a9-430c-b1ec-332423702e3a",
        "cursor": {
          "ref": "8bceaf5a-1269-4d6c-a2d2-92130a5214df",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d126dec0-e139-4e5e-b25f-1338cb156e8c"
        },
        "item": {
          "id": "6a9d0804-72a9-430c-b1ec-332423702e3a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d325d121-234d-4e33-a21a-d374abf46bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514160b7-fcdf-4d10-beb2-904198116245",
        "cursor": {
          "ref": "6c705d80-3a9e-46ef-a8c3-50810c7a9059",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef7640ea-dbd0-436c-9929-ce761d1b9532"
        },
        "item": {
          "id": "514160b7-fcdf-4d10-beb2-904198116245",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2412932b-ea48-4c74-9ac8-899d3923cfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e5502-2e6f-4aaa-bf2e-188e8977f64a",
        "cursor": {
          "ref": "59020bff-406b-449e-841d-5bd0c41a5731",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e9fc4f58-7d8a-4543-8cbf-6eda5df482da"
        },
        "item": {
          "id": "1b5e5502-2e6f-4aaa-bf2e-188e8977f64a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "77e4da68-bf44-4580-8200-ac5c5c82d299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cffdec-b516-4231-a731-5f19287cb6d8",
        "cursor": {
          "ref": "b3ea8d24-cd4d-4c97-9755-eaddbc15d1de",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "15aab9dd-21e3-4473-a743-c378fd05ef71"
        },
        "item": {
          "id": "b3cffdec-b516-4231-a731-5f19287cb6d8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c42294c3-4ddd-462c-99e0-6b0158f23423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d243b8-c35a-4cc9-ad14-bb5bc18648ab",
        "cursor": {
          "ref": "f21e67a9-aac1-4956-af36-a35ce71dc96e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "829118c4-e2e6-49f1-b644-0a14e579fa36"
        },
        "item": {
          "id": "47d243b8-c35a-4cc9-ad14-bb5bc18648ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d4624944-03da-49f0-b233-beca7b3d9197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1caae16-90fb-496f-93b6-23dbf0ecdbad",
        "cursor": {
          "ref": "95d83e50-c793-486b-83a7-d662058fe4a2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c2eaca1a-a805-4d34-bfcf-e91994d4fa7b"
        },
        "item": {
          "id": "c1caae16-90fb-496f-93b6-23dbf0ecdbad",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "145736fb-91f5-4587-8b24-5b2e962ddb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027cf038-34ea-403e-9bf6-5ed16d8d0a2e",
        "cursor": {
          "ref": "7281345f-9656-42ce-b6d7-c142260d547d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "850a448b-57fb-4b2d-bc2e-2ac49817c192"
        },
        "item": {
          "id": "027cf038-34ea-403e-9bf6-5ed16d8d0a2e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5c2501f-cddb-450f-b7e0-bce701e7ab2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a156e01a-14fd-4c46-9671-2354135ddec6",
        "cursor": {
          "ref": "6a1cdc8b-4d61-4504-b1ec-a9580a3dbdca",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cdf08bf7-a1cf-4735-a24b-bd4478cfe9fa"
        },
        "item": {
          "id": "a156e01a-14fd-4c46-9671-2354135ddec6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "55dc8254-d98c-4148-b296-92cb866638ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567c0127-5c79-462b-8bdb-254e3d007912",
        "cursor": {
          "ref": "c1165e32-1052-4011-829e-7db3a7b42ca6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a2f51bb4-c68d-4808-9b63-68a2f6d06672"
        },
        "item": {
          "id": "567c0127-5c79-462b-8bdb-254e3d007912",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "73cd4981-876b-46c8-acc3-fb1a0e587cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d8a0f7-a8f3-465e-a048-39870f76c232",
        "cursor": {
          "ref": "2809ae8f-121b-4e17-8a41-547154aadb83",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "244fc6d8-c3df-4ce5-8fd7-95cc33a87905"
        },
        "item": {
          "id": "53d8a0f7-a8f3-465e-a048-39870f76c232",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "39fda8dc-ebbe-41a1-8d24-46d75e817411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d169798a-2209-4c20-adba-5b1da81f31e9",
        "cursor": {
          "ref": "e1bfbb90-3cbf-4697-b690-1e0d462d5746",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f3e963a6-dbe0-4af2-ad98-111057b5c161"
        },
        "item": {
          "id": "d169798a-2209-4c20-adba-5b1da81f31e9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "893b043e-d1de-4285-9e3b-04185209f760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a4c35-b47c-4c1a-b4a1-4745b9f8ab6d",
        "cursor": {
          "ref": "c79f3aa5-bb59-437f-bc99-bf5aa982130f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f83b0da6-d1dd-47ab-a539-876237973289"
        },
        "item": {
          "id": "e98a4c35-b47c-4c1a-b4a1-4745b9f8ab6d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9a93847e-f0ec-4f2f-94c1-17a7de02ab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0339cdf4-b86c-4e70-b497-6e0314c0ce54",
        "cursor": {
          "ref": "182e3a48-a319-4de7-b176-44822a78f3c7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1f864e4d-7c60-47cf-b81d-3816eb28c2d1"
        },
        "item": {
          "id": "0339cdf4-b86c-4e70-b497-6e0314c0ce54",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1fc80c85-1c0f-4bf2-b3dd-26101fbefa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af16c34a-b7e8-4a68-9fbe-2eca2223ad00",
        "cursor": {
          "ref": "6ef44092-7545-431a-9951-f66e66fbaa80",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4c372c58-1bed-4108-ac8e-355a617925a4"
        },
        "item": {
          "id": "af16c34a-b7e8-4a68-9fbe-2eca2223ad00",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c46c3840-da1c-49bc-8a8d-45d297b202b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d617e378-e938-4400-bac1-e51e3216c480",
        "cursor": {
          "ref": "40420a87-21c2-496b-9617-63f812e7cdfe",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "25c457b4-1e0e-404b-aa3b-5c68e73867c3"
        },
        "item": {
          "id": "d617e378-e938-4400-bac1-e51e3216c480",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "39a2a67c-fc6c-48c5-945a-ee76938153d4",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e6acbaea-bbe8-4eb1-9e6e-20f75122fc2e",
        "cursor": {
          "ref": "71036e29-bd07-4575-a5d5-cfe23a944cf6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "51270d14-6d48-426e-bbe3-7b3cc45eb5fe"
        },
        "item": {
          "id": "e6acbaea-bbe8-4eb1-9e6e-20f75122fc2e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ab087ff7-e68e-4c00-9831-d0a906215acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963b0cfb-801d-488f-b435-990a26b990ff",
        "cursor": {
          "ref": "d8a48e51-df3e-40cc-adcc-d5de793b1aed",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "efb073b9-a8ea-4d2e-bb48-ebe7e1a0a438"
        },
        "item": {
          "id": "963b0cfb-801d-488f-b435-990a26b990ff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "27a6bae7-0c81-47e9-9aa8-b0eb4d9fffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bfcd8d-0d16-4379-bd2a-3cd9a5791916",
        "cursor": {
          "ref": "a4af1558-cc23-47ef-ba40-fca92e981380",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5be9ee1d-f3eb-4e94-90ad-ef1d967998b5"
        },
        "item": {
          "id": "e7bfcd8d-0d16-4379-bd2a-3cd9a5791916",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f9dc5e25-9d32-4dec-a148-b5d4a5fa4aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7590cea-6569-4e5b-bf93-f7f097ccb808",
        "cursor": {
          "ref": "54a510d8-d392-4a6d-9b3e-52e8f09d4797",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fd70b41a-8b29-4617-ba3b-edaca12bc9fd"
        },
        "item": {
          "id": "f7590cea-6569-4e5b-bf93-f7f097ccb808",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4d35262-21ad-48ab-b8a1-a881b51b73f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f2e25-e5b7-4c8a-913e-c68f51ac1c51",
        "cursor": {
          "ref": "21837c8e-6dcc-45c5-a4d9-28ef87753f7e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "241af30a-8a08-4819-a146-026d6f3bdd78"
        },
        "item": {
          "id": "eb0f2e25-e5b7-4c8a-913e-c68f51ac1c51",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ce9dc5ba-357b-44cf-b401-8fc051eff469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccfe610-012d-4b3e-ab59-295ac2ef909f",
        "cursor": {
          "ref": "bd7dc135-2323-4650-a513-6d1a0fb64009",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b87da771-3eb5-4c03-a992-01218a7cd856"
        },
        "item": {
          "id": "0ccfe610-012d-4b3e-ab59-295ac2ef909f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f3026ea5-6a2d-45d5-abb7-8fdfad721888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9da68-1618-4501-8afb-a4398b14dda7",
        "cursor": {
          "ref": "ae6123ea-8720-4f9b-9746-682371b3d380",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ea88fff4-62d4-42ea-9041-c12559e69ee7"
        },
        "item": {
          "id": "cee9da68-1618-4501-8afb-a4398b14dda7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03048656-f2ac-4b3f-b412-8aab8ecca9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113630ca-d668-47a4-9ec9-a29b84dad710",
        "cursor": {
          "ref": "9cb181d7-5e5b-4a4d-8367-3ae02c8a1acf",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2c91f1ff-8a96-416a-9cca-228104e0ecfc"
        },
        "item": {
          "id": "113630ca-d668-47a4-9ec9-a29b84dad710",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8d87e3e8-291f-4627-aeb2-64a409f10760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631eb496-b6c0-4c10-b3ab-86e23f44e5ba",
        "cursor": {
          "ref": "55c2aa51-0b41-479f-9707-44187e2f6aac",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1140a4cd-5727-4cf1-b4ae-7777457f0b89"
        },
        "item": {
          "id": "631eb496-b6c0-4c10-b3ab-86e23f44e5ba",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6477f5d8-dcf7-4b8a-81c4-77a9b80bfbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a7467-073f-4146-b88f-74b962c479a2",
        "cursor": {
          "ref": "ca6eab88-efc4-45aa-953b-6bf298241e5b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bd46a6d3-d9fa-44d7-9ae9-3185f2d9f1a9"
        },
        "item": {
          "id": "409a7467-073f-4146-b88f-74b962c479a2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "195b9a5e-d6b4-4eed-80ba-ce2ae06213a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a58b0c8-4490-4084-ae68-a4779dc07f16",
        "cursor": {
          "ref": "86085471-d932-4337-ad43-775322e9a856",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1ffbb6f6-8aef-4f37-b100-2bcc7800eddf"
        },
        "item": {
          "id": "0a58b0c8-4490-4084-ae68-a4779dc07f16",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d616eae3-912f-4981-bc3e-4f80dea00d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac236eb0-8735-4477-ae55-288782142cf8",
        "cursor": {
          "ref": "16c2bce6-b719-46c9-b42c-82a0baac2a1d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2efd06e8-e4dd-4fa7-8b75-f2d83f398ed3"
        },
        "item": {
          "id": "ac236eb0-8735-4477-ae55-288782142cf8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "24b4c389-9347-4b20-9c9f-f5188e1e7aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60a65b0-479b-4f41-942d-0b0768c201c1",
        "cursor": {
          "ref": "ecf739ef-993e-46fd-92a1-10a6c609e0b2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dc42783c-62f5-45e6-8eb2-6f57c78342c3"
        },
        "item": {
          "id": "c60a65b0-479b-4f41-942d-0b0768c201c1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3025bf84-3a8a-442d-9396-26e7e84f9a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa6aa72-2d04-42c7-9f2d-1d63ac977c31",
        "cursor": {
          "ref": "fecaddce-9929-47de-8704-9fc82cb3e174",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c93b3f6c-eaca-4a90-963e-f67893f65303"
        },
        "item": {
          "id": "daa6aa72-2d04-42c7-9f2d-1d63ac977c31",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "818a46a6-8aff-46b5-9816-46db059c9b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ff3746-fa4c-41d7-b5d9-f66c334117f1",
        "cursor": {
          "ref": "aaefb472-e43a-40b5-9d06-ccc422b17776",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "06579fb9-82ea-472b-a779-12b5e221e391"
        },
        "item": {
          "id": "f8ff3746-fa4c-41d7-b5d9-f66c334117f1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d01cc390-be72-40f2-83af-4da49b6ff191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb8e526-e5c4-4cc5-bedf-5cda51403cbd",
        "cursor": {
          "ref": "ca6a71b8-df7a-45fe-875a-9501bfa59427",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a8ebeee-ccd2-4ca5-88b4-59b4252aa838"
        },
        "item": {
          "id": "edb8e526-e5c4-4cc5-bedf-5cda51403cbd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bc8b9f12-a1af-4314-beef-8d16b2e24e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1c5006-a8fa-4307-970d-59ee7a558e39",
        "cursor": {
          "ref": "bc6ddff0-6922-4317-a2ca-e5b29189da83",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e8b3f30-3c07-481c-8f0c-98d67c15e64d"
        },
        "item": {
          "id": "9c1c5006-a8fa-4307-970d-59ee7a558e39",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9636d2d4-78b6-4ed9-bd80-f8d26d7414ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b61046-acd1-4303-8536-23d9cd39856d",
        "cursor": {
          "ref": "cd0a6694-7783-459c-ac26-4de370a623d4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d9629ade-7a10-44be-842e-70ead50f07dd"
        },
        "item": {
          "id": "29b61046-acd1-4303-8536-23d9cd39856d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9327a67a-a0c0-49d7-9a32-d6dde7539f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03ae6f2-78cb-4a6b-ae70-c2bc1a697e9d",
        "cursor": {
          "ref": "c3e05bc7-80b3-4110-9a76-a702287b19a9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d9f7262b-5366-4d84-bd56-e00b451eb106"
        },
        "item": {
          "id": "f03ae6f2-78cb-4a6b-ae70-c2bc1a697e9d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ce37d6d9-b0c8-455b-a77f-c1d155efab48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd04a8c7-4220-4683-ac2d-63141b3079db",
        "cursor": {
          "ref": "cb01d08d-a9e7-440b-84ef-74785b83b813",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6fd81085-7365-43ac-9be8-34d49a0087aa"
        },
        "item": {
          "id": "dd04a8c7-4220-4683-ac2d-63141b3079db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "42fb7658-1ca3-4945-9fc2-503e8bd28c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ea0605-c2f1-499e-8aa2-7b37baa48b4f",
        "cursor": {
          "ref": "775e783c-a78f-4244-a2b3-29564cf2a878",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e7d94f3-6fc1-4774-b4b0-22fcea9ac5f7"
        },
        "item": {
          "id": "23ea0605-c2f1-499e-8aa2-7b37baa48b4f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3cbf8fb2-b9a4-4cf6-9c49-08900b625552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de2c7a8-fd30-4fd9-8712-1927f110d397",
        "cursor": {
          "ref": "d940c31b-1faa-4ec5-8be7-2fa2a127373f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "26c09b67-ba75-4850-b0e1-c92017261aa2"
        },
        "item": {
          "id": "6de2c7a8-fd30-4fd9-8712-1927f110d397",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dbd96f60-e967-40fa-b78c-aa9ea0ea3438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c7ba3b-595f-4af1-961d-f802f7c411f0",
        "cursor": {
          "ref": "5efc633f-0ea6-4d53-86fb-533dab3f3734",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "26822f81-cebd-40ce-97d9-00791513f12f"
        },
        "item": {
          "id": "14c7ba3b-595f-4af1-961d-f802f7c411f0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1f174ffa-ee98-4716-91ee-d21260402ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae8369d-e886-40f1-93bc-ccbc1fc03994",
        "cursor": {
          "ref": "9e0f79a4-0205-4bab-8678-f17786cdb0e4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2e8a59ff-b611-4e63-bfcf-14197ac784aa"
        },
        "item": {
          "id": "eae8369d-e886-40f1-93bc-ccbc1fc03994",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "343ae8d3-c13d-4329-97ad-937c18fe0211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcd7869-6779-4d34-8b73-3432a3088351",
        "cursor": {
          "ref": "8a218f70-5e1f-4080-90e8-fade2e119902",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0658b896-d056-4f67-a8cf-96b569ab3efb"
        },
        "item": {
          "id": "dfcd7869-6779-4d34-8b73-3432a3088351",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9a2f8873-c743-46b4-bccb-d80148303c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df95e983-2393-4fe4-a7a7-fed58df8fbe3",
        "cursor": {
          "ref": "a91e7601-f4f0-43b1-a543-771e05a36448",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0f2b388-3b9f-4885-9c85-070d74ee6bfc"
        },
        "item": {
          "id": "df95e983-2393-4fe4-a7a7-fed58df8fbe3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "92bb71b2-a0c6-4d89-9465-0c35acd562d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f558a2-636f-4aab-aa5d-995db9bd3f0b",
        "cursor": {
          "ref": "09c009c1-0b48-4451-8d78-e6f52098a0b3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d7e103ad-3c22-403e-90fb-4eeb7c23b3b2"
        },
        "item": {
          "id": "13f558a2-636f-4aab-aa5d-995db9bd3f0b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b55da7fe-9f98-4752-925e-f39d97b6fe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2fc728-ea92-40ec-994d-bc736aca5178",
        "cursor": {
          "ref": "754f6570-99eb-4a00-94e8-77ac95bb5f5e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1c5a4027-18eb-49d5-bfab-7c666cb99985"
        },
        "item": {
          "id": "9e2fc728-ea92-40ec-994d-bc736aca5178",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e7baec65-296a-407c-a126-1bf64898d7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec6b5e6-3b1b-48d3-99be-4e355bc3640e",
        "cursor": {
          "ref": "ee01729f-0028-4a84-90d0-6d0250dce31b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fa91a9f3-4244-4ad8-924e-5d23745fe569"
        },
        "item": {
          "id": "cec6b5e6-3b1b-48d3-99be-4e355bc3640e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b8b5765-d456-48f6-82f9-0a66feaec749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c55c4a-c241-4bc4-acbb-f77cafda5506",
        "cursor": {
          "ref": "7cf3fa33-b89b-475b-924b-bd6a42918d5f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5e62030-2c9f-49d3-b01c-e8fb3deaecf3"
        },
        "item": {
          "id": "c4c55c4a-c241-4bc4-acbb-f77cafda5506",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cba1028c-6ea4-43b1-a161-4648302f7ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a41add7-f08f-4963-a909-b40953beb592",
        "cursor": {
          "ref": "cf082f67-f8f5-49a8-9fda-a544c00105b1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "25b38f0a-996d-4f3e-8207-6c8c011de907"
        },
        "item": {
          "id": "6a41add7-f08f-4963-a909-b40953beb592",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "296cc3b4-0ec8-410b-82d6-69933082bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834bfc72-0b4d-4700-95a5-47c038743517",
        "cursor": {
          "ref": "ab7e0ce9-cc7f-46f8-a6bd-4dd07b3c5981",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec35721c-ba97-4c1d-abe8-99775a5e66ce"
        },
        "item": {
          "id": "834bfc72-0b4d-4700-95a5-47c038743517",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "820ad2a6-c1f4-49b8-b3bc-58ba3e76380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581a1737-205a-4aee-9105-9ae4247eb001",
        "cursor": {
          "ref": "567be45e-1b0f-433d-9278-803f9b9557e6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2b602ce9-0398-4292-96de-fb83e8e1a277"
        },
        "item": {
          "id": "581a1737-205a-4aee-9105-9ae4247eb001",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "371cabc8-2250-4f6b-850b-26959fd49416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2211f494-f2f4-4ad3-8399-89f3fdbf0e39",
        "cursor": {
          "ref": "eb01bec0-b88a-4fd5-bb76-9a8e252dd4d7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5f781dea-8442-4cdc-9bbd-607eddd90530"
        },
        "item": {
          "id": "2211f494-f2f4-4ad3-8399-89f3fdbf0e39",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "df3d797b-af29-4d28-aab1-d777cdc843d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f547164-14a7-47ad-a596-55efae73ac6f",
        "cursor": {
          "ref": "800646bb-50f7-4a2b-945f-a60dfb5d859d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "163c2dad-8450-443d-b881-a3458fc5ac34"
        },
        "item": {
          "id": "8f547164-14a7-47ad-a596-55efae73ac6f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "32d44140-3051-49b8-9ec1-312d4d1822fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e6ed38-f19a-43d1-bff2-4123c4046cac",
        "cursor": {
          "ref": "079a1506-95e9-4fb2-94df-7a814923afb4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8900e5f1-dd1b-4e48-b778-48f336ef8498"
        },
        "item": {
          "id": "08e6ed38-f19a-43d1-bff2-4123c4046cac",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3133748c-2340-4e93-a337-6b3a6e812270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4c0bb1-0409-431f-87da-21ba1df80498",
        "cursor": {
          "ref": "1b5828bd-57f6-4e54-90fc-3dc42a78e18a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c65f695b-e1dd-4a0c-b728-32931771baef"
        },
        "item": {
          "id": "9e4c0bb1-0409-431f-87da-21ba1df80498",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ccd02762-d53a-41b0-aed9-362d37050e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e0bea3-e6e0-4dd2-9023-0f916e5ec08e",
        "cursor": {
          "ref": "60e67e06-a003-47f8-92ba-ea8da26cd786",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "480bf37f-8e48-446b-baed-ecb62576bab1"
        },
        "item": {
          "id": "09e0bea3-e6e0-4dd2-9023-0f916e5ec08e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d5df94b7-bba3-4fa0-a65c-648279b61855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72704e13-e2a4-452a-a7e9-b9bc1e7e8375",
        "cursor": {
          "ref": "b549a79e-1194-452a-b9b9-55de6147c0a5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0e2455ed-8fa2-49bd-a337-31808c4b94eb"
        },
        "item": {
          "id": "72704e13-e2a4-452a-a7e9-b9bc1e7e8375",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14fe4f43-ac9a-4be7-9a74-dc3d6ca534be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5afc3a-b4ef-475a-82e1-f27b77a73012",
        "cursor": {
          "ref": "1a07f15a-acb7-4812-a487-18ccb8df8cf3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "652e50c9-aebf-4efc-863a-573d3774dfcf"
        },
        "item": {
          "id": "ab5afc3a-b4ef-475a-82e1-f27b77a73012",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c017a34-84cf-498a-9262-a75da81ee760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706127c8-1ea2-449b-bde6-fb1cecf0691f",
        "cursor": {
          "ref": "7bc5b33e-189e-4761-880d-4df63aa55be0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "319bca8f-b5e7-4fa2-a736-44a0686e0352"
        },
        "item": {
          "id": "706127c8-1ea2-449b-bde6-fb1cecf0691f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "03e28ea9-b9f3-403a-98b8-4dc9400e98e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfee754c-de46-4e24-be8d-895d0a39bcc5",
        "cursor": {
          "ref": "1a89e591-24e2-4551-b30f-a945edbf74f0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0fc6604-8750-4bf6-9537-1a8b787483d6"
        },
        "item": {
          "id": "cfee754c-de46-4e24-be8d-895d0a39bcc5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ccf25c47-60e8-4059-b624-f70ac9395782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458e502c-0185-4a57-851b-d98e7b39bee4",
        "cursor": {
          "ref": "8f1e8cbc-3691-4bf4-9e7b-87ebad5f5208",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3e1a08a7-3bf5-4fd1-a84f-f08c848e3bae"
        },
        "item": {
          "id": "458e502c-0185-4a57-851b-d98e7b39bee4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4639c033-4049-4483-88ee-5b8efa992fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b8f4bc-3bea-48bf-9ee8-10913046c555",
        "cursor": {
          "ref": "c95138e8-c7e6-4537-82fa-d98238dc4817",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7753ebd6-2f7c-47ac-a202-7a666e3d33a3"
        },
        "item": {
          "id": "34b8f4bc-3bea-48bf-9ee8-10913046c555",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff4be1fb-9338-4068-957e-89890431e2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59f7134-34ab-45db-a816-1e98021f5b5f",
        "cursor": {
          "ref": "5e3c6164-267f-439f-a0f6-061bde19696c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fc034210-190a-4ab2-b3a2-df56ba00cec5"
        },
        "item": {
          "id": "b59f7134-34ab-45db-a816-1e98021f5b5f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6c442bfb-6142-4911-8e6f-9720d482ac4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4f2e0b-834b-4a1b-a626-dbeb0bf7bfae",
        "cursor": {
          "ref": "7a818d2f-b1ea-4ad1-a622-e3162b939105",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "78e33bbf-8519-4bc6-ab89-2a3cb4be69ce"
        },
        "item": {
          "id": "ed4f2e0b-834b-4a1b-a626-dbeb0bf7bfae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2f2ad155-dc9d-4ec8-b0f7-abc592fef50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13ede0c-56d7-46db-98c3-bd5a3bff6633",
        "cursor": {
          "ref": "e3e7d2d9-a914-40c1-b6c1-52683b8f7e7a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e7851836-73e3-42ce-81e8-1f7b3758b639"
        },
        "item": {
          "id": "a13ede0c-56d7-46db-98c3-bd5a3bff6633",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e5089ec-9ea9-4ec4-a9a2-36cedc4f3f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c9642c-b0a5-48e8-b455-0f03504559f0",
        "cursor": {
          "ref": "13ca666c-3d08-44ed-a7c7-67a8301c8ecb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "76d28d22-a5ce-4afa-8596-86ef7abd8a17"
        },
        "item": {
          "id": "a0c9642c-b0a5-48e8-b455-0f03504559f0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8ce91a80-8786-46f8-8055-0adf16473dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fdfbc2-6a25-42d4-837e-0d48f901bfcb",
        "cursor": {
          "ref": "2f86f1d6-0cc5-4874-afba-7d2e12fdf5e2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5d7aed48-d28d-4e93-92c4-8a11c5133d1f"
        },
        "item": {
          "id": "55fdfbc2-6a25-42d4-837e-0d48f901bfcb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "788b704d-539b-4da5-8316-c350981fdb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dab57b-7524-49c0-9202-c5c383352b01",
        "cursor": {
          "ref": "bb368783-1c90-40e4-b7c8-6f665c2b8269",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bd8129e9-6db2-49a9-afcf-7328dd8eeabd"
        },
        "item": {
          "id": "67dab57b-7524-49c0-9202-c5c383352b01",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "98c66131-bd08-4b24-8c51-dc40119b28f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7286bcaa-c7b6-4aeb-b948-7b587f65a280",
        "cursor": {
          "ref": "313c6aff-dfc3-46cb-bbc8-511eef380ac1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f4ab912c-aa3a-4a0b-862e-097db056ef57"
        },
        "item": {
          "id": "7286bcaa-c7b6-4aeb-b948-7b587f65a280",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9a27713c-a1df-4d22-a4fc-44c5ab79a1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83bd1d0-a087-4e01-b32f-4b863f7bd91c",
        "cursor": {
          "ref": "ba64e300-21f2-4498-a243-23a96a908409",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aa6f5f96-3013-443f-a3c6-800493f3ca48"
        },
        "item": {
          "id": "c83bd1d0-a087-4e01-b32f-4b863f7bd91c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "309ffeed-b097-41aa-9c79-f6301ebe92ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ec7f4-8a90-4e6e-b329-7f2f7df85d52",
        "cursor": {
          "ref": "8e92eb2a-b410-4879-83ad-0298d8a75a5e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "95040f90-3fe6-4afd-bda3-7b423173e88c"
        },
        "item": {
          "id": "a79ec7f4-8a90-4e6e-b329-7f2f7df85d52",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60a8a183-b4de-4d18-b95e-aaf8b9a184b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec373b6-3083-401f-98cc-dbf7ed911b10",
        "cursor": {
          "ref": "82160b97-ea43-459a-afe5-871dd465e550",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e216c812-9b76-4cb4-98dd-d36829314c0d"
        },
        "item": {
          "id": "dec373b6-3083-401f-98cc-dbf7ed911b10",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9af13a43-c76e-4467-828b-8d8df6756645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063b0c40-b62c-4e95-adb1-a01d179c4159",
        "cursor": {
          "ref": "003549f8-9b55-4ff9-9591-105cc3113eca",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "70aa1518-1767-4710-9b0a-1b32b5e3e5dc"
        },
        "item": {
          "id": "063b0c40-b62c-4e95-adb1-a01d179c4159",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed7b0803-db12-47d9-aa6a-52aea8eed867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e0d30-be00-472a-b71d-d29101131475",
        "cursor": {
          "ref": "6188051d-9e9f-4fc5-8aba-b6b04e018528",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0eb035ed-e918-4ad4-826f-0c9f705550e3"
        },
        "item": {
          "id": "583e0d30-be00-472a-b71d-d29101131475",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "501fe21b-66aa-4d56-bacc-086088f660bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fe1abc-f00d-4835-ac54-18c0fa943e14",
        "cursor": {
          "ref": "72bc33d0-c337-454c-a31e-c6ff3c4069ae",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ca47cbd4-eb78-4232-b8cc-ffa7df4af280"
        },
        "item": {
          "id": "c8fe1abc-f00d-4835-ac54-18c0fa943e14",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "03aa8446-8570-46b1-b6c8-a2d34b6f84fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ec628-e9ba-4854-a2f9-f3f49d70c97e",
        "cursor": {
          "ref": "0d237a72-3dca-40a0-90d4-41cd8c968b19",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1bce1ae6-1fa7-4364-9e3b-bdf4452db367"
        },
        "item": {
          "id": "be6ec628-e9ba-4854-a2f9-f3f49d70c97e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "17ffa15a-0853-4303-9a7a-ef7a234513c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3544b8b-6e0c-4642-8753-b6568134da7d",
        "cursor": {
          "ref": "f5e52d31-8a5d-4a85-8f41-84ddbb8a828a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6b1b45c8-1360-448e-94ab-546133b7f33b"
        },
        "item": {
          "id": "b3544b8b-6e0c-4642-8753-b6568134da7d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "62633d59-95db-4ed4-b8df-d0d9c818e90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957471bf-22f6-4544-b4d0-f9b7c223516e",
        "cursor": {
          "ref": "d5767894-1ee8-4fba-b343-167e62233d95",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9ae85182-2f36-4678-957b-202cc70c8f69"
        },
        "item": {
          "id": "957471bf-22f6-4544-b4d0-f9b7c223516e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3a0ec3ca-a3c8-4534-a7b8-05ebf7f632b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda0753-a646-41f0-abf2-9fb6e4fab788",
        "cursor": {
          "ref": "b076fe71-37b0-4dae-ab37-ab391b4a593f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2fbc7348-6fc8-42d7-b4ef-10c55074755c"
        },
        "item": {
          "id": "1fda0753-a646-41f0-abf2-9fb6e4fab788",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0d9ebdb3-88c5-48b0-ab2e-8266f7df45ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0cebe5-bba1-45f4-9174-d615d835c5b6",
        "cursor": {
          "ref": "455c0f3e-7241-4e63-8ecf-26fa206787b8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4d505129-b869-4b84-8875-67ec0be19417"
        },
        "item": {
          "id": "2a0cebe5-bba1-45f4-9174-d615d835c5b6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9f3a79d4-2436-426f-8684-36a6363d9d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb212cb-3299-40f4-a09f-640c2cc85297",
        "cursor": {
          "ref": "8cdddd69-eca4-4863-819f-299ff27076d0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "48288642-8021-41c0-bc3e-7dcf4a173b67"
        },
        "item": {
          "id": "6cb212cb-3299-40f4-a09f-640c2cc85297",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "727aa5bd-56c3-4da2-b820-714a578a067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04e4845-bd48-46d9-b665-a1a96ade43fe",
        "cursor": {
          "ref": "c18993ff-4993-4e90-b8a7-75f8921cb113",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "87e52310-82e2-439f-8a15-efad0d93b819"
        },
        "item": {
          "id": "a04e4845-bd48-46d9-b665-a1a96ade43fe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "96eae270-6212-4686-a14b-46c503b4fa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556a7949-0690-4f2a-895f-1a93f0b900ea",
        "cursor": {
          "ref": "7bf4ffc3-a189-4230-ba80-a07615bac17c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7164e91-1862-4a39-ac7f-d7d8cf528d33"
        },
        "item": {
          "id": "556a7949-0690-4f2a-895f-1a93f0b900ea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "94576823-8852-4c92-93b2-0363dd897ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912958c9-5c23-469b-b8a8-2e025957fd30",
        "cursor": {
          "ref": "7a164b28-bdb8-437b-8806-c32d9db192a8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "47fab7e1-dcf6-4022-9526-56a43471f256"
        },
        "item": {
          "id": "912958c9-5c23-469b-b8a8-2e025957fd30",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bebea8b5-a6ea-49b2-9115-b7bf50a76e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf06027-5d7d-4704-9565-f77f3f414798",
        "cursor": {
          "ref": "a5d40f27-514d-4992-a66e-88ddf8f074c1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d08216de-6ff4-47f8-9463-8527f30daef0"
        },
        "item": {
          "id": "baf06027-5d7d-4704-9565-f77f3f414798",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2d4e5976-7c11-43d0-8069-e4ab304d8108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695a03be-dad6-46eb-a434-a3b4a0d0f987",
        "cursor": {
          "ref": "c23646ef-3463-4db3-9186-f7f6738a5df8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "69116d9d-f036-4d62-8ecb-543401d14665"
        },
        "item": {
          "id": "695a03be-dad6-46eb-a434-a3b4a0d0f987",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b4017aef-e677-46db-b480-fcfd1a70e77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb4723f-3464-4bd6-a3af-ca2e99640e1e",
        "cursor": {
          "ref": "bfbb8d21-2ab9-4b7b-adc2-672f75534991",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e7686033-c5e5-4061-ba79-ee8f855a6bd5"
        },
        "item": {
          "id": "bfb4723f-3464-4bd6-a3af-ca2e99640e1e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce74e2f6-267d-4bdb-8d46-291e9b10bfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8455297-6951-4145-b327-91a06306a09c",
        "cursor": {
          "ref": "e511a042-62f2-4ea2-8312-a10b6b2d6f4a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aed4f6c3-5a0d-4b38-a70b-3b81bf48d000"
        },
        "item": {
          "id": "e8455297-6951-4145-b327-91a06306a09c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b02b3641-81bf-4ccf-a800-3ae2efe4a359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcfed95-b534-431a-9265-27b1980755c0",
        "cursor": {
          "ref": "35c2fb0d-d5a8-49fb-9248-77054602c5bf",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "903f9e94-19ac-4234-96d9-a431d00036a7"
        },
        "item": {
          "id": "2fcfed95-b534-431a-9265-27b1980755c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1bd03e65-6529-4ac2-b5e2-6e6939b4db49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3b97db-69a1-41f5-a2cc-11956cbfc70d",
        "cursor": {
          "ref": "68925a67-9e01-4ab8-beb3-1549909ccc94",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "74f55435-b3fa-44af-aa03-628066790e72"
        },
        "item": {
          "id": "ca3b97db-69a1-41f5-a2cc-11956cbfc70d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1ee56b78-7f88-4bf0-8d5f-994466ab7d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d570424-04ca-4a82-97e2-d6d71c5c35ef",
        "cursor": {
          "ref": "c273b029-f927-4d2c-825e-f23074dafe60",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "74e8f6e7-64e9-44b6-924e-9fd2e8f11ef5"
        },
        "item": {
          "id": "2d570424-04ca-4a82-97e2-d6d71c5c35ef",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0038ebc8-07d1-4770-ae7d-b16807d5016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca7f43-6780-4146-9f8a-061e75376477",
        "cursor": {
          "ref": "d0c1e9c5-9d15-4168-9916-308a3cadbc71",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "945e04d1-194e-4858-9ba2-812671b31a9c"
        },
        "item": {
          "id": "22ca7f43-6780-4146-9f8a-061e75376477",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95822cf3-2ab6-4930-b046-60e66fcb7290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e109785-d4e5-4c82-ac4e-9d80cab1928c",
        "cursor": {
          "ref": "556f5707-aa3d-4e7c-b978-53a366fba33a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eb97356a-4e1f-4fff-89dd-8a1b83416512"
        },
        "item": {
          "id": "5e109785-d4e5-4c82-ac4e-9d80cab1928c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "21c93e9c-2324-48eb-a651-eda17c487913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0895ea-dfc2-424d-a8af-20f727af9232",
        "cursor": {
          "ref": "fddc87ff-8bda-44b6-8b7b-88ff3fe0c4fd",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "28e8bb9b-8366-4363-8b1e-4e4f7f25c94d"
        },
        "item": {
          "id": "1d0895ea-dfc2-424d-a8af-20f727af9232",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "17eb907d-11cf-4b5d-a99c-8734a010f341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fa6dce-cd64-4925-b548-a21fee81b5ed",
        "cursor": {
          "ref": "77d9fde6-d1a2-4ed6-8192-20f7d4ba2eff",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a4b18f01-fe7d-4d91-bc27-983b581c6e86"
        },
        "item": {
          "id": "d4fa6dce-cd64-4925-b548-a21fee81b5ed",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f2c44dda-2a9f-4e35-8b03-273022fddf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaf3867-d59b-4751-864b-2bab44429d93",
        "cursor": {
          "ref": "9ea6e7bc-1db1-4db0-b0d6-fb509eb40583",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aceac16e-4174-4cd1-b7f5-5fa1aa74db32"
        },
        "item": {
          "id": "9eaf3867-d59b-4751-864b-2bab44429d93",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "06010621-3c9c-446c-a543-582e7a8b3bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be1031a-a5ff-49d9-8079-9caf832024c3",
        "cursor": {
          "ref": "a2782461-2c4d-48d0-9ad9-1df63b6bed64",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5ee381bb-3509-4591-b85c-952a7f259aca"
        },
        "item": {
          "id": "4be1031a-a5ff-49d9-8079-9caf832024c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a325f0cf-59c5-4112-a1ab-e69a71516d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cdfc77-65b2-44e1-82d2-73a255b8c54e",
        "cursor": {
          "ref": "31bb2e0f-84b0-43e7-abaa-b31c0694ee91",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "093c42de-dbb8-423b-aecd-b66efbc8655f"
        },
        "item": {
          "id": "50cdfc77-65b2-44e1-82d2-73a255b8c54e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "476c26c1-2856-4a79-b3f9-daace53e0f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a0027b-6aaa-4517-abf4-1225f74e8b16",
        "cursor": {
          "ref": "99b0d91e-ccdf-4075-909e-362e01deee36",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "81dc7c15-07d1-4055-ac45-1bed0fd3b04e"
        },
        "item": {
          "id": "d9a0027b-6aaa-4517-abf4-1225f74e8b16",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6f2a14ac-a06e-4352-89fa-956506be00e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ea5a0c-4426-4634-8e14-fc30bea7f7c9",
        "cursor": {
          "ref": "5620acde-48b8-49b0-8c1d-e9cc155223e9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "88a45174-a635-4d4d-b4fe-bf55bc8ef049"
        },
        "item": {
          "id": "e3ea5a0c-4426-4634-8e14-fc30bea7f7c9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f56379a1-fbae-4fb5-a78c-fb7f0181672d",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a28a59-a598-40fe-90c0-cbb5fca6a471",
        "cursor": {
          "ref": "21402d48-a0fd-4602-a6ff-81261a38b522",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd81dc0e-db1c-4276-aab2-52fbd656b530"
        },
        "item": {
          "id": "c3a28a59-a598-40fe-90c0-cbb5fca6a471",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e38b4d2f-8f03-4eb6-8b42-48b91e88b070",
          "status": "OK",
          "code": 200,
          "responseTime": 5165,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d81f6e-3368-453c-be39-6e919a57780b",
        "cursor": {
          "ref": "37a2a183-2401-4c3d-9eb5-ecec448bfa0d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e23e6916-07e0-4e2e-bce3-35b2b5e3596d"
        },
        "item": {
          "id": "c3d81f6e-3368-453c-be39-6e919a57780b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "04b603c3-59dd-48db-a647-7d8aae39decd",
          "status": "OK",
          "code": 200,
          "responseTime": 3131,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f4e529-9390-4a9b-8d39-9582b03a10ca",
        "cursor": {
          "ref": "595f6b3b-6a8e-4200-b266-0b5e15fb83a4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "302dfd95-dd75-46e5-a053-b2476cc3dc7f"
        },
        "item": {
          "id": "72f4e529-9390-4a9b-8d39-9582b03a10ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a7ffa8e-ca6a-4af8-969b-bf582da971d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f4e529-9390-4a9b-8d39-9582b03a10ca",
        "cursor": {
          "ref": "595f6b3b-6a8e-4200-b266-0b5e15fb83a4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "302dfd95-dd75-46e5-a053-b2476cc3dc7f"
        },
        "item": {
          "id": "72f4e529-9390-4a9b-8d39-9582b03a10ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a7ffa8e-ca6a-4af8-969b-bf582da971d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c23e3a-31b9-4486-a47f-b8a70bc3fb1f",
        "cursor": {
          "ref": "4dba5e5e-10b3-4a6b-9400-c544a12b5819",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "800b73ce-1ceb-4886-89a9-a117b0a332b2"
        },
        "item": {
          "id": "d7c23e3a-31b9-4486-a47f-b8a70bc3fb1f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b62be8e7-918a-40b8-b396-dc6dc6617044",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f484ab07-4e74-493f-827a-4d544c20c8ad",
        "cursor": {
          "ref": "bda19646-23e1-4721-a4ba-fa0057da93b4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "82b18be3-3ddd-4298-9f92-2e39eb886a99"
        },
        "item": {
          "id": "f484ab07-4e74-493f-827a-4d544c20c8ad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "206aaf52-0ad4-4e71-840c-3aea1ee64e6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}