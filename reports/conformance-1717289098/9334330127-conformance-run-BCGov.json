{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "66d00d39-dfbc-4d28-b441-7823b4f3cc00",
        "name": "Clear Cache",
        "item": [
          {
            "id": "859077f3-925b-4c40-9cfb-2a03ab5bb6b9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5725a2a2-6e42-4df1-8bdb-07defda9ee8f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8333bd48-0655-442c-a487-69a3fb3bf501"
                }
              }
            ]
          },
          {
            "id": "3210d342-495f-4650-8440-64bd3822e121",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d62a446-e796-487b-965f-a60951f6f382",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a8ae8a1-1429-4cc8-905b-b11e0947f419"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eaa0dbdf-1e6b-4c01-9429-5aa9d9da7fb4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b2cb0ad3-54f9-4d90-80d8-91711e4a48e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8655f81d-3753-4da8-9d5c-8b09984e42d4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8cd6e63-d6f2-45e7-9c48-fa914da6e1ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87da28a5-3faa-4a09-918f-2ef7e57dba5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b49c1be2-c6c0-45dd-b3fb-5a6f956b0377",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "207d17c3-1366-4bc7-a9c7-74a56158f98e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b44048dd-1731-4678-b56e-f10e562145a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "328ca496-39d7-4b03-882b-0c45799932d4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08375af7-133d-4024-85a5-dd9828a7830d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e18fb5eb-da66-4aeb-a7b6-d6c03f5a67b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b710ec15-aca9-4349-9b54-7de3aa25a4d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62fb1dd5-4fbb-498d-9497-2bf50ae1bd04"
            }
          }
        ]
      },
      {
        "id": "d320d9d3-08df-4158-9f19-d6f18f5ea773",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "66454d87-f69e-474c-903d-1965b666649f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5503f448-7cc9-4ea0-b3e7-4e758014b979",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98bfb5a1-a793-468a-8553-1813c8620638",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d3ee6b-5b49-4de9-9b0b-d65cdc6f6d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d7f3909-5e52-45d5-862b-0a457c58ddc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76784bba-307d-450e-addd-ce4ef1f726d5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d68184-9366-491f-ae76-169e2749e470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5cdc14f-65b9-4ff6-94fa-13a22f4125bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e2665e-8610-474c-901a-1796e26cbebe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b9da1b-b941-4f6f-984d-576ddb18e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8048ae0-46c3-4499-b93f-c90ef7a22d7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "008e78c6-5331-442a-b83d-9653ca5e66c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9993ff84-a223-4c5f-be6d-cff625305e40",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83cc3a4-a2dd-4a3f-b143-930595026236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e888a19d-3861-4497-ba6f-1901f4bb705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d64f7c-16e8-4b8e-b8fd-b753c6b3ba49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1993524-7537-47af-8b44-015f9dfe51b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14eb185f-9c74-4861-b384-121f61259786",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cc5223c-de78-441f-b173-9f6d40d230d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68d1160e-bf29-415e-ac0a-074112b11509",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f8a2fe0a-10f4-44fc-b262-0911844e218e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38a4684e-b15c-4556-a6db-4edf1d9992b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bcc8793f-70ac-496b-b880-e9b06ddfbd42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1efb25ee-f72b-424b-be24-c92bbfaad3b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2aa2ea9a-94bc-4b55-8a2a-24fb8c4c48d4"
            }
          }
        ]
      },
      {
        "id": "9d17743f-568e-4b18-963d-9f22b9cdb2cb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ede4b37b-c5ef-4ef6-bba8-f19017ebc770",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd2c2065-7ee9-423b-9226-4f7d43ca97c6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b5ac97f2-06c9-4484-83ff-cca057e01958",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9d2514-888a-451c-b11c-d598662719e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855f4ac1-a3a1-4b09-81e7-e99191217a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c48ab-1cfe-4173-a17a-90f59e390225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1ae45bd-28d4-406d-b7d6-0954421df66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272b2b55-740f-40a5-ab77-4c06d542fa73",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1a54f-4316-4ffc-b7bf-086b37d08cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c434c14f-5f06-4a96-bf4b-ca8a3381511c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b14171-1a3a-47c6-af86-516f6d20ceb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d716cea0-04aa-47d8-bd8a-35c2368a5468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb17e63-4468-48d7-badb-ee4cc7c1ae1d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d58392a-c4ed-4e38-8c15-c84996449725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412b6f49-e8d5-4bee-a689-672bef3645aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa873476-1365-40b7-bf4d-8a529efe1295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df61c9b9-7b28-443e-ade5-fe13c86089a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d867c0e5-7863-495d-8fdd-b1c00a1a14ab",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ee1a29-75ba-48a9-8133-1d4289bba785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd04ddd-6d8a-45e5-b306-29fb3f6ca7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8817c46a-f4ac-4be0-83a4-09dd99f55d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f35686e-4ce1-461c-a648-8627207d2200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a302f759-8f5d-4839-b25a-3596597215c9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ce5776-54fc-4dad-a0cc-e299984591d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedbb551-ccf7-428b-923c-90e8e3789e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50fb5cc-887e-43f0-ae99-0cca001cd73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "436996b8-1ce3-44a1-89b3-0db4afd2df47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bb30cc-d8f2-472c-9c7f-298655c3e35c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadc040e-1894-48dd-b07a-7ada55bb35f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16025a44-985a-4976-aa6a-4ee255be0197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fdb557-df99-4a8f-b81e-9f82c71491f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d74925fd-4bd6-4e2f-961e-0c8e9538aab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc4edb-d928-4543-8611-4e5e832454c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dea12e-ed1e-4af7-a040-110c2041f5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bbcd7e-f200-4472-81bd-db0dffc89434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3a7f18-7c18-45be-8db5-5716b703cce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf1bf25-71c5-455a-9c76-d42f4e856b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca0426a-0fcb-40ea-9c43-3aff8a83275a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4e273b-2357-4eb7-88fb-1dc2a85dabb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb3e9f7-ae21-4760-9dbf-440ecb46a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f986c68e-b9b5-459a-80d9-6056fe4aa5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b986ae8d-1186-4890-9df2-430dd55a24a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87be3f09-5c6f-45b2-822a-5a41d4a7b9e3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79191be-b1ab-44ad-bf8f-4e468dcbe098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cef25c-3847-47e1-ba21-ac14f7ff82b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61679876-973f-474c-9561-3a3717339879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc33e924-c110-458e-b2b0-e7614c3de1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a68267-491e-41e1-bec4-4e61977f1749",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72caa37-e469-4d9f-89e9-432db0f643be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92569e7f-8637-414f-8eb0-e576bd689607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f71364-88f1-46a1-a18b-a0f8d0f32465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e252192d-54b3-4d28-b5a1-9c0c33c475cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195aee7-c30e-428e-afd2-d88e8528240d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef94471b-3591-414d-a158-7ae616527c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac72c28-7a00-4fa6-a84f-b938fbc70e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be572d3-9760-4211-b9e0-6eac0aa3b564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ecdf237-8a3b-4044-80a7-2f81372dcbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ce0c4f-2d84-40c3-b743-0862e549bdc4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9037be9a-9b01-444e-a014-8f4a3292c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffef0d16-d1b8-472d-8132-3c85fbf0d5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5802470-2fdd-46fe-b5e8-6965e95f8c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8febb955-5a93-4246-8a1a-f159e908114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07909875-6c83-4bc0-b4a5-7fed94a59eb1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e4e5b6-93b0-4e89-a40b-75d84e8dd97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee89785-b7a9-4856-aff4-4c57e94f5e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2336953c-1617-4675-8894-d9337adb1c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc0ab003-0d19-4d64-83b0-aaaa4209d1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23a1d03-db93-44d9-9712-e98b4fe333ff",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa67c97-7f44-4f26-b365-b63573ea8ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5dbc6d-a138-457d-ad3e-275dacd8c6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6abc4-1729-4424-959d-eb33640ab1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f2c63b4-69c9-4110-afee-c2ac0fbd6cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cbd25c-8764-4f06-bfbf-42eb3becb44b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2afbd78-f2ed-4fb5-a4f1-891bb0c0f27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93127076-f909-4640-8ed3-d789a74047a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c69a0-5bbc-4b41-a089-eacfbaed3c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ab81e9-4e7b-4167-898e-cc4083703710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ccae62-50f4-41ed-b367-dc9ecbaac079",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcb3203-31e9-4d42-8217-b6f7bc6443c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8299750f-5bd4-4b4c-a524-6ecda7d890b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da508a75-fac8-45f2-a286-f4ffe5668c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43d1b3d8-d16d-45d1-a03d-b54729c203cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf48bbef-68d6-4f7e-8e2b-02d50e7a7ed7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5836ebe-8547-43fd-b818-95266b3e1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c1add9-8723-4608-9805-0c31b75b55d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09e5ff9-cdb0-4516-a6e2-dc316ca73667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf4ae76-85f1-4521-9bea-b2e671bd5b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3bde0f-7ada-4cdd-afab-83e219cbd73a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc85a8ec-de96-4711-9805-9f2dab01631c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835e90cd-5cdb-4bfb-9c82-13f90925cf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531d07be-50df-44f1-b7bf-cf40d4a83779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7f9341-2499-4cb3-bf5a-9a9c997c0667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a0f4fa-303c-4e08-953c-999cfd190e8f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786a68a3-fed1-4c46-82b7-121992f3c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dc0aeb-5681-4170-80ac-87c4c48a4fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e55cf7-f8aa-4402-b812-061cea6e8f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21cfbae3-46cc-4eb5-9a6f-66630e320499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ec15a5-3140-4451-aafd-b2e2f1a654b3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aab502-61ee-40e4-95dd-f8afb0f94a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a0aeb8-c902-4d80-a891-e42df83af03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6978e5cc-9f8c-42c9-8395-6393c85f0d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b528d784-3b78-4e8a-8eb4-0ff9572155ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d1b552-a2ae-42d5-ae7b-dbaf908692e0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd236a7-e47d-45ee-93b9-3deba44cd2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea33566f-afd9-4356-b0aa-74eb715db693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea044415-885d-4702-a488-0b8de927043d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a4d26b-7e99-466f-ae70-9212fb810bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc53ee49-93cd-4ce1-bc26-ba97ad67cf95",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1335ee-02f4-491a-8280-d39dbb0aac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52951ea-319d-4556-bd34-f26b86606a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cbabd7-2e67-4030-bf0f-db4f5845f6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8adf8b82-8ce2-4515-b204-b82f1eb08361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea351916-2c25-4c3e-8614-e6e5423dab76",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636436c7-516e-42d1-9280-3c0f47224b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ac89cf-3443-4e2b-bd36-0cc820fd835c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0b4752-a062-4f8e-964b-e2b281c84067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b129e89f-86eb-4b21-b2f1-2da18ae4b832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab501fa-9df3-42a9-9d10-404e2e10f634",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f8f2e6-ca8f-4329-bb71-99cc6826938e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ee1da0-0992-47f5-9542-c218e92dbfc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c54ff-3c76-4fae-8d0f-a71ed6aa3fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7569375a-d69e-4530-8974-62b63179c5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3942057d-d05f-42c0-9f49-ce9ed2d7870b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcf3e43-873d-4193-936b-d0ebedd18dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efafa47-cd6a-459e-8f36-8f8520c22d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbc3632-eeee-4309-8ecc-2c973d53c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb211e53-c58d-499c-802f-0dca69d536da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eef92e5-8a4a-4586-960c-03700b92876c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca4a913-6f46-414f-b469-05c8d871e02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41787415-2ff1-4b1f-853d-cf08f3cebbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c460668-f65a-4a66-b485-a19cb80e319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "832e6655-6f65-4987-aa59-52956253d364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694090c6-40c5-4bb9-8d87-d6c56a911e16",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44ce8d2-df42-4551-8d12-27d8bf766dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318f7540-1acc-4262-92e5-e66524b4b19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367419e8-5210-40f3-84c5-46b211ef6925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c153084-b7f5-4cb3-b006-8722dde22ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16450bf8-22e9-46c2-8363-932c397c02ec",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a077956-ca83-4abb-ba78-2a39885dca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71978383-8055-4108-8880-eca2c8d0b515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4513ecd8-fcd8-4b2b-ba71-6d648aa2653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f40608-69fc-4ca0-8b7b-e480bd7f687d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db9c365-f3f4-411b-b8cd-5c5524e7ed2f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a8d328-0a3a-463e-ba0d-3035b7c127d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706c47e2-ba40-4e33-a2dd-fbe6d94a9975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507d4b71-8b73-4bb9-9852-75c9aaed34d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9748af-cf22-41cb-ab21-308aa9c91304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bded8c2-0018-4b36-814a-067d2b49d493",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dbfce7-64ac-4263-b4a5-713a388b1b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6138fb2b-950f-453b-94e3-67fdbf724e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17303e64-2758-42cf-88a9-c9af45a14029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c62f542f-893c-4b8f-8f06-06aa81b7ec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d43848-4292-48da-bd44-99219ffa731d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e59ee23-c16d-438d-a4d2-fb2b996ec592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7a931d-ea52-4b60-b605-5924ff77dfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b428a53-5c30-441f-84d4-df1c8738ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4507ec32-21ce-43cf-b21a-ed5359043b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31d3747-7c78-4ad3-88e1-bdf59be909ac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d1dce0-d441-404c-b1a6-895b0f550b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9fa9dc-3b7f-425e-ac7f-81a49446a772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7bb0df-9177-4fcb-876f-b84b6a18cee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7505cbe7-9670-40a1-9b01-93b75838b5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1a546b-11dc-49cd-ba88-3893279e4abc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc92e8c-76bc-4998-a52b-cd8bb1f754b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3061867-f18f-4dd7-8ac7-322545d7a88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeb1344-e914-452e-9fc7-8763b7f14b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d943e4e-49ee-4b7e-835d-369d4d0520c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc64ab6f-b2f0-4416-9dd5-5f599e4cf02c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db076b3a-f21a-4473-882d-51359b2156f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf2fc65-5891-4a95-8c35-b40779235c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b3e186-9f16-4161-b74f-b9001f581021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bddc3f32-e1e9-43d5-9b59-96a24cf77f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e931e-deea-4aba-9f3b-9020ffd3cfbd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12a36ec-8bb6-44f8-9e19-bf768a76e81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7d45ba-e061-41c7-860b-e9fdbe895ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5854fdf-9968-4ace-babf-2825af030228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "febd1c74-ed41-4370-817b-c1ef888ac481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100b4c16-acf5-45f7-9b20-0f15a428f7b0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29106ad-ba51-4323-bd07-c7775911035a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92786a42-4529-4931-b84b-bef2d9b69bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9dfafa-213b-4f1d-9d4e-776d9203b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93aeac5f-794b-4f4e-a58d-f9327af20e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6e03ad-072f-4ce2-8d5a-ee4aa9f14cc8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d412f2-93c5-43b6-98c6-f3116f6d8194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98274e1-c0ee-4496-978c-f24a7290164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfc9d69-968f-4cf6-97b4-464f88973fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87501ab0-6b13-40ed-bd04-73857a2f33f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29611ba8-1bad-4897-94ae-8c77711fe52e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe4004d-e268-4940-acbf-0f188feff944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a8db0c-131e-45f7-9fd9-69ba2c5461ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f826cb8d-e9ef-48ea-baac-896184f58c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c71ed80b-6120-4ca9-953b-2c01b6d730a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8962850f-0ffb-47f9-946e-bbe58ebd67af",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181439cb-259f-4ebc-9763-a3ffc4e32848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fd182b-545a-4b99-af3c-8118e86934d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977bb7e3-3867-48d9-a6be-7f779f8d564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e224ea9-8e9e-4849-9ad5-ea27815b4088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7da52f-4069-4c8e-a06d-693144358a8f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7373ca35-d950-44d6-ba83-7d496cd9095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338fdeab-065f-4076-9e12-236d8b2154c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4871cd56-f504-42a7-a0b2-90af5527c1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e98168-7e88-4072-98c1-1550526c0dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba25b3c-908a-41de-b634-6e7e3b1737fb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d2eb2-772d-4061-be5c-715e1fccd251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ff4c53-b085-41e6-8978-7c2f7a587077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93079ec-abd0-442f-b452-eba62f443d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a957e2-c326-4ce1-9d90-914ff13315f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd24e8c1-8ed9-4e35-8539-0d7afc791317",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d41dfa-bd1f-4833-9eab-4e0412858211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d85871-f4c9-4475-9991-188e57db04ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90664d73-bdbc-4fd8-9983-71f8c3154827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "77447a93-5aed-461c-bb13-72ce804af1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e16134-2328-4593-a798-b64b3aad2f44",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be15a9a-9da5-401b-8338-1fd1026e3d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b23e3d-9080-401c-a2fe-916b06f00fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebed2a3-23f4-4519-99fd-a31a9f2a119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8f3322-865f-41e0-80ce-22705530eb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792a3a8-d2a2-48b7-9597-aee51e724d6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0abc61b-b170-4c98-b783-8740691b8d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b071f6-33b2-4dd4-b222-728f7c605a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bbfea7-5fce-4924-939e-a1303765727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7102a9ed-ae51-4c20-9485-e51c73c71c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c751ecb-aaec-4543-9ff3-f0e823a1f464",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e8daa8-ba32-4c9d-96eb-df1489c5a5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f363719e-f368-4f11-a4ca-64d9bf062734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16de2c47-0f9c-4497-9cb7-68703dedd67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb76581-013c-4eb5-aee2-8c57e6a835fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd15b93e-231d-4ccb-af50-320ac8faeb99",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3859c2-d7d9-4b99-849f-56f27b2a15a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b20f6e-2fbf-4d0d-8a87-9c6ce6e3a2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8585161-e295-42be-b724-aa9c1fd7e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe574fc-4692-4992-afe3-28af8089e3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f60e31-dc30-430d-b531-c5560a6daa6f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538e4024-ef91-44e9-abab-4b4a2be2217d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5467a104-dbae-4b51-a94a-92045fffb863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c212e1b-c368-46fb-ad33-c3ec9c033b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21179008-1f5a-44ff-934d-558c041a930e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f502639-bc37-49ac-968f-83eadff6d659",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d497938f-880b-404b-8bf1-5e4235088aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b85a57c-af5f-4fa4-9ceb-424e49475d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db518a4f-5bf7-4358-a135-b2272cab6213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c411b846-37ed-4bb3-ab77-28dbcb2ca04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d42a0ea-e85f-4c1d-bec4-982194277f35",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491f5756-1ba9-4278-a5fa-36ee5c9b3632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27677395-818a-4770-8b96-8b7e65f1551d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdef425a-01fc-4bdc-9fda-852e72930b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "def3cacb-3412-4f85-a2ec-f8152346f849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c672792-fe02-47a9-a319-14ed964d52b3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07fa679-23d2-422a-b58c-f267d969ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a107d597-6829-4d40-b903-4d587df5dcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af0f08a-0c31-465a-b044-aaba697abe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c927a3d5-4cea-462b-8687-4ac4cb4818a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b27d3c-5b88-4444-95c3-9b7dd2b0f153",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47d68ae-6c71-4fa1-a947-5ee243a0818b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b13bc46-dec5-40bb-8864-6bfe2f6d2f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac1add2-1dc4-4786-8277-09435284e3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4841c88-e97e-4f16-af9e-487678d08915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c26b60-9e8a-4083-832a-1547bad1032c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504ce4bc-5484-4209-9947-4d02ee9dd226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb15b5f8-a273-4151-8504-d0bfe37fecf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36febed7-371b-42dd-97d5-7dd19a585298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7175e76-8638-4c12-9084-6092adc33c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f41a8c8-1e57-481c-b3ec-9e83e9ffc5ce",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb3ef10-c368-46a6-96d8-96df16e31c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2274ae93-a63f-4027-b44a-b2db31935fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff4accf-b8b1-4882-80c1-862d9823652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d088c8e7-b3f6-474a-b1fe-40adf4e3a31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf23edc-1616-434c-b851-0ef55ec4e0d4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa17f5f3-eb55-489c-af3d-e569631fb4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280b0f13-8493-439d-8479-f48ba2eef9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f407cf7-38c0-417c-8723-e8a9c7236de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc62e5ef-05ab-4b01-a583-1ed933e04ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a5db78-01cf-4c97-8260-1dd1f49e7141",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f9dbf8-70ea-45db-b9ee-5d2cd3b15919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dce98e1-5f7d-4e4b-8f38-cf24ab9d50af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13237065-4517-4a3e-8573-2b69d41dc824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae16abdf-a1be-48ba-9bdb-2d7380351a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e99634d-b63f-461d-886c-f6c794529404",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2cbdad-ced7-4e64-83d8-b3fac87bbc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8383c751-3653-4440-9af6-a17272c940fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89c776e-410c-41e3-961e-c87e64e18f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "31d28634-b62e-4d20-9fd6-e37dec2cc89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42da2d03-6e35-42df-9a7a-9cdaae415aad",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1596d45-588d-4f77-9345-42b8220da085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adb45c3-ef0b-41ab-84f8-fa54ab59f172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c10db9-bdbd-4d5f-9c1d-ad3ef8c53338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b125df-f2c1-4f62-a11f-a3bcd0114e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ebad93-2eff-455d-adc9-fc95454fb946",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588e40db-40dc-4ee5-9948-ffdecfa32a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f163adb5-a05e-4dcd-9636-44c1d9b9bb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74202ff1-ad6a-4bfd-9678-44c63d25ad99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd86c0e-93bc-40c4-9b0a-2acc35d317f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850ac7fb-1155-450e-a0f1-17bf474e69d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4af828-186a-435e-a276-cc6d81ac26c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119ebf1c-f2ab-4d41-806c-c1b5e0e24bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5a3fa9-7f92-404f-a57b-1cb396a0e9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ebe245-8a7d-4895-a818-0bf3988d1d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685c70da-1e58-4435-8ec0-0b1e8b8ef08f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2afe7-84ee-4240-b0d1-f7a0d53067d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff9ec45-6e25-45cf-acbf-dbe149dd9b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d2f01f-2948-49aa-9d86-f4e89a69f8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae48be41-8903-4652-9fcb-521f5ae142ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01961e7a-7b11-403c-b138-0d9e2e63fb3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0a1019-7e74-4d81-9175-27ce0a67df2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613321df-37f7-4bd8-b3cb-f83b15dfd8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec0e067-6d10-4cfa-ad48-3193ab451c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5f258f-cf92-44e4-bd3b-1d4a613fce12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24853028-0a96-451f-b4a3-7d25fddb4e07",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd76c98-1ea8-4c5f-a2d1-12b8af3b403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad51d33-f960-4036-bbf9-9477a15c3d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ef7b4a-52da-4ab4-ad19-650ecc58cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc12192-1204-43c8-ba53-1667e33e5c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19ede33-1171-45df-8c13-682705383a08",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0e3c70-258f-4271-9012-a779af1d6b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408d7a20-e882-430b-bda8-25404921b42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98991ace-e7c4-4599-b760-37c6fe939d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57581d92-de46-4536-8b0e-6e1d20d145ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f581eb-f7f1-4537-a657-bef365fb159d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b983920d-55a8-4637-a3c7-0d750fc06911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821a7aff-fd36-40f2-94c3-1016d17c68c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9a5fd7-439f-4e96-95ba-fc5c2e758669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca02e67-4e66-4f9a-a9e4-9c9a83a3abd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a8c856-ec47-47aa-a642-19793704738c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b4c554-5122-4a9b-8fc5-0142e7746202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edadf0ee-2cc7-4339-91d0-3e1641b4810f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74467f5-750a-41d6-88a9-0f9c5729555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a85bc0d3-2cfb-4a36-b0ff-27dbc7ec0fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02053868-ed6a-4696-8082-bcbb6c774f00",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d40be0f-0546-440b-86ee-3f4cc09d0cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0204b337-0221-4e1e-ad54-f5673d8f4fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530825f3-3e73-44ce-9131-948c91f7154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c598739c-f416-40e8-9a1e-bc64e656cb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bac93d-2a5c-4555-97ca-9eb124e93c07",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9cac45-9e70-45ac-a227-2daec9a023e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4267c89-4799-464b-9cdc-f7ff991e1d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26acf84-fc45-42e7-a044-06b7d0422922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c583d7e0-4344-4af7-a9dd-ffb1918d38a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b94a93-f8a5-4b10-ac84-1fe3e9b46df6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be049fa5-52ac-4df1-866c-8d5302e52bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0136f88-220b-4f69-93cb-137cb533a5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c274b8-3a54-4133-abb6-2fac66790fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcf3f50-a458-43a7-8dc5-7065a543aa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007f7b5c-0b3c-4674-9129-50ed13a32bbc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e96e46-168f-484f-89c4-343fde008766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b03279-bb38-4a54-9b96-e04b8a4caece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d1bc48-6c80-419e-8a30-32f73d39aac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2319903-9b89-4bbb-a620-c49395fdf1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82658260-5f4e-4359-9b77-df0f51f3ec4a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d270ccd3-959c-42c4-bad4-3619aa4ec189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0f9e6b-dbf0-4b03-b1e0-e6cc5f4d0b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b145123-0cf4-475e-a6f1-3bf493c33b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f772bac1-ed0d-43ad-af5a-1c930e53c691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0b8bf2-7a61-4c70-a370-e813efdb316a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e564f8-4d8a-448f-90f1-dade690a94b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0349c228-256f-4b1b-a30f-bbf4773ee70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9844aba7-2616-4238-939c-d45582eee614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16de39b7-0c42-4e6f-95f0-4794430062b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d633b2e0-ad6f-4ddb-a5a6-d0b335b637a3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629da129-416b-4832-adf7-6d3fda2cc09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13571712-a853-4c9f-9a7a-f403359651c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f95287-42fa-46c6-b620-f854811296ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "603e1512-5a41-424e-a03f-8f8a5bb958e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baed9b1-243c-4bac-967f-e9ff942c07a9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b611db-314d-4cd5-9e31-da6d22f84431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066e4797-2a99-4b95-92bc-f6ffb641d4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f317cfb-deef-4986-b845-c13ca64c24c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0dd7f3-3817-420e-a315-8160d223dbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b0af9f-e8fa-4796-bc40-f8cea9fe0aa6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c37497c-d244-4f98-b97a-9964bb5dcfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430ccd00-d094-4d97-b608-034908084f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7c7243-c0d8-427a-8743-33897377a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3456fa-2937-444b-9162-180e935819e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a6209c-7e08-4c0b-b170-f2279b31311c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261f9f01-8902-4700-9b81-ab24e1816e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91730e2e-60bf-455a-89d4-a20687e7c4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc73c2b8-cbab-4c8b-b1ff-2799207b4a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08281989-703f-4680-8475-0810c4360c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41239866-7f08-49b2-8925-776bc1efc7d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd8adfe-11bc-4b23-b1f3-5358f0b3a503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32a54b7-567b-4032-9484-cba2b4a386c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2342cc4d-3a7d-4e40-9d28-7876639bc691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86646277-7b37-4616-85a4-e7ade7567381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4a5a69-cc27-4e7d-9a67-b029b4a43fc5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ad4106-9d50-42af-9e13-b9c1b70e41d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1151ebb6-2249-4fd3-b3a3-b8cd5a2e5a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429ca236-7dfa-4a94-a904-4075581e765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c1d7d6-740f-4442-b689-dc6f5b90972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fa96d8-a625-494b-b35c-13ab9e2c8bd7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc245dd9-91be-4047-9c1a-1a4ac9d2d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf4da93-a1bb-4ca6-a824-1af19fa75d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f32e5f-2a53-4303-9b8b-2d9097fde204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4067001a-f547-432d-bd66-7aa777068f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8a4a3d-a2c0-46d5-be17-3cec6a16d957",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d704b720-8544-4c1c-8630-c5a0a7078627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248e042a-2a8c-4282-a889-9544cecf2af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f81f338-1f09-413d-ab6c-7484cba93737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0996afb8-7177-485a-8907-1a93add1ca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dabbd95-6e47-4044-8c56-d1ea60d4d9fa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e57dd6-ad7e-409d-b47a-0bd7a5a05805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d6e19c-846f-4375-8900-8afe5774a263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3be69c-e0c7-4822-b2d5-006bb2e06048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "711cd2dc-c9fd-4dbb-9f5b-039a624734dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fcb632-4af8-456c-9ce7-a6b2495d36f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e748f3-0044-4137-8f63-d5e47da83392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95749204-9e0a-4a2a-8a1e-6e19b3adfe16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2844345-3e46-45bd-8e2f-04f41bea6d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f928205c-2831-4edc-a5e6-970347306562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6358c0-12ee-4dfe-bb75-25c08c655d9f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc9786c-3cec-40bd-9706-df28e65b7cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6634c483-346d-4b50-b43f-8f33090c84b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aa2c37-567b-4517-a706-3265598dd397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da42e0ba-00a8-475c-b04c-ca69ab2ae592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6b3cab-b809-4693-8a7c-46b01e4701ea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a3b183-da15-4efb-a6dd-0c126eed0666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532d1142-f5d1-427c-9435-f4ea330cc535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45c5960-52b2-4802-829b-ed4cea9a06f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c105548e-f6c1-4f09-8eca-dda199c25418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b023956-0698-4b36-ab98-723dded7238c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c1424e-5b59-4aeb-a882-6ca026b2e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7889ded-6781-40fc-bc85-091def38dc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39093ab0-a50f-4e39-825f-0204a9fbf5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f12295-579f-4e98-b8f3-1b879d04d94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b347de0-ca69-4218-92a5-f3c037e12c6b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a1af97-906a-4834-bc56-40907e3550d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a993d63-dff5-42c2-a307-dfae3c8630ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30db3ac5-d3d1-4636-b656-35a60b13a77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d94b42-ee94-4e32-84bf-f9cb7d8b9de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521451c8-3c87-4cf0-9493-055d41719544",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ee8f8b-20d3-43eb-b565-b677d285fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e365a993-c422-4734-a44b-7aa3bf9b26d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bed34e-7fc0-4ca6-9c1e-6f2345299d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2649fc56-aeac-45d3-b267-a2cbb8c09221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87079b15-913b-4001-a4f5-272e2a6af331",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f994a9-5a77-4950-9cf2-6b41054fa1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d385bb4e-6ac6-4727-b820-528baa9cecf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d33b30d-529d-4157-8b79-945d5c3fcbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a44b6e04-42c2-46ea-8687-f8ef14ef10a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2165fac9-6a8a-49b1-bcc9-b3f0cec44b65",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f55dd3-5242-4760-88ea-e0cf154030a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5a6476-a659-4bd6-b99a-2c1fe4d2cabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45521e3-6a51-4abb-84ef-aaa3722212c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c5d4bb-b0eb-44d0-94db-b9725b2f7ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2325b305-8b5a-48fc-a9c7-c02b99f40f42",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346e79d8-fbd0-4304-9aca-00b405a5e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6da6c95-4698-4e33-9442-99aff7bb2a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f4a7ee-82f8-47da-ba52-a8c1593973cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cae772f-224a-4fc7-af4f-9a8cff0cfbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683e44f9-b31a-4855-a315-af4ae86dac57",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf87cba-4a75-475e-a693-74f2eae7d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9daedd9-6aa2-42a6-8ee6-567d4363f52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f641b2-8c67-43de-96f4-41a8a1c52211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "110571ba-82fa-4a10-bd62-9e5bd269f7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2c65bb-380d-4184-88a1-ee2df9c0ed5d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc10dca-a0f9-4e21-91a9-6602c2849e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc06023-757a-4593-8fe0-4b66e67e9f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df802e4c-6c07-4f40-aa5a-87c0ff411e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce65394-d156-4b29-9ad1-7fdbd4686383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c104db4a-cb8d-40ca-8e7a-1954f036716b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767b59b-5972-484f-ae4d-73eb6ed0c7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b19d70c7-8994-415b-8a7f-783ac50f0f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b43f8b7-daf9-4c8a-b5f1-a5b245ad1e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "225ab628-b8de-4f2c-a2ee-b53f5eb48891"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d4b1d4f-6509-4811-9df6-62eb84856046",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c4df788-e561-4261-8241-75736ca44344",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c7332e-9606-424f-b114-b50308fb720f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d96cf221-345b-47b9-8412-3fb803c00d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ff333-60f4-4a6a-9aef-dac2751959ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69864af2-fb16-4d31-91ec-b483b228d49f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a3f7000-58d3-4dd2-b61a-61370842b48b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9dd628c-f8a2-49f8-896e-267082c79ab2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c99d25a-5977-4f16-a3ed-b0df3a36b330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47371ead-4d52-48e4-a05b-2c532cc6f5df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6084545-8801-461a-842d-32013a1dfc06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2bc61b4-5582-4b86-9289-540f3637028d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "177b9f44-03a1-43f2-9c8a-fafa02290318",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "034ec03e-a46e-4e6c-9421-ea149b9329a0"
                }
              }
            ]
          },
          {
            "id": "06e6829d-7049-4830-9e4d-7608097c97a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4bd03f68-a373-4d35-ba6c-b2004d9901bd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "97641a3e-24f8-4f86-9e45-f2cec4b1083e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a56207-6181-4065-a65b-5a91a5d85e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5849c62f-619d-4d08-bd09-50fc0e33fa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d99d723-642c-43bf-803e-5d0c1fe18d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bd122a-22d7-407f-a391-112210c65db5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b8f4585-b187-487f-9bc1-04a31ecf2fd3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2d9f5ff-077b-4e12-874c-332520f36b4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2373917f-b301-4b4f-befb-7806323a0c38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75cbf442-e097-435b-a69f-f821b0894f11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b90f1804-3b22-4660-8809-b440a3b22560"
                    }
                  }
                ]
              },
              {
                "id": "ffa745fa-04c0-4d3f-b761-2a1fafec15ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e20c219e-143f-478c-8620-909a277d0bb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6e4301a-1a3a-4b1a-9569-bf83689563c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e7de62e-73fd-4ea1-9fd6-4d7ce4126be6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bee98423-af53-48ad-9360-393234b6c803"
                    }
                  }
                ]
              },
              {
                "id": "c8e4725e-4e1d-43f3-b0f1-97e57ac6428f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "292fb5dd-6477-4a23-83c8-87aa74c6c1d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b8612ec-c26c-4ce5-84ea-7213d7c9202f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4b9cf60-7f7e-4556-8546-b5ef8dccdaf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d96e2cd-7532-4b32-84a1-00813d474531"
                    }
                  }
                ]
              },
              {
                "id": "be54d158-9a8b-409d-be5b-bf141d505eea",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f6b7418-f9d3-432d-8cf0-1b040cb84180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b20d839-dfc0-47e9-9270-756af73def69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2706b1e-fc4d-44a8-868d-0bc2112e9d2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1c4e0363-5587-42d6-a552-1e5b07b24d02"
                    }
                  }
                ]
              },
              {
                "id": "a70ab06e-91ca-4a4e-ad4e-670b6247fd15",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed357d70-102b-408e-931c-5bbd511b36a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce6d193a-19bc-4d9a-9107-f62f94b9cbfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "543128c7-df6b-40c1-a4ec-c8e04cb6188c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "541154fc-6031-4cb8-b681-d9e7b3b91c80"
                    }
                  }
                ]
              },
              {
                "id": "6555ec24-bac4-472e-86d4-3ef34d6c8606",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0722fd58-6388-472c-a3ce-3be4a9795097",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7876e1d-fb51-4746-82bc-7e5235f7ea89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8a0b464-171f-4c73-ad3b-6d4be25e646b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "507620b9-dfe5-4c37-a2b6-fedee57b3df7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b3ed74d-8ce2-4a32-bcb5-f10ccbc3f707",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69078cf3-7190-437e-8af6-edf862a96aaf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1763f8fe-3470-4f01-94ee-5c60cb78595f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e5fa7f8-8520-463d-a3a0-19b4c7b6cadc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d850f23-0a9d-4a97-a90e-7f43f123fb9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f65bde0-32eb-435c-99b3-41b84a0a899e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9abe5f32-c12d-493b-9e7a-322f0dcd2391",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e568749-70cd-4bf1-9006-3489b8a5999e"
            }
          }
        ]
      },
      {
        "id": "6fc56028-b800-4668-a7d2-b7dba8021e47",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "187514cf-2fb9-4b08-80c9-8e60fe18d084",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a18435-e581-4a75-918e-5a5dc4a02203",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5bcd28f-1923-4770-bafa-b203aa4ea9cb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fcfe26-4c95-4263-a618-1f9a5f84e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071c2b63-c8bf-4098-a7bf-5e783436b068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87351fd6-d5d1-4e1b-8e45-1f1f05276a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fac6f6a-30d9-4348-be24-c2bb6fb60d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a7e295-f48e-40a1-a70d-a83c4cd3508f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d663aa-9b2f-44b9-858d-fccfab102c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81aa03cf-73f9-4143-b1be-640c3eb2e342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f856e0-9053-440f-9697-ca44cc485cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffdc358-9209-404a-935b-31156c39eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee9e9c5-6693-44b6-b4b2-ab7839c1358b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c877348d-6075-4f27-bb67-7ba959e5eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d917ea-f997-4694-811e-02ffbe7d70e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcb69e4-2001-4c12-be7b-2d8550f83b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e39a73-3a93-4f15-b5ac-9c5574bbf800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6360c6-86ba-45d5-ab0e-859a5bee8ee9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46bf868-5f57-406c-82f9-dd987e47c8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7c3ac1-8bd2-42f8-ba51-110517d06666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf4f677-562a-48af-98a9-43cfd5805991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d1368c-a5e5-4768-815c-391849b14562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53e442e-fc2d-4afb-88d2-d5f6debfee73",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c0b924-3afc-4e7c-a979-343ec45cbbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3b796d-be61-4477-98a9-82a8913791b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981266dc-f90f-401c-84fa-03a6b83a3b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00ad55e0-a471-40a8-829f-356105f1b48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2524ca-8105-4edb-96f2-42d96c88363e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0a73e-51ac-4dbc-8838-49918235829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c34dda-597b-4c89-9ce3-a142b8983f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818e31db-187e-414a-b335-c9396e995bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4544062a-0d16-4620-9c01-e6d3e577b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e219888-9124-40ab-b64e-fd6c187acb52",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45d87ca-f4a2-4625-bf2c-94ada43138a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a145b9-c0cb-4cd6-9395-5c8ce21b3953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e922784-3af8-47de-a68d-9c654d942675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef1fc55-de81-47fe-9229-265865cd3478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd322d5-ff48-483e-af17-7863ac5dc31b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bc5f9a-1fc1-460b-bc9d-77e1390f3ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b57cb3-164f-4817-98b7-318cfba749dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02ddbb-6ad8-4fb6-93db-68502bed2882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c63fe5-0952-467b-9381-41b5da638d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7947781b-97cd-4abd-9120-bf637a95bb76",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef97f1fc-6a03-400a-95f1-80e3a5ad2c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35825970-c374-4e61-8dd3-f3eb4e54ad68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7404ee-9289-4a79-b8fe-092f712ffa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6f3106-5101-4590-a320-36f6120a80da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3bea74-af9b-4b59-8f9a-e41fe16f4764",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5746b924-1b5a-4108-a93b-e39dfcfed5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555443cf-13fb-426e-bb8f-707963a1d992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0742f10c-9413-4694-b970-101f72090268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29514a78-1c7c-4b49-99e3-b0630c8ae418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe39e74-5c00-4c98-9b26-8a61190a61db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529d3a19-2a62-4561-a4a9-3940011f1b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648e4c2a-45b2-4122-b3e0-aaf4b97bba42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce7d37d-2bf1-43e9-b5c4-57c420c83fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "322ae6f5-d1d5-45ec-b5d8-4f861809a9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d417bdac-872c-404b-b3c3-65bf2f83e545",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb89381-7536-4282-a3e1-d6b822b7ba48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577d7930-0447-4b16-9b9a-482cc8184a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4cfd3f-60dc-44f9-ac19-6c88f568cc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcac3a1-0333-42a2-86f7-4e27e0de73f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cff1d9-86e9-4cef-80dc-0091319bd12e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cff9895-2973-4748-bfb1-c3e1c4780c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ecf018-b4e5-46eb-a2af-3cf17cddf553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37feddcf-1316-4275-91c5-2eb05f091518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57986df2-4884-4c61-b7d2-b7005316a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c75b465-fcc7-4e37-88d0-e61f645d3060",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea994be4-742d-4263-a0a6-1eb36611bbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5f3f34-cb22-4f6c-a7ad-13955606bda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c5cbf7-59d7-41e9-bf7b-83b3001759d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c780bc89-8e06-4726-a597-8faac1a7491f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c715f9e2-6388-45cf-9bad-4dce7cc631fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0c51bd-7703-47bd-847a-d56708c3ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f09840-3363-4e94-8e77-356db40d06d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5691583e-642b-4582-9b1b-df2ad2abce12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e437e65-a7e6-493a-8a10-332b215f1024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0ced9a-2136-4885-b161-f2de9d4207e9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7399dad-a7a4-451f-842e-959d75199796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5ea954-43a8-4c73-a2d9-2a2b4a90b86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b799691a-2742-4431-b0c0-9c9fe232b96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e439c611-f00f-4e26-9af5-8dc2d843d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4472f-cd36-4fb1-ad70-5b66d387767f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d06c17-9405-4aa2-a0c1-3dc100cce231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81d52cd-5170-4418-849e-5bd3b8d38b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaa9fea-b5ab-4c0d-8bac-290bf87b4f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c7130b-691d-48be-9150-e60e876579c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02801d1-0a54-480d-85fe-fd78b8f27591",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e164a6f-769d-49f1-aeec-ead09049caa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a40e65-beb2-462a-a169-9b450ad9953b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a68dc8-a301-4931-8f7b-6ea308fd798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af074a0a-348b-4206-a744-7182204dba65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61f5b31-c134-4824-84d2-855e9c17bbc5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f583b7f-a336-4bf9-8f37-d7863e6e31b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99bbb8a-6e6a-4add-a486-99e2c7d215b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9669f7-2939-451f-abd6-9a0d3c72010a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adee26e6-43cc-4153-a95b-6e07f6ff3ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0477c3db-7b6e-4983-b49c-770eac48bf07",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3342f160-6aa2-4184-a0b2-093603a6a32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85640e53-d544-4c3c-8c78-216f8fc311de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fc5332-cb6c-4044-9d14-ae2ee6f17469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30c91b4-3e3a-4466-bfaf-8b5eff51c64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da84e8d9-e6ba-40f6-9492-4715e33825be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14774ba8-cf77-4470-a879-240e5b9699e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98edf0c7-fd35-4597-ae5b-a8c586d22121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f3772f-5322-49d0-b468-648fc0a154c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3460fd4-bb52-469c-b6ce-24963a32be64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86ee42c-9382-4b57-98f9-ab9a4c09e734",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e4da89-95ce-4c60-afcd-e5356fc54fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c50d1ac-ebf4-4f94-a16c-3b1f8ba1a702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fc5a63-7cb7-4833-9d17-0d6dfcc4c763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c871b5-2c2e-4248-b270-95a597721cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db35e37c-95bd-4a9e-8fdd-11f3fc13d7e1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c36a5a-9ef1-4bf9-8210-34ae8f41bb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba31f35-c567-412e-980a-fcf5c3a6473c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb27704-bb4c-4e1a-8c72-9ae48a9a51f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a2b1db-4480-421d-8a86-58d732991bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e34d6f7-cea6-4e69-99cf-cf9074784ff9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579bf9e7-a3ce-4407-b584-d6e66856b336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6a1889-998a-4963-9d86-b461b634585a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8afcc52-f551-4221-9138-87d762b0c0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "238df819-1684-4c5c-9162-eb1ceadd0faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce59779-2ae1-44d7-a2ae-6b7bfa196543",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d86583d-16e4-481e-9046-5700f4a7924a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42e5e89-fcc3-4fb8-aadd-65f0c0827907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b347aad1-e1f2-4337-9d93-c57ec0682581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aeae9b3-2db3-4c23-ae0c-b60e7d85cc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf6388c-e9b7-44a1-8ec5-07fef5078092",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f660aaa-9387-4173-9918-7c9d1d8e17b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0446f6fb-b577-464c-9205-1f49d80c47e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c76231-87e0-4274-bd87-1d565545ed21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b6453a-0c89-44aa-a683-19f2d0e31e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ac81c9-5843-44cc-a798-a454c5a3818e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc18ad1-b427-4383-b96e-599f4681f9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55305231-4400-4ef3-94b4-7ac5b762c60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a04f0a-2197-4e05-ac6f-6a85da46f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d48ee1d-1281-45ed-b276-f3d49bf1b3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a303d481-6cc0-4479-9994-f3e1bf2f1cc1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378e09c9-9e32-4974-b0a0-fb39cf62d07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a1e735-b905-4cf9-8266-37d1c7ff57c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45217618-61c8-4b0e-ad2f-a425d0ce47eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a5d319-ac7b-431d-9ab4-c210ebbd79a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12efe44-a3e1-4dbd-8a78-3103c7b38c6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012a93ad-913e-4f79-8aac-bc41111966e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea41a18-ad04-47cd-962a-3623495a9e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038f04a-4808-4da7-8493-56b48ddeaa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd2b45a-8d1a-44be-9414-9897da4cf881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a132856-2d69-4c6b-bba6-673c22bae4cc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4b91bc-a17f-4920-ace4-9fc9c4dcf6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3775ee96-0381-4c07-9c1e-cbd57ed99ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c83d305-5f2c-4687-ae08-f6c4bcc623e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f175e5-b204-4479-8abd-3af166dbdddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0300415f-86e7-4ecf-a85a-8490b58eb8df",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50e03fc-f82e-4241-a256-7540348ff615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995a30c3-9e99-4255-b972-ded0ce7e8cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d1ce73-e841-4925-83cc-6511a75ab16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd37276f-b5d0-4d87-b4a8-23821aa837aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0424b26b-25f8-45a5-a0ad-7df3a3d89e31",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa94fa-4f0c-4273-947e-df98c7bf42be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0f0e86-eee9-4117-a4ee-a3ea906bcf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac38ade-68f0-488c-b750-b00b485bdb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88dbd77c-4187-42ee-8aa5-20028c5bd821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb3ac2e-a835-4b83-a4ac-ba8c84db7a76",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39af6e76-59af-4443-8f9d-18fb7f5d25bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f9fc95-617b-4730-90cb-f1160a699748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2badc9ef-08fd-424f-8cf0-4292e6c7ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ac1d40-6ebb-4bb6-8b59-c81b865109fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b607693-61e0-4517-b787-89397f302d5d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1973f626-163d-4506-b398-491cab17555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22680bab-4ea2-412b-9e04-85684c3ceaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c28d0a-8dfa-4f9f-8e0f-fe93f75e89ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec2c701-754a-4143-97fd-bdfa4ae13d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cb4098-3c82-456f-9234-cb5448468d57",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb9edb0-55fd-488c-bbf9-25408cd9af1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c489a2-0839-4e1d-aa07-64f0c9f589bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e08178-75ef-44f5-a557-d0f3524412c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaccd180-30b8-4bd6-819e-3e378176a83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc822f0b-dffe-4e73-9353-c4d4dd8b90c1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9517eb73-6dfd-4c0f-9710-fc6f7bbb5836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676ec844-28e5-4e43-8328-2522c8782870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c03048-058e-45f6-b898-94286607c243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcbe08a-b11b-4c19-9641-e82822747f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c18c4-553e-404e-930f-6a178bacbbd9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db30267-ef3d-49ed-aafb-ffa49fa85474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e284ccd-98f0-44d3-b981-dc90f745c1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33920b70-6072-406e-bfad-12e8abf54fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df472e74-1a45-4d7a-a67a-9d1ca07a174b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccde4a9b-a856-451b-96ff-d2436ac136f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a3fb5d5-0f5b-4c94-8d04-05644a595949",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aaeeb7-55ad-476b-b005-74cd31f51c54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c106b7-4284-438b-a199-61ea47e60211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906b9543-a31d-4160-95d8-2824b957ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72987b30-7003-4c46-be3e-063b1a9adb54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f683bc6-cdcf-4fe7-93ad-eef1caf81b8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7302963-cac5-47a4-ba33-519268ebb5fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99f7b685-7b27-40e0-8eb4-770b544ea291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67df75e3-741c-4049-b62e-53e09b7b80c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86149447-d119-43db-870f-0258feff2699",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4bf1c1a1-7f30-4485-a6a6-fb962b74c0c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ada35b61-9da1-4407-aab9-7d9d63306010",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945f9a3a-f0e2-4edf-88a7-b7f940127c79"
            }
          }
        ]
      },
      {
        "id": "aff389af-55ae-4fcc-8f53-d14378546db5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ff8379f9-2f79-4016-aba5-d6ab3ae76004",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f186063-eced-4d25-b221-c1086d5c2a3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea1db1e8-bb44-4202-a328-79d305b205c7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9ca058-0820-4a2a-b94c-8fb6654ec89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1259bd-b685-4320-a392-c1e98b023c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7d3dde-50d7-4875-a26d-4af2cbca8101",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecca370-3049-4091-83e3-7055755d5b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc137c6-d92e-4eee-8a2b-f750a006b736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d71939-78d9-4f8d-b39f-819283d41357",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db5499f-db03-43e3-8b8e-662f0dfabe32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5dc801-ddbd-4524-a9b4-cb27f780ec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecb0e40-6e4f-4bf3-9a5a-b102ed3ebecc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50c42d1-28e9-492e-ad10-99e8d582d8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b6fd1d-f19e-4d53-b4a1-904837c7fb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca9793e-094b-4232-9459-e1531090afbc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8960c8fa-700b-449a-9ec0-9a0f8081a8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d59efe5-902d-475c-897a-1b5682313f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35c97a8-0dba-42af-8c27-afe8f8b8d049",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da4bac6-fe9a-4bf6-8753-25671b25774e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3af3423-4a19-419f-9def-a6ebc8df691b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b5fba9-a154-42c0-bd67-f5d1b3c4fa04",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b904045-cfcb-4fe7-ba45-549e8e8a025f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82caccd8-e0fd-43bd-9835-bc4bd8f1357b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d05866-a3d9-4c7f-858e-7ece5fe110bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbe27a3-718c-4653-9d1b-25868958ba3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5786c9b2-c808-4e68-ab76-77367eaeb501",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86252ec-1226-49ba-8a67-f5f3ad53db52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2edc04-020a-40d5-805c-c38ecc583140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719f6661-34b4-44fb-93e5-9aa64a2ac12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272c1c7e-3fad-472a-b873-55035b60dd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f944131c-d73d-4b16-b01a-57a369609e0d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d3d76-abab-4e39-a37e-f62f331df4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3233896-bfb1-4cdd-9c46-5bcc4c0887b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4538e783-74a8-49f9-a34a-3c59fe35a3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01906032-eb46-4883-98ea-b6be45887ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e0a51-08cc-43a3-80d7-3bd51713cba8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b690f4-5c08-4e59-8a7c-f3065553cee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc382e58-3d58-4672-b7e6-a625ae45e2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2c3b32-1b49-42ab-ad7f-524ed66c680a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c80459-9f4a-4fcb-91f4-0f3323bb333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704bafb2-6248-4f54-8000-a3b3f2c80d6a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc28560-af71-4c85-84e1-2d7ad2bb0c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca44278-f28e-4115-b0dc-20a75f1d1177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267ed034-a145-4a0f-8c70-74fdd67d7c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee4bd12-9752-4548-a2eb-5fc3027bd3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f749af-c470-4a2d-8561-9432deb2a89d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0576e47-2602-4a21-9d29-2f382ba8e1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8742934-53c4-461f-aa38-ba01ca27957c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d3d0ae-1e33-4cc0-ac20-c163d5e55f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0dfb048-0346-4b21-9724-cddaeedbc005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b6940-da34-4972-a17c-90873852f20d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ad087d-97d7-44b5-ae2b-6791ce6c6833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07586322-faba-4269-a851-e5767e116176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92acdfba-5f77-47fc-9628-8ecac0e8485f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30255e12-447e-498e-8c1d-d575721f0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcda293-3fa5-4077-86e0-6aeb62d78e35",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b54660-3f94-4c2c-adbf-c0d5f1ba1179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9903d06-2ad8-4bc9-828b-696521a79fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d489612-312a-4f42-8b65-752f6b5c933a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527f0bed-cc30-4863-87d3-ea8c9e7f5057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9c8774-721e-4105-b9fd-d41660eb881c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befa7b8a-527d-4c26-928c-15cec056005e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516a6981-76a1-44ce-9fbb-c079bd3fe49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4c3339-8b61-4e8c-a15f-cb39e049d62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2683b56-bc86-4554-bd1f-cd42456b7db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f939b9-f6c0-4aa3-b103-16890e8cc759",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd07e50a-0937-4246-9192-f537d50da379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b88d2e-9be6-49e3-8685-84e2d73b60e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0694226-dc21-4fe4-b318-b1e690dc49ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d2554c-49bc-4e08-8352-968a05a83275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5700f67-6c28-4f66-a251-b001245694e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00a5532-c7e9-4a26-a251-0c8a119dc13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02750b0b-6b9e-4bcc-88e5-2e02e0ff7e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b73ba4b-ab23-44ed-a9b2-9f679c9baa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f084b8-3a51-454a-95f5-114f625286ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f773ff64-a664-4530-8a58-954f428533bc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42bc698-5c8f-4722-84c2-dde7b065bb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331e74f2-065f-4e8e-96ef-47eab12d090f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fac5dbf-82fa-4f57-9929-c9b756c64b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0ca93f-13d8-4453-9d4f-096c9a36314b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eaa7ce-bb9e-4e82-8c6b-a8900082c046",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07039b5c-88de-4c28-aa74-557aa917966d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb797a6-89a4-484d-be5f-481af05de892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e64d0d-5044-4b17-adf9-d58bb9cf5073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418168ba-5257-4993-bcfe-58c01c33be7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a28eee-4ae0-4922-afae-9bbab8db75b3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df49b7f3-70cd-4fc8-a798-b5a6118ae32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d2bd14-1b4c-452c-b45d-6bda471a2c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c681e-b069-424e-99dc-a8f6e8828a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b730220-1929-44df-bcfe-3a07741b27de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72101b93-891f-470a-88e2-03ad4dd258fe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a46055-7568-472c-87c2-46f382a90a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbf4509-1f7f-425e-88fb-a21516c5a6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2694924d-47bc-48b0-a025-8cddfd6547c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c5ad5b-262a-4952-8b16-a2df38c51d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de497567-e053-493c-a936-8c7d396f7283",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b63e339-513f-4f59-bedc-bc4869c23f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef37df57-390a-42b5-ab94-f001401ce64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489dcce8-7aed-4483-90ad-1556818bda9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aab023e-79d6-4550-94a4-30a14e09afb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b0859b-b161-4811-90e2-734009ff7163",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fc81ae-d199-488c-bbec-202ee00133da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30be4061-5a9d-48e6-be37-1d12b2a41164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3abcc2-2c5e-4e52-8185-9a4e5a5c818c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4c9f4e-393f-4c5e-b86c-6d413324b125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6173680b-cf06-438b-8af3-413f3f5c0e18",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce60a5d-c047-4b60-ab27-9c28cc8830ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd53a9b9-2816-41a4-a5d0-50dae8fe4dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d4c737-093c-4a05-8540-94cc50c8593d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd42e55-bb8b-457f-ab88-b1cb20bb4ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929756d7-0d0a-4d77-bdc0-a05e2fb68c9a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617f07f8-06d9-4df7-a878-689d1cfc52f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d602b5-dd99-46f3-b84f-0cbcd74afe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917d875f-050f-42f5-94ae-d0f80975bf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889a95e7-4c3b-4d9f-92ca-135e1ba5f4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9cd9e2-bc58-479a-a4ff-a362fe9f65c9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1af8ac9-002a-4a12-8a07-4ec292bc1e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd0075e-d49a-4d2d-b9bd-9c56d53c3ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2f6482-8fd3-44fb-8cc2-1979e8839779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3336e58-809d-46e2-b6a8-2d00283940e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d133599-8f5c-4247-b1b1-75eb09e21b30",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8501bb4d-c1bf-43c2-9700-37181bfe8272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0952597b-fa57-4e56-bab0-213c601cfd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8506d6f-75ce-47f3-9989-a3f018a0092a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ac71ee-a686-45d8-ba4a-54a0dd8921d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7383dd2a-e2a3-463d-80d2-ca277191417e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4dad99-8e42-40ea-a75a-993521064c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fcc36f-e0ea-4c33-ba14-43ddb30653c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c635b4-b506-4b5e-be0b-aa9b570ab277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6dd234-b6f6-406a-ad11-256bbf953857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291e82cb-cf21-438f-9645-70b93ec53e16",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a22dd37-0568-4761-89a0-d190a0f22bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df10828a-54b3-453c-aeba-9af6770a3f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86d181b-a251-4ebe-903a-805545f90dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c97bea-8ddf-4b7f-b9f5-f88b93693e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070b1f9-9db9-4083-9b5e-d91662bee48a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b417c8-2e17-4d2f-9ec0-8d2b93506edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19d34b4-e4b2-4240-bf44-b3a9974267f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bf8261-27cb-433b-91d5-f81145c537cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cd23a8-b8c6-4100-80c6-20ce9a3130d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ad3b53-9cf0-498e-bdff-c26010c6d390",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1ad4d5-f33e-4dca-a29d-1749efcb95db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b7a84e-f28b-44c3-887d-dcac15fed494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f3f0be-eeba-449e-b9a9-112f46f641da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a998f9e-7b1b-48f7-93d1-e47066745d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1355c0da-689a-42eb-9467-78c8ed6350f3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08d5d86-8844-41a0-a9cc-971ae6e2c58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc4ac8c-e649-4887-adf2-010fcce83064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d20f9-3c0c-4331-86e7-dcbd2ab68657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2df0b3-3265-443f-9b78-c56e0c640f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74567efe-1c67-4429-b468-573cdfffbe7a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2676222-784c-405a-805e-a07155690c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d18c5c-9cf2-4ae5-845a-c14137c8307e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c3138a-3676-44b8-a001-48604fc88702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab7343d-fea6-44ae-a315-777ba0522c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502a082e-45a1-4401-ac97-219b077c55b3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f1292d-25dc-41ba-88da-66240be78f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9c87a3-b2aa-4444-a755-3e129eea304a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ca2704-049f-44c8-b4d1-a9be6a2e13d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d775a7-0be0-4b66-9225-a2e24a6ddd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe946d2-7c2c-48ab-a68b-e2492ce115ea",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ec352e-558f-48ff-9c3f-53374ef320ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd399c8-3ac4-45f9-9ce6-f3ecf3047f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e4fd92-abd1-44ce-9c1f-218d3b152180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8aba2f-44b0-4bff-8ea6-f048e41a88f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad5c7d-b82a-4e37-b36d-52a5246d9fa0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd65220-2a3d-4359-80a7-a64967526d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccda129-d238-473e-96d4-6d453b3ff5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8dc687-ab0c-4999-951e-68ed809ad24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ff4d03-e28b-46c6-8019-788e49cb5982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d36f928-9885-40a9-99fd-22edf632ed15",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f88c261-4798-432c-9336-122e7f2eb6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76558192-08e1-4b7b-b546-82eff6af3fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f751ed6b-42a4-41e6-b5af-4f18c6acfe93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c994a20-b9ce-4b63-91e2-81aec279558d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cfc45d-cf22-4541-938a-af9c54401773",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e681c-a4c8-47ab-b839-363898e8e935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfffa231-43d1-4d3b-bc3a-8412799690f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b952b0-60c0-481f-b8d9-f230ef22a756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f7dfde-20f2-4ccf-ba51-38c1a75f03aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8860e5e6-35c7-4ca2-8daf-b849745e699d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab144d6-e57a-43c6-af83-4d3759ec85c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08900b7c-d624-4d9b-b694-c4b238ca546d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a6893-0320-4f4d-acc5-d0dbcf4fd062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dfaf3a-91d7-419b-abcf-a8e69753d45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ac572d-7f7e-43b5-a721-1d9f72eda31b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49a17dc-9cfd-461d-bc69-d392ed46fe49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148b1044-98f7-41d4-ba7f-088bf30b9744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eae025-6637-4f79-98d1-878b03cea4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6850b0-ddd2-45e2-bba2-f82ca70c3246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e5b804-d361-470b-bec4-b1196a106c86",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d6f4ff-955d-42a3-bbbd-89151d133140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dad1637-80df-4473-8e0d-ddb274804d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2522a998-1a18-4297-aa49-0ca77a89f165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fe98ee-7581-4b7a-8ce6-a0427c4df1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6ce729-ac3a-4ad3-b451-34ff38c952d8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f789f9-efdb-4e95-a7dd-3ba75957ca8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c646cd-b46d-4cdc-bf5e-6e0decb272a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d3cfe8-79aa-4b6a-ba4a-ffe66140c29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2105a499-4f2a-4d91-8e61-057f798a6bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103fc373-05cd-411d-8511-b9bff4ee4bb3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a3e248-1fa2-4d92-8d4b-225920fe1d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf72cd02-ea1e-4e36-90ce-04c180b0b75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab03230-1299-4773-8488-bfe5a35d60e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94975c1-5f0f-48a7-af1d-52cf51c5ee45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08db9b1-b77e-43c1-9456-4596b7394122",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceaa159-0971-4523-8619-223a0c10d131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba340f9-0bfc-4e1d-a357-894f05954733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c654d999-e9b4-444e-9731-0c5d580b58fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c93a532-c565-4a4a-98e6-65dc22a2e4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5493c71-240c-4810-9d68-b0a8ced9540d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be96cfa-a130-4ff0-a0ed-0e3818328e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d63e573-bbe5-4417-9c59-f847753326f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08416596-ee5b-4cf1-89cb-286df2e95b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15d3910-abb7-4190-8494-f9d99cd2df5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13860503-9f31-4895-853e-80c28ce68331",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8d4c5b-d4d6-45fa-8e6c-bb8b4f4e4ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d027aedd-8abb-4f7a-8c4d-0e87f65cfb50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a12d4b-6dca-41cb-80f8-b260d27a5d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73a0c5e-b5d1-4ec0-99d5-fb3845178866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f392b9-e1ff-4c99-bd8a-1fa510600c54",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37887bd-b528-4ae8-ab3f-f025285ea131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4042d581-9e74-4333-9a99-a4346c4914aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4ac167-4cfd-4cf4-be55-787c81c07865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7e03ac-3d68-4adb-ba47-121137dcc2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e4d6a-8337-47ca-b343-56ca38d7d7ad",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e5cba0-26ac-4edd-a9db-bc25e2650286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f1bdc8-2cc1-4167-ac6e-ec8a41e370d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de08c5b-5205-4764-9b69-d11c68cdb241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978eabea-b767-4372-819c-66076b136cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3631389-8835-4e4b-b5c9-ccbd5be8d3de",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d65a74-df6a-4d4a-9bf8-1c314a92328a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7302cd1d-3bf6-4582-ade9-066c9ee05318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f694597f-3cea-4f28-9fed-dd0f4ac03033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a555bcb-26db-4400-b4c3-11465a8c90a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13abd65c-3f06-4ff0-af2d-92ded9479afd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2e8979-b6b6-4f6f-b8b5-cd5eb45fd6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2580d77-548f-45fc-9d73-0e045fc47692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498d8f25-655f-44bd-b0de-33558db4d091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63a51bf-1510-4f01-8300-0d8020dfa2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacce4cc-c3d4-42f7-b0fe-5b336bbbbf2f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b732eb3c-a3f1-4bb1-8f30-71b5922bacdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a247ab86-9321-4394-a2ab-90452d15a063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257d1ae1-e769-46d4-ae53-6c6e23efd72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58d8477-7d93-4f1d-bf39-05f58048872a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864aaf8d-f740-4d60-b891-98d8d3632d44",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365edcf2-27ae-4547-8c9b-b8a63790424a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46f76f6-2142-4850-9766-6a7b7712a970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4480b64a-ad06-4e92-bfc5-a42add567a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e3fc84-4c04-4113-a52a-be17bdf22477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df949707-737d-4198-b1cd-819f7b6fb9a4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f518893-95ef-456e-87e9-b9bbe23ffb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc0891c-018a-494a-a10b-a21001ddfaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c839cfd1-7f87-4e06-b829-f086f825afca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22027f4d-728e-40be-b071-79d5829f3e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bc9db8-80b0-4f3c-930e-b824d0e79159",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75351974-8403-4dd7-82d0-a4f99c274c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da640107-ae7d-49d6-8233-f62efbbf846f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49066cf-73ec-4a16-bcf3-78fb9540b186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e129a6d4-e76f-4610-a19e-7eb6fef23068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd15b7fc-2da3-4e3c-9ebe-133151bae2a2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a39d4ff-2aca-445f-bb83-025b814e2197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95765c6c-87db-499e-86f5-b74c3399f19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dd41ff-149b-47bf-904a-d271a8b18233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5532408-4f46-4195-a5cc-18ca974b3c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5a6f2a-7b1d-481e-a364-5a5e3e758d6f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a803257c-227f-4def-ba9e-79a21b0514d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31ca4a0-2341-4f39-bef7-49c3e500ddc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73f7bed-92ea-4456-8b8e-3c522bf110f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286df162-7d39-4bad-bc1c-96a80ad47fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e588ee6a-1621-4a03-909d-f8eebea594c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7a2375-3afd-4930-8f89-68e64995f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad48f037-a19d-4a01-93fa-355e4fed3098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f11ae-4cd0-4a5d-ae19-74d70e8aebcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5624b7fa-524a-4a59-bcab-360373c62973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102573c9-60ae-438b-88c5-a65c7c630ad4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eed6839-f6dd-4efb-9b35-e545af4d4860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b275b65d-5df6-43c7-aec7-d90411eb20d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fac116-a744-4db3-94b4-73d11cfa2b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b1eae2-92b5-4d7d-9cb5-4e9aba6f0b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc888d9-aef4-441c-9b7d-34ea790a0627",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3d426b-67d5-44ad-8e4f-2b239913a0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faedafc-6ff3-47b1-ba73-c7ad823c8b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c04cf8-c3f5-4c46-aa5a-71b7355de1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b0962d-f8f7-49c5-9278-3bf6314efbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52acc40-4569-40b0-84af-748c4718d534",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75f0e90-50ab-446e-9c5c-3716e9fe037d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f089ec23-877b-4f0f-a8f4-ea68075f3466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777c2ee1-73a1-428c-b039-be9c7a1b145b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09a6f67-4733-4646-9b3c-2eb017b629c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b840d0-e3f2-421e-9625-06289a1bb5ac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbcaa92-50a8-4d06-8a0e-be0dff34642a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bbf8e1-7161-4170-80f4-d3337e365625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6401085f-cc6b-4769-859b-2182d002491d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef32b087-11f0-47be-a7dc-7e2675fa8743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c55f37-4344-471b-97a0-7a7e824aa63b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e89e07-3dc9-41a1-8f55-1b9324967c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b620d6b1-9390-42e6-8294-70ca9c64bcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3645b9ce-3b17-46f5-b4ff-d8a564ad24dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae2cfc0-88ad-4a71-8d07-4d41ea39c23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2898755-8506-44a5-873e-333cd1da3eb4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689dfaa4-aeba-495c-b31b-c6925a08e74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77be4d7f-8327-47f9-91cc-739bf8eaef79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a569275-bb4e-48be-9bbf-0d54da0de174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e7a3b4-c7e4-468e-93ff-6a8238675db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23a6a64-5992-42eb-8767-d8a9725d4425",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dcecc2-a61d-443b-941c-3828d632878b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4539cbb-bd6b-4f91-b0af-8c8171b744b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e4568-4a8b-4452-8bc7-fa71039562ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c125e687-e39c-4335-bfd4-791f4ec0b79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18de6bc5-f13a-49c5-b65a-184695668491",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f069f9-a637-43dc-b496-fb829bae2621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c2a22e-fdf7-498e-a99d-f52c59f790f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc78e9a1-15a8-453a-8a48-95ae15f57fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4617012-7251-4b83-b006-c0bd12a07908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82106bad-62e9-45c5-b6aa-5bf87e45c153",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc92c601-b055-4116-a7aa-402c3bea5230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec68cd5c-42a0-4814-9e5d-92946f838e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18880c1-f91f-497a-b6fd-718f7e399e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3897d5-35c1-4dd1-8544-2cb2b995d5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cffbe6-f319-4758-ab63-36c53b7de843",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78440ee8-5406-411f-b240-a30813d2ae4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6ebb8d-accc-4f10-ab18-08cd4c152ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a537c36e-bd5e-42d6-84dd-618b93bda24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0550138e-1f82-4d4d-98e7-8daf6fd8f30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63470a2b-4620-4a46-a423-3098899e435e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2644f95b-cd69-41a4-8aba-4f0b5e36c3f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c41eb32-564d-4678-a482-5217f2f81414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb92956-64be-4b96-81a5-24ab99122a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47069e79-3e50-4c9f-94e2-229937a9a266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83401ce-3783-43e4-b7cb-c395e56dfcdb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b35c6de-459b-4d1b-b92a-bec411dcba3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8099ee1f-ddbf-4367-8920-aa7c0f61f5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa97995-2a35-47de-8cef-4eaa430d67df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db8cfeb-be2a-4148-bede-a97d5bbc210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329f885f-88d8-4acb-9286-aa37d5da5a0c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3c8ae8-29c8-4c39-af1a-ff99e7380e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d0371a-6489-4a23-ada3-700a032d15ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f7ff9-46f3-40cd-a3d1-621f869260f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcd9365-4a35-4eb8-8931-899d658b683d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404322e7-5096-45b0-94a3-6ecf1baffbba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d168aa09-4977-449c-a0a1-391c6bdff122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85a2238-d584-4273-b4e0-7a5671b86b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208b5a6-00a5-4830-abaa-96a3ce5192a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65055c17-3b81-435d-a9db-b60448844b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155a6017-4687-4783-a891-eaeb5bce0b29",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfb297e-9f97-40a6-b037-bb7411a8b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0f41b0-d704-4c4c-92dd-6f63809e330a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb3cc88-eeb3-4794-be7e-400e80b4daf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fc9381-91fc-45b6-8e89-4259afc9b3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9224ef8b-37de-411a-823a-5849ac7845b9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ee6a40-d265-4113-aab1-c14a13d3f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2e76c8-4ae1-4825-b67d-cd98bd1fbc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca1ddbc-a222-478f-ba3e-c7bf820de0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf38cbfb-8d40-418a-8f86-a379eee48786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ccc186-d9da-4a6d-ab17-fbde18b95b47",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44ccf50-a477-4f9a-91e6-e26304efdf16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e1bed61-b46a-4dde-800b-5e894e4a36a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17562c02-6308-4442-81ba-bc00855885f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614ff6fa-b540-4ad6-95e4-74b7d1f56ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36228ebd-d10b-429f-8e0e-d77e9f1685d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c303ea-40c6-4c28-96e4-756099f3eb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a548aa0-c582-4e72-bb48-5699a86151d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2788cec-f003-47ed-a3a9-dcca9f6b36d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef41cf9-f250-48ab-99db-0e778d184fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6e2c02-de2b-4e9f-a9d0-053c210874b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188fe315-22db-4fd6-aab6-fd9520dd90ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f436c8-028f-48c9-b9b9-75daf7d50636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb10f50-15f6-4e16-8494-2be15b9f432a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf847dc-b59e-4aa8-8cfe-578a3a772b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44512f7b-aae3-47b4-aefb-8e9fa686ec13",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfcbcf7-39cb-4c4e-9705-80bd01a763cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f67dbf6-3f5a-45b7-8fc6-3ffd287c79ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca21a20-76a7-4194-8b9f-6d773d24f44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c73d25-d8bd-43a3-999e-da5061d8f1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788ed806-b1a6-404b-8131-83ec982ba969",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dc88f1-6d81-4fd8-b9cd-18611547396a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c492e9-f01c-4673-91af-01e3443de81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc7aece-48bf-452a-9135-ab964e5a6718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516430e5-0087-4424-bc87-6c5cd25c8d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c5db35-d4cd-498a-9a83-96715ee12f21",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf6dcc1-4520-4a14-808d-f1c4195a81ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f805ab-5a72-4683-9346-f8604cb54790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381109bb-2c4b-45ce-8364-916d0f624578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02349df2-de55-4ec2-b575-65a4844f4c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2ee295-291e-40fa-b680-2795c517099e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7556f09-9493-41f0-a6c4-6fad1d59f1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c622878a-4748-4fb4-b345-4f379fa6213c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a25a4f-af03-485b-80de-e4943ec43b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996da0c2-0a5e-4921-b07d-2ef711de8107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5881c11-45c5-4aaa-8486-44fedb962883",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e67593b-e379-4fb7-8a2d-fb29a8f55e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e66995-6285-48f7-b098-5ce0a54a73d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b068778-2cf5-45f4-a6fa-cd316e18a94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32125257-e740-4451-9fb3-5626bf036251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c727be9-6968-4d82-b9dc-71c65dcacbd4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d626abb-0013-47cc-8643-bce5a713c0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d20702-797f-4e62-b44f-56ee912ee1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbaaf65-8704-4f24-ac42-ad3381c4bda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da151e27-335a-4ddb-aabf-6fc078ff769c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3eee71-e0b9-4f8c-90a8-fa110695b63f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2cbf51-6f81-462f-bac6-d3a503108aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64eb1145-00bf-478d-a5ec-996ce0143716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a163ee-2763-476c-9dc9-5deee6c61f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ad8860-61a2-49b1-b032-053bdcef1657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fbc955-3546-4143-8ed6-1055d6103b7f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcdd670-0dfc-451d-a54b-21fe4e2357f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899489e9-9cce-42a1-a0bc-7e7c3f2c0a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d9c587-8544-4558-be69-b650d4d6885e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da609da7-b477-48e1-8be3-40e7faad5601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5584cc7-c62f-45c5-8e17-151d29ac3564",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9575405-73c4-4b84-8196-16dc3309a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad31021-c5a9-4041-af46-4f7a0d5deff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315cd139-714e-43b3-8fc4-a3b90c570423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5820e65c-f29a-4eea-b2da-d3a7224b5088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af73c941-cb71-4c4c-b7dd-6c54eaba0bdb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aa54ee-f8c9-4ac4-8b09-d02507c599c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a59dff-153e-4f09-bb82-9837b36b8e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc004a3-cd1b-45f5-b9a6-4b7f555e2a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd00c5f5-af04-4515-8ed9-1e6ba1ed5489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a8067b-ff3d-4d3a-b520-102075b5df76",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b275e6b-a90b-4351-86c5-1f36f39409bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1b8694-619c-4af3-97e6-e157d0b6ac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa32b310-e3f4-4076-a8b5-4e65e82fcf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1833be1-e183-4cb0-bc4a-b2e640303ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba71d7fe-85ea-411c-b301-e1592150ed88",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac63bb30-0f11-4628-a6a4-2177446cba23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e1d5bf7-5500-4fbf-9778-ce734445e1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05491ee2-6a86-4bb4-9186-0b31d0954f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b176f0-0a1e-473d-95dd-dc2110509f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f03556e-cc4c-4bde-8dad-0da3a771ae46",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431f6d9-c5c5-499e-8629-58ede8af3f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afcedf61-6e00-45a1-a689-3027e32d7daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c519b27-4508-4c09-a19e-04fe9ac41864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda615f4-d50a-4085-839d-ae85b4dd2dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cd5ea0-6f4e-4b1d-a69d-58a275b95867",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8c71a2-1527-40cd-981c-429f3d1d8abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2c4ec7-265e-42d7-b39a-83b90d2b7a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd21293-b95f-4af4-bbef-fed3354cabd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b211615-1b5b-42b6-bbe7-4328208815e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1794ee-8eeb-4b14-880f-ebf8749b5c11",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd68e4f-6913-4ec5-940f-3c0cb79b788d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa77be22-c6d5-4502-b258-04c84d59a831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb269ed-c8f5-4df9-9399-b2e6e9fb60f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99effc1-a83b-40e1-8a9c-e68f5b85c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a189d2ba-004e-4d39-979c-ac518f3b943f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30682388-15e9-4179-9846-2d8a4e1070ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d10b4f6-0351-4411-b57f-96c5137969bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb33f300-45dd-47be-be8a-39bdf1c2499b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0caa30-7a52-49eb-aa52-d6ff2760e022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0516398-7f87-4282-8639-11daa51973a8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ca24a9-bb2b-48a6-ab6f-a83a5e467dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422ae5a8-4516-4e11-907e-b6591423d433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186c691a-5d47-49c7-91d6-3842e013a52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cf8a43-3c18-4619-a432-3a56afb9eb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafc4b9e-70a8-4ac0-85e3-9de83e4699e8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f42cea4-c924-45b8-9d46-fb08b3628471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09bbb811-73cf-4691-9b1a-96ed69c142f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edab51d-6051-4aeb-9516-47190d26b7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0da4bc5-c3bf-4981-b451-493b817e4ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad95b5b-12a7-40a5-ba45-046adcd92600",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49550c15-5d07-4989-8339-1e4e8ced2c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4266659-4c57-4bc0-bc47-873f59204ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d5aa0-eb3c-4a97-b081-c67fa2b2b877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a2357d-0088-42d1-9f1c-d9ae8f0d56bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b00501d-5e08-44ca-8ca9-db2891d6d44f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c9d975-c350-4951-988f-5979b5f0c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459f5f15-4951-47a3-87a6-2278aafe3f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b2f7a1-019f-47ab-b476-edfc03a5b668",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d3c372-0341-4efe-9655-0234a1da68f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efd981e-a0de-4fcf-9049-fe0dac4f4e76",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf002da6-892b-427d-8f2a-c2cdc27f8643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028dd005-4113-4e37-9d00-663fdff8f344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e25fbd-52cc-41f6-b058-a3c91eb3284c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe18be1-ec65-4773-8637-0a1207d939c5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5901931-d026-4944-8ea1-a2268358c97a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbde8c8c-6c68-4fe8-9cea-dd82f6a856c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c3ebbd1-f4fc-4e4a-b5e7-ef8439bf0abc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f1ed36e-10f5-42b4-a5a0-86ce300e6d34"
                    }
                  }
                ]
              },
              {
                "id": "e159447d-a1ae-441c-93a7-5a747a8f2af6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c588d1d-3e6a-4418-9197-d35401b9423e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73544a8-b52d-43fa-a2b2-95b385760fe6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "644819cd-8e86-4f90-88b5-af75b386df62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c640de5-fb0f-4655-ac51-b0934ef91305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea8150a6-c15d-4822-8ac2-20bd76797515"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1958521d-6247-4ae7-a130-53eb6115b2f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "270aa746-5067-43bd-9d5b-7cf25a58c63f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1010c1a1-70b9-4012-9430-030ceaac72bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b8169e9-2262-4ea1-b060-03df4524a1cc"
                    }
                  }
                ]
              },
              {
                "id": "1cdadb47-8b7d-4996-92e1-5b69b362327c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "866d3c35-6e5f-4b52-aa28-dca11f19b4ef",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddb17ed-bc48-469d-bb78-3805cd886513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "41ba5397-0828-4493-990d-999fa3556c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0704a7c-f47d-4c36-9bb4-ef082ad4a27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2321ef6f-b040-483d-a10a-4c26c64490ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1048b2da-5107-4d3c-82ec-08b23543295f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e11ef66a-5134-4dab-8a8a-8874051f26eb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bab7f2ac-e59f-4a3e-89ef-b44c550a6760",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c94122a-8748-4f88-b717-3ec5cdd21300"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "320d79b1-1830-4d9e-a473-a2513cd37a3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5c0a29f-60b4-43b9-8f79-be065884c19c"
                    }
                  }
                ]
              },
              {
                "id": "080c7619-f4f7-4328-9897-cccec4abddba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b9f964d-e744-4d51-ad8b-f8a1bba8b5dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48d4e6d8-6a05-4f72-b964-c54010a78267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80c46879-559e-47af-af5b-b24458a687bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4094c7f8-42f6-480e-ba9f-0641f16d3e82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d1a00fc-00e6-43f2-a89e-85fb1252c186",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac88f55b-dc13-422f-ab9b-fd69e5531413"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a95ea27c-90a6-4d86-aa4c-3c238b07d34a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "430d82b3-654a-4dba-aa45-2118e293844f"
            }
          }
        ]
      },
      {
        "id": "96807b78-96e4-4d0b-8f5a-a8cb0c24af33",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "324d1413-086f-4cca-82d4-072a5991796e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ab19f3f-27e3-431e-86fe-84a1c0653a71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd3b4b2a-2e7d-481b-88f8-a25069f65675",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4300c3a-4e36-4937-9d83-3b601d12b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6eeb502b-f76e-4c9f-a288-6ff5da11d92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca0751b-60e7-4456-b5f5-cc5a47076bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6759d3f7-2410-4dd1-ae51-7ac2ede5b69a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57e89648-c7ec-473c-9293-9a1be096da3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7950c44c-9058-4988-ab0a-ecc203acfdab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ead2f7a-e792-464f-a1eb-289a7d28539a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3052c1b-686b-443c-be96-fb179591233b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9a0f00d-d5ad-4517-99fd-9e70c03ad748",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e928e5d4-f63a-47fd-add5-2e17776ad460"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c419e0e-cb44-4469-8ed4-4caa35408e21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b2398dd-2e4a-4b27-b3d3-301b56a954a9"
            }
          }
        ]
      },
      {
        "id": "33ab1ab1-2f1c-4a9a-a2e6-155c3d9be62d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f01ca430-4f4a-4c8b-99dd-7f186fcb2b22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8e9d0af-d53b-42d2-9678-7b6ef1dd5b03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "979dc5fe-97e5-46b3-b45a-451dfa031ff5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8921ea0c-4b10-434b-8d7e-86840733f680",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ebd802e-9204-4869-8f1d-9e295b11e420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e844295-47b9-44f8-961b-bb569fb16872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be10a74e-eea3-492a-aec5-8990e413b390"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0820248f-f54b-4473-9fd9-2162e00a416c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19fcdb1c-1580-4f1a-ab54-ad64ffec3530"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de23f00b-f1e3-421b-9fdd-407ff4b4c5a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1417fd8-c45f-4060-ac42-129a3478d559"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "924ff1b2-c48a-4b52-a18b-e8d78f1aad02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93edfcbb-22fe-4d5c-a8cf-a7715c9c51e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6fe30d7-b176-4d43-91b7-b2c55eecf510",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "191391ac-3be7-43a2-98bb-3cc1b55d2f22"
            }
          }
        ]
      },
      {
        "id": "f61e77ee-a8a3-45b1-8eca-8a5b1e91e8bb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "83c27e5e-41f9-48f5-874e-1033b87716e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94eb9c75-fe0f-428d-9981-c9a33dec7f9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "795930ad-1dc3-41ea-8a7d-9794c50c60d5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e144dd90-c1c0-48e9-ab06-e9b0afc0d091",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f488d6a7-8166-485b-83be-26b08a40f8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48898912-14e7-4bf8-8c23-7ebd6b2bfeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d694afea-020d-4ddd-b396-61d4f4fe74a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83c68a95-49ba-4d55-8fbc-64cd46a442e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f2b59a1-3afd-494d-83c5-3cec1f320b39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90451623-9345-4dbc-9d6f-0ca62ba0ed82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24d619a6-988c-4f09-9d8f-46fb0f0cb30b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "724f0151-92dd-45fe-8309-394902a9af15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f75abbb7-1522-4db0-90e3-a2c01ee6cbcd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65e5fcd9-7c9c-4bf7-bbd2-55ba9ff1fbe7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caecd67d-1fae-4b6d-9ad0-d5a6a862b573"
            }
          }
        ]
      },
      {
        "id": "f2120762-8c4a-4a88-8d36-a6adb58546a8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f9eadbe-8ba7-4b49-accc-6b2e82e5db74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "765c9f1c-4f36-4afd-9159-493175d5ce04",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb89d29c-a25e-4fcc-b803-181e728d537d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba3e05e1-fb63-48c2-aa25-ee49f5312f26",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f56bd85-3223-4ea8-8a8c-512631ae3f08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 259.2817460317459,
      "responseMin": 9,
      "responseMax": 5589,
      "responseSd": 873.5240681305238,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717288825607,
      "completed": 1717288899431
    },
    "executions": [
      {
        "id": "859077f3-925b-4c40-9cfb-2a03ab5bb6b9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "207dbe4e-e505-4c11-97eb-b44b6281264a",
          "httpRequestId": "38c4d5e3-8f79-4f3b-bbfa-3732dfdeb5e2"
        },
        "item": {
          "id": "859077f3-925b-4c40-9cfb-2a03ab5bb6b9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "62f34ee8-a247-452e-9721-b4389e2226c3",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "3210d342-495f-4650-8440-64bd3822e121",
        "cursor": {
          "ref": "e7de248d-921a-4100-bd43-6644ce960779",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f8edb52b-bc45-4702-94ff-3b244ee954ba"
        },
        "item": {
          "id": "3210d342-495f-4650-8440-64bd3822e121",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f62e186b-7920-479c-95f5-7a11d10bddd5",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "8655f81d-3753-4da8-9d5c-8b09984e42d4",
        "cursor": {
          "ref": "0d82f8b8-edc5-4ee1-bee2-d03229972c73",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "83e70cf5-d607-431c-a129-3949e9f92a7c"
        },
        "item": {
          "id": "8655f81d-3753-4da8-9d5c-8b09984e42d4",
          "name": "did_json"
        },
        "response": {
          "id": "4b5c3d17-b9ce-4996-81d4-67221fc50281",
          "status": "OK",
          "code": 200,
          "responseTime": 497,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfb5a1-a793-468a-8553-1813c8620638",
        "cursor": {
          "ref": "7c962756-301b-469b-ad38-1f707dfd3135",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "353d0cf9-d545-47d4-baeb-ee4d0704f463"
        },
        "item": {
          "id": "98bfb5a1-a793-468a-8553-1813c8620638",
          "name": "did:invalid"
        },
        "response": {
          "id": "99f4015c-32af-4161-9122-d584a3156e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2252,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfb5a1-a793-468a-8553-1813c8620638",
        "cursor": {
          "ref": "7c962756-301b-469b-ad38-1f707dfd3135",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "353d0cf9-d545-47d4-baeb-ee4d0704f463"
        },
        "item": {
          "id": "98bfb5a1-a793-468a-8553-1813c8620638",
          "name": "did:invalid"
        },
        "response": {
          "id": "99f4015c-32af-4161-9122-d584a3156e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2252,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76784bba-307d-450e-addd-ce4ef1f726d5",
        "cursor": {
          "ref": "db379aa4-c76d-40f9-836a-ef50567683f0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0fcb25da-3966-4a1d-968b-1073bf836878"
        },
        "item": {
          "id": "76784bba-307d-450e-addd-ce4ef1f726d5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3fc0e679-c0bc-4d5b-af5f-46436b353593",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2492,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e2665e-8610-474c-901a-1796e26cbebe",
        "cursor": {
          "ref": "f72d8256-5d60-4418-ba13-a4e0829e0b8f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dda9e462-e111-4064-9f47-1bbe3740c38c"
        },
        "item": {
          "id": "99e2665e-8610-474c-901a-1796e26cbebe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8e28f920-c1de-4b8d-9393-c068b4a78ecb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2214,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9993ff84-a223-4c5f-be6d-cff625305e40",
        "cursor": {
          "ref": "a56e47cc-e73a-42ec-bca5-9142918f31a4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6aa0713e-35ed-4d97-a931-dd3403737ed1"
        },
        "item": {
          "id": "9993ff84-a223-4c5f-be6d-cff625305e40",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ff1e41c2-3b4e-4bc8-bb2e-5d92cb7f89c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc5223c-de78-441f-b173-9f6d40d230d2",
        "cursor": {
          "ref": "61bf6173-fc7e-4ed7-b3b9-1fe5342ece30",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "819e3f7a-133b-4114-b6dd-241ecb3249cd"
        },
        "item": {
          "id": "2cc5223c-de78-441f-b173-9f6d40d230d2",
          "name": "identifiers"
        },
        "response": {
          "id": "a459b31e-542a-481b-b8b6-ba9a79ed8761",
          "status": "OK",
          "code": 200,
          "responseTime": 2442,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ac97f2-06c9-4484-83ff-cca057e01958",
        "cursor": {
          "ref": "31cb1ecd-ff85-479f-96aa-f65b58eff6ae",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1bb31b90-13dc-46fb-a78f-0235e2257ef6"
        },
        "item": {
          "id": "b5ac97f2-06c9-4484-83ff-cca057e01958",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b782c339-e958-4b92-8085-d1a41b56fbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272b2b55-740f-40a5-ab77-4c06d542fa73",
        "cursor": {
          "ref": "8e854ecc-704d-4dec-9bbf-7a0c268f13ca",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f6dc056d-d6e6-44f1-af85-ebc188373caf"
        },
        "item": {
          "id": "272b2b55-740f-40a5-ab77-4c06d542fa73",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78783775-9af2-46e2-b9f2-7960d4f4b620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb17e63-4468-48d7-badb-ee4cc7c1ae1d",
        "cursor": {
          "ref": "a369d879-3fd0-490d-b581-187fff24959a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cbbc12e9-84a9-4b6e-baea-541aadb01afb"
        },
        "item": {
          "id": "adb17e63-4468-48d7-badb-ee4cc7c1ae1d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b263089b-794e-4d15-b654-2daea8ed8e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d867c0e5-7863-495d-8fdd-b1c00a1a14ab",
        "cursor": {
          "ref": "c743eb8c-a9b6-46f4-b450-a5a36cb948b9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "45727747-4adc-4b73-b363-309b0d040760"
        },
        "item": {
          "id": "d867c0e5-7863-495d-8fdd-b1c00a1a14ab",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a10a4be7-40cb-4a57-9e08-992ee3967836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a302f759-8f5d-4839-b25a-3596597215c9",
        "cursor": {
          "ref": "71366c8a-4338-4d4b-8448-a0bb29783f91",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8a88b2f1-ad4f-4a04-bef9-2597c37dc195"
        },
        "item": {
          "id": "a302f759-8f5d-4839-b25a-3596597215c9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6a3d3d92-e690-40fe-93ec-cfef24422084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bb30cc-d8f2-472c-9c7f-298655c3e35c",
        "cursor": {
          "ref": "2a01dc43-b9cd-4714-bf89-ee8b80d75460",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1b5f0e2a-bc04-4b03-acaf-08fee3a129c0"
        },
        "item": {
          "id": "99bb30cc-d8f2-472c-9c7f-298655c3e35c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4d59d33e-481a-431d-9fca-06c4b615a396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc4edb-d928-4543-8611-4e5e832454c0",
        "cursor": {
          "ref": "cc4c801e-47b3-4166-9b49-b08eb9568c2e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a87dd83e-2944-4dfc-8a51-579f24e144e8"
        },
        "item": {
          "id": "47fc4edb-d928-4543-8611-4e5e832454c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0aaf7a7c-04ba-448a-a368-056f5a2d365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca0426a-0fcb-40ea-9c43-3aff8a83275a",
        "cursor": {
          "ref": "b2cd7279-68b1-4c49-8dc2-ac0f57d854a4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b01de934-6722-44c5-aa23-ea22a1c924a0"
        },
        "item": {
          "id": "fca0426a-0fcb-40ea-9c43-3aff8a83275a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "127cae47-c3a0-4218-9dad-f8f5b01dfe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87be3f09-5c6f-45b2-822a-5a41d4a7b9e3",
        "cursor": {
          "ref": "d38e6856-b499-4627-a01e-2fc3e38e51aa",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b7e0fc2e-76c6-4a01-9fab-01e1b2a9d2f6"
        },
        "item": {
          "id": "87be3f09-5c6f-45b2-822a-5a41d4a7b9e3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4d7430ca-a56f-4bb4-80e2-990cae7aa205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a68267-491e-41e1-bec4-4e61977f1749",
        "cursor": {
          "ref": "edc1663e-1ce4-46a5-ba3b-a5b7e921b2eb",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4f048b43-549a-409b-b853-5cf94bce0294"
        },
        "item": {
          "id": "c4a68267-491e-41e1-bec4-4e61977f1749",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "13069155-fcc9-4d1a-b85e-084b002e3312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195aee7-c30e-428e-afd2-d88e8528240d",
        "cursor": {
          "ref": "e331ebb8-e455-4db7-9134-39be6b2199bf",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e4b1acc0-7308-4aa0-92e6-570941245e0b"
        },
        "item": {
          "id": "4195aee7-c30e-428e-afd2-d88e8528240d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aa384e2c-7a31-4d50-b3f7-d9c44d0c9c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ce0c4f-2d84-40c3-b743-0862e549bdc4",
        "cursor": {
          "ref": "88181ec0-c6cd-470c-ab8f-264d250c216e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2a8cbab4-22c8-4fd3-9624-ed32ad39557e"
        },
        "item": {
          "id": "92ce0c4f-2d84-40c3-b743-0862e549bdc4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0154b4b5-a114-49ab-86bf-99f8efe76f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07909875-6c83-4bc0-b4a5-7fed94a59eb1",
        "cursor": {
          "ref": "af3126b9-50f0-42ec-b7dc-0dea774ae2d3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af78938e-f862-456b-9212-04c514325b59"
        },
        "item": {
          "id": "07909875-6c83-4bc0-b4a5-7fed94a59eb1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "32a177eb-ea0c-467d-a279-7dea6f246526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23a1d03-db93-44d9-9712-e98b4fe333ff",
        "cursor": {
          "ref": "99b751d1-010c-45de-acf0-112c284159c0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6a279458-86bd-4b66-abad-31706cb9e3c9"
        },
        "item": {
          "id": "d23a1d03-db93-44d9-9712-e98b4fe333ff",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2f00e950-8cbc-4041-9985-025083792538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cbd25c-8764-4f06-bfbf-42eb3becb44b",
        "cursor": {
          "ref": "7aac0b51-1340-4cee-adb3-79f7175282f4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7bfb4dec-920e-4a48-b921-6274c8a25ed0"
        },
        "item": {
          "id": "f1cbd25c-8764-4f06-bfbf-42eb3becb44b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81120e08-80b6-40f6-a798-c8e75eda6343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ccae62-50f4-41ed-b367-dc9ecbaac079",
        "cursor": {
          "ref": "f19441c0-1181-4ec6-b8c7-60acf28f6714",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c1476a22-bf1f-4f3e-a9aa-256950386494"
        },
        "item": {
          "id": "39ccae62-50f4-41ed-b367-dc9ecbaac079",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1c144ff3-2317-4b74-b9db-464be5ca5960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf48bbef-68d6-4f7e-8e2b-02d50e7a7ed7",
        "cursor": {
          "ref": "71cb645d-b7b8-43fa-a1fa-fed109aabba0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "79ecf91e-b13e-49a5-9bac-c4a90b655b4a"
        },
        "item": {
          "id": "cf48bbef-68d6-4f7e-8e2b-02d50e7a7ed7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "659a684a-07f2-408e-852d-9803bfb4f039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3bde0f-7ada-4cdd-afab-83e219cbd73a",
        "cursor": {
          "ref": "f01fbd0d-a568-4299-90b9-50b87ff02e3d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c24d782c-392f-4ba8-ad26-04b566e6321e"
        },
        "item": {
          "id": "4f3bde0f-7ada-4cdd-afab-83e219cbd73a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0a7020c5-4d78-4ddb-8c02-2640db44101a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a0f4fa-303c-4e08-953c-999cfd190e8f",
        "cursor": {
          "ref": "c7754036-d662-4c65-9ffa-c22be7594e59",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a6074f12-466a-48df-b800-29363acb783e"
        },
        "item": {
          "id": "17a0f4fa-303c-4e08-953c-999cfd190e8f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2201d5a6-b5cf-4643-90a5-4f987d1fda17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ec15a5-3140-4451-aafd-b2e2f1a654b3",
        "cursor": {
          "ref": "b58982d0-d035-45f2-b51f-5552f18be46a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b8f50759-3af4-47d2-b7bf-757adfc6b354"
        },
        "item": {
          "id": "32ec15a5-3140-4451-aafd-b2e2f1a654b3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "62e2ee7d-ef28-4092-9740-964cb3871088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d1b552-a2ae-42d5-ae7b-dbaf908692e0",
        "cursor": {
          "ref": "690278ba-9c73-4d04-834c-82623f83e717",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9ceb3971-6398-4806-b02b-6b455dc2d09b"
        },
        "item": {
          "id": "28d1b552-a2ae-42d5-ae7b-dbaf908692e0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c3a1abfe-37a7-4503-9291-ec9066213398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc53ee49-93cd-4ce1-bc26-ba97ad67cf95",
        "cursor": {
          "ref": "e29fcfdb-b29c-401d-8f40-dc03810d63cd",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9a28c79f-6486-4c92-a0d1-bf34230817a2"
        },
        "item": {
          "id": "dc53ee49-93cd-4ce1-bc26-ba97ad67cf95",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "161ac7a8-92e7-4132-adc7-8659f44564ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea351916-2c25-4c3e-8614-e6e5423dab76",
        "cursor": {
          "ref": "321d4a59-7649-4a86-8294-548dc5b89f90",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a49df401-a9df-491b-9369-da5d37b50284"
        },
        "item": {
          "id": "ea351916-2c25-4c3e-8614-e6e5423dab76",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ef704ce-5e39-4015-a13c-a6b110c65672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab501fa-9df3-42a9-9d10-404e2e10f634",
        "cursor": {
          "ref": "a8e1ffd6-cbfc-4227-8722-9c7fae7a6ad1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "77db1bdd-143d-4b7d-9851-85a63e249dbe"
        },
        "item": {
          "id": "2ab501fa-9df3-42a9-9d10-404e2e10f634",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "134f9ce3-e3f4-4e4f-9cb8-a24b8f6335de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3942057d-d05f-42c0-9f49-ce9ed2d7870b",
        "cursor": {
          "ref": "db185451-4de0-4ca3-a6e0-82c6e0699754",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eb89d004-a35c-470e-b515-c08ba735b823"
        },
        "item": {
          "id": "3942057d-d05f-42c0-9f49-ce9ed2d7870b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1dcd8d55-9846-4576-9d9c-b8ef75777d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eef92e5-8a4a-4586-960c-03700b92876c",
        "cursor": {
          "ref": "772cc4a4-3301-4a2d-975a-cb100dc19bbc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "730417b5-ffe8-49a1-84da-4d356856fb5d"
        },
        "item": {
          "id": "6eef92e5-8a4a-4586-960c-03700b92876c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "327daddd-9345-4021-bcfe-9418fcf928bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694090c6-40c5-4bb9-8d87-d6c56a911e16",
        "cursor": {
          "ref": "7dca8723-8e7d-4bab-8954-f0add2773f7e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "325e8a86-f84e-4b1a-b631-6d9a69934a3e"
        },
        "item": {
          "id": "694090c6-40c5-4bb9-8d87-d6c56a911e16",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c9ca5349-3755-4289-840d-71719f39d697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16450bf8-22e9-46c2-8363-932c397c02ec",
        "cursor": {
          "ref": "4a7ad382-bc75-466f-ba4e-5baff0005f97",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6559415f-193c-423e-967c-9d92d6643e5e"
        },
        "item": {
          "id": "16450bf8-22e9-46c2-8363-932c397c02ec",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ecba5b7c-f7f5-4e18-9a1f-9c2aad1cf390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9c365-f3f4-411b-b8cd-5c5524e7ed2f",
        "cursor": {
          "ref": "4ca25492-095f-44e5-8976-3f0c5633d67e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "00e77f6d-2bc9-4b5e-b190-394f6eb73f7e"
        },
        "item": {
          "id": "0db9c365-f3f4-411b-b8cd-5c5524e7ed2f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c8e5d4e6-51c1-4a7e-97e8-666a436dcae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bded8c2-0018-4b36-814a-067d2b49d493",
        "cursor": {
          "ref": "65bc16d3-5716-4465-9dde-0aad72c1ac05",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ec91cd62-b43e-468a-86df-eca63c83e13a"
        },
        "item": {
          "id": "2bded8c2-0018-4b36-814a-067d2b49d493",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "24533cc0-e77c-448b-adea-8b8a9e21c520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d43848-4292-48da-bd44-99219ffa731d",
        "cursor": {
          "ref": "ba1ba9fe-3f71-49fe-8ab6-d159a50a9c27",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1e53438e-0847-4864-a08a-95020048f0d1"
        },
        "item": {
          "id": "66d43848-4292-48da-bd44-99219ffa731d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b055da54-797a-4b42-95a5-d1115e61f52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31d3747-7c78-4ad3-88e1-bdf59be909ac",
        "cursor": {
          "ref": "94180b5b-f536-461f-995b-ee196c8c645c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a18bba80-b1dd-4793-bff6-a5b8beaf4738"
        },
        "item": {
          "id": "b31d3747-7c78-4ad3-88e1-bdf59be909ac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6369b004-4b95-4337-acea-f75a3a797713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1a546b-11dc-49cd-ba88-3893279e4abc",
        "cursor": {
          "ref": "9767f6d5-8ec2-407e-8b5c-51ad4291b704",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "95e1170a-7010-415b-8b75-4d2922780046"
        },
        "item": {
          "id": "4d1a546b-11dc-49cd-ba88-3893279e4abc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "49360320-9e7b-47c4-b397-e6aa170c9459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc64ab6f-b2f0-4416-9dd5-5f599e4cf02c",
        "cursor": {
          "ref": "21728ec1-dcd3-491f-af29-596349ebfab7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "38d76187-7585-47be-a05c-fe7285d5c7fd"
        },
        "item": {
          "id": "bc64ab6f-b2f0-4416-9dd5-5f599e4cf02c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97b1e09e-5cb7-4c50-9e52-8a6684e66d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e931e-deea-4aba-9f3b-9020ffd3cfbd",
        "cursor": {
          "ref": "9d58d6b7-7e8a-4e73-98b5-69c6b0c2effc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1d79c291-49c9-4732-bf9f-5dc4173e6f54"
        },
        "item": {
          "id": "595e931e-deea-4aba-9f3b-9020ffd3cfbd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "776779e5-25a8-4d48-82b8-b1d75489ee16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100b4c16-acf5-45f7-9b20-0f15a428f7b0",
        "cursor": {
          "ref": "340f87d4-c690-4ce5-8309-719bb158bba1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d53afdf1-0263-429c-9212-5a635b0e6458"
        },
        "item": {
          "id": "100b4c16-acf5-45f7-9b20-0f15a428f7b0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a3b5fea2-37fb-45d3-9cf5-5e8f2fb98fb9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6e03ad-072f-4ce2-8d5a-ee4aa9f14cc8",
        "cursor": {
          "ref": "79ca83aa-f51b-46ab-a337-63acea598caf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7744c40-e44a-4967-ae1a-783a907757d2"
        },
        "item": {
          "id": "2d6e03ad-072f-4ce2-8d5a-ee4aa9f14cc8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a0cb4ebe-d2cc-4d2a-8d86-1650f178d432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29611ba8-1bad-4897-94ae-8c77711fe52e",
        "cursor": {
          "ref": "eb3b7723-cc82-4e94-821b-78138273f777",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e9f6ecb1-68b3-45e1-bff3-27620bea305e"
        },
        "item": {
          "id": "29611ba8-1bad-4897-94ae-8c77711fe52e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dc6fdb2e-2a9e-4328-9b10-a5ae4c2e61c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8962850f-0ffb-47f9-946e-bbe58ebd67af",
        "cursor": {
          "ref": "338255e2-e219-4986-82dc-d09103e4a060",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ea36938f-abe0-4ac5-93c2-b98a162a60e4"
        },
        "item": {
          "id": "8962850f-0ffb-47f9-946e-bbe58ebd67af",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "87f40904-3d3e-4450-9d18-4372c994e53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7da52f-4069-4c8e-a06d-693144358a8f",
        "cursor": {
          "ref": "cc7b167b-405a-478d-a66a-b82d965922e4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "58d2988c-4e68-4520-adc0-5512b8a4894d"
        },
        "item": {
          "id": "4e7da52f-4069-4c8e-a06d-693144358a8f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2ecb8f9e-0df8-4f57-a057-a426740da67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba25b3c-908a-41de-b634-6e7e3b1737fb",
        "cursor": {
          "ref": "48a30087-4840-4c5a-a648-8be84e4b2ec3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "532c28d4-5d94-419e-aecb-b8432c61ed17"
        },
        "item": {
          "id": "0ba25b3c-908a-41de-b634-6e7e3b1737fb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0819d861-d79f-4925-aa2a-056f8aa1fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd24e8c1-8ed9-4e35-8539-0d7afc791317",
        "cursor": {
          "ref": "5c90bc8e-2149-47f1-8931-e9a52f27cf83",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c7c84a38-1f2a-446e-be57-8f15cb37a073"
        },
        "item": {
          "id": "dd24e8c1-8ed9-4e35-8539-0d7afc791317",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8beff503-ed78-44f1-a6bc-79a0dd50a40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e16134-2328-4593-a798-b64b3aad2f44",
        "cursor": {
          "ref": "c14fa6ff-afd7-4902-a78c-07ae57911167",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e27dc5b9-4a72-4280-942b-28822b4a469a"
        },
        "item": {
          "id": "88e16134-2328-4593-a798-b64b3aad2f44",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6ffa7e3a-a691-4a3e-b08e-eee3030270e5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792a3a8-d2a2-48b7-9597-aee51e724d6b",
        "cursor": {
          "ref": "155bc58c-beed-4a89-ab84-84f5cbde2fd6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9be8bb8d-1ce1-4694-ac84-03d5e89fde05"
        },
        "item": {
          "id": "1792a3a8-d2a2-48b7-9597-aee51e724d6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "23a947b7-3117-497e-9057-fd2e7dd7d16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c751ecb-aaec-4543-9ff3-f0e823a1f464",
        "cursor": {
          "ref": "dd4a0b72-d942-406c-b9f6-e684d6c5d9d5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "226121c3-0412-4633-b401-9e099c9a0589"
        },
        "item": {
          "id": "1c751ecb-aaec-4543-9ff3-f0e823a1f464",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "07f9b715-ed07-4d12-afe6-9738db5c3c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd15b93e-231d-4ccb-af50-320ac8faeb99",
        "cursor": {
          "ref": "2115de74-116c-42c7-bcf8-5f580c042e34",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f62c8e41-ee2d-4748-960d-87f69b356d6f"
        },
        "item": {
          "id": "cd15b93e-231d-4ccb-af50-320ac8faeb99",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b1cff6a0-e0a4-4fb0-a464-e4e5a6772c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f60e31-dc30-430d-b531-c5560a6daa6f",
        "cursor": {
          "ref": "08c59953-6429-4324-83f4-6c8e9e865af6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f6b0f828-f64b-4ce8-adb8-7757f30f86bf"
        },
        "item": {
          "id": "55f60e31-dc30-430d-b531-c5560a6daa6f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b83dfede-7e10-48a9-a728-95f873bad671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f502639-bc37-49ac-968f-83eadff6d659",
        "cursor": {
          "ref": "585152d2-a844-4fc7-811e-935658700e06",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e407438f-b47d-4a17-bbd0-353f62efd534"
        },
        "item": {
          "id": "4f502639-bc37-49ac-968f-83eadff6d659",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eaca1871-d004-4119-8061-61ce656f6530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d42a0ea-e85f-4c1d-bec4-982194277f35",
        "cursor": {
          "ref": "78669227-35e7-4b9a-9a59-657b63ee6465",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "53515e70-fed7-47fb-9d82-28f12d439bd2"
        },
        "item": {
          "id": "6d42a0ea-e85f-4c1d-bec4-982194277f35",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7070fcae-75c5-4e76-9bf6-278fee3ad8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c672792-fe02-47a9-a319-14ed964d52b3",
        "cursor": {
          "ref": "a290fb5e-2a18-4989-a769-97419fc8a160",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "244d1bee-2a18-4507-90d4-f0053786e4b9"
        },
        "item": {
          "id": "4c672792-fe02-47a9-a319-14ed964d52b3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c0d044ee-b998-4dab-82df-d99d83a09bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b27d3c-5b88-4444-95c3-9b7dd2b0f153",
        "cursor": {
          "ref": "735de15c-15ef-4f31-a02a-74f8cd21fb47",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e6c927ff-2473-46d5-9b5f-21fb9220c9c7"
        },
        "item": {
          "id": "b3b27d3c-5b88-4444-95c3-9b7dd2b0f153",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "de2f2bfc-59c5-474b-81f1-290147d2cc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c26b60-9e8a-4083-832a-1547bad1032c",
        "cursor": {
          "ref": "e133fb62-ac33-48c5-bfe7-049d82294194",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1d170018-1e73-43e9-ab9f-c4b1526c41a0"
        },
        "item": {
          "id": "78c26b60-9e8a-4083-832a-1547bad1032c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "774367f3-7e7a-4cf2-b3cf-15798b9e8624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f41a8c8-1e57-481c-b3ec-9e83e9ffc5ce",
        "cursor": {
          "ref": "e142efd0-2fc7-4db2-867a-dbf3cc24d487",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1a003b36-7d92-4034-aa92-daa83b1d6de1"
        },
        "item": {
          "id": "1f41a8c8-1e57-481c-b3ec-9e83e9ffc5ce",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "21ea7d9a-b933-4e40-9db8-909ed8c5277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf23edc-1616-434c-b851-0ef55ec4e0d4",
        "cursor": {
          "ref": "8f5b1cc8-9876-4428-93f4-2a11ded6485d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "914f320c-b856-45f9-b989-e46c771baedc"
        },
        "item": {
          "id": "7bf23edc-1616-434c-b851-0ef55ec4e0d4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1c2c0010-a022-4288-a65c-610317f49e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a5db78-01cf-4c97-8260-1dd1f49e7141",
        "cursor": {
          "ref": "4ee8df34-01f8-4c65-b8f4-2beea9572b7e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "594723c2-8ad4-4a97-bb89-8bba46ad09d3"
        },
        "item": {
          "id": "25a5db78-01cf-4c97-8260-1dd1f49e7141",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2a97a2ed-8c9a-41e8-afb4-5c6432bacbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e99634d-b63f-461d-886c-f6c794529404",
        "cursor": {
          "ref": "1ea0a607-a44a-4106-bc73-3fcf4b4d16ef",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8028220c-d313-463d-a504-acd0fdaec9b9"
        },
        "item": {
          "id": "8e99634d-b63f-461d-886c-f6c794529404",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4e5eb492-90e8-4aac-818c-8664c5593580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42da2d03-6e35-42df-9a7a-9cdaae415aad",
        "cursor": {
          "ref": "a14ab368-0169-47ce-85a6-3aceae0b246f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3ca635bf-9d53-44e2-878a-44886c6e9352"
        },
        "item": {
          "id": "42da2d03-6e35-42df-9a7a-9cdaae415aad",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ccd1d028-8ee7-41ec-8e17-7ad85e6ee793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ebad93-2eff-455d-adc9-fc95454fb946",
        "cursor": {
          "ref": "fe34a2eb-04be-4e80-9e6d-f9f5572a1ba0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "396a7050-596c-4299-abbf-b67316c0405c"
        },
        "item": {
          "id": "57ebad93-2eff-455d-adc9-fc95454fb946",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "09f80c07-2e4c-455e-bfbb-08dc463ba9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850ac7fb-1155-450e-a0f1-17bf474e69d6",
        "cursor": {
          "ref": "dce42836-104a-47e6-962c-4673f3494713",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "16ef69a3-4c25-4bb4-8eb5-6eb2edc490b5"
        },
        "item": {
          "id": "850ac7fb-1155-450e-a0f1-17bf474e69d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "99b58337-1ace-41d9-8c86-7c6d76a2c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685c70da-1e58-4435-8ec0-0b1e8b8ef08f",
        "cursor": {
          "ref": "dbbb34a1-97b1-48a5-a0d3-868378d08e48",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e42b71d6-604e-409f-91cc-64c8f3a8227f"
        },
        "item": {
          "id": "685c70da-1e58-4435-8ec0-0b1e8b8ef08f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "153ed020-9d39-48c8-8540-114c10e5836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01961e7a-7b11-403c-b138-0d9e2e63fb3e",
        "cursor": {
          "ref": "bfd45809-ba13-46c0-a0bb-c69d37d0a0d9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "070b985f-1d21-4336-ae92-0ba9c03ab633"
        },
        "item": {
          "id": "01961e7a-7b11-403c-b138-0d9e2e63fb3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "22cba04b-98f1-4eac-ad06-a24ab7887e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24853028-0a96-451f-b4a3-7d25fddb4e07",
        "cursor": {
          "ref": "57c91f27-7742-45c0-b12f-fdbb6b497363",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "869842ce-9ad3-48e6-962b-7d68e09693dd"
        },
        "item": {
          "id": "24853028-0a96-451f-b4a3-7d25fddb4e07",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "19edb835-49c1-4a62-aa98-a27dabca98eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19ede33-1171-45df-8c13-682705383a08",
        "cursor": {
          "ref": "74aa90d3-67ed-4fb2-9243-19676b38a5e2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac6d9e4f-6439-4bf0-ab3a-d07ccd93ed1a"
        },
        "item": {
          "id": "c19ede33-1171-45df-8c13-682705383a08",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b2db8599-6ed8-4d6b-8c91-efadb9de69a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f581eb-f7f1-4537-a657-bef365fb159d",
        "cursor": {
          "ref": "1daa0bb2-2b38-4da2-aa80-470d630fc804",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f4e91b07-9de3-4039-8bb3-92edb6c90c35"
        },
        "item": {
          "id": "65f581eb-f7f1-4537-a657-bef365fb159d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6703a3c7-a793-4737-a4df-f2dc08472a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a8c856-ec47-47aa-a642-19793704738c",
        "cursor": {
          "ref": "a36e4576-d1cc-46c0-bf09-a240ce082599",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5ffa5968-3fde-4d1d-863a-1d26bf3f42f5"
        },
        "item": {
          "id": "73a8c856-ec47-47aa-a642-19793704738c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "33073174-64ee-4070-bae6-c0d3a86ea4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02053868-ed6a-4696-8082-bcbb6c774f00",
        "cursor": {
          "ref": "4a11ea3a-6666-434c-9156-eef13a09a899",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6afe1972-5558-4ab8-aa12-82ea1c466e18"
        },
        "item": {
          "id": "02053868-ed6a-4696-8082-bcbb6c774f00",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4e08b56f-96ea-4658-95c5-24e50b2d2f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bac93d-2a5c-4555-97ca-9eb124e93c07",
        "cursor": {
          "ref": "2eef317a-81d3-4b88-8a8c-306f41ec5542",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "afb2e43e-6960-4328-bd1b-7efa8fafcecd"
        },
        "item": {
          "id": "c2bac93d-2a5c-4555-97ca-9eb124e93c07",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5a1510c0-53f2-4a02-9349-592322e6959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b94a93-f8a5-4b10-ac84-1fe3e9b46df6",
        "cursor": {
          "ref": "cbc82229-676e-44b8-893a-4eeec91be74b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c639d49b-3908-4dec-9f53-6f6a4439abe5"
        },
        "item": {
          "id": "d3b94a93-f8a5-4b10-ac84-1fe3e9b46df6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2aa4611f-8277-4634-9d33-8fee84f0379a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007f7b5c-0b3c-4674-9129-50ed13a32bbc",
        "cursor": {
          "ref": "0ceecb38-9314-4438-a01c-16c8652474b8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea07cac2-409a-4971-a4b5-46bc387df6ef"
        },
        "item": {
          "id": "007f7b5c-0b3c-4674-9129-50ed13a32bbc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e3890612-4fd4-4aa9-9bf0-9b0791c6f960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82658260-5f4e-4359-9b77-df0f51f3ec4a",
        "cursor": {
          "ref": "268e87af-4d5b-465a-aa2b-ba5a02ba168a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c84894a-3d44-42df-ba76-af74c20957ac"
        },
        "item": {
          "id": "82658260-5f4e-4359-9b77-df0f51f3ec4a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4146e96f-9115-445e-a573-9954e9921026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0b8bf2-7a61-4c70-a370-e813efdb316a",
        "cursor": {
          "ref": "64c8e11e-c8be-4976-86f0-b8f9f20ba668",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3b564b50-1a9c-4b1b-b0be-e82eee2f4539"
        },
        "item": {
          "id": "ee0b8bf2-7a61-4c70-a370-e813efdb316a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4b57aea2-b503-49d9-a605-1977d6d1f1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d633b2e0-ad6f-4ddb-a5a6-d0b335b637a3",
        "cursor": {
          "ref": "ded9424b-efed-4a22-82c8-6f41177bd555",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "909ca6b9-beea-4e7a-93f0-983bcddc9164"
        },
        "item": {
          "id": "d633b2e0-ad6f-4ddb-a5a6-d0b335b637a3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aa86de85-27d8-430a-be08-b7058bcb0f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baed9b1-243c-4bac-967f-e9ff942c07a9",
        "cursor": {
          "ref": "7109365c-9150-4286-a3b8-c8962f6ba75c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3a824773-5971-41c5-a0d6-790044d4249d"
        },
        "item": {
          "id": "1baed9b1-243c-4bac-967f-e9ff942c07a9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1cc4672d-1b07-4ce6-bbf3-981ef1452f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b0af9f-e8fa-4796-bc40-f8cea9fe0aa6",
        "cursor": {
          "ref": "7f13119f-9f0d-4670-bb35-511c571a6e95",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b1c6d3f-0627-4adc-a7aa-eb5aeba17411"
        },
        "item": {
          "id": "92b0af9f-e8fa-4796-bc40-f8cea9fe0aa6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dbc4bfa5-0b8d-4647-a2b8-9b0a33404a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a6209c-7e08-4c0b-b170-f2279b31311c",
        "cursor": {
          "ref": "7a74dd47-7484-496b-849b-d83e2ed1dd64",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fbd0b2de-7d05-431b-af29-a9780f56cb51"
        },
        "item": {
          "id": "14a6209c-7e08-4c0b-b170-f2279b31311c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "510ee905-ca3b-4f14-b93f-d0ca019447f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41239866-7f08-49b2-8925-776bc1efc7d4",
        "cursor": {
          "ref": "f31b83cc-0d05-46df-8f9d-8bcbb7f93d88",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eac3b478-8351-4c06-a747-734701e34023"
        },
        "item": {
          "id": "41239866-7f08-49b2-8925-776bc1efc7d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9accae28-50a6-42f2-8b96-04f27bf3859c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4a5a69-cc27-4e7d-9a67-b029b4a43fc5",
        "cursor": {
          "ref": "5420127f-5c20-4c52-9224-107fa6f94e77",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e9bc5e6a-312e-478a-9ebc-45dc3801ed04"
        },
        "item": {
          "id": "2f4a5a69-cc27-4e7d-9a67-b029b4a43fc5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a687f61f-8861-4cd3-9751-38dc6ae22c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fa96d8-a625-494b-b35c-13ab9e2c8bd7",
        "cursor": {
          "ref": "5ad31f5c-7d51-4dad-b9e3-e04310e1d7e1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bad53046-9e18-489b-ae17-a11ec596b35e"
        },
        "item": {
          "id": "48fa96d8-a625-494b-b35c-13ab9e2c8bd7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8ea2d0c7-7c6d-4493-9418-bd50275b79cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8a4a3d-a2c0-46d5-be17-3cec6a16d957",
        "cursor": {
          "ref": "c7db1b93-1883-48fc-9a9f-a1387bfba169",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "64da718a-5dc8-48c6-b44e-bc237f667c3a"
        },
        "item": {
          "id": "fe8a4a3d-a2c0-46d5-be17-3cec6a16d957",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ceb64f19-e66c-4458-b11b-eda0181428ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dabbd95-6e47-4044-8c56-d1ea60d4d9fa",
        "cursor": {
          "ref": "a8167055-8e34-4693-b5be-2e0b8360d1c8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4cb1383d-5804-4f52-98bf-6cc15a088636"
        },
        "item": {
          "id": "8dabbd95-6e47-4044-8c56-d1ea60d4d9fa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f6b7b951-0cac-4954-97a7-8fac223ec0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fcb632-4af8-456c-9ce7-a6b2495d36f9",
        "cursor": {
          "ref": "bae9a71e-cd46-4a3a-bc03-a08fb91aef0a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "20385147-e4b5-4d0a-bb20-95394179f2ad"
        },
        "item": {
          "id": "85fcb632-4af8-456c-9ce7-a6b2495d36f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "86eab722-7fe1-45a2-aeec-63ff38d9c906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6358c0-12ee-4dfe-bb75-25c08c655d9f",
        "cursor": {
          "ref": "81d94583-277b-44e7-9478-84576a6fd772",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4ba9c0ef-c122-4ee2-b07f-7277e6b8ffa2"
        },
        "item": {
          "id": "0f6358c0-12ee-4dfe-bb75-25c08c655d9f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2e1f6223-7c20-42c0-9370-cf9c1b06e8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6b3cab-b809-4693-8a7c-46b01e4701ea",
        "cursor": {
          "ref": "614c8ee6-ab39-417e-a417-c0418352fe53",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "16a93b43-dad2-4560-91c8-b737895d7432"
        },
        "item": {
          "id": "5e6b3cab-b809-4693-8a7c-46b01e4701ea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cb778fe4-d4ed-4dd5-91a2-6d12cadd26ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b023956-0698-4b36-ab98-723dded7238c",
        "cursor": {
          "ref": "5afd8a44-e57f-40e3-ae78-a4127e0fb0a8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "761c1427-758b-49dc-a788-22f331bcb082"
        },
        "item": {
          "id": "8b023956-0698-4b36-ab98-723dded7238c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2fd60edb-4c14-462a-8ab8-c576ea5d490e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b347de0-ca69-4218-92a5-f3c037e12c6b",
        "cursor": {
          "ref": "9f0e201f-8b81-4aa9-b043-acd69e388714",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "58dfc11b-acf3-46cb-abb6-39e78505826a"
        },
        "item": {
          "id": "3b347de0-ca69-4218-92a5-f3c037e12c6b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a7f39594-12df-4c28-9f9e-38eca63fb762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521451c8-3c87-4cf0-9493-055d41719544",
        "cursor": {
          "ref": "9b449328-267f-4cef-8572-6226c358d891",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd8f9445-3acf-4c46-8c30-50cbf923aae1"
        },
        "item": {
          "id": "521451c8-3c87-4cf0-9493-055d41719544",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a7d45b7b-15d4-48c3-a1b6-13ff54b8c105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87079b15-913b-4001-a4f5-272e2a6af331",
        "cursor": {
          "ref": "407a0d01-7d96-4df8-93c2-66df5f0f3d7c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3693de22-784d-47d5-9edb-68d462678626"
        },
        "item": {
          "id": "87079b15-913b-4001-a4f5-272e2a6af331",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "62f18467-16b5-4f4d-a1cd-0b8d1d8ffdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2165fac9-6a8a-49b1-bcc9-b3f0cec44b65",
        "cursor": {
          "ref": "f4a35961-212d-45b6-b2bb-dc9e4bfa84c4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8e4e9f30-0dce-492d-8712-7297c892c8ed"
        },
        "item": {
          "id": "2165fac9-6a8a-49b1-bcc9-b3f0cec44b65",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "efe5ed40-1b4e-4974-b029-1f82d729e25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2325b305-8b5a-48fc-a9c7-c02b99f40f42",
        "cursor": {
          "ref": "bb666f55-a969-4efa-b6dd-9a84cbe26b96",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c8e9162c-9a21-43ac-a4f2-97a0477eb16f"
        },
        "item": {
          "id": "2325b305-8b5a-48fc-a9c7-c02b99f40f42",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a0213d7a-ab0a-4fc3-be55-2b77771a4d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683e44f9-b31a-4855-a315-af4ae86dac57",
        "cursor": {
          "ref": "efd76782-2ba8-44f6-aaea-c1b2100e9e4f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f6aa6797-263c-492f-8a56-491b98dc73fe"
        },
        "item": {
          "id": "683e44f9-b31a-4855-a315-af4ae86dac57",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c9583122-d1bd-4f40-9784-6aec72edeccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c65bb-380d-4184-88a1-ee2df9c0ed5d",
        "cursor": {
          "ref": "a13f5c98-eb1c-4ee2-bab0-19154db6eecd",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ed8b1c60-1065-431c-85ef-71dccbcde887"
        },
        "item": {
          "id": "3e2c65bb-380d-4184-88a1-ee2df9c0ed5d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f4cd731-577a-4ba4-9c5e-00e9b295a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c104db4a-cb8d-40ca-8e7a-1954f036716b",
        "cursor": {
          "ref": "c6c15129-6238-4be7-8213-11e61d224151",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4a2b6e25-3437-4b9f-bc21-180cef219997"
        },
        "item": {
          "id": "c104db4a-cb8d-40ca-8e7a-1954f036716b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c75c567d-3146-437f-8a00-9edd8bf2a327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4df788-e561-4261-8241-75736ca44344",
        "cursor": {
          "ref": "a09d3cef-d313-4ab8-9980-7608fc1e44dc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1aafde6d-ee05-46be-b449-ab5f74faa1c3"
        },
        "item": {
          "id": "5c4df788-e561-4261-8241-75736ca44344",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "77460cb6-6e2a-4840-906e-54f08b67cf93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97641a3e-24f8-4f86-9e45-f2cec4b1083e",
        "cursor": {
          "ref": "bf143382-0b07-4aa3-8e85-d6932ed070d2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00de836f-18ef-4a64-bf14-5f4ea57db083"
        },
        "item": {
          "id": "97641a3e-24f8-4f86-9e45-f2cec4b1083e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c7eba123-5246-48c2-9f06-06e61065c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3b8f4585-b187-487f-9bc1-04a31ecf2fd3",
        "cursor": {
          "ref": "69ef15f4-9bab-4d82-be23-2daed926f7a5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "93b4e659-5880-4167-8ed7-55c19d949088"
        },
        "item": {
          "id": "3b8f4585-b187-487f-9bc1-04a31ecf2fd3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7212f6c9-d65b-4ceb-8706-13abcfc50634",
          "status": "Created",
          "code": 201,
          "responseTime": 5589,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa745fa-04c0-4d3f-b761-2a1fafec15ce",
        "cursor": {
          "ref": "3900a723-a9bd-429b-81eb-8959ee7e734b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0699ee95-787a-4ed3-8861-789b811b43c6"
        },
        "item": {
          "id": "ffa745fa-04c0-4d3f-b761-2a1fafec15ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb59eb6a-027f-423f-aece-f9cff52143a6",
          "status": "Created",
          "code": 201,
          "responseTime": 5027,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e4725e-4e1d-43f3-b0f1-97e57ac6428f",
        "cursor": {
          "ref": "0ffe80fa-4bd1-4ce7-b353-b7c7caf228fc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f38d71fd-2327-4b47-8558-9c9f330f5036"
        },
        "item": {
          "id": "c8e4725e-4e1d-43f3-b0f1-97e57ac6428f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "832f56c0-1e61-43bc-8bc2-f48af1f3cca8",
          "status": "Created",
          "code": 201,
          "responseTime": 5529,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "be54d158-9a8b-409d-be5b-bf141d505eea",
        "cursor": {
          "ref": "164cb340-7607-423e-b222-4d8da0e6fa03",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "99071860-d4ea-4658-9e1a-2fa2bf356f1c"
        },
        "item": {
          "id": "be54d158-9a8b-409d-be5b-bf141d505eea",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "be2aff57-53a4-4fee-a4db-843a07d828f0",
          "status": "Created",
          "code": 201,
          "responseTime": 5122,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70ab06e-91ca-4a4e-ad4e-670b6247fd15",
        "cursor": {
          "ref": "e8846ddc-be75-4791-a0e9-3e3c99fc907f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4ef3a5aa-0957-4c03-acca-1810355ca7b7"
        },
        "item": {
          "id": "a70ab06e-91ca-4a4e-ad4e-670b6247fd15",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d99351a5-263d-4cbe-a933-8dc2113c901b",
          "status": "Created",
          "code": 201,
          "responseTime": 5120,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-02T00:41:12Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-02T00:41:12Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6555ec24-bac4-472e-86d4-3ef34d6c8606",
        "cursor": {
          "ref": "fe2159cb-4c5c-48fa-af58-695db1da790e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e89bc0d2-aedc-4937-90ec-7d1ea21c44e8"
        },
        "item": {
          "id": "6555ec24-bac4-472e-86d4-3ef34d6c8606",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "65368c77-6b6a-483d-b091-d654dd0d974a",
          "status": "Created",
          "code": 201,
          "responseTime": 5376,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bcd28f-1923-4770-bafa-b203aa4ea9cb",
        "cursor": {
          "ref": "008d4fbf-2d25-40a7-b996-196f949740f0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f6a40d75-6328-41a2-954e-4739a8a5f8df"
        },
        "item": {
          "id": "c5bcd28f-1923-4770-bafa-b203aa4ea9cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "24f5c12c-52ca-43a4-9141-772ce760bda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a7e295-f48e-40a1-a70d-a83c4cd3508f",
        "cursor": {
          "ref": "7203c42b-3d53-4caf-9763-327118210b89",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3465430c-c2c4-47e9-bb4b-41548a5bf3ca"
        },
        "item": {
          "id": "04a7e295-f48e-40a1-a70d-a83c4cd3508f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ad928122-6e2c-4d36-84dd-1252369e7983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9e9c5-6693-44b6-b4b2-ab7839c1358b",
        "cursor": {
          "ref": "65ce3efd-b69e-4ee8-bd09-ba1daca8967f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "54a5f7b2-c385-4a66-8950-fae4ea350566"
        },
        "item": {
          "id": "cee9e9c5-6693-44b6-b4b2-ab7839c1358b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f726379f-1181-4613-992e-4ef4c4ef227f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6360c6-86ba-45d5-ab0e-859a5bee8ee9",
        "cursor": {
          "ref": "7fd315e2-565f-4b53-afaf-185dc393fcd8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3a9524c6-4b1e-47f9-aaac-2921d3736502"
        },
        "item": {
          "id": "7f6360c6-86ba-45d5-ab0e-859a5bee8ee9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b113a696-7ae9-460b-a60f-5b8959cfb944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53e442e-fc2d-4afb-88d2-d5f6debfee73",
        "cursor": {
          "ref": "9329e53f-1399-4791-80bf-b6d6bb16b83e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9eac4927-f866-4e45-b9d8-b9ecdc76a06c"
        },
        "item": {
          "id": "b53e442e-fc2d-4afb-88d2-d5f6debfee73",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f5c60317-1918-4dc0-a9f6-e022e0b53989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2524ca-8105-4edb-96f2-42d96c88363e",
        "cursor": {
          "ref": "e4f6a9a0-18f1-4726-b1e9-e359f79d9cd4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2bf46369-6790-47b5-887b-15f5ef524bf6"
        },
        "item": {
          "id": "2f2524ca-8105-4edb-96f2-42d96c88363e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "26a0b00e-1c17-43d2-9caf-7b5deaf974ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e219888-9124-40ab-b64e-fd6c187acb52",
        "cursor": {
          "ref": "4ed7a392-6220-4ab7-a1bd-8fa8d35afd2d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "74dbed35-8c60-44dc-a22f-a17a0852cd9a"
        },
        "item": {
          "id": "2e219888-9124-40ab-b64e-fd6c187acb52",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d32acd7e-e955-44dc-ad31-aaa210e683db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd322d5-ff48-483e-af17-7863ac5dc31b",
        "cursor": {
          "ref": "777ed9b9-1f7e-48dc-a9f3-d901b21532e5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "04067ef8-0d5c-4f32-b695-594c93a7e6a0"
        },
        "item": {
          "id": "2bd322d5-ff48-483e-af17-7863ac5dc31b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "838f8cb8-fea1-4277-989a-de995dd189dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7947781b-97cd-4abd-9120-bf637a95bb76",
        "cursor": {
          "ref": "6565aaab-50ff-46da-9c03-734c01de2dbb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cb351970-8185-45a9-bb43-6164e2f931cf"
        },
        "item": {
          "id": "7947781b-97cd-4abd-9120-bf637a95bb76",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a9ce2c9-c84f-4d33-a3ce-b9bb955fe282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3bea74-af9b-4b59-8f9a-e41fe16f4764",
        "cursor": {
          "ref": "eb750be0-07b2-4126-b617-d0a8f87ab042",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f5b1b04-bbef-410f-a6aa-94a0600e2984"
        },
        "item": {
          "id": "bf3bea74-af9b-4b59-8f9a-e41fe16f4764",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "37225ebe-8ea9-4fd5-ba55-8c843199f2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe39e74-5c00-4c98-9b26-8a61190a61db",
        "cursor": {
          "ref": "9ff12f4e-0d3e-4682-abcf-2c77d2cb6e6b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1a1bf0af-067b-4768-9550-1fcac4dbd2e5"
        },
        "item": {
          "id": "ffe39e74-5c00-4c98-9b26-8a61190a61db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b16ccd2d-cdc7-4e34-97c2-648f3263c77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d417bdac-872c-404b-b3c3-65bf2f83e545",
        "cursor": {
          "ref": "30066b04-d505-4f90-a06e-7d5a5e3e7a9e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "096f8ffd-a765-42b3-945f-e630a8ef4d75"
        },
        "item": {
          "id": "d417bdac-872c-404b-b3c3-65bf2f83e545",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9ad0f549-318c-4842-81db-e9599b5f34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cff1d9-86e9-4cef-80dc-0091319bd12e",
        "cursor": {
          "ref": "cc879e46-3caf-475c-8d7c-4e8535c96e43",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "251257d0-0aa7-495d-8088-3399503ad8a8"
        },
        "item": {
          "id": "82cff1d9-86e9-4cef-80dc-0091319bd12e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eff73a9a-f50c-4a95-b4c8-3d7ed8f99b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c75b465-fcc7-4e37-88d0-e61f645d3060",
        "cursor": {
          "ref": "061462d4-c00a-4198-900a-73cccbfa7c78",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58a1e155-b329-49bc-a4ca-b6d0d1cf53cf"
        },
        "item": {
          "id": "2c75b465-fcc7-4e37-88d0-e61f645d3060",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ee0b9dd5-d24e-450e-b099-05825078f1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c715f9e2-6388-45cf-9bad-4dce7cc631fb",
        "cursor": {
          "ref": "9304013b-2155-4cdf-a93e-2a7587d203fd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "913c9aa1-8bea-4932-8816-4389aae6c795"
        },
        "item": {
          "id": "c715f9e2-6388-45cf-9bad-4dce7cc631fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ee5bc372-ad94-4e49-848e-31a072469f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0ced9a-2136-4885-b161-f2de9d4207e9",
        "cursor": {
          "ref": "3733042c-9a89-4310-ba98-9e808f791cbe",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0780e024-fa49-4660-a008-8ab3ab99d520"
        },
        "item": {
          "id": "8d0ced9a-2136-4885-b161-f2de9d4207e9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "354191c8-6d4f-4b43-98ee-0d7818d5efa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4472f-cd36-4fb1-ad70-5b66d387767f",
        "cursor": {
          "ref": "437d7111-5ef3-4c0d-b641-c1cc29f0a914",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "865082d8-7e00-44d2-83c7-2319a44d4182"
        },
        "item": {
          "id": "7fe4472f-cd36-4fb1-ad70-5b66d387767f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f007887-71e0-44e4-b444-16b5f5e5de66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02801d1-0a54-480d-85fe-fd78b8f27591",
        "cursor": {
          "ref": "64f5c349-deff-4ebc-85ae-434830bcc270",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "774c6155-f9ae-4a33-98ad-cb138f619f41"
        },
        "item": {
          "id": "f02801d1-0a54-480d-85fe-fd78b8f27591",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e998572-769a-480c-8659-35fe6e109d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61f5b31-c134-4824-84d2-855e9c17bbc5",
        "cursor": {
          "ref": "27fa9ad3-f476-46df-9a51-6c5f3a8333b5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bd595118-c64c-467a-8627-a31ac53aee18"
        },
        "item": {
          "id": "a61f5b31-c134-4824-84d2-855e9c17bbc5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13bea0f6-8e3d-484d-990d-f99e62d5b206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0477c3db-7b6e-4983-b49c-770eac48bf07",
        "cursor": {
          "ref": "08444a84-67be-4eb5-bc5b-7e0b0b6005f6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "01843694-140e-40af-8cf6-3a4e3554955a"
        },
        "item": {
          "id": "0477c3db-7b6e-4983-b49c-770eac48bf07",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bad5e381-825f-445a-9cda-68f3bc10cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da84e8d9-e6ba-40f6-9492-4715e33825be",
        "cursor": {
          "ref": "3fc8a7e7-ec08-4f6f-b41b-a11938763d1a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cf4b8724-d694-4f44-ae59-6fe111752cc3"
        },
        "item": {
          "id": "da84e8d9-e6ba-40f6-9492-4715e33825be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "74543cce-a53b-4f19-bbec-c4079b49857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86ee42c-9382-4b57-98f9-ab9a4c09e734",
        "cursor": {
          "ref": "06a0aa8b-3f0a-42d3-9a29-ee8d2bbe0a27",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d9c8147f-ce81-4195-a272-1a0dcbf8e683"
        },
        "item": {
          "id": "e86ee42c-9382-4b57-98f9-ab9a4c09e734",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1871eb2c-db19-4b07-aac1-6fc3c25f90c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db35e37c-95bd-4a9e-8fdd-11f3fc13d7e1",
        "cursor": {
          "ref": "37fbc8f1-cee1-433c-af97-b050738c2aba",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a0f88ae5-49b3-4263-ba2e-5ff7f33e63eb"
        },
        "item": {
          "id": "db35e37c-95bd-4a9e-8fdd-11f3fc13d7e1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5c30d559-b638-475e-ad1b-2ba1cd9cc13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e34d6f7-cea6-4e69-99cf-cf9074784ff9",
        "cursor": {
          "ref": "0af3aa60-8ca2-4932-b0ab-ff5a127380d6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "025e350a-9a81-4f33-8701-0245cfaa09f6"
        },
        "item": {
          "id": "9e34d6f7-cea6-4e69-99cf-cf9074784ff9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff1979b4-06b7-4e9c-9569-8b773d79f3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce59779-2ae1-44d7-a2ae-6b7bfa196543",
        "cursor": {
          "ref": "ddca2336-a995-48c5-ba58-957be889bc9d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0fe43009-a69b-4d3e-8cf2-2f1279cae84f"
        },
        "item": {
          "id": "5ce59779-2ae1-44d7-a2ae-6b7bfa196543",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "62f36cff-afd1-42c8-915c-bb6ec4e04dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf6388c-e9b7-44a1-8ec5-07fef5078092",
        "cursor": {
          "ref": "3e3f2e18-2a14-4642-a73a-9db48c9e3461",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "84cb9060-1d63-436b-8feb-dfb0abbe0242"
        },
        "item": {
          "id": "7cf6388c-e9b7-44a1-8ec5-07fef5078092",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6b5fc42-0ebe-40bc-939d-a4e0dba10422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ac81c9-5843-44cc-a798-a454c5a3818e",
        "cursor": {
          "ref": "3addf345-3f86-43a6-a0c2-456470c33ad9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7c3fb041-9472-4a2a-91bd-959594dc49f3"
        },
        "item": {
          "id": "40ac81c9-5843-44cc-a798-a454c5a3818e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2aa952e7-cc23-4937-aa68-07f69b12d562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a303d481-6cc0-4479-9994-f3e1bf2f1cc1",
        "cursor": {
          "ref": "6639a27f-56b4-4060-8292-bf27ce1f4989",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1295cfc2-4d77-4221-891e-c7523cab2757"
        },
        "item": {
          "id": "a303d481-6cc0-4479-9994-f3e1bf2f1cc1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b8bdd2da-4375-48fd-9d82-64e5e14e0708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12efe44-a3e1-4dbd-8a78-3103c7b38c6d",
        "cursor": {
          "ref": "4fad1d9a-d73d-4114-a95e-5d8cb7502b41",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e6903634-a23d-4d32-8462-c0034aad0f00"
        },
        "item": {
          "id": "d12efe44-a3e1-4dbd-8a78-3103c7b38c6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "73ab6169-d6ac-4935-8af0-72576c00e5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a132856-2d69-4c6b-bba6-673c22bae4cc",
        "cursor": {
          "ref": "5f0a8172-5128-4aaa-9f63-4093c45484d3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7cf573c2-22d4-4135-a67a-c97fb030d53d"
        },
        "item": {
          "id": "1a132856-2d69-4c6b-bba6-673c22bae4cc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e66f574-9321-44bc-abf3-f6b40daf165f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0300415f-86e7-4ecf-a85a-8490b58eb8df",
        "cursor": {
          "ref": "d5b5457a-1608-4b5a-9a5e-1f7552a76dbe",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fa9811a1-0e30-4a2d-b6bd-aa570b022ce8"
        },
        "item": {
          "id": "0300415f-86e7-4ecf-a85a-8490b58eb8df",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22378e2d-7a65-4f41-8a31-7eb83913b1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0424b26b-25f8-45a5-a0ad-7df3a3d89e31",
        "cursor": {
          "ref": "4bc8ce69-4ae9-4791-9a7a-a7db281d19b0",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ea5780a8-355d-4181-b9e1-e2f0e6546823"
        },
        "item": {
          "id": "0424b26b-25f8-45a5-a0ad-7df3a3d89e31",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "378f8602-1f29-4bb3-bf8d-f312b0263a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb3ac2e-a835-4b83-a4ac-ba8c84db7a76",
        "cursor": {
          "ref": "4fc02943-1118-4abd-8e1e-13ea9c769a7b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c8db270c-fc53-4e9b-9a11-5e0553897d3b"
        },
        "item": {
          "id": "feb3ac2e-a835-4b83-a4ac-ba8c84db7a76",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4b542641-83d6-44ba-ae41-c67ed4154399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b607693-61e0-4517-b787-89397f302d5d",
        "cursor": {
          "ref": "e94bfaf9-582d-47ab-be23-c4752429fe83",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f7068a2-6e4a-44a1-a7ac-512f26d7e282"
        },
        "item": {
          "id": "9b607693-61e0-4517-b787-89397f302d5d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fc324a74-47fa-415c-b4d8-728d6e6734b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cb4098-3c82-456f-9234-cb5448468d57",
        "cursor": {
          "ref": "8d84e378-21fe-4065-8299-e4c48248d28e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0b735aa0-7f61-4772-9ae7-7e5bc2e76662"
        },
        "item": {
          "id": "90cb4098-3c82-456f-9234-cb5448468d57",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c7f77777-460f-410c-b85b-479744ac0494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc822f0b-dffe-4e73-9353-c4d4dd8b90c1",
        "cursor": {
          "ref": "c62d3fe9-3bbd-4310-b194-4936998fc969",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22b3b3d0-5936-4663-9788-44005603e97e"
        },
        "item": {
          "id": "dc822f0b-dffe-4e73-9353-c4d4dd8b90c1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7e8e8b60-e281-4e8e-8caa-ddde1414dd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c18c4-553e-404e-930f-6a178bacbbd9",
        "cursor": {
          "ref": "e65bee4d-567b-4527-b059-42f324ffa65a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6851d076-770d-4599-bbfa-07f132a55812"
        },
        "item": {
          "id": "952c18c4-553e-404e-930f-6a178bacbbd9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a299f7b-35f2-4ca3-a075-7b2f5ffd12ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3fb5d5-0f5b-4c94-8d04-05644a595949",
        "cursor": {
          "ref": "1706a95e-cb01-4d88-9e3b-9a3d3b2b8b36",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7ab710bc-0973-4633-bdc3-a4a8419be98e"
        },
        "item": {
          "id": "8a3fb5d5-0f5b-4c94-8d04-05644a595949",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2dd8febb-d884-4979-b67b-755ff4cd46e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1db1e8-bb44-4202-a328-79d305b205c7",
        "cursor": {
          "ref": "f695c70d-1c7f-496e-bfb8-901be86a921b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c18ce188-6f6b-4b48-913b-fe829f342fc2"
        },
        "item": {
          "id": "ea1db1e8-bb44-4202-a328-79d305b205c7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bc102d97-739b-460d-8c11-fcd0a5a0ff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7d3dde-50d7-4875-a26d-4af2cbca8101",
        "cursor": {
          "ref": "26520d9b-dbe9-4936-8ff6-cdb28c89462b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "405f7ba8-1d66-473d-b4bc-ff4c3ae2b008"
        },
        "item": {
          "id": "bb7d3dde-50d7-4875-a26d-4af2cbca8101",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d1687b92-7003-467d-9405-3fa2915594ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d71939-78d9-4f8d-b39f-819283d41357",
        "cursor": {
          "ref": "67025e06-484e-4980-89f7-2770cb57df22",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3d434e1f-f84f-442b-af2a-58b4d37e3864"
        },
        "item": {
          "id": "d9d71939-78d9-4f8d-b39f-819283d41357",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "96000c6c-1649-43bf-a5ec-6dbd9f3c91e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecb0e40-6e4f-4bf3-9a5a-b102ed3ebecc",
        "cursor": {
          "ref": "cd76172a-fb55-4961-ae73-3eb6b4671810",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c20483ec-95dd-48ec-8ad5-e40a3a154b16"
        },
        "item": {
          "id": "3ecb0e40-6e4f-4bf3-9a5a-b102ed3ebecc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8cab11d7-11e4-44be-a5b0-3102e505efa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca9793e-094b-4232-9459-e1531090afbc",
        "cursor": {
          "ref": "29d89465-af09-4357-9c8c-2590ae86e3a6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e2f8c6c5-cc8a-4d67-a0bd-ac0cbc1bf33a"
        },
        "item": {
          "id": "8ca9793e-094b-4232-9459-e1531090afbc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8195e003-246c-4558-932d-1389cff067bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35c97a8-0dba-42af-8c27-afe8f8b8d049",
        "cursor": {
          "ref": "801514e3-d386-40a9-8da5-60cb00388700",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eaa646b0-cc8a-4186-9e9e-363c29a1341e"
        },
        "item": {
          "id": "f35c97a8-0dba-42af-8c27-afe8f8b8d049",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b274cceb-3611-4b43-b4a0-eb34a51d4fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b5fba9-a154-42c0-bd67-f5d1b3c4fa04",
        "cursor": {
          "ref": "9e1a4ce1-ea9a-4d7b-b40d-7899c919ea4e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d2f9dfd9-caf0-4e67-a08f-d8ea9e277950"
        },
        "item": {
          "id": "69b5fba9-a154-42c0-bd67-f5d1b3c4fa04",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "57ddcd89-1a8e-4088-8f35-16c0eb655624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5786c9b2-c808-4e68-ab76-77367eaeb501",
        "cursor": {
          "ref": "9a4bf362-f3da-44be-9d8a-08e006daf8a8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c5002798-e356-4d54-b798-7766327d01af"
        },
        "item": {
          "id": "5786c9b2-c808-4e68-ab76-77367eaeb501",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d890fa8c-3235-42a3-b0d1-d89e63d9f029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f944131c-d73d-4b16-b01a-57a369609e0d",
        "cursor": {
          "ref": "0d05c640-2477-4577-824c-7de915380b79",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1c7a228c-fd1d-45b7-9495-c2c61d03cf8b"
        },
        "item": {
          "id": "f944131c-d73d-4b16-b01a-57a369609e0d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5dde5cc9-31e3-4cc8-b5ce-0543f48360ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e0a51-08cc-43a3-80d7-3bd51713cba8",
        "cursor": {
          "ref": "f83b8e11-ce3c-4810-8551-ddcdbfc88c5d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4781a2d9-b2f8-4018-9f93-7aadc5f6c916"
        },
        "item": {
          "id": "659e0a51-08cc-43a3-80d7-3bd51713cba8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8d94e792-b4d5-4f1d-b699-c792af742e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704bafb2-6248-4f54-8000-a3b3f2c80d6a",
        "cursor": {
          "ref": "ad2e54db-ef5c-4233-aa5d-3c6542499bd8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9adce3ca-23b4-4b01-ac5a-220d44ec1663"
        },
        "item": {
          "id": "704bafb2-6248-4f54-8000-a3b3f2c80d6a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e7fc55da-4e5b-4aa7-9c85-42944aa53380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f749af-c470-4a2d-8561-9432deb2a89d",
        "cursor": {
          "ref": "4b95dd54-ec26-47a5-9878-bb2a38003260",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7572921b-021d-4078-9907-7d2b4a3c0837"
        },
        "item": {
          "id": "81f749af-c470-4a2d-8561-9432deb2a89d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "afeb1aaf-5a7c-444a-a8a6-8c3b5c6a2496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b6940-da34-4972-a17c-90873852f20d",
        "cursor": {
          "ref": "620f625f-86c0-4e88-a0c9-a59d5427cba3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4f12d750-4d0d-4d83-be0e-40d181415265"
        },
        "item": {
          "id": "6b9b6940-da34-4972-a17c-90873852f20d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7bfa83cf-edeb-49be-b389-5b7eff8f3b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcda293-3fa5-4077-86e0-6aeb62d78e35",
        "cursor": {
          "ref": "cc9b5a3f-0d41-46be-a608-05e46b417e22",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1845ebee-a9c4-4794-b9d8-9b86fc5ab31d"
        },
        "item": {
          "id": "3dcda293-3fa5-4077-86e0-6aeb62d78e35",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7a97b997-4847-48ae-acee-4f9f5b0fb8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9c8774-721e-4105-b9fd-d41660eb881c",
        "cursor": {
          "ref": "3d032bbf-e91d-4be2-8fa0-f720d280fb4a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fa8e191f-0d28-43d0-81d1-487d23ec7c39"
        },
        "item": {
          "id": "2b9c8774-721e-4105-b9fd-d41660eb881c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3e63c450-58ff-4565-a0ce-de8de63cba68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f939b9-f6c0-4aa3-b103-16890e8cc759",
        "cursor": {
          "ref": "a0c19ba3-14ea-4a0e-8920-651ac4281262",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bdd28138-03fe-4940-a726-91d587bdf3ff"
        },
        "item": {
          "id": "54f939b9-f6c0-4aa3-b103-16890e8cc759",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f4abe0b5-48e2-45a1-be38-9b667c2577f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5700f67-6c28-4f66-a251-b001245694e7",
        "cursor": {
          "ref": "40159616-2963-4cdd-b370-340fed914e53",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "887f2e80-c270-4b86-abef-3a8295659dd8"
        },
        "item": {
          "id": "d5700f67-6c28-4f66-a251-b001245694e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "89b3e4c8-301a-4e6e-b403-49276a8e2a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f773ff64-a664-4530-8a58-954f428533bc",
        "cursor": {
          "ref": "4de5643e-2692-4c90-92a0-b69d7c00faee",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ff53011a-730e-4578-8952-d150846a1930"
        },
        "item": {
          "id": "f773ff64-a664-4530-8a58-954f428533bc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9fc7f62e-e75b-4298-9730-c38f6bc19636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eaa7ce-bb9e-4e82-8c6b-a8900082c046",
        "cursor": {
          "ref": "0d3c4d70-0ec4-4bf6-829a-1c77dd34b978",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "02ad1da8-7d03-4432-b556-16c71e2743fe"
        },
        "item": {
          "id": "27eaa7ce-bb9e-4e82-8c6b-a8900082c046",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ce7fccc4-6cae-451a-8ed3-f9251fd10866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a28eee-4ae0-4922-afae-9bbab8db75b3",
        "cursor": {
          "ref": "b9eac6c2-7f6c-42d9-9586-8cb89b0846a1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ad9420fc-72cd-4cf6-b7b9-8fb57f8cb73f"
        },
        "item": {
          "id": "23a28eee-4ae0-4922-afae-9bbab8db75b3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "77d7f58a-e80c-4eb4-b493-851c2e838050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72101b93-891f-470a-88e2-03ad4dd258fe",
        "cursor": {
          "ref": "1efd1d49-ba5d-4bfb-af2e-0fd7f9a60939",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cff0570c-a1c5-4201-be01-0ff6f797d578"
        },
        "item": {
          "id": "72101b93-891f-470a-88e2-03ad4dd258fe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d0ebd5f7-14d2-41c9-a1b3-3004ba8e595c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de497567-e053-493c-a936-8c7d396f7283",
        "cursor": {
          "ref": "2e3fa816-9df2-4713-8f7b-603732810652",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b6818862-aa58-4a07-92ce-804ee5725f21"
        },
        "item": {
          "id": "de497567-e053-493c-a936-8c7d396f7283",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a669e323-369b-4177-97e0-0b71bba8b664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b0859b-b161-4811-90e2-734009ff7163",
        "cursor": {
          "ref": "fa3e7f08-4235-44b5-8ce0-5485a29bc11c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0b387e6c-b7ac-4026-9392-c87b6d87a8e8"
        },
        "item": {
          "id": "89b0859b-b161-4811-90e2-734009ff7163",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "15168cf4-bfcd-4311-9188-a0b99d63b9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6173680b-cf06-438b-8af3-413f3f5c0e18",
        "cursor": {
          "ref": "9e62db08-ec4f-4092-a524-fe077c7e4e16",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7737699a-6cd4-4306-ac8e-d7b50f00dbca"
        },
        "item": {
          "id": "6173680b-cf06-438b-8af3-413f3f5c0e18",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c79b872f-cc7d-457b-bced-6e4797fc8d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929756d7-0d0a-4d77-bdc0-a05e2fb68c9a",
        "cursor": {
          "ref": "79c1d64a-5de0-4508-bb9b-ac7e0ec567c0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0c4ce910-59d5-42dc-a669-410e7dab984d"
        },
        "item": {
          "id": "929756d7-0d0a-4d77-bdc0-a05e2fb68c9a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "20fe24eb-2be4-4293-a8eb-1f30d64b2788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9cd9e2-bc58-479a-a4ff-a362fe9f65c9",
        "cursor": {
          "ref": "a754e978-1603-4ae9-8131-4b1fd3f08f5b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2682b7d2-0a24-4070-a84c-77b22847251d"
        },
        "item": {
          "id": "af9cd9e2-bc58-479a-a4ff-a362fe9f65c9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1e0f0e6e-f2de-470a-abb4-f045704b827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d133599-8f5c-4247-b1b1-75eb09e21b30",
        "cursor": {
          "ref": "bf79f4c7-9b52-4a50-95e3-e1043ebed6c1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "131637e0-c296-4bfe-93f9-407f1c9343b2"
        },
        "item": {
          "id": "6d133599-8f5c-4247-b1b1-75eb09e21b30",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fcdfe99b-05d3-4626-ac28-5065207e6abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7383dd2a-e2a3-463d-80d2-ca277191417e",
        "cursor": {
          "ref": "79381628-91d3-4b8e-a950-e8b76f53b1c5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "90c9a5f7-51bb-4ead-b067-a3687c774150"
        },
        "item": {
          "id": "7383dd2a-e2a3-463d-80d2-ca277191417e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "73bb8c04-fef3-40c5-baf6-2d77cf299724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e82cb-cf21-438f-9645-70b93ec53e16",
        "cursor": {
          "ref": "53b56b87-44a1-489a-aa2c-1a7c3bc829d6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8b708943-1378-4400-9841-a2fcf4f69d45"
        },
        "item": {
          "id": "291e82cb-cf21-438f-9645-70b93ec53e16",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1115b247-e999-411c-a532-9fc0a9174cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070b1f9-9db9-4083-9b5e-d91662bee48a",
        "cursor": {
          "ref": "e47469fe-3947-4cd5-b40b-71b41f712d60",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eea507ee-3ced-45f7-a5e1-8ba892cbe346"
        },
        "item": {
          "id": "e070b1f9-9db9-4083-9b5e-d91662bee48a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e5b64d03-9cb8-4343-8522-6dbd475231df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ad3b53-9cf0-498e-bdff-c26010c6d390",
        "cursor": {
          "ref": "8b11f9ad-d3d6-4a12-8954-e23ecba1e259",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6cd2f5ac-ee87-4b29-96fa-2feb062c6189"
        },
        "item": {
          "id": "29ad3b53-9cf0-498e-bdff-c26010c6d390",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "503371a9-d27b-48b7-a8dd-50f564ffbda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1355c0da-689a-42eb-9467-78c8ed6350f3",
        "cursor": {
          "ref": "ac11f283-8ba9-44a5-b9e7-f5f18bb46475",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ff575cf3-37f3-4e40-a6e5-2dc07fe9b123"
        },
        "item": {
          "id": "1355c0da-689a-42eb-9467-78c8ed6350f3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c6e2ec4f-8359-49e4-b3ae-da42bfeb5c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74567efe-1c67-4429-b468-573cdfffbe7a",
        "cursor": {
          "ref": "6f4cf72a-b364-49b3-9588-fdf8c2e049e3",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "deb2b6c2-df14-4518-ab72-6559cbec95b0"
        },
        "item": {
          "id": "74567efe-1c67-4429-b468-573cdfffbe7a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d51d3c06-419b-4850-bdc1-220902af0695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502a082e-45a1-4401-ac97-219b077c55b3",
        "cursor": {
          "ref": "a8bd84d7-054a-4fa0-86bc-864a661b3174",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "27b8acd8-fc3e-465e-80e7-cd013434c826"
        },
        "item": {
          "id": "502a082e-45a1-4401-ac97-219b077c55b3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fa9f0a61-1836-45e4-8871-8d5b51714482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe946d2-7c2c-48ab-a68b-e2492ce115ea",
        "cursor": {
          "ref": "affc7899-603a-4d77-a317-87839dfc21a3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6aa543b4-153d-43c9-adcd-4ea09b58913a"
        },
        "item": {
          "id": "5fe946d2-7c2c-48ab-a68b-e2492ce115ea",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e8c645f3-f328-4d31-8a48-3e1a54f401de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad5c7d-b82a-4e37-b36d-52a5246d9fa0",
        "cursor": {
          "ref": "4bad462e-f40d-4118-93d3-bee5b21d16d6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b400eb2a-2c34-4dee-b770-42f9a008c553"
        },
        "item": {
          "id": "9aad5c7d-b82a-4e37-b36d-52a5246d9fa0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eef78da8-1808-451f-aa9a-35dd681ffa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d36f928-9885-40a9-99fd-22edf632ed15",
        "cursor": {
          "ref": "5dd9f57a-a517-4f6f-9b83-7e7e9d00e4a9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ba9113de-f7c7-4e71-8efb-82894cef834b"
        },
        "item": {
          "id": "3d36f928-9885-40a9-99fd-22edf632ed15",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "46e92ced-6e63-4836-a072-313dbdb1f152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cfc45d-cf22-4541-938a-af9c54401773",
        "cursor": {
          "ref": "61bd3cc0-4d32-442f-981d-98a5724027fd",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8efff266-3f5e-4dbd-a991-c1a385d6ef37"
        },
        "item": {
          "id": "32cfc45d-cf22-4541-938a-af9c54401773",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1812b62a-e222-4bcc-996d-05eac731bb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8860e5e6-35c7-4ca2-8daf-b849745e699d",
        "cursor": {
          "ref": "0526f4f4-3809-45f8-a10d-795cf5a9f450",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "578ef556-c66e-44f2-a9d4-3fe4b7371107"
        },
        "item": {
          "id": "8860e5e6-35c7-4ca2-8daf-b849745e699d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6ad4af68-cf7f-4f2f-bbcc-749c3fa78f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ac572d-7f7e-43b5-a721-1d9f72eda31b",
        "cursor": {
          "ref": "a04d80f4-e9e8-474a-b850-1905df8fae05",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "304a25ff-2673-42f2-9218-d7c5d10328a1"
        },
        "item": {
          "id": "d3ac572d-7f7e-43b5-a721-1d9f72eda31b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "58221cda-1cf5-4d26-8a8e-907ca1e268cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e5b804-d361-470b-bec4-b1196a106c86",
        "cursor": {
          "ref": "27a5d12b-f7c7-4caf-9577-a3c12f2126b2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "10ac66ab-c861-43fe-abd3-aa64ef4fd5a9"
        },
        "item": {
          "id": "31e5b804-d361-470b-bec4-b1196a106c86",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "44ef4a2e-e1a3-4a12-8f55-772f4d642040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6ce729-ac3a-4ad3-b451-34ff38c952d8",
        "cursor": {
          "ref": "32f0b6ce-391c-4fba-afec-6d2fa3a38b20",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "13f6297b-b13a-4036-8090-fbd738b68918"
        },
        "item": {
          "id": "7b6ce729-ac3a-4ad3-b451-34ff38c952d8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "653ac59b-cd82-465e-899a-4e5d2b177d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103fc373-05cd-411d-8511-b9bff4ee4bb3",
        "cursor": {
          "ref": "4db6f04a-f8b1-4880-8a17-868163279494",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "aaa28333-fabb-4f3f-920c-1263f585078f"
        },
        "item": {
          "id": "103fc373-05cd-411d-8511-b9bff4ee4bb3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a45b749-6635-4b99-98be-7c07ead31934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08db9b1-b77e-43c1-9456-4596b7394122",
        "cursor": {
          "ref": "9a3495c2-1ffd-485a-8e58-2bd9af1e2382",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "76675e4b-c9cb-46db-a134-93c7edf79b1d"
        },
        "item": {
          "id": "c08db9b1-b77e-43c1-9456-4596b7394122",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d0ba2e59-dd6a-4e41-92c8-c128c592c286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5493c71-240c-4810-9d68-b0a8ced9540d",
        "cursor": {
          "ref": "8e45f2dc-2e37-415d-bb4a-a65dc1ab8e8c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "13a0d6c0-9083-4ec9-8182-31d5fd7124ff"
        },
        "item": {
          "id": "b5493c71-240c-4810-9d68-b0a8ced9540d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "02de6053-a0eb-4196-b8f9-8a84c061785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13860503-9f31-4895-853e-80c28ce68331",
        "cursor": {
          "ref": "0be81108-0991-471d-bc57-187ea23c54b0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9256298d-d6fb-45cf-aa0c-2fe943888371"
        },
        "item": {
          "id": "13860503-9f31-4895-853e-80c28ce68331",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d2368405-07dc-4910-802a-a34dd3c5b3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f392b9-e1ff-4c99-bd8a-1fa510600c54",
        "cursor": {
          "ref": "5e0457e5-1865-48f6-a46b-0847069f0592",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "745c2600-54ec-4658-a47c-52e2ef1e6315"
        },
        "item": {
          "id": "d7f392b9-e1ff-4c99-bd8a-1fa510600c54",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9797b0a5-0a7b-4962-8a48-59356c8f848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e4d6a-8337-47ca-b343-56ca38d7d7ad",
        "cursor": {
          "ref": "d7c94bfd-a9c2-4ede-aa82-bbf1651762d2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5dfee4a0-0656-46a1-b501-34cf758b7a4e"
        },
        "item": {
          "id": "bd8e4d6a-8337-47ca-b343-56ca38d7d7ad",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "40de6a05-15d8-4081-9360-f69c63e91711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3631389-8835-4e4b-b5c9-ccbd5be8d3de",
        "cursor": {
          "ref": "d3fc128a-1e3f-4d1d-80ec-b0892d31cf6d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6d8efd3d-e1c7-44af-990d-e7977c69db4c"
        },
        "item": {
          "id": "d3631389-8835-4e4b-b5c9-ccbd5be8d3de",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "911ac37d-8441-497c-9dd4-e982b1f2313e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13abd65c-3f06-4ff0-af2d-92ded9479afd",
        "cursor": {
          "ref": "fcf4c3a2-80c9-4ce6-85eb-6f7e053e3f6c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8afd21c1-89b2-4c0c-834f-3501e3a6f9f5"
        },
        "item": {
          "id": "13abd65c-3f06-4ff0-af2d-92ded9479afd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "199d63cc-b44d-445d-bbe8-f669ace30414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacce4cc-c3d4-42f7-b0fe-5b336bbbbf2f",
        "cursor": {
          "ref": "f81b6cdc-4d07-4d56-b189-581d7e0fe245",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "24bed5d0-54e0-4f88-a8ce-b9aa466fabcd"
        },
        "item": {
          "id": "bacce4cc-c3d4-42f7-b0fe-5b336bbbbf2f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "270de8f8-5329-4a99-b229-eded8c64c6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864aaf8d-f740-4d60-b891-98d8d3632d44",
        "cursor": {
          "ref": "4a6fd9fd-4fad-4bd9-a3ce-bb55f0890fdb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "df1c1dd0-c6af-4b9a-93e4-d93a42daf8b5"
        },
        "item": {
          "id": "864aaf8d-f740-4d60-b891-98d8d3632d44",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c358f217-8cc0-4160-84b9-bd0f95b8c249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df949707-737d-4198-b1cd-819f7b6fb9a4",
        "cursor": {
          "ref": "2d565bc2-56fe-48be-9d9b-e39239553aab",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e538ad4d-2550-4226-839f-df8c873ac5c2"
        },
        "item": {
          "id": "df949707-737d-4198-b1cd-819f7b6fb9a4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e9f0c33b-1f2d-43a4-ae8d-31f260ff1a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bc9db8-80b0-4f3c-930e-b824d0e79159",
        "cursor": {
          "ref": "38362b47-8cc5-47c2-9341-f69bc6a91b5a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fbbe2358-648b-4754-821f-10ffccca57e8"
        },
        "item": {
          "id": "79bc9db8-80b0-4f3c-930e-b824d0e79159",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1932aded-be92-4bcb-b3e2-5bc75bb513b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd15b7fc-2da3-4e3c-9ebe-133151bae2a2",
        "cursor": {
          "ref": "3b0de624-4131-40e7-9cde-ebbb2f04561c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c2c1b070-093e-4a22-8a83-b69730d81ff1"
        },
        "item": {
          "id": "cd15b7fc-2da3-4e3c-9ebe-133151bae2a2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d9f40eb8-94a8-4c59-85af-ac23ac76db67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5a6f2a-7b1d-481e-a364-5a5e3e758d6f",
        "cursor": {
          "ref": "ec4a5f4f-ea0f-4c09-8a30-921ff46c6c48",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "235e7c33-7373-437c-a0c4-bfc4d9859cda"
        },
        "item": {
          "id": "eb5a6f2a-7b1d-481e-a364-5a5e3e758d6f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "95c6155b-1cfd-4aa0-bf3c-a22f2509c6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e588ee6a-1621-4a03-909d-f8eebea594c6",
        "cursor": {
          "ref": "3862d786-ec8a-43b8-8755-2b136116db3b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d4d13af-105d-4389-b8be-9c8ca5ea820e"
        },
        "item": {
          "id": "e588ee6a-1621-4a03-909d-f8eebea594c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "582e4634-4e61-4946-8314-bad30546d13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102573c9-60ae-438b-88c5-a65c7c630ad4",
        "cursor": {
          "ref": "6898e31c-8b10-459b-b2fb-4632a5e8fe86",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e86dd786-991e-4535-a8a2-2ce316bb9cf0"
        },
        "item": {
          "id": "102573c9-60ae-438b-88c5-a65c7c630ad4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "452ad606-4751-4ce1-921b-126a229ad6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc888d9-aef4-441c-9b7d-34ea790a0627",
        "cursor": {
          "ref": "8d55ccfa-33e8-4d21-a99a-354106ffc4ab",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "83f7846d-1ed8-4bfc-b497-fa072c25f6c6"
        },
        "item": {
          "id": "7fc888d9-aef4-441c-9b7d-34ea790a0627",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "868c3adc-01bf-4c98-9070-48df7794bd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52acc40-4569-40b0-84af-748c4718d534",
        "cursor": {
          "ref": "fbd257b7-ced0-4a3f-bd4d-40bd11ed9c45",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7824384d-f314-46e4-93d0-98a2e340412a"
        },
        "item": {
          "id": "e52acc40-4569-40b0-84af-748c4718d534",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b2f135dd-b5e2-4e47-9b2c-dc4ed8202203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b840d0-e3f2-421e-9625-06289a1bb5ac",
        "cursor": {
          "ref": "8f1ec960-aab5-4bbf-9ea4-f5fe95efd3f6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9856cfd5-f781-4d81-9213-f8e5f722a804"
        },
        "item": {
          "id": "65b840d0-e3f2-421e-9625-06289a1bb5ac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e7f5e375-7667-47f6-9822-c921c19cec3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c55f37-4344-471b-97a0-7a7e824aa63b",
        "cursor": {
          "ref": "d7a934fd-f1c3-469a-b07c-ed59d8186042",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f181546d-9582-46ca-888b-7e0d5f46b44e"
        },
        "item": {
          "id": "62c55f37-4344-471b-97a0-7a7e824aa63b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0ba3998d-a2bc-4d98-a224-abcca0bbc77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2898755-8506-44a5-873e-333cd1da3eb4",
        "cursor": {
          "ref": "083748a8-0964-4ce9-8327-e1bb9b9eced0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "73932705-077a-449d-b1db-55d8ba0f4ce5"
        },
        "item": {
          "id": "c2898755-8506-44a5-873e-333cd1da3eb4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a1396c3-aa1a-4060-a362-ddc649ab2440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23a6a64-5992-42eb-8767-d8a9725d4425",
        "cursor": {
          "ref": "88feac06-15d1-449f-a608-54cca2423419",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "93ae6a21-687b-41b4-92ed-9370ea15e583"
        },
        "item": {
          "id": "b23a6a64-5992-42eb-8767-d8a9725d4425",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2b7cc8ce-078a-49be-9d98-44e50eefaa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de6bc5-f13a-49c5-b65a-184695668491",
        "cursor": {
          "ref": "76d5a476-3af9-482e-a405-2d19b889dd94",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "36e85d43-85f4-4b8a-a1dd-4365100b5e8c"
        },
        "item": {
          "id": "18de6bc5-f13a-49c5-b65a-184695668491",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "836d33aa-c761-43b2-9639-2f5ec7fa839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82106bad-62e9-45c5-b6aa-5bf87e45c153",
        "cursor": {
          "ref": "7f11cd75-d6c9-4a07-a55c-e4066ee47fb2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4b018186-908f-4192-b00d-27f048fc9512"
        },
        "item": {
          "id": "82106bad-62e9-45c5-b6aa-5bf87e45c153",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7380afef-a42f-4d2d-a5b7-c46dc22e3b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cffbe6-f319-4758-ab63-36c53b7de843",
        "cursor": {
          "ref": "ede76e85-a44b-441d-9239-ea9a667465da",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8f965fa2-af29-4941-977f-1a9981d1b4a3"
        },
        "item": {
          "id": "f4cffbe6-f319-4758-ab63-36c53b7de843",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0c2f29d4-39b4-49b5-9a4d-1dd674fdcd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63470a2b-4620-4a46-a423-3098899e435e",
        "cursor": {
          "ref": "295649ac-9616-4b6c-ae31-39625442c3ca",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2a8623f0-adb0-46be-a7b2-d3e088ededdc"
        },
        "item": {
          "id": "63470a2b-4620-4a46-a423-3098899e435e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "da6f7984-3b5b-4480-b48f-3a7e857a23a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83401ce-3783-43e4-b7cb-c395e56dfcdb",
        "cursor": {
          "ref": "c0a7c873-dc36-4394-ab07-808fd222bc32",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "94a62d3f-d860-487f-b364-735a2f4dbed7"
        },
        "item": {
          "id": "b83401ce-3783-43e4-b7cb-c395e56dfcdb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e3b9803c-28f4-4c28-a28a-5821dedc25bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329f885f-88d8-4acb-9286-aa37d5da5a0c",
        "cursor": {
          "ref": "bd77a606-0092-45f0-84d7-59703fabb9f5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04c740e9-f9e7-4404-adad-80b60623c536"
        },
        "item": {
          "id": "329f885f-88d8-4acb-9286-aa37d5da5a0c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "687a4fa3-4430-4930-b12d-a8c8007bf709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404322e7-5096-45b0-94a3-6ecf1baffbba",
        "cursor": {
          "ref": "08b2277c-cf57-4970-a344-2c470097874a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2fed0ef4-a663-4470-ad8e-08f748fdd4c3"
        },
        "item": {
          "id": "404322e7-5096-45b0-94a3-6ecf1baffbba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9b02e680-9738-4001-a5d3-274c404b2e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155a6017-4687-4783-a891-eaeb5bce0b29",
        "cursor": {
          "ref": "046b7f9a-0c82-4ac2-b33b-d1860928e0c3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3580b2c5-8dd4-4bc9-bfc9-8109190e33d9"
        },
        "item": {
          "id": "155a6017-4687-4783-a891-eaeb5bce0b29",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0acb8700-2172-48ed-990d-01953fad5827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9224ef8b-37de-411a-823a-5849ac7845b9",
        "cursor": {
          "ref": "7d061598-3312-462a-83c2-18938d17a217",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "831ac666-2cad-4bb2-88f7-504516cf56a6"
        },
        "item": {
          "id": "9224ef8b-37de-411a-823a-5849ac7845b9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "66665f17-5453-46d6-84da-17ed486b28ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ccc186-d9da-4a6d-ab17-fbde18b95b47",
        "cursor": {
          "ref": "13bc3740-5ffc-4646-985f-7f5704a04e8d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fea7b492-8e88-4354-ad79-5df0a7436613"
        },
        "item": {
          "id": "d6ccc186-d9da-4a6d-ab17-fbde18b95b47",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8356527e-b49d-4afa-a5d5-816bd5cc50ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36228ebd-d10b-429f-8e0e-d77e9f1685d9",
        "cursor": {
          "ref": "8a9157e7-0204-4e27-9856-ef04e387d8d3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "13f80ece-9df8-48d0-9cad-d7481124e62a"
        },
        "item": {
          "id": "36228ebd-d10b-429f-8e0e-d77e9f1685d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "86be26ed-8056-404f-aa79-ab87db375fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6e2c02-de2b-4e9f-a9d0-053c210874b8",
        "cursor": {
          "ref": "d1c49e95-024f-44ea-9519-eb39861308f0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2485d369-1ec2-4ac2-be72-815a2c659a5c"
        },
        "item": {
          "id": "dd6e2c02-de2b-4e9f-a9d0-053c210874b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "19d54135-2bc4-4c7b-87a9-ed42615bacd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44512f7b-aae3-47b4-aefb-8e9fa686ec13",
        "cursor": {
          "ref": "4559b86c-4c06-485e-9b87-039209d92add",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "500cba6a-3d27-4ad2-a6c5-f9b6b256019f"
        },
        "item": {
          "id": "44512f7b-aae3-47b4-aefb-8e9fa686ec13",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "023c457e-5d70-4963-9211-7ff93bf1593d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788ed806-b1a6-404b-8131-83ec982ba969",
        "cursor": {
          "ref": "fb32c308-cff2-43df-b7ad-4b25b4634e76",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "346a564b-8c17-42b8-a10d-c7b5d6fe3af6"
        },
        "item": {
          "id": "788ed806-b1a6-404b-8131-83ec982ba969",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0d57dea1-9ba7-4d8f-879e-23acc2172a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c5db35-d4cd-498a-9a83-96715ee12f21",
        "cursor": {
          "ref": "44146607-5b50-45de-8391-4849c1de7247",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d69edfa7-51a0-44cb-8d7f-44ca78ee15d8"
        },
        "item": {
          "id": "70c5db35-d4cd-498a-9a83-96715ee12f21",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8df0496a-979c-4774-8b03-1d662699918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2ee295-291e-40fa-b680-2795c517099e",
        "cursor": {
          "ref": "98cef1e4-383b-4df2-ad63-d54aa454128f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c6035567-391c-4628-8f96-f604972aa85a"
        },
        "item": {
          "id": "ec2ee295-291e-40fa-b680-2795c517099e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2856f92c-7310-40a3-9973-aa11aa12f22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5881c11-45c5-4aaa-8486-44fedb962883",
        "cursor": {
          "ref": "32b72834-e876-496e-a8aa-aa1c2fe74c75",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cfb1aafd-e16c-4205-8970-a40a6b64b507"
        },
        "item": {
          "id": "d5881c11-45c5-4aaa-8486-44fedb962883",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ef80965e-bf89-4f45-9e2d-a6629151e476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c727be9-6968-4d82-b9dc-71c65dcacbd4",
        "cursor": {
          "ref": "9ef4b7f6-23c7-4954-bccf-008a95c304c5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dc376009-6223-4ce5-955d-e664c235e07c"
        },
        "item": {
          "id": "4c727be9-6968-4d82-b9dc-71c65dcacbd4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "90e1121e-2c2a-4657-833b-f961c8b635e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3eee71-e0b9-4f8c-90a8-fa110695b63f",
        "cursor": {
          "ref": "f0d3729f-a393-4095-9a2e-d9ff0a3faa87",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e11460df-8c01-43e6-8d2a-e8f5d0b2dccf"
        },
        "item": {
          "id": "fb3eee71-e0b9-4f8c-90a8-fa110695b63f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "25cd317f-49bf-4d6a-acaa-f819ce8d3b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fbc955-3546-4143-8ed6-1055d6103b7f",
        "cursor": {
          "ref": "237299fe-ddde-41c1-9d96-f3d6edae5004",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d23fb47b-1674-415d-baf4-2b7130933103"
        },
        "item": {
          "id": "e7fbc955-3546-4143-8ed6-1055d6103b7f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e4edb450-5f97-4d6d-8cfe-e16967801c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5584cc7-c62f-45c5-8e17-151d29ac3564",
        "cursor": {
          "ref": "55590716-df88-4e56-af94-0dc1bacabe2f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "df278dfc-d935-46a8-b427-d8f655c81b93"
        },
        "item": {
          "id": "e5584cc7-c62f-45c5-8e17-151d29ac3564",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e2f9fbdd-fd13-4326-85ab-66ab15567388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af73c941-cb71-4c4c-b7dd-6c54eaba0bdb",
        "cursor": {
          "ref": "9d29f2ab-3db8-440e-b155-dc949d4c3e19",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cbdc46a8-4aa3-4880-a84d-a219749cb7da"
        },
        "item": {
          "id": "af73c941-cb71-4c4c-b7dd-6c54eaba0bdb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33e0ddb9-5cad-48f8-b3a4-b33df22970dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a8067b-ff3d-4d3a-b520-102075b5df76",
        "cursor": {
          "ref": "c89df04f-3e0c-4ef3-9d27-744312d1a6eb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "870a7a37-6e06-4d07-9ccc-9b4e6cfaf960"
        },
        "item": {
          "id": "05a8067b-ff3d-4d3a-b520-102075b5df76",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "11064322-f7f5-4f10-9162-558505beafd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71d7fe-85ea-411c-b301-e1592150ed88",
        "cursor": {
          "ref": "1a227a0d-8dd7-4f88-8f9f-9f827431fb7f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "46343d38-a474-42cb-a1d5-ca803cbc06c7"
        },
        "item": {
          "id": "ba71d7fe-85ea-411c-b301-e1592150ed88",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e0dfabbd-051b-4595-9ea7-c4b34f1900de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f03556e-cc4c-4bde-8dad-0da3a771ae46",
        "cursor": {
          "ref": "3f751752-110d-4a79-90b9-1cf068dcf459",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6fa819f1-5740-4553-8ef3-e322d138ae78"
        },
        "item": {
          "id": "4f03556e-cc4c-4bde-8dad-0da3a771ae46",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4290507a-76e7-4829-a62d-9c6d2f5e8615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cd5ea0-6f4e-4b1d-a69d-58a275b95867",
        "cursor": {
          "ref": "561f526e-246d-4346-bfd6-b3c398eebdc6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c2324437-d458-4a8f-a319-91e012e4605d"
        },
        "item": {
          "id": "69cd5ea0-6f4e-4b1d-a69d-58a275b95867",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "35399132-189c-4f17-8097-5f5f770c8552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1794ee-8eeb-4b14-880f-ebf8749b5c11",
        "cursor": {
          "ref": "8caf39a9-3545-4fad-9f82-2217580b8449",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e4dba07d-2878-4ab7-8d2c-507fc8562714"
        },
        "item": {
          "id": "9a1794ee-8eeb-4b14-880f-ebf8749b5c11",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "90622051-ddbd-4cfb-a5fc-7308149ebb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a189d2ba-004e-4d39-979c-ac518f3b943f",
        "cursor": {
          "ref": "5390e168-85c9-4295-a87a-1603d1b58c8e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8efcde07-090a-4d1e-bda4-7e02964d4421"
        },
        "item": {
          "id": "a189d2ba-004e-4d39-979c-ac518f3b943f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "95e25b74-296d-487d-ae05-ee7bc52e1042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0516398-7f87-4282-8639-11daa51973a8",
        "cursor": {
          "ref": "8c83115b-2b4e-4a45-8ec4-986b26858b8a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "28865556-64e2-4f89-bce6-e6db12857154"
        },
        "item": {
          "id": "a0516398-7f87-4282-8639-11daa51973a8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a96c58ca-ef50-40c9-b50f-1b104ceea1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafc4b9e-70a8-4ac0-85e3-9de83e4699e8",
        "cursor": {
          "ref": "733be031-5412-4e57-bc9c-abf650ed0e6e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dce2b412-8412-4c50-8c13-5252cd1c8ba0"
        },
        "item": {
          "id": "eafc4b9e-70a8-4ac0-85e3-9de83e4699e8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "909647af-b318-4ae7-9b8d-8b234fe16c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad95b5b-12a7-40a5-ba45-046adcd92600",
        "cursor": {
          "ref": "30008c0a-aeda-4ff7-8678-b7e18a4d9c9f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bfd293d1-2780-43d1-bca5-2790b027f252"
        },
        "item": {
          "id": "2ad95b5b-12a7-40a5-ba45-046adcd92600",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a972b81-317d-48a9-b373-c9f4782d5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b00501d-5e08-44ca-8ca9-db2891d6d44f",
        "cursor": {
          "ref": "23ec1f83-7897-476f-b614-a498660e5617",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b3cfbd9f-05c2-452d-b02a-52a9590dd31f"
        },
        "item": {
          "id": "5b00501d-5e08-44ca-8ca9-db2891d6d44f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d2d22410-baf7-403b-bebd-9b50a5c88d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efd981e-a0de-4fcf-9049-fe0dac4f4e76",
        "cursor": {
          "ref": "f32e7736-b929-4cdb-b293-16f46a6c1d3b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d1a0ca5e-c5b0-42a0-8b1b-8948781b0439"
        },
        "item": {
          "id": "4efd981e-a0de-4fcf-9049-fe0dac4f4e76",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "51bf2909-25e2-45bf-aa9e-21f48a9944d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c588d1d-3e6a-4418-9197-d35401b9423e",
        "cursor": {
          "ref": "f9ba27a7-7bb8-49aa-9337-cb140c76aa0a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "807bad88-70a3-4c02-9b87-cd991618d6b0"
        },
        "item": {
          "id": "3c588d1d-3e6a-4418-9197-d35401b9423e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec4b6900-8b6e-401b-93e2-31aaf449ba14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866d3c35-6e5f-4b52-aa28-dca11f19b4ef",
        "cursor": {
          "ref": "02b5165e-de74-4e9f-8c4e-2918a8f80cc9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "800b02a0-dc08-442e-9be8-584fdf28f792"
        },
        "item": {
          "id": "866d3c35-6e5f-4b52-aa28-dca11f19b4ef",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e6af265-6456-4acb-83f5-b83e1da7f8e4",
          "status": "OK",
          "code": 200,
          "responseTime": 2013,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11ef66a-5134-4dab-8a8a-8874051f26eb",
        "cursor": {
          "ref": "30e2a18d-1637-4611-99fb-dbb97e819325",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a67aa4aa-a4d9-42fc-8643-ed9a0d4a907d"
        },
        "item": {
          "id": "e11ef66a-5134-4dab-8a8a-8874051f26eb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e97fb45f-3120-4511-831a-6ddc5b9dbe7f",
          "status": "OK",
          "code": 200,
          "responseTime": 2791,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "080c7619-f4f7-4328-9897-cccec4abddba",
        "cursor": {
          "ref": "919ca3b6-67a6-4f80-b758-b3c74f3a35e1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4fa5a2b3-0aa9-4236-bb5c-336c8d41a6f6"
        },
        "item": {
          "id": "080c7619-f4f7-4328-9897-cccec4abddba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b230f023-49f7-4d21-8fa3-fdf575e93bbe",
          "status": "OK",
          "code": 200,
          "responseTime": 2280,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3b4b2a-2e7d-481b-88f8-a25069f65675",
        "cursor": {
          "ref": "7b1c74df-f3d0-4602-b00e-83a3cc80275f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33ac913c-929f-4ca1-a061-45bfeffae84a"
        },
        "item": {
          "id": "dd3b4b2a-2e7d-481b-88f8-a25069f65675",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f248d6fc-4e9d-4fc0-a781-747da2ea3461",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3b4b2a-2e7d-481b-88f8-a25069f65675",
        "cursor": {
          "ref": "7b1c74df-f3d0-4602-b00e-83a3cc80275f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33ac913c-929f-4ca1-a061-45bfeffae84a"
        },
        "item": {
          "id": "dd3b4b2a-2e7d-481b-88f8-a25069f65675",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f248d6fc-4e9d-4fc0-a781-747da2ea3461",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979dc5fe-97e5-46b3-b45a-451dfa031ff5",
        "cursor": {
          "ref": "fd22565e-7aed-4b90-89d1-f993084437ee",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "98c086ba-92a2-4988-a7b9-9852aa01b6e1"
        },
        "item": {
          "id": "979dc5fe-97e5-46b3-b45a-451dfa031ff5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f570a8d4-5c31-4cf2-b8fc-ec232f88e4a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795930ad-1dc3-41ea-8a7d-9794c50c60d5",
        "cursor": {
          "ref": "a0445b9b-9a9c-40b1-8dd7-013ad91209fd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "220641b9-e566-4bd1-bfbc-d04bef695215"
        },
        "item": {
          "id": "795930ad-1dc3-41ea-8a7d-9794c50c60d5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3211568c-ac8e-44da-beb0-e67368c91dc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}